(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1223563,      22522]
NotebookOptionsPosition[   1219169,      22449]
NotebookOutlinePosition[   1219504,      22464]
CellTagsIndexPosition[   1219461,      22461]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rasterizeBackground", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"res_:", " ", "100"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Rasterize", "[", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"g", ",", 
            RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
            RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameTicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"AxesStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"ImageResolution", "\[Rule]", "res"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", "g", "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"AbsoluteOptions", "[", 
      RowBox[{"g", ",", "PlotRange"}], "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", 
      RowBox[{"g", ",", "Epilog"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767992001084045*^9, 3.767992001258741*^9}, 
   3.768740627708583*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7"],

Cell[BoxData["\<\"/Users/zack/Documents/ignition/cantera/ratematrix\"\>"], \
"Output",
 CellChangeTimes->{
  3.7665850611448402`*^9, 3.766589115206512*^9, 3.766592477239758*^9, 
   3.766617124782028*^9, 3.766962704110284*^9, 3.766968142160677*^9, 
   3.767387558371922*^9, 3.767400037834375*^9, 3.767400673171481*^9, 
   3.767484943725606*^9, 3.76753868731644*^9, 3.7677047996747637`*^9, 
   3.767704838526515*^9, 3.767790543182493*^9, 3.767807429745779*^9, 
   3.767972371161368*^9, 3.767983235938697*^9, 3.767983414249508*^9, 
   3.768734085141776*^9, 3.768734141267956*^9, 3.768740180920973*^9, 
   3.76874063904241*^9, 3.768747290458273*^9, 3.768756050493822*^9, 
   3.768761372153511*^9, 3.769184191709097*^9, 3.769186503460576*^9, 
   3.769190175126215*^9, 3.7692524076845512`*^9, 3.7692735629594088`*^9, 
   3.7698618962607718`*^9, 3.777118804759316*^9, 3.777203687721294*^9, 
   3.777204841070319*^9, 3.777205799481782*^9, 3.777206201826849*^9, 
   3.777208471199668*^9, 3.7773019608664017`*^9, 3.7773151350529833`*^9, 
   3.777375814952393*^9, 3.777376262573162*^9, 3.777919197456595*^9, {
   3.777998713799151*^9, 3.777998725613471*^9}, {3.777999175589031*^9, 
   3.7779992004052753`*^9}, 3.778018679354946*^9, 3.778020995235167*^9, 
   3.778075170578211*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"be7392d1-8798-4a17-83b7-703b34c81b67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"filebase", "=", "\"\<data/h2o2/6/\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
    "level"}], "}"}], " ", "=", " ", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "=", 
   RowBox[{"dat", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rows", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<rows.npy\>\""}], ",", 
      "\"\<Integer64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"columns", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<columns.npy\>\""}], ",", 
      "\"\<Integer64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<data.npy\>\""}], ",", 
      "\"\<Integer64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"rows", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"columns", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "1"}]}], "}"}], "\[Rule]", 
        RowBox[{"data", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evecs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
     "dim"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperatures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spatoms", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiindices", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DisplayForm", "[", 
      RowBox[{"RowBox", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"spatoms", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"elements", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"spatoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"multiindices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{"A", ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Rate matrix\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", 
              RowBox[{"Re", "[", "#", "]"}]}], ",", 
             RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"evals", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Omega]", ",", "i"}], "]"}], "}"}], "]"}], "]"}], 
              ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Tau]", ",", "i"}], "]"}], "}"}], "]"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", "i"}], "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Tau]", ",", "i"}], "]"}]}], "+", 
                RowBox[{"I", "*", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Omega]", ",", "i"}], "]"}]}]}]}]}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", "evecs", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Left eigenvectors\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"P", ",", "i"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "\"\<Steady distribution\>\""}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Round", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "dim", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
               "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
    "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"spforms", "*", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"multiindices", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Ordering", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"evecs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"temperatures", "*", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{"evecs", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"pressures", "*", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{"evecs", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7780751119646187`*^9, 3.778075166887443*^9}, {
   3.7780752386692677`*^9, 3.778075245235718*^9}, {3.778075339522669*^9, 
   3.778075378513865*^9}, {3.7780754299954576`*^9, 3.778075431391799*^9}, {
   3.778075837743642*^9, 3.778075852672986*^9}, {3.778104857640315*^9, 
   3.778104859914747*^9}, 3.778109204454328*^9, {3.7781101407495747`*^9, 
   3.778110141011674*^9}, 3.7781107972138357`*^9, 3.778110833539639*^9, {
   3.778110895548438*^9, 3.778110917203537*^9}, {3.77811149258733*^9, 
   3.7781114935059547`*^9}, 3.7781121664857807`*^9, {3.7781546900473833`*^9, 
   3.778154752172456*^9}, {3.778155067950285*^9, 3.778155088045607*^9}, 
   3.778155367989687*^9, {3.778155422692956*^9, 3.778155438832582*^9}, 
   3.7781558435312*^9, {3.778156251466539*^9, 3.778156275474493*^9}, {
   3.778156466311015*^9, 3.778156489708373*^9}, 3.7781567534136343`*^9, 
   3.7781567842191973`*^9, {3.778157044674728*^9, 3.77815705803995*^9}, 
   3.778157144677853*^9, 3.778160064441843*^9, 3.778160252329069*^9, 
   3.7781605867684107`*^9, {3.778161388156558*^9, 3.778161391483095*^9}, {
   3.77816212477738*^9, 3.778162131897225*^9}, 3.778162169057639*^9},
 CellLabel->
  "In[1056]:=",ExpressionUUID->"a6921c4d-267c-499e-a24f-b6f885b72b58"],

Cell[BoxData["\<\"data/h2o2/6/\"\>"], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162169553133*^9},
 CellLabel->
  "Out[1056]=",ExpressionUUID->"e3404666-2201-4ec2-b273-df9b92f7b538"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "9872", ",", "5.69161`", ",", "335316", ",", "18"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162169555704*^9},
 CellLabel->
  "Out[1058]=",ExpressionUUID->"a04884d9-7b28-473e-8485-13a3f282edcb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
hBBCCGEV/n9DIMvN
           "], {{0, 485}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Rate matrix\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{214.9891106158833, 
           FormBox["1", TraditionalForm]}, {171.99782212317666`, 
           FormBox["1975", TraditionalForm]}, {129.00653363047002`, 
           FormBox["3949", TraditionalForm]}, {85.99346636952998, 
           FormBox["5924", TraditionalForm]}, {43.00217787682334, 
           FormBox["7898", TraditionalForm]}, {0.01088938411669368, 
           FormBox["9872", TraditionalForm]}}, 
         None}, {{{0.01088938411669368, 
           FormBox["1", TraditionalForm]}, {43.00217787682334, 
           FormBox["1975", TraditionalForm]}, {85.99346636952998, 
           FormBox["3949", TraditionalForm]}, {129.00653363047002`, 
           FormBox["5924", TraditionalForm]}, {171.99782212317666`, 
           FormBox["7898", TraditionalForm]}, {214.9891106158833, 
           FormBox["9872", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 215.}, {0., 215.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-17.355281653506175`, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox[
           RowBox[{
             SubscriptBox["\[Omega]", "i"]}], DisplayForm], TraditionalForm], 
         None}, {
         FormBox[
          TagBox[
           RowBox[{
             SubscriptBox["\[Tau]", "i"]}], DisplayForm], TraditionalForm], 
         FormBox[
          RowBox[{
            SubscriptBox["\[Lambda]", "i"], "\[LongEqual]", 
            RowBox[{
              FractionBox["1", 
               SubscriptBox["\[Tau]", "i"]], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Omega]", "i"]}]}]}], TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->FrontEndValueCache[{{Automatic, None}, {
          Charting`ScaledTicks[{Log, Exp}], {}}}, {{
         Automatic, None}, {{{-16.11809565095832, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Exp[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-17.355281653506175`, 
       0.6750238126306055}, {-535172.0172155219, 535172.0172155219}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic}]},
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzsvFeTNEeWJTYkX/jIv8B/wVc+8nVp/AG7xuEaX4Zrs2u2XHLWSO5wRA+7
0QrohsantSgtsyqzUlRqFSJDa61FZun6PvB4FIDtfoUZaUZaBRKJzMgI9+vX
zz33XPco/Jf/4n/6Z//Df/oXf/EX//o/x9s/++f/9r/+67/+5//uv/0v8OW/
+6t//T/+y7/6y//+v/mrf/OX//Iv//q/+hf/GU4+wL/uf/IXf0E+f39/3B/3
x/1xf9wf98f9cX/cH/fH/XF/3B/3x/1xf9wf98f9cX/cH/fH/XF/3B/3x/1x
f9wf98f9cX/cH/fH/XF/3B/3x/1xf9wf98f9cX/cH/fH/XF/3B/3x58cHz58
SDw92fgPf37yNkzs29ub/3jm++8//r9u2/3x/4/j7OoiSNw/RRA+3Xz4fxBR
Vx8+Xt/+WfP4dvvhHsL3x/+Xjo/V6xbHh5sPl8vbWLy5uco86Wh/69mbI1wA
SOOfm+vzs5XrWhMw9oePOPP91fX5MpNurlb4dnN7iQ/fV1Rf/Uii4OPHW/L2
wwf8dP3hww2+Vld8/ClOqm8/hA2Swt07brkz7K61P2nkpws+Vp/x39u7639q
jTT+8c+SCez/4cbqLtL4xx/urXq/O3MD84gTyJW44+6nu4Pc/vHHX+96vK2M
uiUnbz+QD8TOu16IP3H+9gd2IPd/vP1hGN9//9PIP/w48DsP/Im1P47lR5vv
Tv7ks7sGSXsfP/7Y4MePP47uzjm3t9ffV04gg7q9/vCDW26//3h3ZXUtsfrm
448+ubP8zlcf/qSvH/77U3c/fvnx7C3p6/uPfzopP1jyY5s/IY2gDF1elRdL
K3L7ltn/6YKbm+vL87hMOLR2NylXVwVQR1r6ofEPdxb8ZFCFBOL/u9PVvNxN
X/XT3XCq4V9flWelVcT8+Sq8m4dqkNf4enmefPzRvOvr5c3V8q6jD9XxIz7/
fCAELh8IRDCU6/OLs+D6Mr2bQXLPxw/X16u7dn4Ew928XFc+ucPbh2q6fkTE
j7N/1wUMhlVXV2WFvcrDHxB1tze31xUCP/yI5A/V9FVu//jDBN2d/ng319//
MF/4l3jmLlKqGf8xBH+a0A+Vw36w5m7ItxUMqki8c+8P73ex+pPTPpKsd+cx
2Hb1Q5vVjXeo+/Aj3r7/k+OnCMUHUMpt5ZxbYuGHH6OSNHl759A/IYy7aP3w
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
KYVSTMqPVD9BGpIWuoBMFBLVAazaBUIJ0juWMOkQjVGRwMPAITKRHWqWLwvG
YmHwZqgnqQHgWYGq2vRCnaiOQARMbsOHusshTxUFCQqfaAkigaLMBIaBfDtB
QY6IALWGkBygRKQD1TfN0IpTQhSAKKIVotvyBBNgi1C4LOJUjRI9JwLDRArw
UwgnCwaAOnI0nrsAp5UAHkZGLkDkOm6s4xbkjjTVUESQCc2qr0glsRZFPKxK
iA6xskwlcosIGBsaOyoxavAAHILoJpGVgsFKJMcIHAK3h0SY4SfDTVHRgHDc
iIg0Ly+IQsuWXkhCFcRi2UmA1iB1whyTnv48xj6aDOrT3oiuQV0vlEGfaU/N
4F1v9OTB3z5597SjBUOJVR2ly00b027z6DOUt1PDFh29Pzv8Zvv9QBIE12jO
ThfiqUk2j8Zk2TBE+CQATFkSj0HXeWmEYhDpPkuEDIGfyj4KHQwHsZYhxOCl
qi4MlZiQKtQCoGJGsQxnQkIjF2dVrndR3KA8WXrwJypBKCsUmEnhVFGM8ksA
OedLZEwbeg+ZFPOIW0DjBWFsA/2CSIHeNNOQss3I9dMogj2FSTR2rmIuMO8Z
3JsHdkxggAnKUiFNJBB+SFQTGDtJCBSlKNZROaLr7Cwn+TcluHUi3QNpgxVJ
R6YVQysAujoht8SJYhWSOCyK7KxIMoPwGxEKZA8rTfi8NBHCKEKj1CBABUVk
FkkWYOzVEn5AEYes4aN+yYIgD4BYIl1iNYxVmJEksgMRkhg4g5GCzMFseabd
rboA/GBsL0uBWzgWY4nvGDszquwPWGKKhLwwoOfDMsZ4oTTgdngPOQvuTWIJ
jeSZjDZJjsg8N42d2AqgoxLXg5DLMR2xl6PoIyRPpEjhJokk2UpftReOvVDn
qiMxCr19evRq/auNnW8oU1c80/S1Gd/fbe8+3d9lbHukm11+0eytGRYtWgol
DXljwTmWEZHZJBsrpEoijE3KlkQBG4CxASBU6+hUdK2hZs4NQ3AtUL2ozXt0
993+02fv1o6GImUaM12ldHlINw8br8azuuQqc10ZiEytsz5nalrgnArcmB+7
oQgSY23TBKVADMDVZSr5Puu4tO0weCnzTn99t/ZwxjSc2ES/vG1SKt8a7I6Z
DtClusqYH824DqS+Gro0FI3LeqFkRTZh6QJKOzGTxIjJKgSyhuIZxBXM4WHt
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
Yih/10eJqoVlEa7Ofx5jTxVuIi963ISWumu99vODd++HzJv6wd8/eraz9wjV
6ELoSPqsNjp+vff0i+1tWZtQ6tRx5srs69r2P7panRK77+ovO/QA5Dbkeqj+
aJUiKyEhn8VU5M18jw5BTU4fhJbFi9jt+k4XtU/g04nXT4K5781xWeT2AusE
Z0K7EVpNz+r4Vts3T0KnnQSTLBinMRfFfBZVjaTkieIs1bJolgSzCC71J1k4
JZd5vTiYZTEfewPcmHjD2J8mIZV43cQfZBEbA34xh2tINRoKEezMjdQfxF4/
C8d5PM8jJvTGjjON/GnoTSL7BDemwTz0pjAyhj1eLw2mWcyC5aBdsyKKYyFN
RPRCVmZiFTQFa8OQAQEGAZuFsyhk/EiBkUnI5Jmap0KWk+XBKJYiMCR5sk5M
IgpZiTxbEmBQI/JcaMjAXUm0iAIq9mdZNEn9URKz5OG93CgLNSujJNVS8sCk
lMVMFHJxauJDlghRxKLxPOGKVMhTLssE8mBMHoN4KwfqcEKWinBRQJ5UFMln
f5RFVJbLcMgyV8lf35T6MlfyjE9hM5qNmTxZFBmfZVpaPXVJUg/pSECPcVrJ
3cIrl0FZ2uRxWdyVsHHEqMZooc6h4mixp/Lbu3ufv3rzi43aa9liwQmKMT6d
7tUOf9c8/B0jdAbU8XFv43XtPafTYJjW9JjW+Jk0E7WhGUhGQDaqCvJkI3kU
BwPMyQO0LkQLslWayaa3WChDqEREKDifl3on/b0nrz979e6P9e7ukG1PuNMp
09g5efV042Gnv8fI3ZnYP53sPdp8XB8cs/Lo/cn6YW9Xt+bUot6f7Qtqz/Hm
ZYmC12cNZSKM50KfVeZD+uTFwcvfvH3TmHTBeF26O2A6Y+r45d6LvfauZY5p
sbvTfNfob1rWhJdavcmernVUjQhIP+DjzEWuN5yFqI0li2OloWZQuknVOpu/
f/lk42TTMjus0G5M663R/tvt79aPXupaO7RaC/H0oL3VH637dptmD9GsZXRU
YZfjDjwHAKbzHHoAuXgReNA804k0h8QaTLbXDx6C+gJvhEDTlUZn1tysvxoM
X3t2F4Cf07vt4Zakjm2zQ1ProtSI3bZvHMdel0x66UYRH/rzOEQtjLSFEqN3
3N/vjLY5/igwjzyrqxv9MXO8316b0YeBPw3sU1c7mE3fLNjt1G1L0gEvt2Cz
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
rs/Y1vZwsLb73a+ef/vHje3GQiicI99o7LR3X278obH3D8964xfN2t7J06+2
1gbTnY3OXqP7iqHWJrN3YNq5PJvyJC3GmaOH1sLCEFBcO1YciGEm+rHoOXXR
ej2RulSdl0/rrPZmaO43tr5+/Ju/f7L2u53TjdOd6ez90aD2aOf9m3e/7tZ/
vXW686bXn/S+W9/41c7xy4PRyee7O7XWc1nYHQxeNE5f9Oa1KX8Sun1d7+3P
pwezeYfqzPjeeHrwdPvlJy+f7Zy8HS26X3W1t73haPjy9cYXh42XqlQ7HBw9
3f5u8+gZvTgCH7Y7j1lm82jc2BuecPIQZbXriwt2pzlYP6GGM+YwMY9z6+ig
ufa/Pd16s/9C49aas9Pfn4jbrc3u1r872PudzL6NhKcD6uTk5Gm//cWCOxiP
3te7G0Omvd/b32zvzrimKJ+ytqF7mqsehvrBUFY3GR/AEwefjg/+5qS/vhBP
Iv47hX66cdrc2P183Pl0wvU0cW/U/W6//gRD69Ddjdbm3qg3XxzPqA0UFLzJ
6ZHFyENFrIGaaHHS5JUXQ3G98X7a/nS3V+tRJ5baNKVDpJtnBxud3tuZNJ3z
TW7y3Wbt0dtOe8BP+rPdwXynMe8d996ejtaH4oIiyAEClZHEiPqMlNjGrqJN
fleXfrE/PaInM5nhbF2XasP2H2udtSY7O2KY/uAZP/pjj+l0uCkS/VzoHEw7
p2y/L7ATVVJctcdPOzwzkAWI6tTrI9Gc0oPjhXJETY7pEcJnwde44RfDyVsY
M1O54/mo0fqmMdoZCaON7tFar95kqdp8eDwf4r0nsCOJpdTFXJnTGlndYjSO
liem2qY0fiArbZ5nDXkk0TDvlKdnCjuWmL1Rpycu+uLihJngPJpqstOeyIHK
EGIaqYR/5v8JSkLi4/fqo/0XE3N90Duu/3FnPHy78/jlo3/7eHf9wdh5PFBP
JeXpycmo+Wv+8F+9HC5Q/c3E3j9st99u/Orx6dxaPH2+92i/v7c7Hj9odmaL
Gs0ejIUeo0xejoX1Kf9s4kys9PXU2qatmTT8os1919ceDfW1ufF5W/hdU3k+
MTdodX3CIFq/68m/rPOfNMQvTtXP2vLfHnD/17H426b8VVd5N9dfU/Ye5+wy
2t7CP1XjgeG/GsuHDNOW1PUp+2woftnTPm3JX55qD/vG5x3lu778WVt5MjIe
D42vuvJXPfnBwHhLWRuUdERPm6LaEM0Wz2sO811PeDVk9phFm2cPF9qzqf1i
LK9N2a976ledxbsJ+3hkPp9an5xIv0X7XeXJUHkw1J9P7He03ZTsU1mRTGZ9
Lq3TTk82arz9cma/pZy3lPt4pG/MuLcT8fnU/uJU+6avw5gXY2ODhiXO9sId
6v5Mk2RztkUbe3xQl8OXU+vFROtp7jYtPOwJ+4zwdGQ9nZgw5puB9u0A/Vrr
tH0imrTljnVrd+H0ZcCeejszu7J6gJiUzP2FsbXwNmn7zdx4PQNnGpuM05AC
yrTrgtoWxE3Gronhm7n9ama/mhr7Cx3vL6YWvu4s7Ilh93V/qMpoB30d8doR
J68zXl209zn3RHZ6mnciWges9HLurDPu27kOs9dpb5/zeppfE7xN1t1i3YZo
ncjm+7m+Ned3hy2aP3k7GG3t/Prx618+2nz6fiIYRjvQD7dP915s/nFn5zdf
n/S/qx1sHj96uPVsPHr+qrG52Xw/nrwfDJ4O5vsNqnc0PhH18Vg3dhYe3LvF
ek3Vb0j+Lkde+7y/QWlPB1Jt1KD45h4NbztvGgdbb/7981e///VG/c3J+/7o
zdZp7Zut9+/e/+Og9rdrJ++etk5O21+/Xftk5+jJXm//l+t7D3beNEa7R80n
W0cPdnsHB6M2JXYXwsnmqL8xmh6P2z263RvvPNh6/atXL3brz3pU89Om8qzd
b54+f7b+1ebhY4ra2O7sfbv+6PfrG2/b9eP2s1r9wV5351Hj5HH9+GDS26P4
I4YbjN6ddN8eTfvD8VagbBf61k5j7X9+cvhk7w34+WR88usjce347cb7f/rF
m53mcCvmvjodH7w4WP90a3ur3+j3nm003j/tDP6wf/T53t56t7Ux7D0a2VuU
PKc3bGmtuVi8GTtNasSf/rK+8x++qdUOhg2f/kyZfLHWPHi/+futvT887Ywh
4zvNr59tP/miPvz6ZPzl7taDExDrydP6/ovedIsSdjjveXfanUONnww5aofS
v27ybw/fdI5/85u9k0fNLo/Ap3ee1Zufbe6v1d+sT7mdybTZevj12qO/2x5+
2RFenRy+rO//8pD5zfbB17WDLzoyygeg+slIfzqSIMl8o+5L63Ou/48H0r96
T//TsfhkqCHeKRomf/Li8O1nLf6XJ8bjg7cnjc+/aIx/1ZBfHb17fjr42z32
13X2D2352762zliftsRPW8rjkSGKtcDs5tbh6aT+pC+DSX55LD4fyrvDbu34
8ye1zU+O2bW59llb+3Lz1W/3Gs+H/N9s0f9mjfptU/lFTfjFMf93h/ynbeWb
nvJooD7oKy9H3O50tseqO7MZsvCbifRoZH43MPZY/c1Y+bQJtpFfTsy3c/vv
Drive/rXXe1XDfGThvSLI/5XdfEPp+rvWvKjkXEkhi3lZ/5/RWz+ico+3W6t
cdxud3b0rr7FymNt9t0nD798s/9yNH3Pzl8rane9vfX73dYXG29ns3enTG/G
d9utr1+u/XY6ebY1bH+z8e271l5/vnvUebbXPz4Y1Vuzxow75hdrPF+juJrt
CRy3zytD2+zMZi/n09ez+caCb0z7D8bDJ7x0KkgtdrG3mL+YTl8Oet8OcH62
Ppq87Z1+Mew9GI+eTKcvWHpjwW5JchMvXm4rFq+bU47dUBSUaDwv1OjZm9n0
Bbl48oyav51OXsymLyfjpwy7yTAb08lznJnP3y7YTZ7blpWGblG62dfMoe9R
1Ow1u9gV+V1dqcniIcPuzbkGz67jrvns1YJdp6j3HF8bDx/DYDRLUe+o2Vu0
LIh1VTs1rVng0xy/z0gjhfxl9IBd7HNyfwGtR60L/zdnb9XkyrKmaf7UMRub
m7G2nqmp6qqxU4c2LoZkKZViDmZmZpBCTIkL9l64T0/fT2T9hGOmiwy5h8vj
C/f3ex+XZ2hBL+fEbEaXV5HncNlUURCLBbta8pu9c3i/u3/IfnsXl+C8vUn3
d5PZQp7PiZu7uAxRWXm9M2YLfr5UHkOXw+UlzGbUasXtd8a7j9OHh3S7M+4e
kodbq5Tq21t/u+Y3W32xcVY7b7nky6DN58xmJa7Wwv46OjxMd2t5c3DXG7kM
3WIpFEu9WIrbvTlfMGWg5gt6sxFvbrybu+Tu2t5spLKr+5263yrlH9uNvFqJ
5Yl3D2X04v3OXJZx21vLBVuWlm1utur+YG230molrNfCaq1O1l4+V9ZrNcu5
bKEXcw2UsDZ8BDGN6VzY7qxsFUkO3sPOEerccHuc2uqz3TrWHKocpQ14vSs4
GKihkouXdlTx0dnauLtz1mup/Oj1Y2fssj9l/8s4lLHyCsPLhCBhooW/WFmz
KcNZ5CVY7QBHlFAltRFpy4JDQeRZbXxWw4eQNLD9MaUhR4P6BQEzNslw5zB9
zhhjQOj26KZojQwPMHNDz109EoNcdVI5XCRWYkBUpQacdjnYjPkiHXkhQWnk
5fjiEu2U7XBGv4+cYORbXuuM+D7EdWVzKGgNXmvaMZtO+SinEB1BFLA85APD
mM68xVyQ+sPBz12ydEFKFGMT75JRxle9Ewr60Q1QLTadAKPoCkUfOz4oWzAv
dy13xIpVkrtQ7LHuQcVkXCKJHIpG7s1mwmIuRoUBCER1XKOkmhkzhKuhBsep
/TpQ6WMNLxirATukugB+ajl904NI7ipw6o7X55R2Go/WC6KcGo4/MBPd39yG
82Q9Y4u4zUqjIYNKStVxu+4kEENHEio09kxQ+vOidHA0Lo0G0GuFfzONO6bZ
EbSe41zR/BkrXcWP8wgspmiRg7NsvFyb6WZpTtMwV32jYkjPfecyT0a7jWim
ZosEAOYyisZp0EKZap8ZWk439usYV3f8sWtehN5Vlgz+a6qScdiOwsG0YCcL
e7bNs93aT5UsBYKgGbr15RR0fHhAdymp5bvN1ZKLYwjAzwSlUhS4o58Y8vM4
agduPXAbnnf1X3oyKnWp1JbFFN7O0d2aTSa8EWvZhJjOpclc2x28cnpGEZCm
w+VKma9tz67/11RFo8fOdEO/EQWtLBnGUXc6gbc7/XDt/HOK3TGdnmnQJsxO
CtBPG2byvpz4E2iIvIWEbscw8DBIt7nkIql3aSmv5EiCoqlQLEYK1cDqiG0k
E6YMpuoCXKSCGmmEhJXyZqakhfhxWTcnnjmx3r+fapMsWefzQ/GleLXLKiUW
mbkNaNw8qn0/gF/2kJObfGTdZ0fv479PgtMi7X4uXvwW/un39MdP+ZNPk1ef
lxdflrWPe6ZYqcXGWt6u72+dL+vGt1vi9wenjNgsa3+dvvg9+/XT5Omn2dGn
/MXn6atPk2dfFuefF+efJuXhy8+z4y+r2pdN5+st8/VjcriJo8P+6+f5p/n5
51Xr9/Xwt2vm6374eVn7tOl/WVQ+TV/9Vpz9tu5/np992fY/ZU9+z5+WzX6Z
n5RNfV5WH5u6Rr8+mF9+z79uel8O1Nf39rcb6vO6+eUG/3JAPy0uPpTNrlqf
F9XPxavPs6PPi7PP8/Ovj91ofb0lvn7wv36IHtfV142SCr++s75sep/L0nfG
5x3weVH5uocfi9adL7M3n2dvv8yOv60q37aNr9fI46r+O+3LAfry4Pz+4H7e
A5/utM/b/pfd+Mse/HIAv60b31eX39e179v2l3Xz2w3x7Z1SXsiXa+r3Hfrb
rfhl2ysPv65b3/ajx5qryh+bq++7zrdr7Ou98O1O+HYYflvX/7jBHpcK11f/
OAz+2HX+5y3y/b3yuIR4gL5vrv5xg/yxbfyxqT+W3oz/cQP/se/+sWv/Y9/7
4zB6t0XtVCgBs1jKpRXzZqGoNppoZcT2xDx2V8vtdcI5dBurdYnmQGN6Igjx
DYA8V60OKI0ACeBsjNZ7pEngDoeaVLryPt8p/ziUH9H5x/XwH3fE/7wj/nFP
/X8P9Pd7oWReMTLEyE2W/mHNzaYUbxED+G0bOuswwwuRG5o6ZZFtotWHj0j2
DJR6mMULOojCv/D8MWvhdXzYQJuwAoFcq0/WSB1ibdyIOT/nlZA3EsVKpena
jyfWgB5dAceEWNdiGXZcyhF4bTgCX2LEW9aCQBltQhfnYLPNQSDbILgrTAF6
PIBKAzPEpVgjA6vMC4w2UiPZD4ntStpvDVYCz3sXIFXxE1oO9Lasw/yg23t2
MuyKvlIUguKKXbR9BrQIg1ZNWNN6kks0aaBFjTkTEe0x77N6gFshEk8lIw+1
LAmmlq42QPhFgy5L+TQCLGdISGB39GKIXzCepgcUTFZZ+nXg92iT7FI9VCUY
A8WEFm1TbsqtZjCtDWWfvdnr6VRX0gS0fZQbiuxbgGtjBjOZ6SU8tUi4Om7o
csXLZMbVMa5VGZ40KIjyTUIlHO2Y1rotsm1KL/OgFsfjw7S1zdtioNmzZLe1
53PJSrQWz6NCV/dgKgjM5TpKOZ5+TTCntFd6eLWBtX3x7759hukoSF/eRM8J
uWVaZX7p3ecnX5fnsxymfItL0tKu7/fB3bXlRJLqkbBBAgpBRylhiWP8NNV+
9OxLpzAgy64AdU18sZqOzxiugo+uo5eZc7L0X7rW2To++TR9vs8vzQjl0lDO
CnW2ZCPTDfGHSaXkIDXzspWrZ6Hi4PfZm4cVYEy9rkisJ91vi9OpfzYLz67D
J5FXechffcp/+VS8LRXm6zX8zyl2FHW9oIuoAJwssTAuIz/fxVbEDtGTLjPq
ajIbWZNdQemQarZx/gr2PS33rFkMKUgHq5K+4iTckK6JDqKkKmoQWsQ6MeHk
8nLJfJqfQn4B+emnd+HdErnbC8ky+Dp9vgzPOU9k4lhWKol3/r927W+7ARNH
Q9O5S1/9FvxnYJ2XR/+Y/vo1/Nev6X9+zX/4OnnybXn6x/L04w53Cz9eeOH+
en2dfl9Vvx+Q3+69aKomYe8f05++Zn/9mv/0bfbya/7rt8mvX/Mfvy2Ov82P
vk2ffps8/TZ/9W1VLSXo2zX+7YN3uE3E5bvPHyelEj6+v2l/uya/bXvflhdf
t/3yxK9lC/Pj8p3v8+Pvu37Zk2/5j1+L5//VZnnK+ff11fcD/O2D/en31ed1
//st/v29+/0Ge3z/Fvt+g3xbnn/dDb+Wark4+zZ78W325vvyvGTb+9Xw8WuO
A/CPD/aXD9779+mXTbskuG/v7K9lB1YX3x6UL/vx11LwD8S79fjTbng7ufxt
dlqOhGJGHVboH9fgt9/S394F3w/ot/fO9/fOt/Kdd+b3w+jTHr7ZCb/tudWy
tPdYMBVnS/HLuvXHLfbbg1vq+ddb6ts1+ulWuVkTH3b4bCHe7CR/KnkT3p/K
JfF9uuW+PUgf753FWlsvyOkmnmyjYKrEcyuaGYut/fs77+HOW2zNaKYUa9cv
FK8sXbjpOpjukmRphTP9sfLCE6cJ4PrWxLVSOZhH+cIKrYtTpPcW57k0yjaz
5T5nLPoI7pcqCuvESBiDXHNIVAVzBMpjQu7LNsDqPdvtOX5pd8f5wsi2Wbyw
g5lRtp/vp9luMtmlk12WbAsuz3DPViIlmruTha4nJmgoDbjShc8H7GAgwbTF
sDbRJ1s95AxhLyFxQFk0r48p5AddeCZZox7ZhMlT06zT0iXOnZHaENRxL8Gi
jNQiycpUKxHzpR1lcp2E34zqqNCwIkbwS+vO8DqAok917mffbbBav41UUPy1
axyL0jlANyStzslXI36EWyTmCIxDUuqA0oFS8O2AmS3t5TZmVbw2uoDoKyeR
rEjCNYISB/3Bqx54YgaMP7HNUCDICkv8qlldQiXbLIbJI5ip/VQmOYYtqYQx
Advrx9FoUgilwISFaxUZrWEQ+kaWjuMYMENa93BSRQfQEY6/5M2h5sIUV70A
6h0W5LR+FQfOGW5USjrdJXTYCjEvQTzrvLSR842fz6xkaiq+QIldmKqBdIWX
r7RIcSJOEqoD4Bhi25N0bLtQk4J+7fT+rSeNFNrRa5p60WXHb6ChKz25j371
S3yOOmlYN33YLyy52LhTfzJhEQl6AmFPcRbURX9qk65zhLFtolMVVFJq1pCr
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
ioAfI69gtqH4kBrJxc0GNwlGAwbYJe8Rk7k+2zgjGQNLVQ/EeCo3qA5qCWJq
NTTDiGkjosVYVxOZM/qGzyo+v9xP/VhIZ7aXi7LWJPkGrYGKL4DUpaBceAnv
ZYYd8pIO4hpQzgKAaY50xTBafeK8wYybPNFUJTEUvWDgJLyVSM7EXNwslhs7
CIZBLi+2oeozHZEayISmvmWlGmgwZ6KOqwAkjTp2DNn6SGNrstYoDVaYSpES
5Mp0neTrKF3Fm9IImmQQjL0QC6YKUjK8a0QpxVpkR2ZP1NhLKNFnoXByzEoX
ovZSzltWWjFz1LOUkM2nzGLjbd7tB8EknFmHgxvM3XawIrKVMQ3YQBsnm6Zd
NJ3sXE9bZoj4cckgYp5zaaJPvbv75HCXZje3g3DpLvLFdd6PNpfW0tzc8NOi
bmdsPhGzBI2nQOmWfY+KAntWYvkSzXfh4T64+YDnW3uzzQ9LurSw+5syUxir
ZbCepdtpuMzCVZpv8+l+Pk7W3Pw6u7sVZ0t3PbOK2FzO7VloleIzj+NlHCyT
YDXx1uv4sMsOu/xmv7lfZttpvJ7MbubFYRXvVqu7zfzhdv1wOLw/rO63yTpO
ytLrIt8XweE6v/99+XB39369fbeZ3hzyu4fi/jZa51qIT+aSEUnpynOLkNVG
Leh0TNa9qb7euvNNUJLIkDinmBPNA2WzA/AdiKpozmCswKXXFSyE1XucCZIW
BeuYO9G3d7Ptu9307nbxcHvz2832w/32/d3h4931x7tkHZoRHSfoYlWCdqQk
vmBiPeBNe3wEcR1KHykuzthMl2j3wDci95bXW5TDCwYMAE9o+i1tQBc4dI4O
hxJSzv0BfQmXAC4NBRdxYtTPuLQQ7UT0C9eJ+THdaoFHNF/VQhZyXcLVBBNp
wZUBXpHMwVBGTqD+KdzrccM+0xmQVwhfHzGlYjdQeYRpAGuOJL2ulLqdaEbA
F3NjtbIIGfuhDVTw0neXbkdqSTIkjDrgxWsAgDROi2TeVYdkr41cgOIIFUZj
pg1ynSFRaSIXPaY14luQ1CWUnumNSgdoZ6aYRGrqiEoXIU9RoSnaIGdTtEmN
JKoLn6LYC1RqY/J4iNfqwMmAaSF8t49WRnSjFO0eVkXFjmSNOAtAxYbhjPOF
60xjPY8Qy8CEAcOdDchaWblsk7MZhG70oOMRWRNNmNeBHnZZ67+8Ak5hoYsy
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
RvmyGTRrrVzrcYbnSxmKKiqyKI8jPNFOKSUR8SiQM/f2YH7+VNx8aDYPi7Jm
Vzf24T6+2XBmrixuy3Rp+TntNFFSkm4hqwExsh3IM7HIkzNnfyMdPjb7D+Vm
q4e3982hWa35ap/Zle3V/mojPRJpZWORT0Yel0dFLTS7YH2Is6VegChe6s1N
EFaqVTtpo7JFYWQSG4NBaUSaFdtwc5vu78PDhnEKZbm14oVt5LJYZkIWKnWx
PMTLffT5wOc1k64CpfCY2H7cz6SMm60FhhBValSrZLkmim0/3Kv14rBhf7wV
wPXCVaJDthzzuGkopv5Q3a7cTOnwFMJ3lmm7ic8Qg3nF2LhrqCGPuI+btPCB
GOa8mIdi7tf7aLe39xt2seS00reaZLsztntvsU+qreMVMhlYQuzu9s5PD8p6
o0qePsH6xwjCqAPPvfYT3M+4K8l6RwhdjmTNaVPOjVhuseSlIBOuyOnjmULg
vnWmJieSA1oD3mextd0mbmrqYQk1DZtvM6lc0DqC0ic9EbgS/r7uRzknBGqf
mXU5jA8V3FXPOY5ShqY3vVaMV1IpBpLkEZzL3Syw1RIYGQMCMmLSaaU4ieQ1
GbiIsssg5CkkY/OoijKuSKeujw0YdCgQdOiNw1suySLn+mD/LojQnlVcK67u
E4o1mqpEGI3tGJVTQB28kPpStazWbraK5OWtGoiSchW5V17MXNqbC3vbs1NC
6oT6yyKdqLHWltQuh7jBNE7mfVmEHTuJR75zqcZKtdLutlQS9o1EVJeHZFWs
N5aVm8C8BF439q5Cv8clCRMDdufm3IjToF0N5wWrODgmdDB1bsas4UK6NZAd
mJI6pDLUQ3pTzeKCsVK+KebVJrQ29/bqJllnrMMjGmK6o6LA6o0PCFk3h6rR
8RPC9iFTfVvZT8JgIAacqF7nUY83x4JLJMnIjmkt161gXiWDRUNn6yLdbf/8
IaoXihZLRoAFwSApxTSZyvJ70zq3g2m1tuZ+3sI7uNyOCg5R4Le0ZIWY5s4t
byTbA2Cip7YOrqafsWENCoHlLnO9jpcLrq6xqhFXK+Fwl3DllvKNNJsuVlK9
lCgDWddzJ5cwmw38nuEOdXfEevTcFjBfDxYxqEQ/T7F1d6I6E2C0ydDFQg/w
5OHGKFJsRp/xRs8IYD8YbDbqMjx1rC7KXgVBF0xFvDDOeP0lBOne3E2lFj2e
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
9f0W+8uqlVVUVPLj5GBmqhNCcLo1ygAEgF1HHUUdse0rFglSGMq/NPtqE18m
8m915aVrnSzdJ8Cqc/zzl6yMa0NcHV1I8iVP0SYEWwxukX7OfdpAf11fAVtK
JLFf259v8P1O3e70h73ww6olOfC54oeVfrNW41yynRFEvmtj15zwmhPfa848
8XsK95Qkn5zh3RbVreLrOBi9hae/nLkXnMiyb0fk+QnPXTLwhLkeizNYgyQf
G+ic4kzv6pGTClHjBYUB8dNrrPWS4CkLX0TXTkTxFt3DW6f47FoU2hwxJY5l
9k9jbnRFw3P6EhOuhmyvxw4FcyA5oxNJ+x2sXrEE5Wu4rRplVdwAfyWTzDEl
ddrWAoiJabQNo6sz3wr0tz1FO7e2vCur4vsZeTzmZxMeHVLjOdeZUJfnWBfh
r3j5XLeuXfdqaDhDf2OnWlkJSa0r5oSnn7HC26EsXSsBbQuMjrWxThe7mvNd
VIEG1PD8UdJ7mNgfEB2E64jSCcO9oZQ+GLUXdGdCD/gfs6nS2ooyBQ182YY0
5WRIXkypa9qkRYcipckJTlxS2OPWwvoAY45h6E9X0BkqDDTpbSJ+JfEvh/B7
i/2jpb6jlO5AxtoiRaoTK5GcOjIyy8kMWCGP4OEl3sU12M4MO2JE/kxgnjDS
FS8cq/QfQ+FXifINK50P0NNc/1oXnsjiO0d9M5DRuc4Ao4RIfUD4RmobZfzD
g1mXjOcMMPZSYJ4bPslq0zFxkgm/TNQ/JbmwjNrD2XMS/yZzzmbExRV0GWlP
BPGsy05P8WmHQ9+zgqJfm9oJZbNyIO6X+A/rkReTS+/FrugZsVwCYAGGy5hm
xrdp0BU8YUa3BHO6T48opUNKV1cMKKaDgYicMOxEY9Zb7fPDz7yPPVbRqYqQ
FjKON3IRKO4s2hRuYUHSgDanD9nLdXKx2Pq0RVjOGJM6UdjJF9LNiuUMCOXO
PxZvzZiY8h3TG+Y5SljYzFZHlg8U2yr0mUa4bn+Tdj99Kv512/54QxtlwuuD
1Hx6iF4zQSCLb/6/aVKl039bX0hp8ky6/Y4wTinsisMnMj2QqW/m1Ji66DEz
03hLGbO2yj8eobWffdqS9s2tuNy/EaJ1Ob45uH6udiQQXuwv5uFMRS23K6gX
stEjlX4Sdtfx2cr/nlPbiAbL7nygibfN+C8P+u3BFVef1w83R6za000rodNK
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
27vkdVPCn9Pv9uUVGWhAeLxV1RL40B86Mbm42z400/VaXTwefzAcM0PKmCt5
kBlPOfFY91A+0KXAxE1WkUEEfjOjLgAC9TkIx7+fkO/7VKvLTIcqxRljNXX8
jNULLzzcbve+b12LgeSulmKkC9q1Ir+SlSNNPcIeFfscEsdT5gKTh1MZOaex
Cd+fyVNYx237Sg7l6Gbtrxt/WX14CF3jqPDO8qQf5RRloIQ2ndg+qkxHbIdR
OmNDf82ZE8vt0qOp0L/m0bZIAhrJ3De22w0y/sud+uljYPkTIfHKfc0kEfAI
Xq5xSfRetAhXmejShcihGnzMKYQB19GpE89VZ6iGfLLfF/t6sw84CzKr0F5v
MFcfarK62MBxhVmMmhoD0zWDmeO2lvG7NGzflheEJ0sBfbiPqn1JhkA5I6cJ
0SAKV8HYi/KaKVbO7ZbLF8p+hSYVz8Z2T5fJOAi2C8iL2KKY+PliLTU1uV4y
duncred1Q+iJKBV+L9yNopWw2IqLdb7Ut2sm3pYf94JdOVJV6U3urRfGZv/h
zms2znqt+KsCNCjloDPJ4pCv9tHmRos2ERjX8pA1K2WRd2/WrBVgdFYai2VP
NV4i818iftd+fERRb2rY9iThZaH/4SXvPWFsTT/fm784xM8q/23jPFuER4bd
GmjizJYRV3Zq58OtergLmkOzuKsOD9nth+L+Y/X5c7H5eMPmhWhDooUwWWPX
Czv1JY8dUVcd7PI5Rn2DWRdqNDM1g39iMb8F7hWXuk4IPcRP9+J/adTfxO6F
pb5She85rTXhR21mhmmza0Xq2/bY0E71ouPf0XF2s1UOzZyWOkfIFBG7tCNx
vrrLux+TN4n0Fc2+Fox+aJ+40rfnWO+MgnDhcsQOX1JCV5wPxdlbwWYcEtTu
EdNTzOGmguKUzFbRj/eG5nAtpGeL33/Iz6p4WASXS/+Iot500EvL7n4qL+yY
f0vqvxrpQwGL7TNXezMWZ7+dmz2irajvVe2UtwbXMqs545sKikqlXmofdoxp
Ty6w0VNCQHT8z9mL++IcNeVnqPgWhXsCTurwFYW10SuUb79ivSMcx/gWwHWE
u7CN95rTn+rMEYnxxuyfd/ifbxhQlBlf76oOruFXNHxBoVEwRFz/mPcQ6hyh
z9uKcyzn3+HOq8mQJp4ATR5KzBkBT8nTlP3vKPG0w45JuUtrPViFriSdjcPN
RnNKj80a2cZV8SnBncCGIGbRwG5eEeop0qPFS1QaP0ofddqlWjR/tJH+K8qc
An0YsN0OMxPUi7kKzdjrsUSN7ISLs2SVursvfu7wFkyxR+8wIowg2x6wwlmb
6AzIlp+Qh/j4I/9/IfgLRJ6PqQuN+wPOn79EqRl3jdCnVxR0QU0v6dlcaAd+
30jV+xW+byAtEicSQv//nL3njiNZnuX5iPtxgd0BZhczmO4eVHejeqa7VGZl
VGZkaOFa0J1a02g0rbXW2mjUThfhEalaYV9gr9cjJEB40ANOs2v3Xjvnd8yM
/2sItk86qXyTDwrz/Yi4wuQhY8A8/cqR34/50ZSuoeQhS78bY8cDsgaRxwA+
IdtGwvTXKfYp0GVeJLXxXd66T8/X7jsiBQ5qEMxhrH7XEilYmsaVfchImnYN
MRffMemVtewHm2NavJocfUOnbVXFqfc796URwEvndRx2L7VoPse0sqCl6zbP
wDq333tfyvrtAiszeEReDfGLmTxN42kqf3OFdiW1E7utOAbzAeqjNRx/A84v
hDq5xgYXo7PB9N3BpHuBtA8IpsuOsgSQHmMk0mIfxQunS0O6NYjmuhdAOHfd
w84ukC7GnV/gA4R8D1HXdfR6TNcR7vIS7bSwqz79RLk4X3ed/mKlLtdasbTX
dxXwkSk/4M0x44pPpT75Tl022wzUxy9o9oyWBxfkrCaYl3Cri9WOUeicgHD6
wJDe9/kx6bA/7plPnwJVb9IWU60tKxG7AgpYTA+YM4rsKMIVx73GGaDzb3EG
FrqJ+Z43h4xSZ62Zvaj8ZbJeqbTcCDMuXYApJYG/F/J5z04m0kz3qak8dc2L
tf3djfOXW//5NjqcaDStT5/WhVnGY0PTyojPkrGlm7l5rdllMvph2f9pUV+k
PcObXmn+Ryk94fiZqwWrqKXbsyAC4Wc3n/w0v/i8aD2WdT+cXqnOgZw0raxu
l1dmjiZLMXV/rs7vywboK6Nw63ZFZEuntHdrVqnmNxvxc9X2EwzLllhcqomy
3YjLlfxpNS0rmkgrvUgWG2NbYT8VH35Yj9KwNwsyJi6nEvTf2+b/GCY1IxHz
QsyXF3LWxc815tnvsfSfZ8GA7YbiV2vnlaadeuqbzD4YA7PjLNzEB5qChHFc
qXIW+JW1WQvhKoo3xfy2SG9vivu9mWucPkBVDAsyKtshwaKtuq8m6CV09hYa
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
nSOjnuH3jexYAKmSnM0+fhgPL+QIC2I/JlGy+axPjBVybh+y7Akpt1X5qIb1
2jw2VGnYfrot2FBMOJxT2d7Og5sFqamNj4PGnyD5SEo0n6yi9ty9QLCP34yo
I0533P5CfzZF3vTZgW9fI2zjipd4aywpl7hFqCHDedxzTD2XsnQVe2Vg514Z
9TL17ZCs/2kifiR5wePjcDjXXvTQ1gGpuRFVxT1TOT2ZNP8wZGYKZhjdPgud
0WSbaLSZ0YnoHD5duLBmttIzbCNztysZzI3dHEXl6dcj4g2CEjpaVqqZmq9w
858h+yOjG0ZjwrTeAmZiZUqbMMIJpGGI2IPlWU+mcJOUAv4twR8xsu5TZU7d
79T57YYO8mut+Ba3YGHohJjqQN/OlJco/3SxNzGmln0ADT6gwHZZQTh5g2Cw
hjnaSZ8ftxhooDBTlTgBwUewuppe5thiKYqJBXlpzzAR39cTvlwaVJScinZN
VLlAr3J8wE1rkh0EI9++ROTRFUf1BQhoiGR0JGdarcSbm19559H12pbbgRX0
TC0vtOyY13db0YvJc6T9HNUQFRYdYrHSA+ukrXh/mVrLuLac48VCGrPDv2nY
WTxc5NMudi7aOByXst7pONnAjVdb5/bWNhORjKL7nXjz809qWbrLbL61jIgo
M+R2Mf20FSiLs4OZvwLB1n+ohoIvyInB+cLIcjAvsAuNMWHOfirEocZCtLDA
a7P3bvfmzd55/Dzf3s+9uQkobnVX7Vb0fI5rsQTo0SgDozDNVIoWhhbx4G/C
ua1Ggp5IXqFHSyddBxVgv8+b5W31y6P16ZcfjUQJ51q+8Zc3Ybr2/WVS3a+i
daY9VXblo7lq5qpTRVLIgZYYieTmshywdm4G63x5P1/dFp9+3CXrsNiv9z89
VndLu7TDdZFu506uJpUOoNSb21am2JkSLGxwIPOt91SNZJ9Vnx4fflh+eXCS
pZvezJf3S7cKnq5sP+6LtRVUer6yzQK8HCNVzFS1cj1Y+MUOdGZ8/2W5uq/i
dby+n9/eB9kuv/nhbr6LdvdRtg2TXbXYp6Bvs21WbFNApKvHu/ufvmz3wfYW
9EC4vAUnoDu/idJtXuyibOVH2zzdJot9fPt5fgeO47Eonyoc5jePGxAEFnfl
7mG+eyh+/qn6/CW/fyyWd0W2Wyw/3a0/7Zb7ePV4v/28//Lz9u7LZvd59/BY
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
dxxS5yCi0iHriEZQXBchaxNx2MXv6tAFCChMmbAmROgTUoeA53IT2U40KY1I
dTJE3nfpJgixo803RFaHO3jjDu1y5kh3RgRb6aA3Y+H4BmFAXI4AI4iTDt2n
NRjsXgBHQ6bGGphbRl5uzKayHrAtBr8l8DbVoYSWHXBJQnBid4LfitKN4WOS
hSD03f3oogLfA8cBlPM98As0fo/Wu3QbV8eYhmA6BsYpWKifinGhOdkxuQsS
4ePspJZsj6JClENlzHQGZGUijUYK0WSgGjXuCRCtDmkAzsYIE2qwNKbUAW0g
pIHDXJPTetMCK2dykMrHc/o+KVgYwtUhsS0EGq6TLbx5RcAddigmIeVaPaI2
4eqIY74hlBt8MJFhwGUjYTCgG7AMtDeCahCwyVZEc6FjpIYdUqLHEwahBozs
0V5uBrnKWxhhoFJo2Ik64XuMRQGBgUg94PoB6AFPgekwrIw5j7cy0yl+Z2fe
tgCB/4Z8VzZaiIYNuZ7s86JNvYMnbbI6pm9bYFypMxAnkDDguXdDcWjHlB0R
Zyh2BdX+3r9jIFA/ycqdZVZ0+dS0m4lf9+OJGqtiYlO+OcuJ3dPiYY5uVvJ6
LSux4KXCPIdnBX4LMBq49mPOWET6Dmwq3sxbTHEvhLwQDlOadHjMllWf8FPK
Le3ZSk8X/mrObLb64VgjLjxWpZjb0SoW04BJAis3zVR1MkkH7j4UrdzREtnI
XRtofvC7GavEugmWK1fCuZWsUmDh90t6uY//v8Pj8dyMF56bm0CWA+0HIshK
RQCqTq5qwOMXshuhYPeyR0EOrs9YqZKu/OU2ytfRYp+6uREujjnes12arLzk
eHbbFyM5LNViaTqlA6BVjHUt1ZRYNVPgRJRo5sSrvNwlm50337jpJi12RVBa
fqGuHjKjDNRIsgpLA5MqHT6UpYARfE6J5XBqFPty/5wvt344t4954KvAPaaD
HrsShKvEngbHZmG5q6e2m6nx0g8WYbGNlvsQqN9i7XpTN1plYPtZx1dpCoD6
Y+XtlDdzLzz+JRhVlmyndhn4uRIca3pbSSllSyec+7O1VWzicm27YGyJEc3M
oDTs0l1s/dUuKrdHSAeMs3hcr5/mbirgci+M4dBphAlhxDrDVxrI1S3WmCho
mhJ6ovck7hpunk9aQ/pO4N+i9BlGvAGOWxOPrWx5tasoV5FbSYKm5fYAm3jr
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
F9KYQ5w6RicEfyOqHSCq30H9G7wHMbdj7LRPtE6R4Rl0N2basNiHxP6QOOek
tpXIfirHCW45A1W7g7j+jDghqEPexHSfAY77jhwCNUsp4zE7O5/22uPDq9n5
KQJ38OEMO56gb2HoCUt8O6POr8lxh52OuT4qdJwAKQtGCUTe5WfS9BLrzsgT
Rb30Q0g00VME+naMnZMowPZb9K6PHHexqyl1OUWPJlx7ih920OtrtNOhByN+
2IIvJ+S1YXaCYBZFqJuZauoTOomSRxT2nNfGED+6hq578Nsb+Aaxtcjv7XMw
Qjco353OXh5PbkG0jLGTvc5HzmHmeExdjIgziG0x2kQ2p0BMoIaA6PyY7asO
ariY7IusLfLSdZfsT0UMU/EhddPlMVbpt4neG2TWwy9a6B3HH1zjvRtqCPQM
cNk/D7GD7WO82y5W5thyjNSGhAEaZlNVOJp2znnVqaI6mbi50RYFRgTBfA1E
i1Un5Sq6ImZ95HSff6PgZfEdUOnAgV7qSdi47xdIvfaLhfmhau8WBJ9X820C
h1W+9AC+TBX8WMno0JaK5L7o3Ch6kSP/sRmvG2Zbz4p00jf0KyPrWhHvk6Hf
EVwCcgw7obJGizN8Gs+n0Qpc/O8fZHvRDJ0iW9jbbfDDGv1p2f6pPA9iVEhD
PosvrbmQxVxkbhr0wxJWYk2ILD2380Yf+QUcLzZba7sSHlbMYpd9Ls/ez6fZ
3I7mARaXVORjcQ5FCzOVH8rOYzMua4bPsxEILN93ciUAeAiuXI4/r6bztXW/
Vfz1TskDtfClepXM3f9n0/1xi33a7N+ZcuUazVbzpbJeyZ93fDXfl9zyKt/K
LasKwk3tLYt6G37aUP/5yH2+F/zSMnNrvo2XK+1xMcsaG1gaOqv01HJLs6mI
rGCrmvvrPV9t0/V6f9LcnDfgiw9L9OOjVT/U+Sb7dC8/7LRm7ccLP6518Jt0
YVbL/fnEeBHWG99pUqfey/j5UnCbzKwzvYjA1OWVEJTqemevHwt3s/aaKF9Y
4boC47Iq8NnTCtcrTW+R+4vSmjdqGS+WejK39cIrKiEu+N1Gd+sA3K9yE7vz
Yj6XqnUUL8ueAf6p4V3xHEO+G4xhrh82tlgtk0UUeJMR0TmBsBQwTjFM/VuB
P1J92o8R1Sek1Pv/uSyfm/M5k65Ld71ya09KDK/UFkvNrX238vO5Vtdk3uzr
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
lk9ZcUxB15htWx+Cvz1LT3txdzBeXpPmKZXzDIaKqAUvR7FrKKd0yNALUtqr
bUjRL7/Uv37zX5/07hTCyOC3QXbInk7664sNj+C159uhdzslKaERS//1et64
ze1Kvn7JT+UvR+HlBQhp5Fb2016od+dlvbnQqirKzvVwl59e4uopFvPKqsJm
B+SqMvLzI/xKCuLG3j9nfpeFpaHGWgy1saSk2IpLOT7vXFkFhRoWTFYrpydg
hgzk540urFUGRFQYIXNhdUOMUerjzvx9mNJ2qgf2PRD/oAp/fkBuHrd3C+a+
Rzya8s8DdvV7VB2KxJid/USJdzyLKEvFP9/XZ2VaUIh5Z8PQEVTArgOzTv02
gf6+oR5E6Qb4eJLzRTwHYLBlryXxA02+H25uZX0imSuIrLdoD0H/tMX+vBEX
un6Hku8H9HTEbn5YbP/HnL6nkSE5ukP7S/oB4+/mMgoVfsPNKA21wLRJZppH
DzlkTn7RhL/AmEnIK1JHcXV9gcz+fcXfshwizgj6w5K4PK+golwY4o88/7Mr
/dGR//TIrB/oVY9ZP24f1/TAcFDXmcOGjCqg2PgjObsnF4jKrRR2wm5wZUXx
t5828ymPpf4k9BaafElTf1XF97rymWU/iOyPQ+z+/Xp6ifRvkfspfr2lLnAF
0RPNDhnVYxnfnir8T8j6dxuBkCeyORkrsqBOZPZPGv0/Cv07z3lklD5L/lFh
/zDnFr9bK9+vmUsc+bCeDekla1GYjk/wO1O9SlOSCxwhsA0YqNV7TJysiQ8T
7BbROOCsMGm+wS8E6o/wr/QFfsxuHtD+5XY2FUhKmo7Ru4vZzRL5cbH9acVN
WUcSHJ5U1q5xWSVzLTnvC2lG0lhkJuinwfZmKAp5st5Ft7J08Wk1+Q7Rb2j6
HSG8Q4kf1rzMv6OkIUwfd9vHPoNy+tpNJQzIN5sxyg5y8NHz12LselVA2bKm
PTzgizXxyXMn0IK/YMgPc+zHJU4BKXQGOHv9iI0NYzRCe4/UWtcfMOaBN7ZT
FjFcUvBU27xnhGtOG4rGcmhEkJglh1D1gWqMNGMMM8vSBKSGAtDjPA06woie
y4kDcXRMDhWfJU1xC0wvV+wAt0snfzlV315/m2J/RueX6HTJPqygWnoEpi71
2Hgw8ztm06Nn15u+IH1JMxyXxja4lfif/32CD1T9/DCkOHmgp7r0s2hOt8zH
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

           "], {{0, 160}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 160},
         PlotRange->{{0, 486}, {0, 160}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Left eigenvectors\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{299.5, 
           FormBox["1", TraditionalForm]}, {-1674.5, 
           FormBox["1975", TraditionalForm]}, {-3648.5, 
           FormBox["3949", TraditionalForm]}, {-5623.5, 
           FormBox["5924", TraditionalForm]}, {-7597.5, 
           FormBox["7898", TraditionalForm]}, {-9571.5, 
           FormBox["9872", TraditionalForm]}}, 
         None}, {{{0.05004051863857374, 
           FormBox["1", TraditionalForm]}, {197.6100081037277, 
           FormBox["1975", TraditionalForm]}, {395.16997568881686`, 
           FormBox["3949", TraditionalForm]}, {592.8300243111831, 
           FormBox["5924", TraditionalForm]}, {790.3899918962722, 
           FormBox["7898", TraditionalForm]}, {987.9499594813614, 
           FormBox["9872", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 988.}, {0., 300.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
DoX31XNof1eYW9lc2n2L5NXkinqduwO4tiQPGTecKzv2b0wz6be6Gy6rbq+d
lKm39H/7u2Gjhadb8U7ip5Mbyp6xznx8yui3Gy4Z3olaMjD+f+fPd4OO+Msc
Yc1u2t8NLnlxk17r/zT+3/5uMLdsnDf7zIP/jWV2YsD//e1a9r/9dyJ+8/2P
ETdfEf078dgyr6P1NsVLp52o1IvKVtUjfWfvxJTbS+pORTD6vxP3wv6uTOkn
PFqxE0f9LW0ebqZx0074DNUxCp7OxE93+DqM8fO6VUX0u+P99jhZow4mnrlj
fPPt/rG+FM+d3KFV4cr98nQH7e8O8bKFNV7/yD/mu8N99Q7nZQWZtL87+GMS
O0vnEj5qcsfIGy6Hqy4x+McDY6pLjkwyJn+u7gG5RZZfNUooPsADdVm/fvyy
ILzo5AHJDf3Up78Y/+yBfe1nt3/LIP+T74HvU+bEiO+Qvld4gCN3++WoAqKn
yQPnGrg7KuaQv5PxxMF0JZP8VMJD6p4Y8+Bvy09r8gfwRPUlyYS16iRvJ0/Y
b3++dNMJisdsT4wMXxvdcon8Vb4nPg4fzs13In2v8MTJQamPti8l/jV5wvhb
wLHPTYz/80LGRL3TO8an0P5euNdf1+d314/298KBW+Elp5UJjzl54fzJAxay
teS/2F4YNNBfNOAX2WO+FxRLmk//HsDQ74WRxkP3vrhG/rzJC5s9TllseBZP
+3vjk4v9p4b0RbS/Nzj3bMS2xa60vzcGL33tvGo5+Qcnb+jpvqwwcwPt743o
ATH7RtQRvsz3hunmGLl+DtljhTfy1rue+vlyLe3vjXkvrT6U6RC/ZHbBfOaq
v/9SztP+u2A3xbw51Yvx/7tQ9upgSeIl4qfTLuj+1e65U7+N9t8Fm7UDlFwn
CGn/XVAdOHTzxIwo2n8X8o6FNycOI/tt2gX3Ec8OLs12o/13g7N4kO60R4T3
1XejLII/PfYZ4R3sRo+q18EHQrIfp924eUOx9eZ0Bh/txq3butMKvpC/yd+N
YJ3bLJ434/93Y+X5P16N5SSfpt2YMemI88ktHrT/HswfJvovlUX6oL4HyQnp
H2etI/yOPXhU0q3O9yL/5LQHCw52Bhn3ED3sPXiQdvmr30jyp/l78EvXU2dt
CPn3ij14N4716ue/47T/HpQs2pwb7EljGR8pvsxWkR9D89V9sPvZubzui+RP
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
hvRtIX9XLeWPs3vw0yNUf69NQreDYk//AqpnNSThY0rIj3f6jP0n4XqUrVzM
BTpfaxIG3M8ZMGQi6VtXEvTVW3KKEmjcm4S+14576t2IXzIcvLLeFuw3g/If
OQ5mijoS3EIIzypyMEFoz6p2Jn1U4UD33JAXQiGN1TmQuTOsbd148ndaHNjy
efuPRzP3JRyMWeMTEvuS+uUMODjoXMxVzGXujzhY5Jz7TPyZ6kPmHCxb9WxQ
YyLRZ82B5WbnoJtsBv9z0KvuZHjqB/HTiYOu7GNyEycSvvHgQO7t1AstEUQf
i4POER+Hn6snPBvCwaMbdaHX45j+JQ60hqnpZkZT/YTDweqgkOFOQ6m+zOXA
uWrhb14sxXcxB0my8hMj2gnP53PQZh87oeYB6WshBxsFGhx9G1OSPwdnex9K
Hr8n+ZVx0BB+eX99DNMfycF/xwUn4tPJ/qo5+J28zGRaKNlbLQfex1TP5TH1
4gYOYp0PGDf2kf43cfB4tbxx6FHSv1YOcvxLZOJDCS93cWBt9yVsSxLhi14O
Suu3rJh0n+k/TUZuqe30u9dpvlwyXE5qbN84k/H/yXAI+vHvgRXZn0oyrm40
KLAyZu7Hk3H7w530/Ssofmol4+R53jDjKqZfIhnrAj0OGuVRvDNIRlfL9F8e
48lfIhmdj0z1lc1of/NkrD3fu2nzDTqvdTIUFmYZT15M8rZPhubZkhMZ85j6
YjJK3iRODjhE9u6RjIVdrpcd06g/kZWMt7NvLpxzjOpnIclYL28kWynH1H+S
UbN3k9uecFqfk4zJsW8DSjdQ/Z+bjIJBS04N2EnxRJyM2tjHZzYGUDzPT8bd
v5lJamySR2Eylr//sW3uTqZel4zujnPfLziR/y5Lhkbyx70jmH6XimSsaX7h
NP832W91Mi4bi1fNWc3Uf5KxO/WI8Z7rdL6GZPzHlz/UUcfk/8kIPuq57V8H
+a/WZGRYfctrP0f63pWMuiN3Ta1+kP30JqOHNf6lLYvpf0lB65kFSr5pTPxP
keL/8uCmU/4k/xS0bdfSPHOI5KuSAkP285yeGMrf1FPQciLr3cUNdF6tFKh6
CfccV6X1daTzvQdO//6F9NsgBe9vuY2/xvQjIgUzb07oH25P9TzzFOhum/R+
twyd1zoFqW175SsWEB6yT0GRQ8kgxU5G/imYV/CFu9mY7rs9UtAnutowSZPi
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
IhMGl0KUv90nfFidiYjn1fddPSlfr83E0iWPBxd37SL5Z6JMUnWj+wLVF5oy
oRiqNyj6PdUrWjOxd0Kk1jU2xfOuTIQ9jvqstI/wQW8mTgT7n97nwLz/xUXs
y6MTve6TfshycXP+pZ6n1pSfyXFhO3xDbb0bxT8FLvaf3XjLoo7pl+Ci/uHX
tTVi8mdjuJjy0f/756+Er1S4OHmjVF7lD+WTalw46Jpx71cTP9S5+LWjz1zD
nZ5P4+LAm6UWU4cy94lclL1uXnRyMuFfbS5K5h4/FjWF4okOF0KPjlT93+Qf
9bhY+uFbTkkV5SMGXEyufybmapH8jLhgfQieP3U85Tfg4pz+mvuD59D+plwk
W85S38Yh/2Au3W+W3PWZEuKHFRduN+V3lh9n9JOLGRd1V/IrCU/YcjF4j82v
6+mE9+y5uPF3kFXOc/LvDlzgQv46b0vmfR4uGt1SrvCY+ydXLvaaev7ZWkD6
4cFFSkLdn9GlhI92cbEpTjxW5gL5AxYXww1X1P89TfW8AC54z6bxkg1I/0K4
6ChfHnjRhc4XwcXjlNwpeqMpPrG5eCk64frlL/Ernovt6d1zigIon+Fwoa5e
2VA/jOw7TcqvzBG7p38h+XO5sKzWKeLHk30LuBjaqf4pewbdx4m5KN3SscrG
leonuVwkmYlMtZcz/T3S56Hfro6fSf6zgItHI8MynPNo/UIp/x8pjcuVp3h1
Unrem99+tNqRvRdxIber0cN4scX/xiVcXLBbLfFSYe5bpeP+f8pfMsm/l3Mh
u26/W8JA5v5dyv+lY92qaoneKi4G9vaNEsQw97FctGifnySnQ/GwhgulUWnz
5YOpnlHLxY+x2XFWMsT/J1J9HnZQ/l0w1V8buCjes8/NIY2+d/CKi2Vt449t
yqf8sIkLi3srr9iwSf+aubCZMMRx3VTiTysXw5rCHDMnET7p4GLJmQUjY9TI
n3Vx0WWpJ3/xGP2+h4sj2TsOqTDvy/ZK6Vnx2+zPf+Tf+qX6bbgwa+ZEpv85
C8VjGpxX5JC/l82CVeDuRo/zjP1nIToleu/aQOKXQhZ0xl5rvZ7L9AtmQX3w
yum/HWn9MVlY4LvocsAJ0meVLEyLmGaZP5bin1oWxo7kFhs9o/OqZ2H85nb3
ckXyT9OyMGexor1tMvVzaWWhU7tv46W1pD/aWWDnH1Cb4kv1Qx3puHiPYeAB
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
j17xoRk32Wbkb7LvJqm+f011SDq+kexfyp+ev/H7V5O+tPIxMuf9Cm3mfaUO
Pp5P/Dfl4EiSbxcfKwbb/NVb7032z0dDOrSt/iP82MvH15Mf1I46kn72S+m1
OHmv6Afz/Q8BHuv/0Yr/RPcLsgIExIm3XHtL/lhOgIgDSXdPtBP/FQTI+xDg
l1FF9QVFAaptb70tvk/54xgBtjoOKhElUT1PRYCcnNrhgbtJ/moC9Gge+yC/
lvihLsBQleusG5soX50mQJy8KOnwb8J3WgIEfZ4f9fIZxR9tAY7NSTbgyjP9
pdL1B4bXPBhA9596AlytrHr1eivx10CAc7e1HzuGkP8yEqBjaDtb9QTZNwR4
oFySH5JJ/QemApjcDPptwvSHmgtg2P6xwSGa5GElnb9iZn3jA4rH1gKY3/u4
cEoi5Zu2AiwYFKpou5/8jb0ARgu/xRh8pPqhgwAv2jiF64RUT3WS8mPswiGT
1Jj4L90v5PhnW+b9Ww/pfNsC2+1ziX+7BGhYuWNm0QTKl1gCXFf+VxE0jurB
AQKknJ/ndtGM4l+IAAc088+s3Ub2HiHAtscr1dvfE/1sAYZk5t5kv6L94wW4
U6lSs9GG8gWOADPfvDmifJDytzQBotxc9Nz83pL9S+WRV2r02Z7OJxDgTfVX
19cKzH2pAD/CPo+Z4Uf6mCtAkmXHqeIg0rd8AQz2OiWM9aX4UCDALoWdS18c
ofUKBVh6fsEzz5V0f3NSgLZZWZP0JjPvAwvwbp/cpDPLiZ4SAVZ+WNk+2I78
U5kA6q1G4zt0KZ6VC2A37YfPJ0XqR6kQ4O7VS9Z/2uj9qyoB9u77p59wg/xP
tQBfald9W2ZE/qBGgITFH85gG9OfJcD8zQmrJFco/j0RgH3k2M3rRwjfNAiw
sXi6ZWAW+e9XApx8weMeNCL9bxKg+FHX/NLB1H/ZLJX3yAbNwDkUr1sF4G0d
7dz3lrF/Af75X9inokH5bZcAwZ0ZY08FEz96BNg04cHACXnMfZ8AFmIuK+Mc
3d/0S/Ulwefsug6m/ysb00+F7bYfTvySzUa1w/IL3Xcpn5DLhn5sW7ylEumP
Qjb6ttusue/CvC+ejTEbcxUqeXRfOSYbapNDm+0zqd9BJRvKfVuG6fpRfUgt
G+FvbsZaNjDf+8nGy8dnv391p3x6WjYGzMtZm8e836KVjcO3b2uPHEf9zdrZ
OL28av0kbVpfJxt3HNuX+f4hfutlw+5bRfHA5eSvDbLhtXroiGcVhOeMsjH8
XMIGKyvSZ2RjYO031bnRZG+m2bAeoXUrx5vkZZ6N+PujE3S9KT5ZZaOzf2ao
mEv8s85G3fGJ136oEr9ts7FmQfN/hsz3Ke2zsUipcJSZB+ERh2z0ujyJ/pVH
9QenbCRtyDueYUL1SNdsPGQndP9UJv/hkQ1Zu9sW9UK6T9kllcfggmTjdRQ/
WdlQMpSd+24K4bGAbHSc0L9orsHcd2fDW3boX/VmqhdEZOOi8rTlrqOY/D8b
gq6Nx03rqH8/PhuqNefqQ49S/sfJhsPo1PFLmHibJh1rj7V0WsXUx7MxpLm1
elQ+1dcE2ZgtapljdJj8szgbHsVTF+cOo/PnZkN3bCz/xk0m/mfDNt3ofMdw
uu8syEZVUWhx+0H6HmihVN8W4212BoP/s1FgormhMpviT1E28tM/YIkS+euS
bDzfmXVS04h+X5aNrS9fD3K5QOcpzwb78+95wuvk7yqyIRG5BL6bTPOrsjFL
saYuZyLxrzobzxLqp4QoU7ytyYZ/m9EQ81HU71ibjZ2CkgKnXtKfJ9mYl3cj
8Uk806+VjUmHTOasryV88iobX76EsZ2Z/ommbKz6UbHPopP6V5ql9nJ86xeH
a8z7HNlQnLvQq475nmdHNloPbomdlEPxrSsbLasm7u35RfGyJxvHNi5We1Nh
T/Yv5f+E+5xiJSb/z0aFhbqR2IP0RUaIU6ucM1q3kf3ICrFfk5t6R4birZwQ
S0Y2tyy4T/qoIISWdsrI9bHM+yFCDG4OWFO6kfgzRoh7T8aNqymi+xcVIdjT
plY+vEnrq0l//60kJonpF1IX4rh/uOGOPLLHaUJc03Vhzf5B8tISIi4lpevw
cZKXthCxPjGsXD2ybx0helqM5Hg3yJ70hJjrty9vfDHlZwZCOHJ54TemM/V/
IWJeOM4zc6D7CgjRpDOgajrz/TRTIexXf3XOMiT7MBfi87rPi603Mfm/EJXq
I0ZYfCD9shZiy7knL79lEn9shRi5+esFyyVEr70QciP7aldfoHzZQQheUv/d
nVbM91GEaNBzPzqvg77n6yqE27odYw/yCX95CFFQMkqzM4DW3yXE4pVCfvQw
8k8sIX7lz9HXH0PyDxDCZJ9LiUSW+BUiRJpDlmb3E+JPhBAbG3+wMpnvXbGF
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
SSoJSSpKcu73CxUlVEiopJIkCUkl+UoqIan07vf5rflzP/uc2TPr8lmXWbPm
ZdjIOXyOzAZDxuu5jrGYr4zOhuCC6e/88lE/Y7Nhz4zfPys0EN+PZUOMxseg
QgbiU0I2bMjm/hu2QPlPzobXe2l+ldORX6nZcKv7YrS1Psa356j5zh+sPF+H
5zUuZENs9rFI+U7M12Zlg07P3/ICL8QnejaYrt+9Iit9Dup/NlzTGGcsexrz
2/xs4PjRbJyGST+dbHAa3Sh36SrSMzcbUg2GQsZ7Ix7lZUPItKVnPUMwf1KQ
DZ6ua0dF3cD4q5ii92U/1Xzi35Vkg7vnS8PelZi/K8+G2uPPZ/QUI75XZYP6
sysHXyqjP1JNzS/j8dPFHxCPnmTD2xM69BMb0J+so76XKlB+dwv9v4Zs0I7V
dOiloT1pyoZX5m6N+WS81myYtceypa2axP/ZcOZLw4tf9UjPjmxoeWDhVMLG
9XdlgyXrRbmOKeZveih9Cd70a7cd8f+zweCp52zbdsy/9lP64GF7fjkL98OH
sqFQ3vGo6QzEkz/ZkDhSxijZR+6XooF6MqvxRDji6WgafD318HvefXw/hgZJ
m1adNlmI/FSmwaEvpcIYNbTXajTYdcXD7NN2xCN1GjhqHjosmY3xvgYN7jEM
jmktw/1NLRoYGX1/y6nEfIsuDerS//bsfIr81adBbK9Zu/EXlGdDGpREpGRp
pSO+mdBgknq4QmMF6pM5DRS7DJlK2zG/b0GDtZ80u+OsSP0PDSxE3lZ2U5A+
1jTYsq7DdR3ZbwMazD0w91fhQrRP9jTQK5azuUT6DzjS4KCby5M1NSg/LjQQ
rXEe7JqF8b47DWbcuOlTlYX440mDOcG79O6/x3jBhwYXlp9x+08e9dGPBjpX
y+dlxJD+0DQIy9hlcPkzyk8wDZjfPbvFTNyPCqXBpfZdlx2ckB7hNPC8uwGc
l6F/FUGDT8x3pm4duJ5IGixccjlJ4QmuJ5oGP3+/rFdLJft/FL1+ti1eYkLO
v9LgSnNw6JQijM8TaLB5K+3KvRTE62QauAYvGUg7jXiVSoOjxscnxLWi/3OO
Bq+KcuX+jSfxPw1C06p+bfhO/H8a/FI4ZW84D+dHp8GK5cJtCXtJ/ySKH/2W
iweXIh7zaeDAeHdNuZfoPw1O6iobPyxC/cilxi/+k3CviuT/aJAxMOHkQRXU
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
98L/+ORm5E8jRa+R+kVyp9H+NXFgxr2e+/tJPVgzB3KztrwvJedfWjnQdHHA
N3Uj1o+0UfI14eYmwwkoX+0ckI1g2IQXYjz/ngMPyr351Z+wvqWDA2d2lN+d
RfohdVLjnUn3Xr+S9Fum7MPzTbX16ugvdVP0N+K/CniB8tBD4XXDcV2JIcpD
L/X9dqGiogzGf98oeQv2eDg7FP3bPg5szkg3Lx+N+tDPgchXclWdmcjfQQ4M
tHyUv8BB/2WIAx+7U20v0ZG/wxxo/VFap5NL6v2o9fxuG9tI/IMRSh6VHZ6/
fEnuP+XCpb9pBzJ00b+U5YLCZFo4S4j0Gc2FLV8N/MaYYrygwIXmOzfThScQ
H8Zw4XnQqK6kQOTnWC7ErZ894+VS5JcyF3bfXNNa8h71RZULE1r/lohVUZ/U
uKDuIJ7mbIn0msiFeF/P6Cuf0V6qc0HDsLwqfjPOfwoXIib8MNcl+WkNavxd
U/6NkUF81ORCVN/axekNiAdaXPB/eT57lQXilzYX1v34E3uc1JPocsHmyg77
E0Te9LjQEl5qNzsd4zV9LhwcW7lqfw7K82wuTD7zwnBwEs7fkAvz1BImqSqi
/hhR4zkedZbJw/yOCUXfroL8ZY24f2zGBa1NU3O+Asq7ORcunvjXqknOty7g
wheVkpEBPfTXLbiQZ7Znm8wtrL+25MLOsTMD7ztgv9klXDj95Nu1pz8m/u/Z
igvffX8dSSHnW6y5sE8+x7auGP1VGy6oHpQIIp6i/QAunBqtRlv9BPXDjguR
KuVj29bi+RN7ih7TI1U2TkZ5WM2FDU/D+/MjEB8dubAs0Im2wxXxyIkLoTpr
o49EoL/hQsmH6rrOIG309125oOhend+uQfp7c2HAS361nAXaQw8utHfOdDn1
HuXRk/reB1WX+Uo4nhcXfh14foBD8ms+XPgQbTOgcATxyZcL/DXOE5SUMD/g
xwWgpWQvdzT/33MA9b1GoC/cRvpHc+H25/DyukvobwZx4dE684fpAWiPg6nn
2hkWIxvQnoRQ379/5de2re3/ew7lwvbttjpeeXg/VBg1fnUKM+cb0jecCxlJ
rtrjcjHfsJuSv6OpG24moT2O4MK3Wa6+bhkov/u48M+o+Z0R6ccWyYXxEw9l
sP1R/qK44GS6ZXpdHe4fRlPyVOesvUmN2H/q+89LFuVcRfsRy4WPhzI+XN6H
+hNH8ff8FJXVk8j5by4YJPgvdCfngeMp+Z3/ccGYBMSrBC6ckf86u8gL9T+R
Cy4i7SG2LOmXTa2/b60/1xfjmRQuWNwQh/56iv51Khf02Z/13nai/KVx4dax
+RuuDOD6z3HB42TdXR0R8jOdC45XZBbc/Iv+9AUurF4emq5ait/P5MI1H/uN
laQ/ZRYXZOr3aHUlo7+ZzYXDrp2nXcj9IXQuvDx75xXzDcoPkwutlo4LW46j
/8Gm6N+tZlhH+j9xuWD/ekXUMpJv4nMhx/mCSdVRfBZyoT7Ey2jib8wHiyn9
OvOjdMNajE+kFH3LXq42c8PxcrmgM26h006yX36VwqdRG7oiDyC+5XFBef4s
rekPEE+vcyF8c73RxUu4v13AhdkHrnRcu4h4XkjJz8TYsPgYtDfFXOjblP1V
/Bfjidtc2GHguuKACtqDEi7sfbS3I6EO/eEySh458jG/o5A+5VwYcv/8IEOC
/nEFF1TKMvTknRB/qij9zX3I+5WI4z+g3t+eKPYMIefjuXBcqHm3/xiuv4YL
R7Y4Z+2TJ/XyXHDbm0Ur4CH9arlQMflWyeH/0P7UUfo79vspeSniSz0XzHLf
xGtOQ3ls4MLJsQs+x5ggPjdywX3b2JHSjWifmyh+L+tn78nE8Zq5sHju768O
5D7cVkr+7hqXjVPH/EQbF0Q7THIvkn707VyYtODLhuekX+97LhSenLi8ayPy
o4MLtoam4sLXKH+dXFi09lXaGXKer4vSP4MJKeWkP103xY//+jXbG0m9Dhc6
03M7V+9A/e7lwpImG4utC8j9LBTeBSUl7S9EvOmj1uvTJHMxGuWjnwtj/1bc
O2KO+dpBLvQHuk7VCSb3+VB4fqXhn3AHzneYC7GHNTd/n4v694fCqx2nKkON
ET9GKP6kVItkeKT/Dw/iTNiP13xA+snygFkPGkPhqK+jeVB95E529im0pwo8
8Cp223JkJfJjDA8WPvkyl2GG8c1YHnxgjRi3b0Z6K/Ngftf0KNsPaN9UeTD7
ULH9WX2S/+fBoY44ryYb9B8m8kD9nYFJ2jTMl6vzwOSge1eKIdJzCg/2PdRU
NPck9xHzIFlnYIX6G8RzTR4sKBjJXj0F/Sct6v9uyU/fvkR91+aBj2omJF7A
80C6PLge5uy50pHYfx407g823WCM9NHnwS230LFzc9AfmM2DjBuPFc41o7wY
8mDGiwOzdFYgfYx44Lj+RvB7S4w3THjwp7h1sVYhyr8ZD3j/2Y4tEqG9NOdB
wEHzg0ceYD51AQ84LZstczcjPltQ4/0K3XVtL+KrJQ+OfFgp/ZKL9FnCA0nL
lNQ6Uh9txQOzR7XVHeS+TGse7H5Uv+9hJH7PhgdfrDYvEz3G/DPwwGbi0Zt7
rqG+2vGgVlnnZtZ5tKf2PDBSrMzstsD1r+ZBzpEbCs1XyH2NPIBLRf7vDuF8
nXjQqZGq5Zu09n/PLjxI356ee/Q/5L8rDxbvf+3dswrp586DBv1p8V6kf70H
D1buYl37Wo/88aT4dS+nojYb8yNePOhpYskefo7y5kPJj+maIe/lcv979uXB
QPh8P+OP6J/58cCTCoUH9THfEMCDK8uP8xakIb8CeaDQvu7A4zQcP4gHGvm2
PcESUo/Jg8L0G5LohRgvhfDAirV/TuY+x/89h/JgareO0RddxNswHvyYYNY6
5hPp18CDvnOaWx/UIV7tpubnLj6g6I36FsGD3g+6Z66FIr/28aD0gvG6mRdJ
Pxce/PtF0xh8ivyN4sGnHbdWCnsRb6N58PLDyg/HjNEexPDgv40G9gafsd49
lgdbrPfEmjQjf+J44L0vTE4vAN8f48ElpcMT/5H4Mp4Hk+Y17/j9G+OTBB58
Yx41nxeI+pbIA72QERkdcn9FMg/yltSxUm6ivqTwYGJ3W/SOHeiPpFL6yWD7
VP9EPEvjwZp6WnmKNblfkweuQz0WQdao/+mUvj47r+MajPbqAg/kNlkuHr8P
+ZFJ0c/y0bHF8/G8exYl/6FHJYtHY3+GbB64Pdp2e7I/if8p+X8B4u79uB/P
5MGsZdKFRT/1//fMpvQ7dRN84+D3uNR8k3OOnLRDvObzoKx1QthaOtYPCHkw
eeq4M2/ykX9iHjw7cyOdGY34L+WBpWt9TJmb0v+ec3mw3K9Dy0AN13uVB5ln
BtyXzUZ+5PHAvf2+4E4o0us6D2K/6DVMmUPOs/NgUeoiuRnz0H8o5EF2i/LD
zeQ8bjEP/Jd1sC1lUF5u82C03tesx4cwXizhgVKfkmLXY/S3ynjATUoN7bdE
/S3ngajNv9w+B+Wzggdi1dtZEw3IfjgP1FbdObNYFeOZBzwIVb+cumYyqY/j
gXx7BHN7A+JTDQ/oF6bl3nch9XI8MKX9XOB1B+dTy4NfzUvrpixG+1nHA4OK
LZO2WWF8U88DxvMwj0Q91M8GSr7LBuWfkvr4Rh6clm+NHpiJ+NXEg6c2wjjn
DLQPzTzYPPLQasVt9AdbedB21OfDwG6U7zYe3Il9muDqhHjWTsnbyeIBdjLK
83vqeWR7fyQP45EOHqxLyf8csgv53UnJi/qZQ/oPSX0OD/S3bZ1x9QbiezcP
1i5NCj2ki/5CDw8Eab4Zl06g/vZS84nPymQ8Rf/qGw9GeUsubiT5xz4eGN7/
uujmB9LPh9KPlLz2BmP8/SAP7q9dnBRTi/gyROH96dTOYHO0X8M8qJwW/O7g
GuTfHx5M9xfPtP979X/9XUd4cM67ySuF5ANG8UE36sPSRbvQ35flw5vxmvop
Mci/0Xxob3uQp1KM+WcFPkRkdG5ceJHcF8yHS1qGrM3JmA8aywfb8NOj3Dfi
epT5YHFixvwjq/D3qnz4krZi9gs+1luq8eFnzzGDFjPMV06k/q+R+benCPMB
6nyY+kS090cV7jdM4YPevVI5h5XkPho+LNV5+C7PCd9r8iG45IRnRy25b4AP
m+MyUlmkX6U2HzQ/8NRNgPQf48P66U8CRzoRX/T40BVzyPHvbIxP9fng8rct
86wY9XM2H14OfRp+GoT2xJAPv7PzwjYpoPwY8SHyVpl2OBflxYQPR39bro2w
RTwx44Nh0adRW+8tQ/vPh5b6ROshUn+1gA+ptzmnpsdj/GPBh4LvbwKWP0b8
teRDiq3GwMdkUt/IhzW/rx1+Y4r6Y8UHrZ/FoYYB6F9Z80F+3Vp/ly6Ufxs+
qC7OLRj+R+qf+HDCa1LgDXu0l3Z8ULwRcP3XSrTH9nzoGbHqHzqH+bHVfHBg
QadBM8qHIx9W56y8f/0d0tOJD++rtBQ+XUb/x4UPhbIHF6++gvWxrnxIlPwY
N/IT4w13Ppiqr4o1dcZ8hgcfVqhmzpxWgvrsyQevbYYL5p9B/PTiw+WXr/42
nCX11XwIyHxjTmNifsGXks+OADWfKZjf9uPDWt0dc7gOyJ8APryY78zXtMbz
IoF8ON+1+EPwZFxPEB966x6NUTLC9QZT8vbpScHkZhw/hOLPezl5xdukPyNF
3++6Jy8Xob6G8cEnd/Lu5suI3+F88L/L3/NuAvJrNx9u5MjHvJuEeBHBB+ay
SfX+0SjP+/jQtuu8cLcq4l0kJd+rLpntIPFmFB/y6r59YMihfkfzYdL4VRaZ
q9H/iOFDp/rAvxKST4il+P078cTRAtTfOD5kpN+dOf8e5ueO8WHh8O63CgnT
0P5T8sOQXbvJD/UvgaK/dKLXMB31I5F6Hz7pwKuLaF+T+bDvcLNhrR/mW1P4
IHCs1H4oRPqk8uGO54Fg4TQ8D5HGh68DWxbey0f9P/f/4/ksCCX1iel8iE6s
CrvXhvs5F/iw7OsKhWoHtB+ZfFhw5qj92qW4P5tF6cNXc2+5cYh/2XwIMvq0
7i6xj3SKn94n4k01cD5MPpQ7XtPOc0b9ZVP4JBHZTWpC+83lQ9bEGY6Npegf
8fnw/LNWjPI83B8U8sHXKyBcv5D0p+PDr4hR1RU9iF9SPoy/olvk9Rj9iVw+
VBx0ezQUj/pxlZJfzueNR4/i//P48One3UDrClzfdT7EKx03M5mJ+YoCPqTd
CX+rEY31ToV8cL9V6LvmKOYHivlg/+T5LfkJGP/d5kPo0e6aRAnev13Ch42X
dlXsPoHxYhlFzwC/W7wJqO/llLwuFKy7H4f8rODDBqfXf4b34Xqr+FCil3R7
njrS6wEfZL4HljxoQTyv5sPF989mNH/D/E0NH0Z/lrLth/D9Ez409F58GTEJ
5a+WD+v2pZgULkT61FH4GXLd34HEi/V88D5wUXpfBetrGviwOyXsPv8XxgON
fIg6VvG55C3iexMfZk4Tx7d5YP1IMx9MLsnInKtEerTyYcbemrQ5XxBv2/gQ
djVrb1cG6lc7ZS/mVapsTvJF+089p++SVpQjvTv48F/SrrXmh1G/Oil9KupU
5Veife+i8NzsmVib3HfcTdHXfplVwS6Mt3sofsQMvuhNQ3+vlw8r5X7wJz4g
/fv5UK140SrJBvG2j5Ln7pdlf2fi9/qp8ZqU/6lpIX4P8kEc7tNtsQ3xbIgP
/04uUVyegfUfw3xIXrNQd04Y5gv+8OFdWeCk8CbMB45Q38ucMc7nLun/JYA5
bwJ0ok6R/X8BKGtM+riIjf7BaAGMOtc1S3s96pOCAPZ4bzyxcAzi+xgBZJ2Z
e2oT6X81VgCaT3+Z0Ei/AmUBRMeebZWWonyrCiClfe8MV03ELzUBXK9sPHmJ
nJecKADdrZyOgkzEL3UBMG3Sdv0MRP2eIoDe4DW3f5oh/TUEMLdjZuGhOXi+
S1MAksnL5YeD0D/TEsCss+tX6b/G+WgLYBK4vTpH4i9dASwqzA1tPYb2Xk8A
Oaomr+VXozzqC2DCA2bL1Tjk12wBeC+4aJs3De2RoQDacmq6N4jQXhgJoP5z
m96uSPTHTQRw3uH6no2kn52ZAL61vlGzn4r+hLkANnt+Whi+Ade3QADGvprK
YwpRXywEIL9QxMswR3m1FED/wYyTJz9jv7IlAvi1b8fiMaT+00oARhaKpS3k
Pm9ril7tVrvKO1GfbQQwMGFO8owvpP+BAIbr3HcNhaG9tRPAd50LcvRbqJ/2
Asr/WBm0gfhLq6n1vw55zMxF++EogLiOtKsLelHenQTQ7hYyd3I+6ZcqgErj
3KNHvLHfrqsAKk6s8n1Kziu5CyDAevvVwdsk/heAtc7ZwhwjlEdPATgsj/xj
8hb3p70EcNw+Y5Xbd/T3fASQEBvcb9SL6/el5PN16dnWH2i//Ch6hcWnyG7B
eCNAANon/y0StqH/ECiAzoujLQYWIB4GUd/vGli+dBDzrcECUBOk79+TjfQO
oejjmcI66EvumxSAiZHlKIs+rC8LE0Bt4revvW8w3gwXwJr3q281v0N7slsA
4S5fRh8uwvxchAC2KtYePE/ur9wngFU7OvY7kvggUgDOxjebb/7GeqIoAciO
09m38wv6N9EC2KkpXGH8G+U9RgAPD9A3Wx5G/Y0VwMnBoD3W4fi9OAGozPh6
ye4uuf+c0h/a+E8vjZHe8QLw7ZX33heO8U8CpZ9/bz7q+4z+c6IA0p6u9B8y
Jf2hBPCn+jxN0RD1P4XCk71LHT+sR/xOFQBH9GBmvwficZoAWJdv3J5ihvJ5
TgBeqpOWGZPz1OkCoG079di0hvSTovTFLDPryCXEm0wBWF1v7PF5hP5wlgDK
PN9+YfnierMFcO/rjSdLSzH+oAsg6NaiR6YzUN6ZAjg8GP1hczmpPxeA5Zx5
TK85yH+uABb0H3/wiEXif0p+Ps8qG6nG/IJQAFGvj7y8eRm/LxbArqam2WG6
mH+RCmByxIQZUeHo7+YKQKdW6VGTGr6/SsnzfkOHe+R+2jwBvNIZ8+TLCpzv
dQFcrNtc3kL6dRUIQPHyMZ5bOsp/oQCENrS8pYvJ/VYCMNsdcVc4C/H8NqXP
awzD31xHf6xEAIK+Q92D5LxKGYXnrh8dHjYhv8sFoLFr8ydOLn6vQgBSdU3v
Ne2Y76ii8PiMEy86EPupPBDAvF3Tj/NSUN+rBeA0OiJwng6p/xOArUKq2jyy
//1EAOOvLto2mYvj1wpg3KzOVE9tfK6jvv9CZ7ucPfrP9RR/OwTP+4zRnjYI
QOu0Y3LXXaR3owB4lzRE/M+YL2qi+GPw+meFHObjmgWwXOfkF60JiL+tAmgq
3fdpxWRS/0fZk002F+gC5H87hfc/Lm1siUD/+j2lXy/2GA3tQH50CCD7lGSp
/A/kX6cAeuJ+GXhrYjzQRckPX/7XHVnst9EtgN9Rj9XlNcl5fQHszQvbeyEN
x+sVwLlN4QYeGaR/pwBCDz12E37HfGafAPxv++m4/0P87BfAtBV/Dv23Hscb
FEBu+ObSj7Ko/0PU94xm3vsyCuk1LIAzjxe67tiJ+PaHwqPaDH/JcfzeCCUP
laY7FO+Q+/+EMHnf2/Z/a7Afh6wQ1tiUbdjxHfFitBBSX4zb+LMH7bOCEJaO
bBRJ+4j9F4LktqHy6VJS/y+EedtkOQ3ppF+4EApPLC4ZTkd5URXCmDruiD8f
/Uk1Iez7NW5gDKkHmSgE23cJwzqkfk5dCDGOEX4jaxE/pgihVU2lRnklyouG
EP4af9mv+BH/rykExc9z3bfIkn4DQvh03f4maxHaM20hXKT3ZsxcS+4fEsKo
KWct8jdgfktPCDd2TxlIjTZF+099T7/1leJe1K/ZQihRbR8t/IDrNxTC2y01
x6Zx0D4aCeGB72TV1svor5kIYe9iZmvkaqwvNhPC/n9h/BkpaI/NhTBO0DaY
vBfrJRdQ9DJY3bSnjdxnJoQclvVpi0ysP7EUgkeK1dv8HTj/JUK4tn9l4uOF
aC+shNDYPN9uwkLkh7UQMpv2jOJEk/1/IbTPP/jjYg3qPwjhQhzravoexBc7
Ifj3fXt7LQXza/ZCuHnr4QeGAuabVwvhZXX47ozr5L5mIYjnC+ayyP3WTkIw
ypBWzhMj3rgIIdnv6s6zdeh/ugqhb02P9Oss9P/chTAybzDgPBfl1UMI/zX9
2F/zhZynEsLWv83Rr/iId15CaEuNp5uroX/rI4TnkW+XqL/B+mtf6v/pffER
7aTfihDG/lgXM+Yj2pMAIfgGzY2srsF+bYFCuGqxvJz3DOkfJIQ0v0Qd32c4
32AhKGiXTd+zyhXtvxCGV5gfXVKN/nmoEDbGZnx5MQftY5gQPLd+me1ahPwJ
F0Lt8bmvd7/A+GO3EE6Mryj7MYz5gAghuN8sSbfagv7XPiFEX3KYQCf1fpFC
2HFawyCJj/gaRX1P7Y5BpxeuJ1oIdrsuav93Es87xAjhkk34w3BSbxUrhNzj
CY2d5Whv44RQ6luu+3050v+YENRmTLj+xwblJ14I+WY7S/+uxN8nCEGot+mO
Qwmp/6PkU+5NnfwYcj5MCB/ON8uJgpB+KUJwCDioYvyR9IsRQmItM7WX+Dtp
lP4Ep5+Y1Ynyd46Sj+FFXp/bEc/ShRApN33O8iOYD7gghCv3Mg9+GoPxaaYQ
lme0d8eoIJ5nCeGp8MLN8n2YD8gWQvEJg5t3V+P4dCGcX7emzSEKx2MKYSij
1MuH3KfGpua3NSLFOBD1jSuEI0MT6of+YjzPF8It+VEXVm5Deyak5HEuM854
Osq7mMK/aaWrWpsxfyMVQnpcyZMx19Fe5QpBqfygiXIY5jOuCqHh6eL6P+8x
fsij8G35Z7ns+Zj/ui4EHSe34y0NiJcFQlgfvKW0SA/PnxYKQfncZdlve3E9
xULYHit+/e0VysttIWxQ0gw8MIz6WiIE+ef38pV/ID6WCWFtx1Qlj0Zy/7AQ
jFty/K1fkf1/IUz1g9ceM8n+PyWfSyLLil0Rrx4IgdP2oXCCM+mPJwTXyKoS
iR3Ot4Zab8ddhZb1WJ/yREj5+8U6CqSfX60Qgo/9TDLtx+/VCaFo/IrAgelo
D+opfG5ZyeUZ4PgNFD6+nL3jNwPr+RuFoOWpv/p3J7lfi8KDI4zTTpWIt80U
P8YFnxnzB9fbStmv97tnqYRjfNZG6XeEww/RP/x9uxD2rNUpriD5s/dC6DKu
/rJlPL7voOzh+tI9NRoYP3QK4VTs5Wj1BeR+Hko//3sW+9QG4+NuCp9D64bl
yP15PULYktr4+9BC1P9eIWyb4zs/dB/q/zdK39YEft8mwXxJH/W9RRa+j+aT
fh6UfDqGOFw6gv7pIGUvz7Zyn51DfR+i8O5ZiLCxCPk9TOGrzI4TDx7i/P4I
4bCddt8Usp81Qo0XbOrZNgX3z0aJYCh2m/eu9zh/WRGstOnyV96J+j5aBFPH
7Y0dtkI8VBDB7cZxcmqOGJ+OEYFqT9iRtdmWaP9F4PNV/coxRXJfqAheS/Jt
mQ3ob6iK4GPbqayqWRg/qInAQu5u36JHaC8mimCJteXvuv9IPxERZS9u1t7j
IV5NEYGVyFK2itxPpyECpnKubo85xn+aIvC/mP/DdAfio5YInMbI6o1XJPX/
IlAq0qy/44n2TlcEl4dL/30l/Q/1RODAr4mZTvqr6Yvg14Wur2cmoDzMFsHI
HC/GxTeor4YiGDc7YNVT0i/QiPr9FF19jzr0V0xEMBh8LreLj3hhJoJjWjH+
yR7oD5qLIC1+xW0DY9xvXSCCByrqu2zXYD8NCxH8YDk0jSX8sRSB8E3U+oCX
iLdLROBds9XQ5x7aOysRRJTtXTxPE9dnLYLpd1QVDyohPtqIIHluQaZpLbn/
UASVLZTzNB3jNzsRbP139YVqPOKTvQj+/FcjeCtE+VwtgsW2629VyuP/HUUw
aX3zf0PkPlQnaj2VtZw37ugfu1DrWT4QV5eJ5+FdRbB8LN3oGLmfwF0ELPHi
GzPmIx55iCCX17isaAnmaz1FsMd5xniXQIyPvUSgeKap7EA/rt+HGr/p3ift
IsQfXxGY7s2bLuIjff1EsCK4wHTCScyPBYhA/rr+w9//UD4CRbC5funyFTfQ
fw4SQe+Rb7olF5HewSIYPy/xqvkPzDeFiKA9gb/6OennHyqC2EsPU04kY74g
TARfypcezSH5rXARtAzMEnFWoD7tFsHE51mbNxD8jKDmP/Z5reQAjrdPBKVl
1TH33Veg/af0YaGJ3VhV5F+UCPZ/vHJI9xrm/6Ip+snX+28Zi/gaI4JnHF7t
6aPo78dS+po880yEEsabcSIoO59suWoR4s8xEcyJCuWWGmO8Fy8C9rwpU5u/
o/4miODVM/dO+iS0B4mUPM+7G7txCa4vWQTv6ue7jzSS838icFlu+NLgJPoP
qSKwm1uQX2yK8VWaCA78GpPVtAX5dY7S52efY8fUY7yaTuHH0kcBWYeR/xco
/uhP/Bl+GfE5k9IHu2oP+93E/otgVE38nRW3SP0/pe86H10H6zD+oIvgyIPv
V65EobwyRbDagFl+Zwr2j2eLQIZ/yPrUJFwPVwSyDdUckTquny+C4keGKRfo
2C9MKIL/jn7tPPEX5U8sAs2AqIqFHmT/XwTre6vfPYvB8XJFkGNlrN5J6qWv
UvSrqHm26yHGI3kikNqGHMw+ifhyXQQDw1UyMpNQHgtEcGVadH+GOdn/p/A2
ob1gaD3ah2IRZEePXFnUjvS5LYIFsfXTWY7IjxIRXE2QZwzUY/6pjKL/DOcJ
bk44v3IRtJ10Mvw9Ce1HBUWvHtdB0xC0d1UiMI4zL/dZht9/IILW784bHAZR
P6pFoFt2rEblH+JfDYUXaxlyxaQe5okIxLYp6XNM0R7XiuB37tbzbXPJ/Zki
sD7e47QxBNdTT/F3+3aFsKf4+wZKHi4nT7/ijPvLjSJYE5ahw2oj+//Us6aD
yvRY5H8zJa82lXKdvxDvWyl8svVLtb+I9quNwuvPDVeHPEj/fRE8bLC4GbaV
nP+j9GdV+4I1qShfHSKYl7bXQjkM9086KfullfG4ZDT6+10iuDZnNztoDspv
twjeJA3+KSX+XQ+F1/NsR47kIL17RVDTyDEqM0H79o2iV4nNKQUlf7T/IijM
NLT885jc5ysC3gb2goVdKD+DFH8dC/QvTkX5GRKB38WhgJumuN5hEZz8oH5r
eyOJ/0UQFOI1Z9t2jJdHRPBhcEN07SLMz40SQ7KZOL9jHIn/xRDb53TQQAb3
R0eLYf+OwhCPfvy+ghjG9t3LeTAf45ExYqA1PImwGIvyNVYM64v+/dbdg/ZO
WQxHNV2duFMRb1TFkKPWPXYHl+z/i4G9e6bDTNL/YaIYyr57Lp4zB+mnLgaf
QbddZkVYPzFFDIrhAZ77m/B7GmKYbvU067QR1k9qiiFKJyjP7RP681piCGws
VJGMI/G/GFQuPLM7lIX14Lpi+K+k70ZlMdojPTH0Wedyutmk/k8M3tY7Bjz3
Y/wxWwx1y2oMjBKQn4ZiMPo0/c+fu7g/ZSQGR5q86TcpOf8vhqEH9i9L36F/
YiYGt8uTl357jPJuLobLMbff51xFei4Qw8UTd+zOk/s3LcRg8txX4Qy5r9VS
DB9yzig7cXE9S6j52CW3v0tEf8yKWi9reND9FsqvtRhWsVuq3xXi/oGNGEZH
FanlfkH8AjEUrrpzZNN21Hc7MXCKAk6v4WN8ZC8GpcMn2+yuojyuFkPGKrsJ
+t5oTxzFcFVirW9bgvjlJIZfdUeqR98l/ZLE4CxrG95+F+2Tqxju5wRM1yb9
Z92p9fTk3074hPrrIYa/+rMjAqvwe55isHbOnhj0EevtvcTQdM25/msy2hcf
MWhvWZOQ74Lj+VLyd8GhJpbcd+hH8ePXOf7uLqRHAMXfczOnG+3E+CNQDMfl
PPQmdeL3gsTwUqbc99Qpch+jGD5vs60cnIf2NIRa79rBpJPuGE+EisHQYFb6
Ez7alzAxHErzPqadjvISLobw3J0T+xzQ/91N8f9fSc7hqeT+JjGAxq5nPV2I
R/vE8IO5T/WhKfpPkWLoWLlFTzEf+RVFyferozniUag/0RT/fz98Ff8Fx4sR
g4dV4q+79cjvWDG4Ti153KuJ8VucGMbPpu9uScT3x8Qwe9GxvU3kfH48NX+n
7R38Hyh/CWLQEBRlec1H/iZS8zuS/2a3FdrvZDFoXeje8PMSqf8TwzzZA0en
DRD7L4aqkuIJpo7o76SJQTcl7sRjNezPck4Mz7Lyjs/Rx/fpYqho6rd+J4/7
LRfEUGo0evHXYlx/phgc4kde546gfGaJYVTl80+LhjHfkC2GkTAbxvM5KM90
MdipzMy3lkF9YYrhu/bc+3fqUX/ZYlDe/f5aUDLu33Cp/3emXNwih/rGF4Ow
NeDAfHlcr1AMm7wVvr30RvwUi+Fky6fdlzdifwypGOiXuIc/7ifn/6nxv/BL
/Oc4o/0XQ+NMjd6yubiePDH4VjKfG9bhfK+LQaYuXk+H1JcUUPiqvHLfWXOk
byHFP7ny5PeDiOfFYphYo3V8bCjmH26LIdqjRuHsDMSbEmq9/HMfI8n9mWVi
OB+wXOZxHvqT5RT/5/gkum7G+KdCDHNNF+W97kd9rBLDRsno6CQltCcPxHAq
R/Xk5wy0N9Vi2OXiL43uQ/2oEcMNiyNlRTak/o/Co2SxX+MF9P9rKXoG2lZe
W4HxfJ0YLoXOXLVoP9rXejFMbf6osCeO9NMSw9sv/p5LyHn0RjEc6J4a8HUu
xtdNYuihj8uVe4vy3SwG7qWlHupLUD5axfBAceUjzQrE4zYxyLva2NmEYDzT
LgadtWHu/PWYT3xP8f9R9Lo3fVgP0yGGN303o5aOw/E6KbzYOq7caRridZcY
Ti9uo3+ZhvzrFkM5/6vnbX+sv+gRw+Kg8x8MG9H/76Xwr0VaMETqY79R8sGP
m/7pG9Kzj9Kv6VZhi91Q3vrFkBQ86smccYi3g2JQV14fmXfCHu2/GF61vp58
gPjvw2KYX69xwXrfh//V+/0RQ3dHzJPWR4gvI2JQ3V6uH9+G+DVKAueODpjq
yOD3ZSXwt/JnUNYXUv8ngftOz7RixGT/XwK1pl2J35fjfsgYCbB9pid+mIb+
3FgJrPsnzlphSer/JQBTfod5miN/VCWwJOm7kr4m+hdqElBa7xj6vAD7PU6U
wIrSxG8+hxD/1KnnwrfO+05g/DFFArt/K3+AKrTvGhKoV5Nzz2hB/mhKoLi3
Zm6DLek3KIFhZ7qi4gj6Z9oSmGc0sH6WEY6nK4HJ18ep11ijPOhJ4Pbg2XGH
Asj5fwnwktalryD9vmdLQCGtI/DiCcQbQwm8suZ6dD1H/TCSQKKMw5Hny9Df
NJGAzdbN29o3IH3NJDB4tuez9XjEB3MJ5M16+LmzGPV3gQTc1r15+SgD61Es
JKB/7tn4s+H4PUsJfCt22ap9H+ONJRIYelLqbE7qu60kcFVh0YHpdWjfrCXQ
nrIvJLkR80c2Eph+nj1zKBTzLyCBNbJt5UfIfq+dBG7Mq1hkrY/6Zy+BjYJK
7cNfEC9XSyDW54vKgW3k/D9Fj9oWjg3pR+AkgQb706ZTr+N5TxcJ7PVedp7z
Fv0BVwlIXK6cfvEJ6esugf37a/6VLUO89ZBA99I7df5P0f56SkBNJHLJZiN+
e1H0CLdKrj6O6/eRwNoajQM3FyAe+ErA/9vXTNsuzG/5SSD77KbRY04hfwMk
kH/pVNeoJ5hvCaTo8yzqSNlm1I8gCawqKhpUMkX5CqbG/6/dX+4E0iNEAuvH
vHCuTUd6h0ogVPXAncQ4nE8YpS+n/wZIbJG/4RJIzpR1Mz6C/s9uCRzLNZpg
xEF/I0IC765oTF5wgOz/S6A6dvhirQr6D5ES8Mgf5XyhGP2HKAlIre4Ftclj
vW60BAz2nakv0sb9jxgJ/OjYcvpnA843VgI/H52a6qeB+ec4avxn/qYhdmiv
jkmgLzlp4Z8FyN94CdwrvObbZIbykSCBpPAW+y4HtAeJEljEbb4bOY30h5TA
Np1tlb/KMH+RIoFlJ+JOX3qO+adUSp6m0ddFfcd6tTQKH7S2vJryFPH/nATS
s5u7bvkhHqVLYPu1t7LTtiDeX5BAgtfj7J3fUX8yKfm+735593as786i+DFl
2bHtcoi/2RLwZtvIHQbkN5363tss7dwAUv8ngcBxhdn7uDhftgSMvjUwK9Ix
nuNKoHH7Fc2l90n/H+r9r2cN74S43yWUgOU2mQM598n5PwlY76wxWzAZ9UFK
6YOS0xH9e+hv5kqgn+u4U1SK+bmrEjBUjI8zXov+Th6l/xzrJRWqaH+uU/od
/sguNg3zDQUScG+Ssw52wXinUAKM5O8TTeTI/r8Erpzzjvc4g/uztyl94uS2
vHNAfSmRwNTH0dM+sRG/yiRwcJ76d6+zGC+US4D/16pRNwfzBRUSWOrhPWYw
HesdqqjvFx3MHbUY9eGBBCp3jmqQIfd7VktgTG2Q0a4cfF9D4WFc+EfWLLS3
TyRwPuPB/cWhKC+1Etj1d2CwqZf0z6XkX7XoOi0K8a+e+v0SG6vhDagPDRI4
u2uyvJkb6nejBP5E5pi1eJH+ehKIZG27fojEF80SOFAkkt1lgPjXKgHtjNxP
rbKYn26TQEC3g21PJeJRO4Vvmp+rrg9h/uK9BDSz7ovuOZF+nBKwWBTUUD8J
/dlOCTze+F92mhCfuySwZW+7scEmjP+6qfHubeusJPWMPZS8LtV9tfIB4m8v
Zf/iUpNuLyf9f6j/a/2t6xUiPfso+7N0q1a4EPW/n7If88z0o98iPQYl8Pn6
Heeao4iXQxJI+ZhbOzIe76cZlsAvmY8+bDvS71sCEf9Gv/lmg/sFIxKo4Vp9
bb2M+jlKCrOU9r3u90Z9lJXCU17uGskujL9HS0FG1cpRZhvSQ0EKEw7s/xd7
k+z/S+F5/cpVtBS0H2OlkJL4hfGmleT/pRBXK+N7rQjXpyqFBcnjxtffQnlT
k0KmJmv88maMLyZK4dHmcydGNqJ/rS6FqzT56UmppP+PFLKaAxb3Ev3VkMIP
HZoTkP70mlI4Nxx+VhhF7huVQq9w2sbJApyPthSc78S45H7AfLCuFGrnVZ7/
ugjXoycFIzv6+i8HkH76Umj6ky23JxDxdDY1v89BYbkifG8ohZmdwZuOnEB+
G1Hzi3zGO5uB+mUiBQcPfd5QBvLPTApbuKUehZa4f2BO/b5C8I/RjfK7QApL
Dp11+qSL8m4hhb/Jk+1eXkH/xVIK/+3J36VyGPFiiRR02z1mmDuhf2glhYdN
D8ct2Iu/t5bC+6OPbquS/W8bKQhWzMp/cAPnD1LI2KDCG85BfbWTwqvLCRI9
Ug9tL4VjGucm265H/FwtBYthhfG/vcj9SFIIcH68kH4U5clJCu8uW7O3ZmO+
xoVa/4ObAbEbMF5xlcL291knGVfwfk53KbRVTvnFKES895BC40u5+e2Z+H9P
KUz1ddKe8hb9Zy8pXJtT6emzktyvKIUNx2eefxaO4/tS3+uKPxgXhPP1k8Jj
HeXLa/VxPzdACnO2Z8ix48j9K1IIe7p5/EUXXG+QFF6WR6hsVcP4KFgK1qO2
OT6Zg3gVIoVvsw+3Je9HfA+VQjGvP83xI8n/S+GBjMOO5eNRv8OlIHRZYe3B
Jvl/KaxUeu6d1YT6FSGFXFOjlhu2mO/dJ4WJeir2ywIxvo+UQvBVs9xk4i9G
SUE6uuvNXhnUl2gpRC86pHqa7KfHUPwet/+r3ELS71kK899846/XQP88jqLf
V1+3lu3ovx+Tws9sv5G4FeiPxEsh+1Lnj3JnXF+CFD7t7pk3YSU5/yeFZS/V
zt2yQHuZTNHn8nU3bwnaixQpcM+/litehv5CqhSCisfdG0XqddOklL2/fK1+
JvLrHDW/QH+XfiWcbzqFD243fbQZiH8XpMB80FA8dQbGD5lS+LDkjtOfGqRv
lhSun2mfVTwB5T9bCvqszXv3zET9plP4NqtgRCcG8YJJya/yhd/G51B+2RS+
lF5TX+yA/iZXCmfK/U+9s0L940tBdWNGzt4i9PeEUtjsM0E65hi5n1oK677O
HDH1RvyQUvrq1HKtgtQf50rhwtnNk2tlUP+uSuEfRynhRxKuL08Kh8YvVf8y
gPS+LgVfpueaJdvJfRZS0JtYcOX6KVxPoRTU1nV2XrIn99tQ+rq9wqDNAflx
WwqXjV9kOxzB+K2Ekp9Pew9bK6E8lUmhuUCFdd+C3H8hBe/OyT2Flpgvq6D4
nfe3r3IQ51MlhW7jno07piD/H0jBkrU7Oygf5alaCtN/Gz1tOI72r0YKph9i
JxjdQ3/jiRSMDVxmNesiPtdKAfZf7zuQRs7/SWFw5dzYsyMY79ZT+DdNqzfj
B8pDgxRKlhWUWLxCfGmUQuH3ygbncxhfN1H4kK5z2ur/ePrueC7f7/9KUaGJ
EkkqZDQVoTpUirJKGoQoGSWRmYwSTRKVlBGyXuserwaFEhJJaUpGUhFpSWnw
uz7f97l/f96Pe13XGc/zPOda3H7orwieym2IyD2JePu6ABpuOzpfK8P5G83k
urb2378Gbv0fkT8TZzKNm5/bRvDVYK3+YCvqs53Y2zeZ2fwI/P57Ek8qPHvO
dmA9u4PYs2Ku8I8ktv9jAdgFnx474xnmE90FoDww+vLoBKyv9RD/2fvn74AN
2usX8jysCf77Dv//jfjLnqAr/b8Qr3oJPmv99ZxojvGlj+hjdUdIyzacD/yr
AAKNC+qdmrF+/7sAVIyPgYcHzj/+S+T1waF9ymKU/wDBC2M5dSoR8X8ID+5P
NledNh3vD+PBga2TjqaWYr45nAd07Sh9WSX0B0kePB7qdN1Vcz3Gfx48tVOS
4E3C+d2jeWCl7D9uiRD1K8ODEcdDAlRZPN94DA9cl5YfOVWCeDWOB11bDldK
tqB9T+DBFpX2J7EU8m85HqQnZvW0GCGfV+CBKFBi5OwsjJeTefAgcoNeuyzq
YwoPHGxij033w/mYyjyosB17oHQtvq/Cg2PvjZIPWWJ8UOXBsE93TvcfQTxU
48GFpz+L7lujvc/kQd0yKWmfBciv1HkQ8lVTZVgm8llNHiyuLYwtNcD1J1o8
cHyr17j5FLf/Hw/uPpOPfFeC+D+HB2MWl/SOOoPyn8eDztB50/6cR/tcwIN2
g9T+7YPoX3o8UHz2JndaJcprMQ8O+XcFdqjhegcDHkw7lL7zdgDilyEPtnl1
aC3+uw/jPw9mCZYOiMuQ/y3jQdqGew8dEjDeAQ+EOh9zfozC9piS+9bmRm5L
EB9W8uDPrQ+DMjqYv5jxYKLPlnnXjyP+ruHB/j6rkrxWrNda8MCtM/WpRzpe
r+PBkDHJp64Uoj1Y8eD9hjZhiQTWd2x4YFAOL8O8sH6zngdKqm9TlAvQHu14
IHen7aesJ9ZD7HmgEz+C3T4c8WwzDzYItPhx1RgPt/Kgr+bLyn9miB+OPIgq
T8+7MRTx2okHJVkfXeflIf668GDR4VJ1n6/4visPSsPSC6cdxO/v4MHPQwt5
T5Oxfe48uPKjx+iMJsrPgwcW+V8XLa9E/XvxYOO2qDVelpgf7ubBvP7cmdsS
EA98eHBqhV2U3WHMz3x5MLhnQ69JO9qvHw/mvDlfzFuK+LWfB81al68sFmO8
CuRBdGf6s4Xc/tLBPDhj0lTnvhLnP4fywPN7nKsRNz8qjPjPtN8ZEnX4v3Ae
ZGc1hN89ifXCSB5IbTv98+NYbv9fHnwKe+htytVfo3mwUq7upvZm9I8YHox3
HXWc+oz56VHyv7zQay8asH58nAdrX0vEXuLs8SQP4FXvlxO/uPjPgwyed0FI
K65XPc2Dsrsh/KEjkV+dIfa97gQdNMidJ0fsZcGsSwu/Y354jgdv437S++IQ
L5J5ENH5L+/sTtR3Cg+qeevZZ6HcebPEn5I7jEwNMf6m8eDoJOrc929c/s+D
w7YdXheNEb8zyX2ZMOdFslgvyebBo2Pjx3Rw58Pn8GChe5PfR1+sV+fxICd2
cP77u+/+q7cW8IA9kkbP78L+8XmwM6X3+/0i7I+QBw+z7RVSZmD7KB7EbmWu
HeL2s2QIHpkYjS6ehPmdmAdaRmb5iT+wfnKNBz1Wx7bbcfOHbvBg9Py3k9f/
RvkWEXwZMWjhV4Tx5hbR7+23k3ZJoT2U8EBdU80zXxv59W0eSPgahUVfQr5Q
xoPZA3ce/ShBfyvnwb9L3TrSvfj9SvJ8X+DeBu580ioepHw/zwj9sP3VPHBe
21/Wsh7/94DYf2/Y9pptWG99SPDiH6w+2438/xEPvi21pJTV0R7reZBZNGfl
yeEYf58SPDO/c0EpBe3jOcGrMQfKnXlory95oFxWqqG+HfnrKx5cfJbT4Mut
V39N/C3pcpelFFf/54H0GZW7hh0Yb1t58OXuz0f0eMSbNh5cbpywfKE9+nc7
0Wf17keVC7nxfxK/HE5eXViK/tHBAzXLEwqzufk4H0m8fD3/+DEK+V83sZ9l
WbwRs7j4T/SVo/5wbD/Gty88CPTrKZ8bjPb5jcSXR8bTrrLId3vJdWVK3MT9
GM/7CF6uHJnxhDtP+RcPet9NV0jZj+trf/Ng7xbBsonc+QB/eWA7Q9LGmY/2
M0D81dBg8JQXtncIH8JDtt/obMP+DeMD73XAGNdQzH+G82Go8/6P72yRL0ny
oepF0LTATKw3juTD8dCvRqs3I76N5sOfN6qlLxdg/JLhg8bOkS0iF8T7MXxY
E7PZqOQg4sU4PhRI0YUuJ3F++gQ+eHg/NN7PjRfJ8WFjWrdCKrc/nQIfruVe
k1nmgPFtMh/WNigVb3zD7f/Hh+YEkWubM/JjZT6ce6WVuoTLN1T4IEO9Ndkk
jfVTVT7EnTc+V3cL9a/GB3bKcCcrF8zPZvKhb7afw6Ai8gV1PujKVxhdXIrP
a/Jhymq+fR03Xq/Fh0lh09trKOS/Onwwmp6vsL2d2/+fDzEPdt1PHYXxZh4f
5tDXjGRi0d8X8OGltM6tm49wfoseH95HfxZ05aL9LOZDsUvs/D3f8PxlAz4k
Ssds+M6tbzTkg/JEP/fc0xMx/vPhyperBxZGc/v/8sFyQpp6iCvGd+BDwqfF
6x/7orxM+aC9bPBpng4X//nwYK7R4ozN2F4zPvxaxgQclkM8W8OHMYcLtVqu
4vxuCz5M1j96dpk6vr+OD6OPa/1I+ozXVnz4V1P81nsl4q0NH6r7coMubsH+
reeD1Eelm59juPX/fLCvPXZbKQrrOfZ8MJRStR5ejPFwMx+evDZyMCnm8n/S
PnvVH3LW6H+OfBhea3si5hi3/w8fHH6llhoHceev8WFY64kHcn3oX67EXrcx
Q57aY7zfwYe0gF3mG20R39yJvr830+CB/u/BB+mI8pK79tz+/3ywbe3zVI9B
/rmbD2U9KxP8lqM9+fCBP0twZwIf8dOXD24LbVeoVOB4iR95/vZDl1auXrWf
D6cK66cUK3L7//Nh76rv6eFTcP5aMB+cn5XnvW9F/A7lg49ci9qoYFzPEsYH
l5Znny/ORnmHE/0/8C+/Pxr9N5IP35SWfV08Fevvh8jzPq9TV/rhdTQfXvik
GQVL4vyLGD7cGJZYceQC1sOPkvY9cG+IrsL87zgfnIpDapwA9XeSD/R9Z8vp
8cin4oi/tjwR5X7H8cvTfChUSd3CM0U8OsOHIdJ3xm/egvEiiQ9mumlu6le5
/X/4UMpTfrW+HPOxZD7EbnL/eoTjoyl8qOkPtTzZhfh/iQ9yiy4PTDVCPpLG
h9aYcyFbZbHeksGHi7IWGxbWoP9lEvm+Xqa2cBz2P5vYj+Oyrlh5HK/K4cPz
pOeuu/e6Y/znw4/LUg9y/mA8LuCDXtKPTTfkcbyUT+SlGGObn4r8X8iHQ7ft
X/sGIV5SfHj0RClZUw2fZ/jgKPVaNqQKx6fExF+eSXywj8Dnr/FBCUKlRqYi
nt7gQ+7OQsXvk9H/i/gQeSdVP+4H+sMtPmw4cSeXOYL5fQkfliU+/vz4HfrP
bT6ItbsFEfUYT8r4QBkla1Dv8PvlfMguG+lmcgX3K6gk8mdddJ/dQf1WEf/c
m/jh4An8fzUfAhJlP21M4/J/PiyevO3YUQdu/z/yv0J7L/UsPA/sER8qZq1w
dWvGemY9H4JeBeokZiHfeErw/+krV+U1GA+fk/6Wy3ffPoH52Us+jIrelTp4
C+PDKz7ccdViZ17n8n8+pI5e0tqczu3/x4ed8639z+9EftJK8CLOssRMBfOb
Nj58SJdcd3wixpd2Piheez1KQx357ns+3LfdIdrdhPykg+B9RP1APHe++0cS
bz53yydy56d382FsfZr+7jH4vx4SX+b4N49rQH/4wgdJdlu80gm8/saHY0tr
pqy/gvyzlw9P2XNeRVJY/+4j8jpa1mtYjd//Rfq/btqiDRLY/t8EP7O0ipPM
uf3/iT3rO81KH8T/D5DrBfL3J3Dnnw4RwNgpdff+MYjvwwRw1VVWNsIT6wvD
BaDZNu8xFY7ykxRA7HLlr3Xx3PmgAlheEd51gpvPMFoA4vYHx3RsEF9lBDBP
Pz/+ZTL66xgBgHPQ1N2vsb3jBHBxrGJPzUi0/wkCkMw5vvGlNbZfTgAVGjl7
c6S5+f8CsE50lc1vwvxqsgCMMnta94vQX6YIoOuvp9Kpw9z+PwJY+qWqztcL
8UZFANnN33UdhiG+qgpA6VhxQfE/xHs1AcRf/tLy8Sbqf6YARpgXz1Dj9gdX
F0D3QbrVV4OL/wJwiNAy3t7P7f8jgKyNs96ZS6E/6AhAcGD8rInuiC9zSPu0
VNPn3sZ6xDwB3Ff+1xffifa8QAC9jVObujXRX/UEMFzLzO7KaIw/iwWw4Naz
C5Fa3PnmAmgeqW56pAb5h6EA+gNX7NxwFvVhLAC7If/c+rswP1omgHvhmzeH
XufOPxbA8/jbF8y88L6pAJYUB+Uk/eHm/xP9T6yKThyL/MFMAJ46xzb27Of2
/xWAiXGs3oAZ8kcLATjHT3vuF4/2uU4ANQ/u/dTfifmnlQACjAr3q3Vh/cRG
AFX2D02CT6H/rhfA5JkWz1KyUH52AngRFpJm9AXzY3vyv60Ra+dYoz1uFkDt
jFGWj1jU51YBRFpPfBDIzX9yFIBsq0z4JK6e4iQAQ8uPw8IP4vMuArgm0umd
XYbtcxXAhgGJxje66A87BDD3uIr2zUG0Z3cB3NnZc8ZLlsv/BTDprGzNYy5/
9SLfd3E3/vAax4N3CyC/JLVb9Tnaj48AVnlr9QwKUF++Aqg/tXWXG7d/r58A
0uw2tPyWRP/YLwCpyhKNazH4v0ABaK08MORTOsaTYGIPXUcumAZi+0OJP2a7
HlDg6gdhxJ/17ndJ9CC+hgvg11zj/ZID3Pi/ACxu+soZ93D7/wsgcbYl1T7I
nf8jgFn7HD5fP8qt/xPAI5X2cNiM9nFUAMVXFlwvfIn9OS6A6X1N4VIB3Pw/
AawxdTsXfR7xJ04An67Ou27SjfWE08Te6lRmvTuJ+HCGyHO31/Du49z4vwAO
z6z5WbEYr88JIGreAj1rVRy/SRaAWcw5VaU+rAemCID/+Zd71iuMl5eI/9Fq
W6fMQ/9OI/5+lJfSr8jV/wUwmy/0t56F8TJTABqfVsd946E+sgWQ8Kf9+8sC
tNccop8dA68LeWhPecQfVu/OVOVx4/8CcDndVh+igv3hC8BtaP7B39HYfiHR
H63TzPqgv1MCyHweojtvDtozI4C7febSbdz5X2IBbGxw+1RThPXHawL4XiSb
ftYB/e8G0WcbL2iZNMaHIgEs0i2e+vsml/8LYNi2ezd21mG9q0QAH3RD5AMd
sV57WwDuk1OXjArC/KtMADcmhNEbW9Beyok/BI8OGGrFjf8LYH6q+b4Wa5xv
XUXih6G/6YY0zOerBXBoUeasS/bYngfE/twe/QpRQXx5KIDOmYfVxp7mxv8F
MErCU+/aN9RPvQAeexiZ+cqi/T8leLjkpu13D8T75wQPjJo3a87h4r8ASoZ5
5g4pQnm8EsAzi7AdX0JxPelrEl/ypA98+4t8pFkA7YW/SwKKuPq/AMbvW295
KAX5eBuxt2LdSwa9aN/txJ4uiBWiuP3l3wuAjT6WnHQX+V6HAFYorv5Twq3f
+SiA09vnXH7sifypm/R//ujlDWvRH3sE4BdQXZYZi+39QvQhs+DTweGYr3wT
QJPV0qd/efh8rwC0r+15tGUYxos+AWyaX3nr4hnUxy8SP8xPP77xF/HhtwCM
d3eqyXDnEfwVQJ79ZN2fGWhfAwLQr576U82UO/9HCLu2x3lUeOD3hwkh6EoA
nTsC8WS4EO4bicpevUV9SwpBo9zPxa0R/WekENKvlIHpINr3aCG4/J3QveIy
2o+MECZHmW1ZzK1XGyOEVVcTj0c8RfsYJwTZuhfH0+qxXjZBCMMOWHofMMR4
IieEsoxm/dQi9AcFITgED7q7neLiP7m/5k2F0BnlPUUI/itXPW8rxXxHWQjT
2RZKwxTzVRUh/LvtqeaYwe3/K4Tk14qitDTsr5oQ6k65X53I5VMzhdBZJh7z
iTtvTV0I33y6riYYcOeTCsGkpXPb61K8ryWEbfF9I2595fb/FYK545/ctloc
75kjhEUSbPXpJ2iP84QQt/yefZY+6mOBEGYbTTzbr4D8Wk8Ien/jFB8dR7xZ
TL6n9zzbYBvOnzQg/e8Per9SDecXGwpBbuu+n6ssufq/EDa4/5bzprnxfyFI
3S5NUHjL7f8vhEjnw1cl7mK8NBXC1RE3xy+Tx3x+pRCCl8vT38KQT5kJYdro
nhjDF1z+LwRDFV3Vr5YoLwsh2BzvffY6F/W7Tghf9u6tsozE/loJoWtDktU2
TcRnG6KPjZl/Y0Xc/D8h9B83+BiejPUSOyHkbK+2ljfHeGIvhCE5IbN/cuuv
NxP9rFLZ8jAb619bhWB6cKRMJFfPcBTC0PlO3wa1sL7oJISYg026si04PuEi
hEpTv8f1TqhPVyKPR8azkh5y57ET+evZO0u5YHvchWDhql9gbIvy9BCCmc5R
t1Pc+igvIWQtYo6r2uHzu4XwPce/bOwnxA8f8vzxM0EvzNA+fIVgOzS6xKgR
47GfEC6vy7xrNR/51n4hhDbqJYS2YvwMFIKBuW78Qz/u/B8hMP2dYX2xiK+h
Qji1mlnO7uHm/wkh92H0aMk1aJ/hxN5Vnx/YFoP6ixQC2PjSXoOIp4eEcPDm
pHlJy7H90UJQs/mrIMvNP4kRwprf36V0nRHvjgrhwlnb4V7ByG+OC0E/6PfE
+1uxvSeFsHJ1heBZPNpnnBCOZmptSb/OxX8h3Pjx9OTEVTi+eIbY8wabd4wD
4m8Sef/Coaupb/D8hHNCuBIWud7iJ3f+jxAoHbf6hZ5oDynEvr2X9m45i/K+
JISZnkd+/OvE6zQhzM3fdFRBBtubIYSpX06mPdbDekCmEFwb6oqCchFvsoXw
rujPHfNIHF/NIfjSu3jSg/HId/KEsFPH6nllP8qnQAjOYJTj28Kt/xfC6yL7
8+pWiL9Cop8p68KWGXDr/4XQNPCrJXQo2hsjhL3GPnMs/qL+xEI46Vhjly+J
+HFNCMWh34LeBWJ/bxD9lIxdZFuM+FckhMTvP09OlsH/3SL99Xr77LIrxqsS
IewY67cm6yHq57YQEkwCNiwwwXpQmRD+dj1U8zzOjf8LgXfPfpXpLNRPJcGr
u3pqk7nznquEoBl1mx8iRPlWC+F65ICc9xlszwOiH2urz/Za3Pp/Is9PBxMr
dRBvHgkhQLHYSJZB+6wXwjKz99IrtiLffCoE7eJVvvnViD/PhdC2YPb6Pg/M
F18KYX3tIWWzauRnr0g82xMZwTzB+ulrgmf3a4//dEN8bRZC9Jf1IT4zMd63
Enzzzy7xvIn324Qw0XDSyegAbH+7EBQ/H9FiFmG8ey8E+a83TCr+IF/pEIK9
5MQdMMjl/0LotutunHwV5yd2k/+tdhI4c/u/9Qghwroxyz8K9fFFCPM6JDuv
rkX5fyP42DxS890hxK9eYj+x66WXneDiP+nvLE2n6RMwH/pF7Hv+zGZ9U27/
fxLvcuaZUovwe3+FUH02/rVwDMp/gMibv+/Vn4Xc+T8i0NeTaZn3DPF7mAgc
Vr3cMdEW9TlcBHXvbH3NQjC/lhTB52f18ytqED9Gkvvyd/h/c/B7o0Vg9ND7
xLw65G8yIvgQ9W5UNrdeY4wIDM4blbWNw/g7TgTDVi5tVNmP+e4EERyUPhtV
IET7kxOBhrUofjOL8VxBBIlrtHpra3E/nckiaHl97dnjEehPU0SQtWnKveGn
kA8pi0BzxRDpt5sRn1VEkHB3E+XWifpWFYG8d9uRq0ex3qQmgoLvw85PusKd
/yOC1evzH55sRHtVF4GNU9BZtwb8nqYI7qSbuNg2IJ/TEsGi+x8SCq+h/+mI
ILCSjQt/jHg+RwSR/Dd2b1uRb8wTQe3tsrq5n/B7C0QwVnKpgt1Z9G89EVxN
piffnMqt/xdBU5A3L/0x1jcNiP6qVH+d/IrzRQxFsPWL9upJ77D+bCyCcSdb
Pwe0YT11mQguRkSfTpqP9gMiOOxqUe2eg/VOUxFQqolbDG3x/ytFUPbrZ//e
g+iPZiKYNMXFS7uHW/8vAij5uadlJ/qfhQh8JToMvl7FfGKdCLxuX9nJH432
ZCUC/x9Khfkn8fs2Iuj2eGW9WRXH49aLoPVc8Y9NzqhvOxGkeKWKS89jfLQX
wWVHpsHXnsv/RbCrarfQ2xTj+1ain4RnNS09yDccRbCe5/Je7wHitRNpj9Jp
mxQLxH8XEVTvvFYY/QPzXVcR7IvP3DhlBY4v7xCBpP3Pu0sYrKe7i2CZdPqH
KXtQnx4ieOEpGrHxGNqPF2nPnd97ojKxvrmbtDfAwWnyCMRLHxHoynhHfXuG
43++Isi/MGfno6HoH34iWLj114mZIxDv9otgkwRP02YFN/+ftGf2jxubUnD+
aLAIaob3ttvl4fziUBFMV7Cue+KK74cRf9McphbZhf4fLoKgn29G5Kji+tdI
EWixq423VyL/OiQCS+H65ZMcEW+iRbDm79sUSRPEyxgRvInfdal9nhvGfxGo
1HwRzjqAeHactP/yDMMGOeQHJ4l9eF+d9ykf41mcCLY4H6i6vBfx9DSxh/Er
f9TORXs6I4IRXVdadrViPE0SwbZfHTvhK/K/cyJ48OSF4p0TOD6YLIJVk1fH
7HZBPpYiguRlZreei7n5f8TeoxrLPw3F/qWJQG2FWeCzo1hvzRDBk+uLnxZy
8y0zRdAc0qWnOhXlly2CpKKxhj9eojxyRHB370OvCb8QL/NEkOGc3tCVgvW/
AhHsEZcZuBig/fJFMCR8O78nH+1LSOzzx53kldx+A5QIitWTN/pz8Y8RwQTp
31N2mCC/E4vg7IOx89SEKI9rIsg79+XGvRDu/F8RvNKclG6WzO3/K4L9WzJW
Z15Ee7tF7KPdKuu2A8qvRATe5dLnz0vg/dsicMtJWTLbB79XJgLlCvHuIW0Y
v8pF8HQ/TP9siP5VKYLJx1/eq1VB/VYR+x0rXHw/E/GvmujLI7v+ghHizQPy
/vBDzKvnmN8+FIHqxu8TMydy5/+IoMe8fF56KcbHehH8G6ues0ED5f1UBA0K
2tLpS95g/BfB+/OpktOu4/5CL0Vwoed2kN9J7vxfgt9vc72fzsH85zXxt5wt
0xeG4/+aCZ6M7My43ILjV63E/tqVfh+9h/puI/6fpv+7aj7ifbsIztw9FdYt
ifJ9T/QzrL1jRx7mtx0i+CURKs/nzkv8SOLFybwaDW79Y7cI7Cslbuiqc/V/
EdzsXl/5pRH96YsITnhN9tHh9pf7JgKF6i6d5iL8fq8I5rIOTh6/kI/0iaDx
9Luz6Z8Rv36R9lgYeW39jPHwN/F/5s6J8ZEYv/6KoL8s7Nau8+gfAyJ4t/xw
Twg3Xj6EAofIEdpaYvzeUAparZOyP+xDfQ+jQLIwsqnnJfJtCQq2KdqG8W+j
/w6nQM81taHiK8p/BAWJlVdnzs3E/0lSkN9y+3r3ObR3KQoujVy2JdQX8Wgk
BdYeXVd+BqC9jKJAUW/w/TAb7jwhCnznZ1YcsMD5VdIU/HnaeaNQA/UjQ4HR
FrFT9TeUrywFCY3ej/UOc/MNKHi6N2DkilOIr2MpuMq8HhJbgvYwjoLqYbsm
9qWiPMZTcOSSgvI4fYzPE/73vMpcq9U4P28iBY8bWx9SazC+yFGw58nzI5mT
sD/yFIy4E7Lv2AzMJxQoWDN07StdReRzkyhIf3p01NAkjB+TKaDNzr358gDt
S5GCfSLv1p7tqP8pFGSo7hTtPYf+pUTBnHFetReSufENCsbvUynO5tb/TaXg
ru6IIjsHlIcKBdpfhw7VtMP64TQK/voNxL91R76kSoHfVf1bzXysd0+n4IzU
Z5eSduRnahRoqcqa92Ti8zMoWCjjZLl2JTc/kgKfwE1LFngivsyiIKrtqbOO
Du5/qk7BJs8Hr+ceR76oQcHk4cXnD7fi+UCaFBR0XSu6uxnlNZsCizvhC9z+
oHy0KLDUYXJun8P+apP2BqRmOzXg+IUOBZljsz26TyJ+6FKwNaqqd+9mrF/M
oSB5eWF+uifqfy6RR4Risnkc6n8e+V6s2/zHFPrrfApcpTIzs50wfiygoDRE
auq6BZivLiTf08hyd6nB+oseBcX+o+IWzkI+uYgCGa/Z0wtUsR6xmIIrRV2O
TcloX/oUeEz3bZiohfHCgIIJy92Grj2H/V1CwexRGxIrvLA9hkS+mfIpWSFY
zzSiwHkLtW/0NKwvG1Mgu+Pwq+Hbkc8tpSBscECvwB/54jIK6jeXfVi9H/u/
nIJnXcur1+1EewHi3/qTLl7JQnszoWCBOX2+cw/6qykFt1Oe+NTEIp9fQUH2
w/eDPCOsJ6+kgJc2bPRjLYwHqygYW2i9sXolxnszCsRvT+bMCEM+vpros6v/
00AE/n8NBS8d1saOy8D4Z07BhavHwg/5ID5aUFA02sb5iRPi41oK2g6OeBbm
xJ0vScHmRF559gTUvyUFErb5q5rGIV+1osDp0uaNU8Zhf6wpiJew/Nn5Ff3Z
hoJG3aCUtL3In2wp6B4bK+7Ux/VQ64n8Zc8/P9yI+tpAwYpJD14Z9OD6JDsK
ZrwYf2b7EKyXbKTATfQn6Bl3PoM9BVkSarv2haM9baJANES31rwH27uZggPH
S1d1zEQ+uIX4c5Y4Sa4K9b+VgjtHL9+vUkJ9O1AQKp7jHT0N5eFIgfwSH7+H
XL1mG8HXYZH3gpURP52IPkLaoq48w/FkZwrycvJmvtqF+OhCAXsrc22JFJ5f
uZ3Yr+4RqbeB+L4rkaeD5MHxZujvbhREqD1RljBCfr+D6KunVWvDcMwPd1Iw
zuhI7F/W+r9rdxJPMhQn181Ef9tFAVxy9Ne9jHjhQYFZmWHwC64e6klBg4fJ
n4HZ6E9eFDxsOnte2wT3P/Sm4NuU1DFN5zFf2U2B+yNhucNCfH4PBZME8yM3
X0f5+xB/iLx3W8Ea49leEr+meK/Y0IXjFb4ULOr766C8c/p/1/soONixXKdF
BuXrR8Eu4weBmntwfNKfAt2+NV71mpi/7KegZZGhmz83HzeAguaHW4r212G9
NpCCn5WCr/Mu4P0gCoSu0XY9IuTLwRTM/PT30PGTyBdDSHwLb13TVYv19lAK
FJZt9fZ+gvndAQqqJsh0+t3DfCCM6L88fUh8Nz5/kILalE+byzWxXhVOgf+K
X/kDE9FfI4g9pFhbjdiH/C6Sgnd6U3ZI5aK+oyiQvgHTNfZw84FJ/OyY/sZ0
Cfb3MAVfXETJiQPc+iAKdiyaqnvaB/nBEcInVCwf5nSh/8dQ0NGSZ2qXivqJ
pSCuSPGccgLK5yiJVw+VYxReoH0co2B17N8Dnu8Rv49TcOrrEM3JPfj8CQo0
TWxm6pxHeZ2kYMOVBUMf2CH+nSJ4Zje9z5A7LzmO+HvHC2kDTex/PGn/mVK7
XAf0p9MUfFxd6l76Ab+XQPA4IzZp9CPML88Q+44ovO74BPPzRAo03kvvrP+C
+XcSBadrQy6VDsXvnaUg+IIS72IQXp+jIHfjI+v3Ceif5ymY37fASqMc25tM
8Mv1zb6ESpT3BQq8ag64sHdRvylEnrd0RjgHI3+4SMHwwnGpk5tRnpcI/s7e
/Mz2HcbHVAqWtfcvVdTF/qZRMJD6zJCtR/mlUxDUKmstiMX+ZlAwa4fyhnc2
6N+XCR52F93ReID/zyT+aB24XFkP/5dFQUXdCPu8c9j/bAp6cnPNjL9i/LhC
gWeBR8GSCVjPzCHyMM3Yf8AV41EuwceAhWnJNbj/TB4FI9cfi7tUj3ifT0GA
XE7v3aeITwUUHD7b93VNEuYPPApiCz14jbHc+ioKVsmnu/wtRjwXkPZW5T3I
a0J5CykYrfF117EevC8i14Fbnm4ej/yVInjrU/d3lT/m7zQFn/MME6fSiPcM
BdO1Vp59PgLjFUuBYVRNosomlJeYgvVV+2QjzJFvX6VgXtKGD/c/cee1UzDq
XYCWUhDmb9eJPweceP0hEOV/g/DFCI/BO3sw3ymk/jceO1d2O/pPEQVvWx45
fjyL9nSTgidTR+Yn8/H+LRKPA/atXTER43MxBSVHZE3zhmI8LaHARK5wu4wY
6xGlFBSmLzEoDUR8u034eu/vfy900Z/vEH50ydfGG7B+WkbB9vtXTixch/54
l4Jz5q1qVWtRvuUUqLcsP7FME9tTQcHKSysn7+fmS1RSELM8uVbQjvZ0j3zv
XEPop4sYL6oo2L/RbHTQXByPvk/4X6nrkVejMB5XE3zweXsr3Rz9o4Z8P9K6
aZqQO1+Ggs5cDddeHsb7WgqOzlsd8mUQ7echyQesO8NsdqE91hG+32nQeH4e
tvcRBb3X3AWWUcj3HxM8TfQ8tzwW1zPWU9BVVDVSWhXt9wnBz4Jvs9+PQzx+
SsHrykmCWfsxfj0j+BRx3P8KjfHtOQVb3FacutKA+zm+IPEnNLd94nnk+y8p
iD5b0JEtjfy3gdj/OKjVXYp8+xWJd78df0e/Q3k2UvCqMFztXRnOx3tNwTHt
7DGfv6A9NRH5yBvPeQ/IF5sp+BrifEw+Ffl3CwXekWk3vSTRf1tJfO3Nqs+a
hftlvCF8V9bVU+0W6qeNgpqc/DkOmmi/bwmf/NOSor8e+WQ74WPykuERmugf
74i97zg+O+I77tf3nsQ7l7UaszIx3n2g4N7LziVmYm79HOEjs3Nf7P2J+ukk
3/ukltq5AvHsI7H35kF/uSuY/3UR+ys78OKNFdYruimYuMl8iekx5NefCD/2
EDrcGcDz0HsIX889nx4lj3zgMwX8fwbf4THGyy9E/mN/r3taivr9Svx3zeP5
ASz6wzcKPvD/zbMZj/nGdwpyNt58AN1oL70knox5nrBlCdrjD4JXP1p/qOai
/Poo0CmPyFVsR7z6Sf4ntbDNtgrl94vED9g2tagf7aGfAkF56+dNTdx+vuR7
Z9oeTZDF9V5/KDh5tOB9vx/m638pGLPqU9Qya8Tnf8RebOa2a39DvjPwPz48
yzGDy8cHCX/sa/njvQLz9SE0tA+dU7ybm387lIY6o8ZNBZ7ceAANp6kpQ5fP
wvqsBA1/LlwNr+XO3x1Og5VnwKNzJ9HfRtBQZsDfWLsJ9SFJ3g+8c8WgH/8n
RcPPRW/3qfvi+yNp0N1j2Bprh/dH0aBkcrlzMbcf4Gga3MtdPiulY/1Vmobp
Z009Eychf5Gh4Zp04e7AA9h/WRom7jZrc6pDfBpDQ+PnSYd4RVgPGktDhc66
igvGaD/jyP9qmBtjPmA9czwND6vOWLUtwucnkP6e/DNxMY3fn0jDslVHNAW6
OB4nR0P14fjLJpVc/k+DtGd8bBTr/N+1Ag1OllOft25He5pE2nvwzeWYt4i/
k2nYP8Z74I8e5keKNHwwn7SmPRH51BQaNIaV6juPw/8p0dBisTIq0wvlo0wD
FelSM+YkynsqDcYV+zaEq+H8CRUaXsb+OdM6Hutl02jYNk/qfeppnE+rSoOB
osVhzXuIF9OJPMrsCiw3YXxWo6Hf8rlX9j/E/xk0HPm5/Oh8ET4/k4YX75zX
bCxB/JtFw5QxRSHlWzFeqdPger4gZWYIzpfUoOH7xXv3CvkoT00ajip9m/mn
HeP/bBpadS4niE24/J+G4NeJBkrDkI9p06B5U1376HuM5zo0hIfuvOvI4Hxs
XRqyMj7dtnzM7bdMw1T9QO2vU5APz6VB76j05ABT5EPzaMiwt30TkoT2P5+G
aRIxV+TfI14uoOGGf+fup9z54QtpkO1JWnNHDu1Rj4ZNcfO1/4Uh3i+iYWbd
vlt3KMSzxTQ8yNdoaipHfq1P/v9uxSn7ZuSTBjRUDm74/FYN+ccSGgrdk24N
j0f7MCT2qDGY2vsQ+Z8RDT10eWC8HF4bE/1VDAqGmqG/LqVBYrKi+Z4ElOcy
Gs5ENuqXhGO+tpyGsbYbo97mc+c/0RA7fYdLxRK0HxMavGUGbKbORbwzpWHd
Nbn6qgbkEytoeDxsz/i+6dz+kKR/wctTMs8i/1hFwxB146IVrujfZjQYvuq7
PIfBfG01DZcyeX0yXdieNTQ0tRT1DBnAeGRO7GOHxf7nV9E+LGiIUkwJu74N
4/VaGk5Wfa8b9grvr6Ph2LU3yvZ3MF5Y0hCXcXNJVRPajxUN2odkM3qTMN5Y
05DET5A85Ir1dRsa3rhf2HiVh/5hS8PGU8mvVCywvetpmHsmLAWuIX/ZQNpX
2zfUURLrQXY0fG268/7rW1yfspHct5VSHp+LeGJPw7eKz6+iPHD91SaiL9fD
msofkS9upuHcp1/qg3bIX7YQ/NiRa9oUg/F2Kw0e//69X+uK1w40RC+V/jdW
AdfzOtLwd3CKwLoS+cE2GvqmdcWJ9+L3nWgIky3fHsKdv+tM+mOV/+IRx39d
aDjcqu6hvQLjyXbiT8s2Lb/fjO1xpUG5y3f3r3VY73Ij15sWZ6Uvx/s7iPwy
xxWOu43jKztpYDWGV8py5ym40/D09SKezEmU/y4aeh3vblw5BPXlQcPb/Wkt
id147UmDb/KKEGNO3140XFU9uzVED/3dm4blp/aNmqCNfHA3+d9wwbb2G7i+
fA8NdNR6w7AnqA8f4g/xf0MDGxGP9tKwzybx3Mkz6P++RB9fs+5EtCI+7aPh
7MiZ78xPYL7vR8Pa4+3KGpXoD/40CNrl5qxNwPG3/TQE2B5LeS/havx/1wE0
vM5Rzmx7jv0NpEEs8XHuj1D0jyAapOY8KGiORDwJpmHHP+m9rwIwHoWQeHBj
olKXM+5XFErDIg+7Z/qXpP/7/gHiX++7Yxt//PnvfhgNw+UlVmTE0P/dP0jD
8a6kiogDasv+7zqchgkSC0ZVX8L9NiNoOBjwoXYFV5+KpCHU8/4NF0eURxSR
7xL3XS23EC8PEXvant63+hHq5zANTHVxdeVKxItoGkq6dn9beQ75zxGi77aX
NwwskN/EEPurvjPX2QDtJZaG8n+MTOFvHM89SsPo5oiiqi8YT44R/V2+5hNn
ivHrOA38w5u03HxxPPsEwYOpH8ZG7sP9B07SMEPUsOJjKvKrU+R7p+O8I8yQ
j8QRf76W5P9AHe0lngZ/u5R5d98gHz1Ng4uuXvXnMNRnAg3XX00aqaOI+HGG
4IfHpeF9xzBeJpLrC1J+nhLob0nEni4+2utfjXh/lobthndWafhhe87R8Kp3
/aMDmzCenKch13jGq7TPOB6YTMPthecflMQj/79Ag5viwmG6xdx6JhpOjf4Q
qCFEfnCRxEO/BQvlduD9S8Qef2gLrO1QH6lEvzIfvGXvcuedEz7w/YWN5hTk
Q+k0PHn0d1pcI/LNDGK/C3Zf+7QB8eIyDV+WGdvGdaC9ZpL+3LDbKPse850s
Ghy278i4ew7tNZuG2QkaYkkK890rJF7VZO+cNA75Uw4NP8YobloViXidS8NH
9TU7tiphvM2jwczpQ33SbsS3fBL/Bc1bupagfxSQ613FTzpjML/h0TDKxSB7
og7Gdz7hJ6FZhnXlaL8CIt+rrMLmFO68VaLfheVN/ddxvE9E4m26o72eGOVP
0dBcHJ5IbcH4RtPwTH6Bgyof5cGQ+EVBVuR75GMs6Y9Sy/vrz7jz2WjYabPw
buM29PerBI+LfewmnsP4e42GJcKhwXsrsf3XaZB0G5xxRgX/d4OGm5mjiq8L
sT+FNNyxlB3uNAb5QRGxDwXFKNYa/eUm0XfcZjNjadT/LcIXPpyvfM/th1RM
Q4JSyLemCLTPEiKf3Ia1nxYgvygl+MvTyriegfdv0zCL8QrQNcJ84w75fsrz
07amKJ8yEh/iktbd7Ea+c5cGHXn5bXW6mA+U09DVecYqUID6rqBhDP1o/dd8
5POVNGTHHNwuswiv79Fw0ewxf4Cr91bRcOK2Wr7WVsSP+zSoj2bldthhPlZN
8O1xe79lFOaXNYSfKkpaPG1GPvyAhj1LbQprb6F8amkYob8us2Yp4tdDGi58
fP1B+zHKp46GzZN73rXGc/PPSD4xgzdoGYD4/5iGeCnXV8GTsD31xH91VLy+
bUe+8oTg75s95npzufyf8PWdg+v072I8fUbyIdv9CX4Z6B/PaTgwu6fR4jn6
0wsatui3V4Z9wfa/pCH1qfL3fG78vIG0R3A1R+U9t58NDZmTeyN1NVDfjTRs
ONjglbUF+d5rEv8K93v98MN6SRPhB57GEbEF2J5mghcOhyWSXdCfWmio0TK/
/u0h5r+tNKSFVNw67ILyeEPD+jGhfR3dyMfaCB+RLOugevF/bwk/7nP9Nd8C
9dNO+GHx0E0vPiOevKMhUla+VzEV+/eeBouEptOzvmL/P9AwINn1LD4S7b+D
+KtmaEJXOfKTTsJHm/cdvM1D+/xIw6EnSbwNI7D9XTTcr1b8vs4B6wvdBP8d
dd1Gsdi+TyTfmJt8ROcfxs8eGhquVnZ0uSP+fyZ49qe59WMF1ju+kOsyncWl
G5b8d/2V8Bvt6TcOcXj5jfC3D84JxZ8xv/tO9HnhwrKbY7G9vSSfaggtcXuC
/vuDhjUbLNdenIbjn3007F5SlU7lo35+Ent5NUt3cjXGw1+E70zaOMnyMdpr
Pw3jWvaGTVHA/Rd+06Cv67eJ/ofy/UPiX/frQ+N2cfk/kbfLkvV6sohP/2jo
SBky1LEH+e0Awc8P7h7ze6z+4weDNNg/k13zWQPrAUMYuKhgcdvAGePXUAb2
RcunW8/A/G8YA0cqZNUbFmH8kmBgtP8uCWM51M9wBgRrg4pkPmC8HMHAXgeV
lndrsb+SDCyNtlMr1UZ/l2LgQ+rUO3auiIcjGTgmv/efInf+0SgGNgTPs1ae
gfg7mgG+sdy64MP4fWkGIosz76dy+zfKMFB2z19QuwHxTZaB1NPjimavQvmO
YcDHUTfmFjffdCwDldV52o2XsF49joGWB/qCy9x5yOMZ0Gi7XuPShfFqAgMP
Mn16/m3F/HIiA1PPL/32kZvvJ0fkkbk6Suotxi95Bsb01MZ8FeP4oQIDs8Gq
4elkzJ8nMQDaey3Xn8D63mTS3rG8i61CzA8UGZDUNJp6jBufnkL+H9a7IliE
8V+JgXqt8oGIPah/ZQYkFsYDtQCfn8pAr0GMzicpxCcVBqRlsm//00P7nMbA
il8dXfmXUB+qRL/WHtJt2RjPpjPgLgpfHqOM8UCNgZhnD3fsbEL+N4OBcIPh
q1PtEF9mMvApc8vsZCvs7yzSvlmFvppzUD/qDES7z6Zs7iAeajBgP3zn2wWW
+D1NBuLd/a0i/JCPzmag1Mxp/qlIbK8WkUeRzKTMIMR3bWIfGu36Sx+i/egw
4LcrrWr/Uoz/ukTfo1cpfZiN+0nPYeC844twlWbMv+cy8NjGzzl5Dda35zFg
ub43NMkK7WU+scdFJnVONLZnAQNdsdJ7xo3AfHshA58/ae+T5eZv6TEwKtXj
/L009L9FDEyga+53LkG+uJgBKbWYhYoJGD/1GUi/mlN9zR7zSQMG1PiOrV7z
0f6WEHs5ufnmce58F0MGlh18EqhhiHzJiAH9baC0fSF+z5iB/vrujr+BuJ/F
UgYe3iy/ouaD8XYZA1HrlO6XG6B/LGfAMSn/ocptxH/4n738LN/BnVdvQr7f
2xw8chr+z5QBi5cbS6K5+fUrGLglqSCXGMLtD0n6mySr/pTbD2kVwZPb9GDI
fWyPGQPXm+bKZOgjn1jNwDO2v//NY/SvNQyIGJ7HvPHoT+YMzAuuv5JogPZs
QfT/RePT6GT0j7UMrFtfCBMWc/k/A+f2VqzzTkF/siT4M+LQzfcLEP+sCD4c
udt8KxvzeWsGrpyPLfrG4akNAztrps46fAT1YctAt+qWIPMZKK/1DNRc0Je0
W4T1gQ3k/tDCOc43ES/tGJj49F3bjna0x40M/KhZ5r9pM8Yn+//Zi67URm4+
9yYGst4mZm9V5NavMDDSYdcvv7f4/S0MtCmEFLw8hPnLVuIfZyv8pTdjPuRA
/m9+ftH+EOTbjkS/lNlIBU/Ez20MJGxVM9q/D+svTgzceG41kmnE+rkzA5d1
+1/Jj+POv2JgeemO2qUX0R+3MzDp1WBo82rEF1cGTPPjC6v0ED/dGLjbVucr
exP1tYOBLcX18WuqUV47GfC+nHj8xH3Uhzuxl3+fh1qFYD64iwGjJqf6kULE
Cw/Sn4/iL5NGYDz1JP7qa7SvrA75uxcDDlOGjArxwvEYbwZmbDkyXysa8WU3
A65L+l08bLjxfwam92e82JqC+boPAwcfBmnPqEL73kv6sy16TNte1L8v8Z9F
q98Y23H5PwMDdbE/w5YhP/Ej8Sfw+wUdTfRnfwbMXPfKRlBYn9jPQPaYeXam
Qqw3BDAw56HqECOuHh9I4unp64L+R+hPQQycmd0YuSiA27+TgRyDuHWfCuC/
6xAGiv07+4ueY/0+lLT31I8MWo0b/2fgxSH5Y43a3P5eDGjH3mx664jtP8jA
hfFf7da95sb/GdArhjHztc3/u44g8aCDHVP4D+0lkgEZyvF4hwvmw1EEz4dQ
5XbyqN9DRJ97b2ybOArvHyb29cmk5ZAH9i+agU3ga9T2BOvxR0g8e2Xm1bgW
/S2GgWmz7KvKB7jxfxK/T0snri1BPniUgcK+ljUZTYjPxxgoiDJSbeTO6zvO
QPPt65GjeMj/TjCQm//Trq8W9XmS4GWLwHnWDtwP/BTBg5KMu/nZqP84BsZX
2QW1jMX+xDMwImWJb8wg6vM0Ax2LAtuOK6A9JDAQ6t2Qc0kV8fcMAwuCwspn
hWI+l0jiv6/BqvRN3PkkDLxycKvI4s5XPctARWJXbp4Nyvcc6c/UtuBvejj/
5zwDJzumDkT5I14mMxDwWdvsz3j0lwsM+PqkMQfeIf9OYWDzo9RxAbroLxcZ
iHtjvvhWBuLVJQaEgbuO2k1Hf01lILjy46riQxgP0wj+9FyU/DYH+Ws68Y/z
dvnvdLGel0HeV3I09R+O/naZ6EfJ0Kq0EJ/PJP07NPLVrOnoD1kkPpsoPJLn
5gNlEzwvHLnC6jDK+wrhEzds02f3Y3zJYeBtZPtGxhXzr1yCZxF6/PAG7G8e
scevP4WWPJy/ms9AWOaS4FYx6quA4LOXYY/BfPw+jwE3H8XMtRlc/k/wpNuz
r80P8VLAQPlC7xlRozF/EjIg93LkzwcfMB8RET7V7d3cE43PU8RfEhde38iN
v9MMbFV3tTD0QD7AMHA/7sJaBUecD8kS/iq6Zb5Th9uflYHD2dESYzh8uMpA
Ys/KTdu48aBrDBg7O8YYTsL55deJfONOPU7/h+c73mDgY1xKU5074kkhA+ry
YQdueyMeFBH8Wt3xQE8K60k3CZ+S90oa5Yn1slsMZEpYpQ4/iPGlmIHGGYeM
FeZz570zwN7yerw/AdtTykBJ6Lqm36+49V8M7Jgzsjj/M8aHO4TPT+4/6myF
+wmWMSD+YlcXzs1nuEvkd8NJs3448sNyBpKCG1au5vYLrmBA127E+JzL+P9K
BkLKbIIPfkR53yP80KYxSjEP67lVhF89aTWdPhn1fZ+BJ3B2su0l/F41A5pH
xeqjypGv1zDwujTP26IQ/e8BsU+z1aXuPdz4P5GH9jnfuc3Ifx4ykNyb2KpS
hfGijvD7ZPWVk/+gPh8R/tzS3R07FfPDx4Sf5/Vc8niK/ldP8pe+5Vp7V6F9
PGGg+qGMqkIC7r/0lIGfQ4KmNdoj3j4j8dT8aOJobn7ucwbWPF3/c/cm/P4L
wgej5g/KtuD/XxI+fETaoLMe7bOB6Oep/9ghB7j57AwoDCp4qg7H+NvIgGyn
l8h8MeLrawYO7fq2I5rF9jWR/CMprVFCjOPPzSQ/mZc7ZKIY5d9C4sEYn99S
0cjHWwn+h8/yMMzEes4bgn8rUk+X+yKetxF/SJm93b8H87G3hK906sKBCLSn
dgZ+rRir3qmN9Z93pP0PdQ9GN2C+9p7wt/zJa1Il0R8/MHDA2MnYMg7/10H6
E6t68B63/qaT4GPSiHuqzvj+RwYe/fa1SjFD++5iIK/yV3x7Ocqzm8SDyjsb
1p/FePCJ6N/pZsxYIebvPQwsMbT3uteM9YrPhD9c3tE74Tba1xfCx7Ysn3hc
GfH4KwNasfYnenYs+O/6G8mHCj1+v16K7f/OgF2n29qjeYi3vcReSz/cFMfi
/R/EH3auee8mh/lgH7H/xZ2+tC/a509iL1+KQ9yisJ79i/BxSY21S1Ygf+xn
4PmABstvxfziN/HHj3WX58xFvP3DgP8SPyY7HPPRv4Q/JTC9OksRf/4xMLe6
L3boNqwfDBA+clP2uiO3/nOQ4JfRnzOD3PjgEBYSW5y3nldF/jKUhclt9Pjn
c5B/D2PBebTzaFsl5BcSLLSYaHjefIbxZTgLFaG7Bm98xvg2goXFyvt6JuYh
PkuyEOzzO/MCNz4gxcLFvHcDw7j5AiNZ+HXK/dLHWuR/o1iYqT4h3p3bT380
C6uO/c0fVMP5S9IsxJo9+g3jcXxJhgX3lnKb9BOr/ruWZWFIreW80QewfjqG
hWWqtV/rwrn8n4V/tmsc/WJwPuk4FsaqPzzgIIXyGE/e97rGXzQb54dOYOFl
hmzNxmIcD5rIwvXW80kLNZHPyLHwuevvtItTUH/yLGyXfWSVV83tV8RC/dbK
enduPuAkFsxvunatf4H1lcks+IRdcUt5h/cVWXgwLv1tWxra9xQW3G6PzLs1
gPmGEgsBGq/H1m3A9iizkOne/DtqKdrjVBZ6NluF7/bA+KRC2rfmrZG6CfrP
NKKvcOm+d5y9q5L+auQGpV3G96cT/VG7v0gfRz6kxsIRv/lRBwRY355B2vNz
1ppRnti/mSzoJz19OrMN89dZLMjtKFLUWYL4r85C2UdxQMNaLv9nQZHKmevC
7Q+vycLhP6aKB90QX2azYL9G46SXLtqXFgt/Y8fumuCC8U6bBdELvxlq+9Hf
dUh/I9I0LlzD+ooukfe2FKkVzzGeziHyGtubFd6J9jyXhaM6panTbqF/zmNh
z5to/SBt7P98Fq4lRVKVSchPFrBwlf9yaX49+tdCFnZnf173LRP5oR6x19Jf
28fwsJ64iAWlTyZfLnWiPS9mQe+A+6pQU5x/rc/CUGbbLeMcfN+ABXHNt1+8
JsT7JSy0mb3Yt9AO22PIAhWgciu7Aes1Riz0yss/OZeD+ZQxC1mlEW5Jd5F/
LmXhzv3S/qVjsb3LWDgRdmPhlV/Yn+UstBdosMG2GH+AhaDnaXPS0jC/MGFh
qany5CeSGI9NWWD/9f2uO4P+tIKFneWLsuVfoH5WsmB09o5v0lLU7yoWUr5a
bt73G/tvRt7fWGAmvxG/t5oF/ppRjyGey/9ZuHxmV8wTzn7Mib4K+vuej0Z8
sGBhWpmdRJ8x4sla4n9N4y7uC8B8cx0L7wWr5df/QD5hSfT5RFR39f+fN8WC
5zbnlvizKF9rFtasDdN6Ow/5rA0LZ7Kdm0ZKrfvv2paFHSY6v2s34XjReha2
PPl3feVbtLcNLKg1J7m1XEF/tWMhZPLS/Jl6Cv9db2ShZn6UTNVM7L89C5bt
Yt1+LbTvTSxoFe5w3FaI8XUzsf+xyabe/YivW1j4qWtamOPKzf9nYWVw6JA+
bn6fA5Gfz9uUXevRvh0J/g29re4gjXi4jYWq0Mv3r7og/3BiwfTslKZZnRh/
nFnoXl2z3+A5tseFBe8icdbWUtTPdhbiNm3b2Lacy/+JPalF0cXnsF7gRuzT
+ghP1wavd7CwUdNkx5FGxJudxP90TEJ+LkD/cifvSxwcp/Ec8WYXC7vs/+aI
XuL8CQ8W9t+sdD61veW/a08WtsqPPfb3C8YLL4I/Fd4po0Owv94Ej7ekFhod
wPxnN5GPzt3MUTIY3/ewQJuDz7FKXJ/hw4KUl15g90N8fy/Rh31z59nnuD7H
l4U/j1/mUkXoH/sIPtv8VBYOIv/wI/Z83UD1cTe2x5+FPLvT7gXrUb/7WSje
O/Kj8yzkGwEsPP7wWGLxWOTHgeT7/hWx/RG4viOI+Jud/Myyxdz+HSzoKFuI
ZC+jfYawMGnGrbqZYxEfQlmwSnJRdEjB+wdIPP5e4Vi5kVvfS/Bc1y66/BDa
50EWvMz72q/UYb0onIVR7S+fZI3R++86goXIA6emLhqB8ohkYUmydtL7qWh/
USwccjDvebYd4+EhYp9HDqzMLUL9HmbBaXPJ6oAe9K9oFhz2rjv1g6sfHSH+
fsUrr9IF+VwMsfdkd9mwMrSXWGKPKd0JdgsQ/4+yMF/1yJqDJegPx1g4nvAu
rfYv4vVxFjT2X7vb3Yf2fYLEn+hzI0XDET9OsjA6Z33QqAjEn1MsLJg2/WX1
dKy3xLHwdYiNr+kTnP8Qz8Kcbwqq4xKwPnea+NO+xRfdvuD7CSxMabxw90o2
4ukZ0v+vb7rEGYhHiSx0/SsSBrlgPpZE/P3STTnZsyiPsyyAokv9eZf5/12f
Y4H3SmulXwrGr/MkPtxd8XqIJeozmYV5bcZ/b2qiPV0g8eLYSIk3a/H7Kf/D
x/E310jh+xcJPupcO7BqK7e/CbGnkcOXuN9Fe08leGw5bRl1A+WVxsLmlR89
6Gr0v3RinwsEGY/Pc+ufifzO+Jd9XYDx6zLxf8URKkoLkB9nsmC94ustIY32
lcVCqkL6rH3ByEeyWZAkAaqzFu3nColH/t971HOR3+ewMKLCOPTvXcTbXOL/
Ye+1Hofges880r8V5iZB3PqyfCLPT+c9Irj16gUsTJi9rPvqQWwPj4UnrdtD
nYpQf3wWOrX2jzpxEOtHAhYqu+JvpZtx661ZaFKIbbd7juO3IhaGfZ/2rI3C
+EER/6qTHpPeiuslaBYyRtrquCsh/jEsuMQkFo/ORn9liT3O0Nxkl4p8SEz0
qbJ88axv6K9XWVhx3+dFtojbr5WFOr2C7LW3MX5dZ6H5yvZT4z5h/f4GC/LC
Dt27NzG+FrKQpmizdrQqtreIBbt5uz9qJmD8v8nC1I7LOpQU8rlbLHwQvaC8
3mG8L2bhh6q7/88tOD5TwsKnLKVbQxisx5SyMP3Zp9BtrRgPbrPAxNRtWbcH
r+8Qfh6qm9Hag/yyjMTPoNX0qkuon7ssHEsS/+r/i/G/nMSb64zGkT1Yn60g
9jNbp0KO2++6koVF//5MGJyIeHKPBY+WTIsXXP2uioXX8SNiTLzRf+6T9rUr
spe5+SLVhF8pZ7zUX4L6qGHhAm9f1tdorEc8IPbl9aTSIh/zz1rizz9kU77L
c/vNsnBO4cUDbx/sXx0LfoNjlE+koP88IvpwSt2isBX97zFpzwSnmaeTcbyp
nuDthpiDjasxXj1hYXBESVNtMI5vPmVhm1n0W5NYXL/wjPBfp7tf9J0c/7t+
TuS70iTJyZAb/2dBple+yncL9u8l4X8df3Y2cPW7BhbmGofXOtpjvveK9D9Y
1mz9DqyPNbJQfkDK5Z0p6vs1wX+5PzafLyK/bCJ8ho30+qOF/KSZ5F9xbj/P
bUf7bSF4ZpbWXcXFy1bCZzN+Nckloz++YUH55A+XyDjMF9sIX2xJ7jcZgfWJ
t+T79rJ1k2q5+f8sfCmZu1ZmHNr7O+KPTt97L1uifbxn4bz7xJmPV6C/fWDh
5Mtuo4ZR2J4OFlRmaC761Y3+0cnCC588C9t3yE8+EvwM1+vtTsXnu1iYrRW1
+qcuxv9uYm8KBoKd/oiPn4h9jlp5dlsv6rOH5FdDd+WmBeP7n8nzJ/XX3lqC
/vSF5GtS8y2eb0f8+vo/Pme3Lzgf6+/fSHu70x7e+4Hx9DsLqs5zC44dRnvo
JfFCe1znK0vMV38Qfw39vvu6BvK3PhZehYXzkr+hP/1kodrJz0u2AO3nF8HP
Hoth1Rb4vX6S33btzW2IQPv4TfDG5bXvYwbrUX9IfG1ddkh7BMrzLwsjn5Wl
eu/F+ug/Yj9QUsmvx/gxQPBnblhZ3lqslw0S/M5qPDGuw+G/6yFiSF2q//SR
EdrbUDHkCOonGh3m9gMUg/XKC8FD1qG8JcRw2UFh4ShuP5DhYij0SS/3vYX4
PkIMJZ/pOW29qA9JMSz6tFl7/hD0NykxVL8tuZZzEev1I8XgLT2s2DAG3x8l
huDUkbb8kxi/R4vhXMVO2mcq8gdpMfzwPrpcPAPxTEYMbZtlfxWtQvuUFcN2
haNhGQmojzFiuFOzuE0nCPU3VgxRJ7o7qrn9OsaJ4UyH/eONrogX48Wwg59L
ezYhvk8Qw2zJo6v6upEfTBSDV/DLnGxnxBM50p4cySt1j/G8BHkxOFq/bFgU
id9TEMPSKR4WT9SRD08Sw5zAF+fLhqO8J4th9ZwXWjMzML4piiHglsk6IXd+
7xQxyLR8GEiKRT6qJIarj1r3Xvbe9t+1shgGjIur4mYj/5oqhvd1C5a538H2
qYhBZ+D19Y5G9KdpYthfofQ7xoA7/4jI56W25XkjjJfTxaB6QppOk+b2QxRD
aVPe9qqxaA8zSHtcdR265iL+zBTD193VuWeWoTxniWHitBGt9yahfaiLYd+Y
1bJjZqE/aIjhZOxib7kI7L+mGOa3eqkc8EV+MlsMRw1vzrdu5M5TEINv1SqP
9FrEE23y/1VFfzboYLzQEUP6MLdRSgk4fqorhqIV8aVB1zFfmiMGk6Sc3LPm
WK+YK4b7NoFl8kXIz+eJIbDeyzNrJv5/vhhOJ58tvaSI8lxA5JWlXVJZj3i6
kPiLbfzqBA1svx65Xyft8UYf84lFRH+992vq03B91mJiv8Zlo+6FIr7ri2GM
Suv2ht3c/s1isC1Xl+iL5Nb/i6HSSkkc3YvtMRRDhI2BR9gB7L+RGKTqrUec
WIP9MRbDR9mg2eqByJ+XiqFgasUeRovb75n871SnirsT4sNyMcQWxyfa70R5
AdH3Mc0FXsUYX0zEULvagTZbgHhjSvy5sl3uJ7cfywoxbItMz4nnzgNdKQbL
fRaeJu8wn1glhhphchsdhXhmJoZIF6nSGyMQT1eLwbB2d3lCCfr7GjH0nn2y
44QQ8c5cDFsk7Z/7H0d5W4hBQVm8jP8W7XOtGJQsbEzuqXPr/4k/KjmtdlNE
f7UUw4EzZlWzJ2H/rMSQcuBewPQKxENrMdQdSV91ugH5iY0Ydg8MPajK7W9o
KwZ/q4PPZC9w+1GK4Xv62+A+C8zfNoghrPxQiZQp4pudGP4fT1ce19MTtZVf
eyJLSaJEUUhKQsuhiEQlWoS0WNMma0kLkUSSRCRbhSjV965fW2UtKlokpQVJ
KqSobO+8r3PfP+/nW3NnznnOc54zM3fG0jfQxjMH43cFiWdu6U3RI+G8ahFU
VI+wrnDB97uIoPJ8VHDZT5y/dxWBVcrngnmemG/dRDCo6d2gY98R3ytJfMXO
0Y5PxvbcRTC/zvTa8VMYf6tE4HFkYGbAGTxPY7UIPp2JNjTsQvysEUH5S6jp
LUJ97EHi02Di7Ec66L+1Irgh8/Rc8nr0t6cIOoKeZFo1Cfdhi2Doz8tH5z7C
esxbBHo11VIm1Wg/HxGk28xSDZuA/Vknguc2PyW0Gczn60VgtDuuWg0wnjeI
4MS5Gi9za/x9IxmfzfpTetnIl5tEcC/lpUX9cIyPzSKov9JXNtYZ75/wJXw1
svjPD+E+0S0iULh20VEjBetJPxEcPjXw2pR2zP/+IriYMtd4bjHWOwGkv5/4
CVGJ+L5A8ntYj6MCh/VKkAjOe1m71X/G+N9K4onbYjy/D/8+mPBFctH0bxSO
Z5sIRo+vbHaxwvjYLoLB26T2OXzB/98hAmP1dyNelOH85E4R+HuKvwRL4Pzv
LhH8HmymWyaN7e8WgeyoO0Pt3uF8fAiJ9xNLJcodUe+GioD58/t56Qp83iOC
vWXPyxWO4nMY4VPzPOMadaxn9pL8oH8uOUmYnw4XwesH2xxjBmL9ESEC+Vnq
S/vcMT4jRdCbMVyr1wn9HUX49aGJzLsiHN8+wgcTnHJMLbC/+0WwuPRgvUUJ
xms0yfepC2d3C98bHBDB2sH3N10KQfsfJPzuFDrltCLyVQzJt1bqnkWXcL/k
IRF07bltcbBROE9MBBMKz3e2rEd7HhbBiz+/yzXscT9DnAgafdOfzT+F6+NH
SDz90jBp3Yn4OSqCDwXrvXo+Yb6MF0FY/ZKg922oh46JQJz52uF9H443QQRF
LUd1Qu6h3jkuAoPvI20jmlFvJIogNnJqb1swPp8QwctB3QUPyzD+kwg/Fd+p
iPuN/HSS9HdwWXXuAYynZBFs7beV2BSF+D1F4tVMbLsgLPzf/szTImjfYj0z
YwL6K0UES78t2e2kje2fEcEYqSEqywqxnjgrgvHBtxp66pHvU0l8Jna86Hpj
+K+9cyLYuU5L8dYLmX/PaSLo1Ne8+YrB/bHnRbDece7Dny8QPxcI3kMXqpk4
ov64SPCQOVzr9hrMN5cInoMCftmOQz19mfBzRP+fvIeIh3QS/6sOa2/ainoo
g+SLtxY2TWXId5lED1C3jV+nC/enimDdiB+eWyXQHldF4N06SCEiAP/+mgj0
vdx3ZOWhfswSwTT9nLsZY4X6XwQbIm77USno/xsEj6l1A7cfwfmabKK3Tgwu
31uO9XWOCN6bR67vV0V+uCmC3VsXrVqQi/PhuSR/F/5XpzsB+TFPBItOjdBc
U4bzo/nEHpr17GfhfD4RyS92e7gvr3A+hCL+kekblpePeKdF4B5jdHNiD/4/
Q+ylVjVrmj7qK5bo6yyT9iIjYf8/wcfitLnDnyD+eZJfZZVdbZoxH4hF4Kxc
nGS4FfnhlghcUkarngrC32+LYKP2cd084XzEO0S/qtzfo6qHeLxL9Ao7JXmL
cJ/fPdK+XdaEJxzOJxSQ319LZF1IwvgsFMHtN50OtpuwfikSAUh7Wmvm4nzp
fRGoevQ+rD8jrP+LwFbF4MERSbTPQxHIXVhyyfQ52vuRCKKNqLCZOTi//pjg
037l3BZtYf+/CL4bbXvE3Mf4LRaBhJLlFbcr6P8SggfXh8fNhe9XnorAQuNT
7tt3aL9nRN+MHPhGchbGc6kIlo9ypYqF+1rLRPDUuL9vnxfap5zkR9kxz+72
Yj38nOSHqT+nyf7BeuOFCKzXNOj0nMP8WUHyb+LDc082od6tJPnXbM2VJR+R
b6tEcP3rn/PH5FHvVhP+1Tn2YPo1tMdLkh/kLsy+J+itGlL/HDxydNInfN8r
Mv7uxwGmBzEf14rA1E/B2QAwPl4T+y++LKXlhf6vE8EQk7Af2VLon3oRtHqt
Wvz9DK53vhFBkoFe1U0G+ayB8P/SXapdzqi3GglfjX4d9qdZ/99zE+HvKwqz
I8wQn80kHzm+GuTQivZ9S/h5q8+t8Qoz/j2/I/WirEFVViB+7/ye+CNJUam7
H/HRIoLT+y9Z1fhgfz4Qvlk4ftRI4XyyVsJ/mm9qE1NQ334k8ar3+FPrQuE8
fYLfBAmfURnIP5+IfTaFTPxsgPtn2gn+7xgc2vII8dNB9EqKTlyIMfJTpwhK
tcKO99fh91CfST65q7Nwuwj10RcRDFy4PHcch/79KoKJ8pU/co5je11EH3t9
MvychfrwG8GT6qEJku9xv0y3CN4uHqN0LQ/1YA/Rd28OVXRZYX+/k/gJPN58
+AvG3w+ihz5Jakstw3q1VwQ/BvcuKMhCvPSReiu+3dZoPfqrXwTV/l8OqVji
+tZPESjvetEV6on64xfpX4iBtXQb4vu3CPKWftpq9xvb/yMCyT6TP49qcT7r
rwhm2Wq4N1fgfWMDKEh0qj+nuw7zkwQFZssMAmcI80+SFNw6GdWnbYH4HUjB
ljzdFV02wv5/CmRrp13wA9xvIkXBtzgPjc+PkQ+lKXi2VHNJ3TXh+3/y/ER6
xsoujB9ZCgLsViS/mID2kqMgd7lhkkMn4k+egiu6887HLUG8KFAQPu9T9YEP
OH+iSIHrqMaufuF+3EEUqP/+OGBsEM7vKFGQ02jxKvQ65rPBFKySvz28eSbq
ryEUZMp/uvNkH9pTmYI5dutGNLRg/A2l4FW/v2ryXawXh1HgIuszYtEQ1DfD
KTBgmWk7VqB/RlBwL3JY09BjiD8VCq5P18g9thP9oUqBqqdekUwD9n8kBUtd
ZuY9HIB8rEaBdYa7cZZwv+QoCkRbOiRvjka9pk7BOFu6KuL/zzemoOfAhz+R
KjgfpEHBvnydTR778f/HUHAJVlzqHins/6dgQkt08m4ntK8mBS/X1qSNeIT8
r0XBw9TtD00Ef4+j4OhV84zNJ1z/6QdtCm5c2PtMXRvjczwF/W5fzxoORvxO
IM/FRokK02f+e9ahYOAky9PXZ6A+1KXAfIFL0Lwxwvo/BUHFWVH7pLE/kyjQ
DvkYYnsU8aNHgXJn1bxxe5Ef9Sm43PhKd1Iy6pXJFGzWfRr4eSnyzxTi39+e
ZnPMsN6eSsG66slnulyE7/8p8LDbVbsqAX+fRkGsWSejKoHxbkjsFZTwqS4P
5y+mk/bW7jbUG4j2NKJg+ZK9xSNEuF5uTMEITm9mdyzibwbxt9nDEdKFOD4T
Crzq9PSyfmM8zaRgtGPz20ufsX1TCtbv/f7BvwjxPYuCF4dDq66fR76fTcFI
Rhy95Dficw4FRo4vhvZfxflaMwokd91/YmqL7zcn+L9DJU9YK+z/p8DusuqY
w1HoH0sKUq+WbqjuwPUKoMBS0WLeb3uMv7kU7Mn3nDHUHN8/jwIpzfakOOH8
RSsKot8FfxyngPvxrCnwPBJ4XjMW9ep8Ck5ODatw/Yj7SxdQUHnKV31uCeZr
Gwq0Nqo3jyrB8S4k+FfT/jFQjHywiIJfS8IPps5DfNtSMDf/TZiPPq5nLSbx
MSzXQ6sL63E7Cp4kLUlZuBPrlyXEXuOKGya1IN8vpWCRRu48zx/oP3uC7zNX
f9YL9YwDBX5XJpV7jEA+c6RgxhftAuMKfP8yCmRWNtqv9MP60InY9z8zqY3G
df+el1Mgl3VvqkMdtr+CgvM/Pw/4XYD840wBP2xmTr8ytu9C4qkqe/j4QNQz
rhRMXdc9oln4ntSNgguD5QNCVuB4VxK891fMyShBvLpT4L+1Mm3XL8TPKgqq
HbuXlRiiv1ZTIK2sVuR0Qjj/j4KCt04KH0bh33tQcH+h6ouf2lg/rKUguPvB
0Wpt5CNPCkx3ya88p4/fx3hRsFqK22Qvg/nZm/Bj6O1llsJ5zT4UrJDbIrnZ
Gce/jvSXbQ1eNlS4L5P0T+uLy3vhfsUNFAwZPElr5XzUHxspGPquPX3/Tcyf
myhY+8N5W1sFtr+ZAvf98SHdLRg/vhSwg5ytnH4inrdQUHfHOXRkLdbXfqS/
e16EGw/E+yL8KdDPLN77Jlv4/p+CEipWe5om8mkgiW+Z+fdV05A/gyjwzthg
4KCJ49lKwdPLlWFbZmD7wRSUr9ern3cA88k2CmJyDFzVW9Cf2wmeuXSxzRvh
+3+CH7ugT+O0cT1vJwU/655uWvxHuL+LgvH60tcP70R+203y56xBsrsZrIdD
KPhoqavX5oV6I5QCnwRTo5XCfQV7SLwuC/laEIV6K4zg803pvoajQv1PwZr/
2NUFS1C/hBP8TLj1xesI8kUEBZ1zApWkNqK9I0n7XywMvwcI3/9TcHrTKaPB
N3G8+yiwl72vPVY4v3M/BbsdTa+vvoPfz0dToNb15e6BV5hvDhA89bsGiKyw
Xj9IgcUexdjSc1ivxFAwS+eF/8HDiI9DpP+Pjn9+qYPxE0v0hwlX+Wgvvv8w
BSd+D3e/8Rf1Rhzpr0LAIYl85KMjFKTXqrV73sX+HSXxF/jl1UxhvjWeggpf
Neuc54iPYxT4jlDrXBmP9kgg+dUn6T97Y6H+J3iQTN076A76M5Hwj3ul4gNh
fuoE+V07QGr4X6zvkiiwibp0zm803s97koLvgwo2X7mH8ZVMgQmru+WqNI7v
FOnvpUdUeg/y32nCPwcmLbp+FvGSQkHz81VaV1NQT5whek2F7r4/H+vbswQv
76KO9m9DfZdKQZH8tg1u/uiPcxTM11z8OXIJ6o80CqZ/ffxAuxT5/DwFLRJ6
R98ZYv69QIGKZYfb/ST8/4skv4YEvSvwx3i4RPLTrRLftPFo78sEz5mHFvpY
oD3SKcheXVvmkIJ8lEFBr4Tk1+3lOP+ZSezxaeE2c+H81SsUvL+QNkhNEudr
rxL7npu3LucS7ie9RsFX48OFINw/kEWBLlXiXiTCeuc6BV09T1tlypDPb5B8
sf30UgNhf2A2ySfTzRwlHmJ/cgj+O7Wcx9qgvW5S8Om13/Bx2eiPXPK+D2GK
zzsxv+YRPWzobklE0L/nfAo2qb8/bdaH8SUi+tJgVEz+AbQvRfil8uO9kZcw
nmiSj7qsjs0C5HeGgjdD6jYGOiN+WQr+jIndsFg4P5cj/pSN740WzrPgKZj4
7vKKiBzh/D+CF+8FN6afRf1zi8SDhPwr/wO4/+M2BY9WuVRry2C+uEPyne7W
caUzcfx3KajxProog0E+v0dBI/3y2PVe5JMCChYPiHl3TLhvopCCZeXfNu59
h/YqIv48pCZlMAzPt7lPweTdsPlgFdbzD8j7ojpe5GVhPDwk/e0z3KYunE/9
iIIwt8/r4ObSf8+PCf4q78ydvRTx84SCadGdKrticb6mmIIMna5zz1QwPkuI
/hy6oKDDX7hfnuS77bxy3hPE8zOC3zFGH35JCef/Ef3lF5XlV4v2LaOgzXTf
X7OlmJ/KSTymTD8XHo7x95z4M3RF/+hSnP94QUHrEIuSiasw/ioIn9Vsm/9x
Ld5XVknGo3GoRLYZ26uiYOHm6xuaLuH7q4n/8mYtbHiN43tJQVNa8Yo24T7Y
GsJv9738mj9h+68ouOmusaNJFv1TS8GoLZP1Pr7C+HtNQfvHIo8PNqjv6kh+
yd9X4qKH9qon+XR5wlijjzieNxQUZpyTWb0A47mBgu2talr1ozBeGkl9MWhn
6/szmH+aKMj6MmfOnmfov2aiV8bLJtsnYP59S/5e0jqgVPie/h0FG3ZH3r5y
EO3/ntRHPy9vGF2L8dNC6hH9L8ZDc3B8HwhfWBwslSlBPLZS4PBC9+/wKxj/
H0l8K8adF8ViPLVRsGNuorLZE5zf+0SBY3iOx+trwvn6FJyT/K5YvALzWwfB
v0eD7AQrrNc6KXjQo6tmqYv9+0zBfzufSfG2uH/+C6lHCxU3fzmC/vxKwTC5
j92X7RD/XRTUK+V09IUo/3v+RoFzMuM38RW2103yY2H85jvCfHgPqf8cjJfd
EM6n+k7BzB1btD2F+fsfFEQNyZ9kdhXt2Uvy97cbmTHl+NxH4i3GcptaCPq/
n/z/DF03zduo/38Sflt5bdML4bzjXxTsCqndryPcN/WbxPNaf1PNXNx/8oeC
2/JXJVXksb78SwHTO2RPsHB/3wAaKpS3rtN9jvWMBA2r9GvZDEu8L1eShoVX
3viMihP2/9NAa8XoV6YK9T8NdrkVsYdKcD5NigYYFtyjmYp6WZoGcb5M9cVK
rAdkaHg4fvHYnQ3oL1kafNckd86bjXpDjobRTw0609qE+wRp2C1j0VSVjfyr
QAPzUvu5xDjEjyL5vdYx4cJP1EuDaFjSXLo8ugLxo0RDXOrIjHAP1LuDafjb
diLIVwbjcQgNVgHfp5/djPGqTMPMsmq1096I16E0dMxTNPb9gX8/jIa14ziD
b9/wfqXhNFhrDT0YOg75cAQNj8brzUoyQn+o0CCxT5nyrUe9o0qDf71USWIm
7n8YSYO3p+qW1Xa4n0aNhuuLLb8p7RTuM6Qh28VVIkAV8a5Ow89hx44Ev8f9
0qNpMJ75pnbjHvSvBg0v8uYqWJngfN4YGgaeneZhswP5aSwNVzd1b8s6gfjV
pKEvxHBB03KMZy0ajNoVXe/MxPw7jobtSaaJI0ZgftGm4dKOsc+GKSKfj6dh
j0X3YgVjtMcEGkx0mCLPjchPOjScqrFUze5B/talIW3wxAN/RuL8ykSCh94J
+78L80mTaNggn6skU4741qNh352O8UMdsV7VpyH19VbrCBf8fTIN9Y2nK4eo
IN6m0NBpfLBitxv6ayoNzxjPNL8g1GMGNJxRfvDL6jLqh2k0TKcH2S94i/xn
SMOfHTXdj27j/sPpNNx8Y7EiMgzxakRDs/of7/fW2F9jGrboqfVkC/edzaBB
L04jgRfmm0xokM2fp3ZGHfszk4bLSqmvez7j+oUpDU/v76KU69Afs2hQbpk0
bI4Y9eZsGmqDW81GCOvXc2hItKrLmuyO8yNmNIR0aKWM34rjMaehzEarvfUk
5hcLGpaZJqQO9sb2Lcn/X3kcnJGM9TMQ/yytKHtoi+vrc2mYo6NtoPMB428e
DQ7qQwvO2eH5alY0zGi/4Vbih/aypqFqmfqERZnY3/k0TF5ycPWKJuzfAhpm
b94eusQC7WNDQ/FpOCbdj/XUQhpML9adN1qG+xMWEfwN9k8/dRDj15aGoPG9
yxx90N6LaTAMzaz8kYrxZUfDir2TDx4XzjdYQsNXj3wNpT4c/1IaatYfUu3T
x/iwp2Gai/HNwFTcb+5AA9Uw68y9ClxvcST2X/BNvFg4D2kZDZ+kJQ5YV2N9
50TwdTx3ddsmnB9YTkOgmkdg40qsF1bQINX7NHy3FeZrZxosrtQ3Kb9EvLoQ
PIZ+ViyvQXy4EvyurNDxP4784EZDSux0i4GGyP8rafh1uYx6m4D52p3wwasL
98+n4ftX0VAYITtNRfDvavL/6g5e2crIF2toSFCYUrBEG/OZBw1j39VGbApD
vbCWhoNO2+IOSyKfeNLQbzo2NFY4r9OLBvcEK9vH+3H+wJuGrPMaXTfHIx59
SDzw97ZE62C8rCP5IXPb9tIdmA/W09Do82xLq3A/5QYazEPHVtrG4fkQG8n7
dhzJarMR1v8JP5gXvri6A+uDzYS/Tp8vmJ6H9aEvDS6er59r9SJettCwfPUH
hVlGqI/9aBg0dpPJruWYz/xpGKLmrvbNH+0bQEOBXulKXWG/biANvXnTjwwe
h3gJIvzQeSdo9U/M11sJP+3eOP1MHdormIaLxovsklciHrfRMCy+Uv3zV+SH
7ST+3a+2LTDHemIHsXf7vqHzOBzfThoiPzr/t9oY+XYXDW475fSk1mO+3U2D
fbeM3c5kbC+EhgE7I6fPVkQ8htJwbpPZBtoJ7b2HhqP1Te+uJCK+w2jQvP4z
rm0pzoftJfg9GOMnJ5w3HE74pzncIbkC66MIGurG1I9N+ibU/zTciFobNDYK
64coGmxmLZo+0Rvjax/RB7SUY9pcxMd+Mt7C6wUDtmJ9Fk3693DFt2kluD51
gIbuSw0lx/NwfvEgyb9+A353vsL10RiCB820EuN3Qv1P8nlw3gzZQYjfWBqi
P9rF/hXOGz5M8LC8qT1PRdj/T8Mb27Rw6QB8PkLyU8/Na7+F+8CP0lBto/14
+Ddcb4sn+ZINGmxVhvroGOEH4+zflS34vgQSL8NPuD39i/46TsP8qBWpXfnI
h4nE3pyNTN8+1McnaBAFZT6ZbYXvT6Lhx7OW4cOOIl5OEn2jPLDndh8+J9Pw
ecyvRzs68PvMU6T/2g0+k/+ivjtNQ6XZhIZsM/RHCg3lQUWmnCba7wzhkz+X
QkojhPvNaWiX1VlduRHtl0rDhZ+dUgN5jJ9z5P12a2cY1SH+02i41fBz/0ot
nG87T4PnqAOqartxP8QFGopOdhcoP0T+ukjDl4otdlFyqLcu0eB1Ssb1z3Hc
P3qZhvgj1t2/hfnvdJKvfPLafBZq/3vOoOHwcrFL2Rbcf5lJ8o23gXOhubD+
T0PPpo5FzZVo36sED5VbZzQ5oV67RoPiXmm5wftRv2TRsDEsVGm1HO6/uE70
SdGMLeFVqA9vEDzL9/3xW4r5LZuMR6qt3+8gxlMOsZ/sh2dN2cL5f0RP7Qk/
KOGO/cml4cj3jRugAPGZR55vxD4Z+xf5NZ8G3RTq0LBo3C8gosF10twdtXeR
LyjCP0cnuOQeE/b/k/YVAn81tWM+ZEj/i4bYXXUV7m8l+evSige7aeRzjvDZ
F/XW9Crka56G+wtTZSXKML7ERK/EL8lVEM7XukWDpfXw6KmBOB9zm4Z0u4cV
w9cJ6/8k/ueBBi/Ut3dpCHj64QLji/2/R8OJBY67YSqOv4CG0gzVgqiPqFcK
id7t3W5uFIb1XBENzv1xLzqE++fuk3wsWTPmjx/i7QHBa9ZoZ/s2zIcPSfxd
fJLWY4f89IiGqFIrevN4tOdjGpzuFNblfkL98oTgd9q+4qnmmF+KiR7XrZSO
uoZ6tISMR2ama944vX/PT2nQiIv33fYS3/+Mhm3rC6KOGWL/S0m+/q4eeXEZ
xncZDTuosUebhPxXTsYTZHV0mRPG13NSD5hW5GUI54+8IPmvY2KjcTPud6ug
YZLsy+DPZm/+PVcSfmBLf4z1wfN4q2holfkCU9OQH6ppOPb4Md3pjvn7JYlv
6oRT1lWMhxqiL2t/S36YjHh/ReLlbVWCzBGMv1oarr1UisgJwf9/TcOs6Jtt
gfsQD3UE/y5rmk1ScT6znobvMTKdxh8RH2+Ivy0k14y0RL3WQOqh41WpK+6i
PRppiPll9ODvOZwfaaJhpLLmAdvJmO+byfvfn/pwwRn5/i3h18Te93tNEF/v
SL1hb7JUyxr58j3Jp+4ys4Y2YX5toeFO6ev1fecRfx+I3sjTPjY4T/j+n+QL
zmeV4k7Mlx9pWPr56VK7bFyfbaPBZ+Tpvrtj0R+faHj8ImhTjSXGWzupr17x
r9XthPP/SL6cn++oORz1QSfxd7j1pJ5s5L/PRJ/ckfNIP4n57QsNx+tjlr4o
wfrzK9EXDc6DOtfg+bJdJD41C+P/uCAffCN/L/WOy96O/NFN6mOX+0p7fyM/
9RB+DA/QbldC+30nfHtweVPDBLTvDxKf3ycMeB+C+OylYfE+pat+JhiPfTQo
HZx2e1AQ2q+f6LnwZ/J+jcL3/6Rea/w0VCpOqP8JH03a81t3Buq33zTkZTv7
Zwn3efwh+Ve6TS9LFv3zl4bkWqdbTRdxfWgAA2vXzC3++hfnXyQY2JUdrZI8
DvWuJAP7l9+weToK9fhABr696P+87huuR/zHwIPFZ1ILPuB6lRQDTrf7jisd
w/5LM1DY0Dz5pPD9lAwDI4LZyB2ZyH+yDNx8cYD/YYf+kGNg0TEpq1Th+2J5
BpqNrtr0u6H+UGDgwNJBv1JeYH5UZEDhzCPvcRlYfw5iYKjKKNtUD+QnJQYa
Uh5b33NB+w5mQNJBvsbXHPE8hIECq5mfMqdgfCkzcPnYzfDVy/D9Qxlg7Rfu
jvyO8TmMAe/Lk+WoGDxfbjgD59uCm/PuY7yOYCDq9JM4k+NC/c+AxOpVU/JH
IL5VSXtzr73cIZzXN5KBBTeSUq2OYP/USP90z+mWHsN4HcXAuz8qXeblyM/q
DJwoOmQzLh37N5qBadNXVXNbhfP/GXC/M3jAFVXUw2MYOHl0Z8HZoYiPsQw4
2BhsWn8B/aPJwL37kUEHO7G/WsT/Jta+rn2Yj8YxcKVcTTl+EsavNvGPc+OD
wzexfhvPgKFtpl0tj/6bwMDT/cFT9IvQ/joMwOXn1dk+GA+6DBi4vY9fN1W4
P5kBR+edP+8tw/dPYsDZTGV0/FKcX9Aj73dSHzPcDvGsz8Dswiu5mYDrI5MZ
mNr/ocBCEvl5CgM1y7ymTzHD/DKVgdCT+SPa9yF+DRiIfFL1Nnoq4nEa8adj
4I+OHORLQwZenTPf/vMi8vl0BgZt8Dn0NhjfZ8QAFz961jlhPdSYgX0uP6xt
TZCPZjCg6rHq8Zr3wn3NDMwLCjp0PBD19kyCD8PQloEaOF5TBoa8+nt2rjXy
9ywSj7/ilCIisf+zGTiqf+mAeinWM3MY2Dbx1nTTFcj/ZgxU/1mzNbAa+cWc
+Htv4Tr9k7i+aUH6U1SmnHsD85slA3YTky0s7qAeAga6jk1wkHuO+J/LgPGh
vsSkQOSzeQyMvn52b7iw/mrFwIeGqxvXPUJ+tWbA7OHvxplz0L/zGTglMfnu
0Fbcv7mAAT+D6J80hfi0YWBltYOhfRviayEDh3yzMj54oH8XMRBvbFS4qwH1
ky0D2YM8vffdQ/8uJvZipG4/zRTqf8JPRhcTrT+j3ljCwMtl3lZDziA/LmUg
Ru7GaJnXuN5iz8CYa4lBp04ivhwYmJLZn8UeQv3sSOxrYmiwvxL3wywj+Lje
3dsmnEfsxMD9CescGhvQXssJX6xUXNTdgPlsBWlfMvzUeHXkN2cG6jo+yV+s
xPzkQtob07taMQnzmysDCdWvC0a/8vn37MbA279DmgYMx3hdycCcn0Fqt8Nw
P4M7A8nBR/aPOoP6YhUD3zmZ0VPqMP5WE3+rn3XpMUC8ryH4fGC+01hYH/Ng
YEXKl+RxZbi+sZaBkYsWLY/Yht+reJL4PFEVxM5G/3sxsO7LEoVt9zF/eDPQ
vd+oJS4f5899GFiVv2Cnshe2v46BviWvy2oqcf5xPeGvYekGRZGIjw0MVCa3
Xh89C/G6kYHNOx1OmDQjPjcx8Pd2cOJcJcTnZsIfw1Ur9loK9T8D8+3TrvXe
Ffb/k3xUvDPerAz968fArTOlsZotGJ/+BF/eA+yDv2P/Ahjwf35G8kYq7gcP
ZMDHcLtXtg2e9xLEgKtr7DD5HOH7fwZ26EyImFiMeAlmwDK4z71iJcb7Ngao
uRr1x2Mwn24n8WhonPRQAud3dzDw+W/f1pczkQ93knw3Rql3s6Sw/5/kn7nS
VX6m2L/dxH9xkfp/APETQvhg8q5Y4yas30NJvDobP5ogh3p4D4mnr0sNtNcg
vsJIfsgIq2vPwXjYS/A473kJnWH67zmcAaN5XUGp9YinCAZK15zaqTQV4zOS
xHfsF9cuTVzviyL8VXAh5YEm1lf7GOg9e/np2zyMz/0kXvS+7aT9sb6JZmCp
sgN3VRn56QCxz7uX6uph2P5BBlrnhCweI5ynGcOAi//A8WeF8zMPMaBt81jp
F4v4i2VAR9JjYOQ6nP84TPofnNU9SwrzTxzJv1IdfjcykC+PMJDn8Zjp0kR7
HGWgKS3INlER+xdP+LzES6S0Wvj+n+D19rkA1UGYDxIYCDJ817jyCdbDx4k/
a/Rf7vBF/ZdI8BipVzy/HcdzgoHDXxLZeCv8+yQGvLYbTk4Uzhs/ycAe9fyc
rerC+X8M/ExRTZEUzrc5xYBtTHoAU4D4Pc1AeOTjl3KDcf4ihYGD7Q/2n/gt
3P/HgG61g8+Twbj/9SwDW3QCk3dNRT5MZSBC9uwBxUeoz88x8HtfwAJX4fzT
NNK/ItOOvYB65jwDi6cmFhgK541cIHxprNQwSwfj9SLJr7Xq3NlUnL+7xIDy
iZvLVuqjvrjMwAZJ65SaLDz/JJ3g90zGsB1uwn3pDHy8+GkhHYL1aSbJv5cj
p1oaY/xcIfkjL8+yejy2d5WB1VveSy8T1hOvMXCVmdTm3o18kMXAdPMwyene
qJ+uk/zio/mxThrj8wbhkzN7c+b6ol7KJnzpfPfbtxx8Xw4D64ON/Lmdwv3r
hB82Jdi/Er43zmXgrmVSzqutmK/zGGipUhlmKOy3zGeg7NCoJVtr0B8iou9s
9u8Z0Yv5i2KghH+Zl7UE50doMl6JYXHzfZDPGQbCmOzjOUdwvplloGPtlbPN
k3E+hiPxOpZ96/4d8zdP+uNsZ7PAAOsFMfFfZPeCdzTqxVuk/yOSu+rFyD+3
iV4W+1wLNsX33WHAyiP7cSSF+vwu6Y9s9CYtd9SX9wjfZySaObhhfisg8WwX
5e/nj/4oZGBgsOX7Ol2MzyIGLs0KyOjMw+f7DNATpUdqC/r0AdFfpzILZxxH
ez9kYO7w1KsdQWjPR0TvDfHSjG1Aez5mwGL4mOTlwcL5fwwcMXK6tKAD47GY
xLNUkUGAPsZvCWl/00RPpa/Yv6cE39OXmk9Lw/E8I/rh9lTdLcMwv5QyMNwx
f/SMesRLGdGrR61sgxjk+3KCv3Nvhz8Wvl97zkBu81all4WIhxcMvNHwK14i
7M+sYECv9YLtlf3Iz5UMKErey+xtQX6uYuDM7F1KO7cI6//E3t6f3O/6YP35
koH0ROUpjVMxHmtIPtIJOX9tGP7/K2J/afHRS28Rz7VEb5gPenPtJo7nNQPv
vURhqc+F8/8ZmNC7+t6DDBxPPdHHi/7T+Kgi7P9noPik29qms5b/nhtIvCe7
3XnzA/VKI9FrETUeHp8xXpsYSDn0YdYuR5wvbSb2tjhoErkQ88lbku83Dvlj
Fmz07/kdac90e/KsF6i33hP7vG0ykRMh/7QQ/HXnz+uci/j+wMC188HlsB/7
38qAaGCe1xA5zI8fCZ/5jn20RwP5tI0BZvbnSd8vof0+MfCrdXysmwfud2sn
+JfXnujuiPbsYCDua9dUrcOIr87/5SuVjGMl6P/PDJQru0sdiEH/fSHtlV7L
3eaD8zFfGai4c/D0vqlT/z13kfpSj5LXOo34+8bAf7tvKaZ7Yrx0k3z7aHeP
1BCc7+4h/XXRqV3pIOz/Z+C1QsKjdifkix+k/YkVWl52eP5cLwO7/9ibvVPF
+qqP2L+nbbxXI+anfqI/btunuj/A8f4k/HO83NwzEuuVX0RfKURsr4rGfPub
8E/YzJ3T27C+/cNAWtnQ7+sfon76S/A07sma8cJ5TQNYYFUynQY4YfxJsFAo
Y3Pg2C7Ue5IsTFN3q94onH84kIVf/XoqvZ9x/vU/FprVFMd8FGP+kWLhjET+
yK9PhfP/WLigVbeeOortybBwadCIDc/XYP0pywJP738l8Rv9LcdCdGddl2wm
+kuehSWu9naR93B+T4EFnZV0tlIg4lWRBZnMiRsTEnC9YxALIzVyOyLykA+U
WFD/6vsu+zHq3cEsZKXMG3UsD9crh7BQeSk6hh0y/t+zMgtGFgeWJOfh+Y9D
WXiudkfNGxD/w1jYVpiwZo4GtjechVvzn+Q81kD/jWBBrC6/y0kN55NUWLDe
XBzhcBvzrSoLwy4+Venei/l/JAsSvnKedgW4f0qNhfYHDo8lhe+pR7GQceHa
nstv0Z/qLOiZTZlmPQPjZzQLSrHx5X5Vwv5/FtTesTm9Zsg/Y1hYfy8h/kkF
xvtYFuQqnjRPtsf3abLwovyY1bdCtK8WGb9sr3OBKcbvOBakfrVfzVmL/tVm
YfZ/a0e7heP87HgWdhTT4QduCOf/sfBo7R3xRFP8XYf8vzdvYtiM9asuC3eP
j42rNMT8MZGFId/kHXv24366SSx0mJhk+uxD/tdj4YC30tb0KtSD+iz0DZmr
ZKiP/p/MwsRWX19ZBeTHKSyofpr9N1cb9dpUFurXKM/pfSLU/yw8dIp76xaO
+nsaC9Nz3sg8KMT3GbIgGXM69p1w/t10Fk7Ev1+kaojxZUSelf1d24di/Bmz
UPf+iopHHvpnBvGHpP/pUcL3GyYsWI31N9ccgnibyYJZaP6F/D5c/zFlYc+r
Jwe7/HF/zCwWhnpdLU65gvNrs1k4ZuCeeFJV2P/PwloT26l3ErF/Ziz0XPjV
6bsB5yPNWVjxaW2Low+eh2PBwhqJUeO3bcb+W7JQkv0ytUfQe8BC28HDXy0P
oB6Zy4Jbx+mZvfXIp/NYaFi0OvenoA+sSPxETpmiGIX2t2ZBcef9DR+F74fn
s3CPlwjekYHzJQtYOJw8bVuyEfK3DQsqK7N6HR2RDxaycJ1d9SUtA/G7iOBJ
fEjWTR/1pi0L1OhFp6yycH1gMQvL9zQGbrmPeLMjeM4yt9zYhvXaEhbyM1bN
KBTO+1jKgqztUC/dzbg/x56F+F8VrwecQz53YGHG7hC7usE4f+jIwv6Bu2+e
OIz4WMbCwDkjLgxyQf3lxMLepn6L7aGoj5eT/x9x6eO9G4ifFSzYMO+ljcPR
3s4sbHAfVbn1ENrHhYUgv5iWS8L5zK7EH6rz3zu3IN+5sZCi2PRMzR31wEoW
uP9Kq5+7oh5xZ8HVq7iYEfYvrWIhZ1JdUG0z5pfVLOR6fyu6uE44/4/0x2mS
10ThfA4PFjwiGG/vLuSftSy8fffetWcV9seTBYNlG3WuWQr1PwuTVJc1mV5G
PefNwqi/XhEqazHf+7Dg0DYn8GEr2mMdC8XzlshnbcL4WM/C1/LZ+ewHPB9j
A7GnRP7JfC/h/H8WPr6O2z76g3D/HwvJUhpybbdwfnAzC+Ma7qgrP8TviX1Z
OPT58ybvvVhPbSHxYf2s4scrrJf8SD4yX2OlJY/5zZ/8/QFz1UUtaK8AFrwe
TNuxRQrnkwIJPlW795lmIL8FEb4646Nzx0/4/p+FV7L7pQdZI18Fs7DvvGN+
/CXh/H8WZgbEG1p9xXywnQX3ddM095ghfnewYHibW+Y4BvPdTsJvSn5BnI2w
/k/aexihtvAP4mc3ya+hKaoBq3D9MoSF11f3Je6ux/6FsuC7aJLNr3TE+x4W
EoIjODoR+S6M5KOjp4/DHOTzvSyYrPuYX6aM8RLOwjnZNN0Yefw9gsSX5HWp
Qlvk+0gWXj4zurehFOuJKBYGxLXLZwr7/fYRPvk8u1r/MfZnPwveA06cMhbq
m2jCd0/oGmoaxs8Bku90joRqHUB8HGTh79Uvv7/Xon1jSD6dtG/GiotC/U+e
z77cdssC5x9iWbg941HZ7k9oz8MsrLyxwi1vDMZvHAtPSusWO19Hexwh73/8
umRdJeL7KAs+zh3aTxbh++JZuJKuvH4EhfY6RvArXng8djH2L4Hwm/bsxj8L
cD/hcRbenGg7ZFGE408k+uj7m+dN39H/J8j7NCvLIsdgfCaxEJD9bGmBFNYT
J1m4kT2hjJ2EvyezUNR0I0FqH+LxFAuxmXMkcysQv6dZyDs8/twTCWw/hQXm
z8TtxmbC+j8LETWrC8YlzPn3fJbw/7wrRvrp+L1OKtFTR03bLo1C+50jfDq4
+4ZXHOItjcTj5t+mo99jPXOe4OndAbcB/+F4L7BwtqpUtMwI8/VFFj61mI9+
9Afte4mFse6rT5skCuf/EzyJ3Y2mm6PeTif93XvntX8C7u/LIPy4rU0xei7y
QSYLw1e+Lo7pwvtcrhD/JnYN2P4S//8qC1Oflj64PAb1wDUWCnTCy+ffRHtl
kfw293yb/nmsb66T+B7eNyPZA/Fxg4xfunRI5HLkp2wynuvblrefwfybQ/pf
xX0+qol8cpPwb/L2QK1hyNe5LMzd1Xoicayw/k/is7/yjkcxznfls6ANS93b
s4Xz/1kwrwo9dkJry79nigWXxUvH1ozD9WGa5J/InrS8ETi/wxA9GdlR/dEY
8cgSPAWGxS2Zgc8c+fv5x31lxiN+eRaiRj+dHNiN7xeT/Ep1zYmrQf67xcLq
OIVTYx3RPreJ/pBZMXLlJ8TLHcLnCfLx0Tno/7sEX+culz4W5rPuEX90Dl1g
04B6uYCFawcNToxIwvcXknw5PP52pTbiv4gFBV6nua4I9dR9Flo8S0ZOtsP9
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
AeHj7fnfnj3A9z/k4F3+hZJMFfTPI5Ifi7zMWgHH+5iDJ67WpplzcT7hCXne
l2bm4o3tFxN8rfNWeJSP9V8JB9Hrs9Oc3PD5KdFn/o9m/6eG/PeM6NtUvSVa
P9C/pSS+P31LW7cf+aKM6O3L0aO/t6G+Kefg5xfWISca8fWc+Pf872EjV6Oe
fUHiSxQzKEAL9WAF0e9Dk3+Un8B8WEn0uH2C6YoziNcqDmq7xXtSecyH1USP
OquGNPB439tLgs93R1yf3xK+/+dAb2PP3Ql/sf1X5O+VVm3uvIJ8Ukv05H/7
AyOn4fNrgtfeB4l6dvhcR/xD7ckYsxnnD+o5cElNeXxtFMbjGw4+OhWrgHnX
7P97biDxPPFrq1M86rlGku/SWmVSfuN8RRPBu88rvZm7sH5s5sCNjtQ9ZYd4
eUv4SOuGT9UOtNc7Di43RlxWTML7Q94T/Wa2xDZhprD+T/Sdk1/b10rE5wcO
rtwqMbEW+KyV6GlmoNORM+j/j2T8M0d0mHrgfpE2Dra5bL/ZNwjt+4nUnyEL
QybswOd2Dgy2JjqN6sf5jg4OBj97lrTqJfJpJ8kn6lyAzWnEw2cyHpVVlbOW
I3984UDZseCez0XUO185qFg/aNauYuSnLoJfF+kR2zYhfr8Rf8X7+DSqYvvd
xB8vW2wagjA/9ZD+OvlsXiCN+PpO+K9sxXNnCvn2B9FfC9o9Ny/E9npJvfkt
aoK+M/JFHwc78r21jS9g/PUT/t72ptLeEfn5JweOS4fOOK+D+fIXaf91ojeb
jevNvznYPN/IU/80nvfwh4Oz8tVJZRLIx39JvD8OGDDfBfXwAB7OqY1eX22D
+w0keHiVJTH6zQ3cvyjJE32yQFprIc7nD+RhlXWe2tlSnH/8j4ddB5bbvI9C
vSXFg5JH2cT923B/oTT5vbostMNeOP+fh5qnp7x7rTBfy/KQOq1GvtoM8SXH
w9IWv9qRmpgP5HmQWl7ePmw75h8FHgoHuOi6TEC9q8iDXL9+ZUIT8tsgHqbb
RhTmzEO+VeIhPbdcr9wB8TWYB4+LNfOyynA+Zwj5PSmanfIax6/Mw6yVTzeO
bsX6YCgPV5b9WDxgL8brMB7S3H980BX20w4n4+16Ln3gL/LLCB62LTaUuq6L
+FXhwerG8VI1QD2iyoPd9/tcgrBfYiQPd1dPtcrKE+p/HjoHl2pu2YjxO4oH
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
fp9LqonP8hgIi3l/9NYzGn8+5qNvYxOfXKP1FKK+XHDgntl2yg8M6q8LvT18
35F9WNSTL+ydE5aRvuEwniPWD+ZlSK/xDGwtsirx7SL9LWLgncbVjfs20P6y
mIF/t8eln5ilI8EFqEfM+gVtnEbnlwtRX1sP+WI2hPolRciHMsuO3YilfsV9
9BejLb9Mv1B8FzMQmgppbV7U33qA87dZI3P2K+XLh5hfDcIuLV1E+eYR6lPN
qe8ePiU9+5gBa2NIzZc+H/UE4ymjTUPdjPRNCfpvwwQTzQxar1IGCrJ2mGxL
l77/H/9+hMPPlQL6/WcMyPZ62lP0lfrVz3G8/xLdBs8n/3iB+rrtgvmB3xR/
ZQzYiebkPJc+X1DOYL2bJuD+kD+8RH0dWPPrwyTS0xWoj097lMS7kj+9Qn3i
di7w8kni69cM+AxTPlR+gs4nvGGg43mJ7f6vZL9K/PsML++jp4kP3yKfiydM
5qT+VYV8MMLVcJ/bIgl+h/m7K2Hzi3KK5/cMiP/rivsgfb6+GucXWf1j2mzC
H5DfZqlcCfhG+wE1DNzWSNzU/wbZqxb12H/hxW33pOf/GTDut/P13oNUn9Qx
sGCa8xU3R+K3egZ6D7/bo/iW9EMD8lmq6mWf0aQ3PjEQ9/jTtud59PeNqL++
NL9ee5P2z5uQv54aCk/OJn77jNiy8rbVbNJXXxiAoFVjJgWQvvmK/jGYE6bp
Uvw0Y732K9BllALdr4WBW3kPOvaMoX5aKwNm84Z0u0r3O9tQD2VEDVevpfzU
jvrMpKBRpoO+J/EN+bdTRv6ZIT1/34H8sjZNf+4Aqpe/o//cWnnsb9IUCf7B
QLOj1493d6Tf/8N6KSYwM24G+UcnA0zOG1Xl4ZRvfzGw4pD8iwF7qL7qwvku
9PUwUiP/+M3AhFHu88y9yR//Q747nno5vZX0TzfWrzULxjkYkj/2YL3SW2fj
Lh/S/38Y6DQPernpJK3nX8xP9o6Loz2I3//hfDq37VZ8ROsjw8I0zZPj1quR
f/ViYVivcS5MhPT5fxbMo2rSJkvff9yHBcPUKQF5AtILfVnYVnljZsJesrcs
CweXCLKG9aZ+Vz8WvO5+F2nvJD0ix8LDb2ywnPS8pTwLqsaNDzJ6qF7uz4Lr
f2Zzs+LJ3gr4/57GfotTyH8VWXhsrbbNuorysRILDr1c5kR5kl4bwIKcw6jD
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
/L7gbe9+fQGx7ge7rFf3MH8RHLupq/gvYTD6a8T918X3ZMli/1kk/b8d2qP1
1bC/gjhgXd7DMUrwr1EcSwyTqxREQV8R/5bZc/ODMfKzaI79sE9dfr4H8ZvY
gBsgWaGC+txhyrccN3+YEIj+IXHo6iDjL3l4/hiOfey+I3gq6N1vJyCOO/fz
un6L6H3I5E+O3UztSMTnxLryeab7NuP8zVHy1+LyDV1rEJ+JY2qf+qych/N/
sZSPVHo3PJLG/MX+z18PtNfMRH5yjPLXGM/oNa6oHxJ7Ont9qpNG/h1H+kEt
8NC579a9nxN/GK68PxXxWOw4rY/bQWGlD3vP8wmI58UbhO+6iv1H8eQ/f89e
sigS+pU46Ptb8afxGN8E0td7pylcnw77IJbbcCX7BIfxS+RY/Sb7IbqV2D9B
PHlUditLxPvOTtDzcLEdtUPRnycOHDv13sydyG9Pkj4xS9IOGo76DnH7vMiv
ihtQf0oi/9r3lPWrh9BHxKuNF2cGmOD8xyl6fvHNTRGLML/E28XYHH8P1JdP
k32/Wv9xy2/UZ4hbruoEb5sI/5hMekQzLToW/TIBcf8Rz7rd++PzMxz7+f5I
B9eMvydeohowVPUM+hdnOWZ+bWzkS5znEBArySiuVRHd15FC/nv43sVzB+L7
iQ+/V5zTYof4d45jWu6zn19PhP4n7tO4c3uZGeJzKulZd8k9dtCrAuJWTYWD
2uHQj+dJT8iyEDk12Cdx2pQ7dkGZsL80+v4L+rqBx1CfJ45ZuEdH+wn8+wWK
VxFbNyn5Q38Ry8a8/8/8JtZfOtlXy8UJdg3In4iL9m+yjtiEv7/IsVjZDgPO
D/ZHfOV47LptB6GfMiheWmrnq9rj/xMbOQnDC7pw/jeT9LLnAtt+rvCPxOey
MgK6ZZAfXqLxrLvSUnkZ9kO84s3NrIWfUF+7TPFrqGVwkRbyN+L8jMmhE09A
P1yhfNbLbF+xA/pfxH9eTBxzXnQ/aRbp4fFHokfFYn6JwyKOft9ijfG/Svnf
toH36+Wh34n1PvgF6S5Eff4axa/OrNaEyfB/xJetczNKMlB/vc6xEe8r3vwb
jPkjTo0cqOTDIb5n03p+ta/hWhLOvxC7PMq3y/FA/ewGxevGWe+OH8D4EctV
ldcF9UN/8Cbpr/hFWskh0E/EtnnvsrvKYR+3SE/rLLl4SAb1B+KggYbu637D
P+Zw7L3MwQGarb33MwmI158O2pHyEfvbb5PeertOrOYk5pd4RMLyLv892D+Q
S3rfV7lzWB7WP/HPa9yRfYVYP3cof3y/+3O8B+aH2Njq4qGdK3BfQh7l5wKu
+Ns39LeIPfnAXRfNoO/ySY8dv3S9bBPiI3Fu2/67nu+xP/wujWdSgcaDHXg+
4pgvgxc7ie4vLeDYmg+fDmhrYX8V8a6Tbontq0T3fXHs25Dw4j3G6L8SdxnO
XPH+B9Z3Icf8svlH55OR3xK7lTuekd+M/I7jWPYFgdaFCNg38RTLsja7C9AX
POWT8vMWfJyI9U28s+nRHMcqrA8hfV9yzMsXV5GfECs4f+If/4f8v4i+P/Cx
UXBT734DAbH48T5WAwOhn+5zLCSAhbbsRH5EbN0c869HAvlVMekl7T6DZplh
/REfKLBanpiP53tA60nosjlvea89CogTXv59IyO6b/8h+TdFdsCuGPNH7GM6
6s+rNThfX8KxTNkvW8v7oD5OvKj+wC9n0X3jpeSP9W6mjm9B/kf87rvpi65l
qD88ovnW2hmx6ALqp8QhQzLMFRsxPo8pfviNcNDf1htvBMSc+JVb9aL7tJ+Q
f+8cHn7rKD4nrrlW6is+qLefJVbGsZWGf7RbbaFviINmpJ5xrcR92OUce/uf
wWfJ96gPEgfmvMibHiI6/0z+KaWkRmYR4h9xqZhck2QOxq+C4n0fOQmbBuw/
IPa9OCE/ZJLofDTlZ2lmoVsnoT9GbPezpXO5qei8NMeGpD15bK2I9UXcUfXL
2x/2KFZF+e9+76BPi/H7iOUWKCbFX4V+q+ZYW9G5MlkV+C/ifa/N/25Rgv9/
Tv5YxjrexL13vATEWnucQ3ts8P01HNPeUXY5enRvPBYQz18WeuGlI56vlmP7
axXvWf7E/BDnxpyWfvwW8buOY/F+2/dLlqN/Q9zVpjGmTwT0Tz3ll9Jbv7Ti
Pl4BMZ8lGPBH9H7iF+Sfjnwde+oK9AdxzcpgTflUrK+XHKvVTRkabgJ9Rnzl
5HjlsCT4l1ccSzJUDNd4iecnFgQn7MwXR37SwLGSCWO6bSZAfxILvgrXdGM/
kdhrWm9a31ZHmmP9Ekc/PhG00Bjxu5H0wcfu6iE/kb8TX8i/tV7nDPRVE8fs
X92acMMO9kVcqP5pXPNCzH8zx/7+WBDqLI76PnGP1Ch9Dv1EsTekl6zm5VXP
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
TMNYAvPD8+xhB+9v+QD5HXHNqeBITgv+R0j+tt7G4vB9o97Pif9mj3+xMxb7
V4tIbxmvmVYvjvNVxEK197ttTyL/vs+zjncBmy7Uwf8QB05fm2n/Ed9fzDMP
y9C+n/Ohf4mlZ4cmDtgE/fqAZxN+m16aEYf8iXi0zK9hrxvm9X7+kMZ3+XTT
M4twvw+xqcGrXxXPYD8lPOuXMdBoYjTGn1hnQKjR0GnwD6U8O5ybP5/Nh/8j
VmvwnXxmGMbnEc/M5PaerRoL+yAe3aSQ2xyD+uhjyu/b4l4PTMf+JuLEFWe+
K3v3xluxJzzzE7+SqjoM8ZFYP1Cr5lQP1k8Zze+SAAejkKW9nxN3/Up9c0cB
+qScZ5FhW4PuRWN9EZf/nT9723bk5095trPA2bVBAeND7HNeSnanO/RBBc1H
ZVbenkXwL8TX1rub1zHR+9Fo/riu6d7hiP/E7ivEls37AX1fybN0hbalUgWI
r8StVTPmKVWIzv/zLDzg8IeBksi/iEeZ17Yvc4L/q+aZZVCHRKIu6n/E22M+
zPD6ged/zjOXrykS3yIQ34nVPUMP/16K+FrDsxma6VfGBsC+ia96bBVzrxWd
/yd7uOIbvXE4zo8Sfy3J1vT3QfyoI73r8K9cYR7yH+L2/VmqifrY31DPs0lR
WSVybujPEu85YvjQsAzx7QXPntqUrjErxv5c4p0pxo0tW1F/eEnPs/X3teWX
4Z+IHzz4da7MG+v/Fc96Fmf6nxb5H2KbI+f/BOM+BbEGnmklNst+bcP4Eq87
ctbRrwz7G1+TPotv2u30AvUn4txrIeV31mH9NvLM5MZ7m9/2+Htin6ElvmNj
kJ800fra6KlzOQ/5GfFEx86j7jai8/+Un5ZGDQ5xFfX/KX7F1c17OhL+4w3F
N6Hd05REzC9x5fq7OtH26F+2/C9/r2/4OAvjS9y8N7I55A7y57fk7x/Zff+J
93kKiP+MtYl3X4X43UrryfWM+4IZ0L/EleVG6mY5yE/fkX0uMezYbgj9S3y0
ymS9UHT/VhvFf/P5cuJ4f5KAeJaHsB+7gf7be55djLm/bMhIxD/iDZlK/e8s
672PTqydZ8sPZigU7MPnxD5mLa7jE/v2fv4f5csvt1XOXI77eYmPXDWoLByF
9d1Benyty8g9eN+hgDhvhOuajeGi8//kX2fvDLlf2xsvBcQq3w/Mn+aC/PoD
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

          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["P", "i"], TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Steady distribution\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {{{1, 
           FormBox["1", TraditionalForm]}, {1975, 
           FormBox["1975", TraditionalForm]}, {3949, 
           FormBox["3949", TraditionalForm]}, {5924, 
           FormBox["5924", TraditionalForm]}, {7898, 
           FormBox["7898", TraditionalForm]}, {9872, 
           FormBox["9872", TraditionalForm]}}, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 9872.}, {0, 1.0000000000000002`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzt3Qm8pmP5B/DXWeacGTO2bFH2tRXt0aIFSWXLzlhbiSwlMiHG0qqypVCU
JcrOWCJSKDtRJFREJaVV9Pzv7/3c13Oec5yZOe9Rk///7/l8zsz73s/z3Mu1
/q7rXt53bLfn+3baZbs937/Ddkutvft2u73v/TvssdRau+6einrn6nTm2ib9
TV2q43PV6cQ/+Zrqn/Ll2c+d2/N/vdWBBx5YvfGNb6weeeSRzvThtw444AD0
q77//e+PvHXppZfmW8cee+zIWw8++GA1ceLE6r3vfe/wW33VP/7xj+plL3tZ
9dKXvrR64oknDq7v/qS8uN1221UDAwPVr3/9686IW1/4whdyc5dccsnIWz/8
4Q/zrcMOO2zkrUcffbTadNNNcyfLrTvKrSeffLJ67LHH8reDht8y6iWXXLK6
++67R9761re+Va2yyiraHHnrX//6V/X3v//dsOLWf4uzR5Qupa5kZvz5z3/u
zFvK/vnPf1a/+c1vqscff7wzRVlP9fvf/36g3H3ooYcy0Xybp5SlJ6sHHnig
+utf/1q/kcr+9Kc/VQ8//HD+NqGUpWqq3/3ud/nbiq139SDxvXnut7/9bX62
/S5OaNu3yaUstZfb1dN4jvyoT9nS9WB3Kbd233336p3vfGce7HNb3Xzta19b
7b///kn46gZPP/30zMJFFlmkWmqppao999zTkHtbHF511VWzyPfnsoHM1s9+
9rPVSiutVC266KLV8ssvX+21116q70ws1d50003VeuutVy2++OL57w1veEN1
8cUX95bbV111VfX6178+v/685z2vmjp1avXLX/4yxnXcccdlvfjZz37WiVe+
/OUvVyuvvHLu6DLLLJPFMtEkGrz//vuzwpDU5z73udUrX/nK6pRTTqnfnpvw
VhtuuGHuy2KLLVatu+661Y9+9KMsJolE+Z5xvvjFL06kSSNL7W6++eZZjOs+
1f9eeeWV+bnLLrusM6mUHXzwwbm5e+65p6HRH//4x2ratGnVcsstl3u87LLL
ZholTnd6Spdvu+226u1vf3vuj37pQyrrLVX8/Oc/r7beeus8InRiJL7yla8Q
2c5geYYAHHLIIbl6zbzgBS+ojjzyyKx1PeUZwvXRj360eUaX9ttvP11shoXr
jF5ShSIZfdXnP//5PFTSkQjfW6iSKFTdeuutha7DZM5gnv/85+eaQ+aSGa36
+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
Yvd8b8LAxGqfIy+tpp9043Lldnq0WuNtNeCdNHm+atpxV6XbN8Tt6SffVO31
ufOr3oK61t9+31TjbXH7kG/cXO126BkNaTb94CHVod+8tW570MdqxVVqQLXs
Si+t7n7o8erWW24OEo2gUCQ0EkBqKBSxshAyKGRqE59Fd0EhzgonYcyRFDrq
qCOrwz9/bDUwaZ66J6utXW170GWJQltMOzcNYupBl1WrrbVjLST9SRr2PLna
8hPnL1dup0erlV69QU3AiVOqTfY+Pd0+L25vuf8F1fq7Hl/19PbWudT1dk41
Xhq3tzrgwmq9DxzdUGiNjT5STf3kJXXbgz5Wiy3/8nxrgcVWqLY/5LvVF4//
zkwoFOGD4C8odPbZZ+cyk4pBIeaGRg0FjhMy1Ja4gFNa2lNnCvuqJVZ+bbXh
bsdXG+95UjX1wAuXr7Y54PykjeljtelHT63e+cGjq3ftfEy19SfO6bTvvXuv
k+t7uxxbbb3/ueXehPTvBdVW085O7xyd72+292np+QuWi9sHXlBtud9Z+Za/
zff5ltv124M+VhvtfmK+teFuX00suLjaaJcjZkIVibKYc2mvXCuot6GKqBts
l9IJqkgvCytjMc0wqvRWS6+yVrXjYVcmNl3YWTF3rjcPe9uDZvh7atknZ3RW
UtaTb/fmkaSv+bF68H2ZNqUChKjrGEhtXFSKLkxCdWG1z+EnzcyWgBeCl332
2acZMfTWKfNogf9hHCZKyqcBL5Ob2F9iaqSyXHLJxdWtt91efebES6udDpmR
mHr+zYVp6WO14/SLqpNn/LS68qqrZ8IN9kumNFnwpm+gEMSfPGtj4UFJIeRQ
Zmww42Z2TgJkZMdSMBde76FH/lL96uHHql8//FjnpvzvhPz94UdqyH1tMpfD
Oxd+OBKkFpJJQpio8j0B8IIopjTTfbCvkI5DJDZCkvaSj+iYBQd3toz8CJ5F
04LLWNPEenEyMP6jjz5amh7IgA6KoKfcPVqI8YdgQt/IpmfRcuAZnt16HHjZ
9IO5zYmlNikSeMbriXO9XTfy3n/LG0kIZvtG/7A3pCKFZXeM7bXACf6SJez2
NaAJn8f4WnTSbIRk3GxfG06NBIT+4xT/v/JGYuYYJSd4CbzKDM0ZyRHxWWTX
pQikyP8ZSOw58ca9997b5RspqO9SBPwv2pgzIsDqPwNEINyB5KF0kMTM8AVz
/RlgygGLoCUPQfEegVefWCX5qXameWzNhv+TI5O5c1smkf8T4ZkeCd8WIbAo
MUXRAxmFTch5rfE0On8OCTlTgS4wxCBzvgBJZB0A6OOPPz4n7GQrIvlqchK3
e/OC2jrD1l0vAhKhpMg92YIGEknr6tl9991XIFFfnrxHAuUnnHBCFHff4NVX
X52xQ8JTTYORdjapEgtUxAQShsrNopoEGg0CJH6MoVVx+cziNzh8oLTaXsYl
N2z6IfJq7Vatc7Lv48orrxy5vWmU1mcXG0X63VSNPIjyhLUCU7YUtizl6M3Z
l3J1bpt9D2KSxgLl6EGssRS/1phr7ixoEqYQXtlLMcxeSFQAHGbSxzBwGFUw
MLRcYmiHmLVafa0RYlEiZyfmXwLren6kbFu8ZdI0gfbZ9qIvp4tMz0t/Nyux
69X35nFtqWhPo8vdS4A1c9uDDQNjRnLsiChMjGyvW+yFx2iw79OmTWvQfezi
Y/2AYkkHq99Mn7SZ0SW6x1PzFniHr3IR1uGBqIHuJaSpvXhTdO5ZcxSnnXba
OND9RuUNq5hIHl1O5iuAvRSAZVlSR4888sh/C9jP2nKMhpmFZPaSzRnfjA82
GXQJ7D0mjOrSpd9///3PQMT1TEF1w0lsIijJc7cMle5IZJ5D4mPSlml7Ft3/
x+RAhmIcciDdNOfkgOl/BshBQHxu+/DDD89QFq5r7xaBSEw58kyRi7OyU/5Q
WfeeKHygzViCa37NFBAfSB2tSAg8YJIYMhWAR+uxPkDZeFuvp1dBe77Q23KI
nDoEEmk7mWKr8FMoEI1bpQVvj6/xwGBSyxrbfPPNG0IbFhJAEDX0mSdPGYs9
TFeZUrLKREuCIdPzGOPqvgfQGsLa+B89ENV43MKI6AFxUGZ9DBBqog2TvItp
dt2N7EF38D+12vRAylGZLY11D+bLK7gsZrGMGGMkPU3blGioWcHd7oGpWJtI
EwPHGQqcddZZuezkk09utmnbNmrcggyXJRV6MbQQc/S4oD3D2kVckILup8QF
NurW+HBCnpkRJtquZAlcEct2aNSGLRYzJhkbAz1M2VJKWe7oAD573Dba6IDp
XctgrUIgvVoZ0YFgiAUMVr8npDaG4AA61nVT4InlQVurHgBgWw8iOGSKAGjr
9kwUz0wvk6SMwSTFgkVb5MT+sXrSsqJAyrEqsLQ2fvsnaSKs0H28M2mgQWsF
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
HFYeU5iiVE3pfi6e+uzn/2+fO3P9D5rYEjE=\
\>"]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162180119342*^9},
 CellLabel->
  "Out[1072]=",ExpressionUUID->"a3956785-e81b-4781-bfcb-d4fa667ab804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"12", " ", 
    RowBox[{"(", 
     TagBox[
      RowBox[{
       SubscriptBox["\<\"O\"\>", "1"], 
       SubscriptBox["\<\"H\"\>", "2"]}],
      DisplayForm], ")"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      TagBox[
       SubscriptBox["\<\"H\"\>", "2"],
       DisplayForm], ")"}]}], "+", 
    RowBox[{"10", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}], "+", 
    TagBox[
     SubscriptBox["\<\"O\"\>", "2"],
     DisplayForm]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "1"],
     DisplayForm], "+", 
    TagBox[
     RowBox[{
      SubscriptBox["\<\"O\"\>", "1"], 
      SubscriptBox["\<\"H\"\>", "1"]}],
     DisplayForm], "+", 
    RowBox[{"11", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "2"],
     DisplayForm], "+", 
    TagBox[
     SubscriptBox["\<\"O\"\>", "1"],
     DisplayForm], "+", 
    RowBox[{"11", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "2"],
     DisplayForm], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "1"]}],
       DisplayForm], ")"}]}], "+", 
    RowBox[{"10", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162180209066*^9},
 CellLabel->
  "Out[1073]=",ExpressionUUID->"6f1f57e6-16e7-47f1-b044-9f88a6f711b1"],

Cell[BoxData["1500.`"], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162180212104*^9},
 CellLabel->
  "Out[1074]=",ExpressionUUID->"49f2a56d-2ffb-4ce0-a55c-892c978f60e4"],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.778162180214213*^9},
 CellLabel->
  "Out[1075]=",ExpressionUUID->"67ad7a7b-3ded-4f0e-9f02-7052e1ab0483"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 300.}, {-42.97512519471661, 16.626860316473575`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9, 
   3.7781101417300787`*^9, 3.778110797493864*^9, 3.7781108338804703`*^9, {
   3.7781108958813553`*^9, 3.778110917533667*^9}, {3.7781114873162622`*^9, 
   3.778111494374401*^9}, 3.7781121675115833`*^9, 3.778154691380972*^9, 
   3.778154742478919*^9, 3.778155021568914*^9, {3.7781550716402617`*^9, 
   3.778155090206605*^9}, 3.778155368278812*^9, {3.778155423070956*^9, 
   3.77815544737252*^9}, 3.77815584442959*^9, {3.7781562516888742`*^9, 
   3.778156277309907*^9}, {3.778156466549713*^9, 3.7781564901504*^9}, {
   3.778156755679989*^9, 3.778156784598715*^9}, {3.77815703670218*^9, 
   3.77815705828582*^9}, 3.7781571468511677`*^9, 3.778160064584803*^9, 
   3.778160253044117*^9, 3.778160588063341*^9, 3.7781613918764133`*^9, {
   3.778162125041791*^9, 3.7781621322033443`*^9}, 3.77816218027542*^9},
 CellLabel->
  "Out[1076]=",ExpressionUUID->"d4dde45a-3094-42fa-9886-d92334a9d553"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concentration evolutions", "Section",
 CellChangeTimes->{{3.777919387358829*^9, 
  3.777919401179955*^9}},ExpressionUUID->"28eb6b29-ffe7-4933-a48f-\
f62c4f958e62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperaturedats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressuredats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"filebase0", "=", "\"\<data/h2o2/\>\""}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"filebase", "=", 
        RowBox[{"filebase0", "<>", 
         RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"dat", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", 
          " ", "level"}], "}"}], " ", "=", " ", 
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evals", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", "*", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BinaryReadList", "[", 
             RowBox[{
              RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
              "\"\<Real64\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"17", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evecs", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"I", "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BinaryReadList", "[", 
               RowBox[{
                RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
                "\"\<Real64\>\""}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"17", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
          "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spatoms", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiindices", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temperatures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pressures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DisplayForm", "[", 
           RowBox[{"RowBox", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"spatoms", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"elements", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"spatoms", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
                "\"\<\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"multiindices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ind", "=", 
        RowBox[{"First", "@", 
         RowBox[{"FirstPosition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", 
            "multiindices"}], ",", "0"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"initials", ",", 
         RowBox[{"multiforms", "[", 
          RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"PseudoInverse", "[", 
          RowBox[{"Transpose", "[", "evecs", "]"}], "]"}], ".", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ind", "\[Rule]", "1"}], "}"}], ",", 
           RowBox[{"{", "dim", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t0", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num", "=", "25"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num2", "=", "10"}], ";", "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"t0", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t1", "/", "t0"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"i", "/", "num"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "num"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"o2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2onorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"radicalnorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temperaturenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "temperatures", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pressurenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "pressures", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"o2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"o2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2onorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2odats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"radicalnorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"radicaldats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"temperaturenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"temperaturedats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"pressurenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"pressuredats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"ListLogLinearPlot", "[", 
         RowBox[{"radicaldats", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "\"\<Radicals\>\""}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "initials"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "3", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", " ", "p"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"temperaturedats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"pressuredats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Pressure\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.77713438694239*^9, 3.777134429198846*^9}, {
   3.7771345229764013`*^9, 3.777134532571751*^9}, {3.777135122271962*^9, 
   3.777135139764135*^9}, {3.777136408612295*^9, 3.777136409407316*^9}, {
   3.7771367184030027`*^9, 3.77713675225874*^9}, {3.777137543164104*^9, 
   3.7771376435400257`*^9}, {3.77713768719775*^9, 3.777137828845704*^9}, {
   3.777137861869976*^9, 3.7771378880460567`*^9}, {3.777137921929947*^9, 
   3.777138049446335*^9}, {3.7771401298750153`*^9, 3.777140130078288*^9}, {
   3.7771401639670477`*^9, 3.777140173261187*^9}, {3.77714044244271*^9, 
   3.7771404466792803`*^9}, 3.7771999300508823`*^9, {3.7772007585293713`*^9, 
   3.7772008043513317`*^9}, {3.777200863193564*^9, 3.7772009418878202`*^9}, 
   3.777200985976596*^9, 3.7772010391198606`*^9, {3.777201126737507*^9, 
   3.777201175644846*^9}, {3.777201571213813*^9, 3.7772016782844133`*^9}, {
   3.7772021113041573`*^9, 3.777202154664967*^9}, {3.77720224993499*^9, 
   3.777202317099625*^9}, {3.777202415296564*^9, 3.7772024329521923`*^9}, {
   3.77720248674479*^9, 3.7772024946344767`*^9}, 3.777202587267193*^9, {
   3.777202773824875*^9, 3.777202785092458*^9}, {3.777203054512124*^9, 
   3.777203194268839*^9}, {3.77720323600662*^9, 3.777203264285142*^9}, {
   3.777203298926938*^9, 3.777203309568652*^9}, 3.777203391733837*^9, {
   3.777203550679158*^9, 3.7772035625034657`*^9}, 3.7772037591874943`*^9, 
   3.777203877734586*^9, {3.777203942085187*^9, 3.777203993915225*^9}, {
   3.777204033123383*^9, 3.7772040608133183`*^9}, {3.777204160429085*^9, 
   3.777204163323791*^9}, {3.7772042764940777`*^9, 3.777204328393935*^9}, {
   3.777204375179188*^9, 3.777204419607378*^9}, {3.777204677694272*^9, 
   3.77720470453329*^9}, {3.777204779583888*^9, 3.777204805872669*^9}, {
   3.777205081294611*^9, 3.777205093698765*^9}, {3.777205748533635*^9, 
   3.7772057487982492`*^9}, {3.777205791133944*^9, 3.77720580912246*^9}, 
   3.777205882196479*^9, {3.777337373484276*^9, 3.777337406871092*^9}, 
   3.777337457093985*^9, {3.777337577040579*^9, 3.7773375921035013`*^9}, {
   3.777337810284005*^9, 3.777337863353664*^9}, {3.777337896094151*^9, 
   3.7773379447183647`*^9}, {3.777337978920733*^9, 3.7773380271779003`*^9}, {
   3.7773380750040083`*^9, 3.777338094159894*^9}, {3.777376026740171*^9, 
   3.777376212010378*^9}, 3.777376243179214*^9, {3.777376360865407*^9, 
   3.777376364775722*^9}, {3.777376621053227*^9, 3.7773766278529863`*^9}, 
   3.777376802319796*^9, {3.777377296884919*^9, 3.7773773072147093`*^9}, {
   3.7773773548476152`*^9, 3.7773773750954103`*^9}, {3.777377983125379*^9, 
   3.777378050516939*^9}, 3.777378317730064*^9, {3.777378453136273*^9, 
   3.777378481741498*^9}, {3.777378838335648*^9, 3.777378858925192*^9}, {
   3.7779194376298113`*^9, 3.777919462294487*^9}, 3.7779195092886553`*^9, 
   3.777919563148247*^9, {3.777919688401195*^9, 3.777919712937598*^9}, {
   3.7779197459282913`*^9, 3.777919795815201*^9}, {3.7779198842916393`*^9, 
   3.777919910057685*^9}, {3.7779203719088593`*^9, 3.7779203749555483`*^9}, {
   3.7779222628823433`*^9, 3.777922278512329*^9}, 3.777979202639451*^9, 
   3.777980570098295*^9, {3.777998669053709*^9, 3.777998673171689*^9}, 
   3.777998708846861*^9, {3.777999047757468*^9, 3.777999072595841*^9}, {
   3.777999136031116*^9, 3.777999151539747*^9}, 3.7779992301319237`*^9, {
   3.777999465194914*^9, 
   3.77799949164638*^9}},ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-\
e8947acb2d3e"],

Cell[BoxData["\<\"data/h2o2/\"\>"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, {3.777999214936088*^9, 3.777999244628015*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"6.146431192650619`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5249526126915332`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.562385800342559`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.6806325798894224`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"6.014696302740776`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.2986445267482552`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{RowBox[{\\\"-\\\", \\\"6.146168525650117`*^-16\\\"}], \
\\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\
\", RowBox[{\\\"2.177120375823306`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"2.1557026927636236`*^-16\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5668516658042383`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"9.606836972768348`*^-18\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1604\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1604\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain significant numerical \
errors.\"",2,40,1,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999256190572*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1.5792011895868414`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"8.178771836284908`*^-17\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.683693761390964`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"5.83127571424801`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.336547157159226`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"2.1389795480881101`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"1.6272132967668222`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.1948363128199665`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.8081217598149095`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.149369412645336`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.0029741873701589`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain \
significant numerical errors.\"",2,40,2,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999322912217*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994499606037`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHaic3r/jx/769vIhe58w2rQMvS3wq
PwL58zTOVKzI1jzwSuDs8cdAvqxtVsb2AI0DRuedlU8D+bMDOSKOmaofMNkl
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pv8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzap7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXgvJ
dL8Hc7/UAZutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/hAwJ6X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NJ9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ypafXl3D57KTD/4X7xDUVlx/dttGeAgrYdG5Z0di61BwDSWc2j
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9i9P4vvy/769vIhe58w2rQPbJJyD
nwP58zTOVKzI1jzw58n13+eAfFnbrIztARoHPrzrNloM5M8O5Ig4Zqp+gEf6
4awwIF8qbZn7VSm1A4rH14dc/HfffmaVi/mT/yoHVBO/FT3/e99evP+R2ucn
ygfmclsEev+5bz9tcYMY0ymlA4e2Xsiu/HnfXnSHHJvgesUDhyZ9/Dzhy337
yWf2fJWfonBAiztdn/vNfXuVQ1tPxX6SOxBk7yDidPe+vdLrjyur98gcSBIR
7ll8GOZ+qQPf1hl9Dp9+314a7F6JAxvec0Zwe8PcJ3bgLdvhyooT96DuET4g
Fa1i0vb6rr0I2H7BAw7aC+Oe1dyxVwXbx3dg4YWr+scMbkHN5zoQy7Xi8vJt
1+wlweaxHdC9u2j9uU8X7cXA+hkPZNcVPdp37YS9HFj9r/2fkrIbwtn32QuB
5T/uf+GQ/aDo30Z7KTD/4X57329JLdUr7BmgQKJ+QndxzwJ7AOCdzWM=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9H5u7//5/7y9vIhe58w2rQOJbcVW
n4H8eRpnKlZkax5oD5/25BmQL2ublbE9QOOAzhK17+eB/NmBHBHHTNUP/Kg3
TlgG5EulLXO/KqV2QOTHmWnRQP7MKhfzJ/9VDpxb8PrRtX/n7cX7H6l9fqJ8
YOebX7vf/T1vP21xgxjTKaUDciJ+XNF/ztuL7pBjE1yveOBUtMCWuT/P208+
s+er/BSFAysmL59y+8t5e5VDW0/FfpI78D900Y4Zb87bK73+uLJ6j8yBG2uW
dzjfg7lf6sCtl9ERuUfP20uD3StxYCfXrZlVs2DuEzsgasydXh0Ac4/wgbwN
Z2pOXzxnLwK2X/DA5tAtwS6/z9qrgu3jO7DYj3/F1WlnoOZzHZAN3nLtSOQp
e0mweWwHPKNeT/z76Zi9GFg/44EzGo+LlBwP2cuB1f/a38RRsMmvYqe9EFj+
4/4bLYvZ359bZy8F5j/cz5uQ/OPwvoX2DFDQpvSMr7Vzqj0ACfvSEg==
              "]]}, {
            
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHluh/mPD1/3l7eRG9zpltWgf+Fu02
fQXkz9M4U7EiW/PAItETdy8D+bK2WRnbAzQOHJfsy1sF5M8O5Ig4Zqp+YDHv
Yd54IF8qbZn7VSm1A83cnzqv/ztvP7PKxfzJf5UDzh7TWl78PW8v3v9I7fMT
5QPBd6pFPP6ct5+2uEGM6ZTSAbdW/7aSn+ftRXfIsQmuVzzgVJR1pfvLefvJ
Z/Z8lZ+icKBgQi8/25vz9iqHtp6K/SR34KvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCkj8KDoOnn7aXB7pU4IGhZHcDmDXOf2IEPzS9bi0+cg7pH+MBW
tWWJja/P2ouA7Rc88Eei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgYmHCtae/nTQXgysn/HAvbV7+3Zd22EvB1b/a/+EV3+eBrKvsxcC
y3/cH8Pqb5X/b6G9FJj/cP+awwKG9dUz7BmgQFc17nd+zwR7AKyMzCs=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeCY82L1wZpe9vIhe58w2rQO5Psd5
rnyZYT9P40zFimzNA6c/OCT8mLPMXtY2K2N7gMaBJcnxa/6KbbafHcgRccxU
/YC9rEf4wr699lJpy9yvSqkdSOR7+KX+zhH7mVUu5k/+qxzYEsS212XuKXvx
/kdqn58oH9AQ1J7C2HrOftriBjGmU0oH1O+cyLjKeMFedIccm+B6xQNnJuZw
+8pcsJ98Zs9X+SkKByInyBqFS12wVzm09VTsJ7kDSw22Pq0QvWCv9Prjyuo9
MgequxVes/JegLpf6sC2s3eNj/w5by8Ndq/EgdvnpzWonDoPdZ/YAcauyFUf
i85D3SN8gHuDkvLOu+fsRcD2Cx74yVXy1PbhWXtVsH18Bzjq71yJsjsDNZ/r
AHP1Ap5F807aS4LNYzswZdep5jfLjtqLgfUzHujesVuiweqAvRxY/a/94ml1
Jce/b7YXAst/3H+Bud1kYuAieykw/+H+NfNzf7XndNozQMEF/zbZFL4SewDi
88E+
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHXk0Mv1p9Y4q9vIhe58w2rQOncooj
0xSX2M/TOFOxIlvzwIFbd1+cl9tkL2ublbE9QONAfP4Fh7CivfazAzkijpmq
H+CL7bl/qPGovVTaMverUmoHrslzRn6oP2M/s8rF/Ml/lQPWO9ZrHg66aC/e
/0jt8xPlA9lXmyqWxV62n7a4QYzplNKBmWteN72Vv2IvukOOTXC94oF8nu+T
c8yv2E8+s+er/BSFA0pSxQceG16xVzm09VTsJ7kDmkdmnmZQv2Kv9Prjyuo9
MgfEr2u0KItcgbpf6oCqxJdzbZ8v20uD3StxIMj4snbs7stQ94kdOHZlY7dn
9GWoe4QP6D/pW3FpxyV7EbD9ggdEfhV39q++aK8Kto/vgLvjw2zJn+eh5nMd
KOXSVF/z9JS9JNg8tgP6a1h7Hvw7bC8G1s94QEZcPy7Rboe9HFj9r/0n92xt
qFi51F4ILP9xf//spQlN3L32UmD+w/2xNbP/vTxebs8ABZE5f8sOb822BwCs
jcSD
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHrr3Z8t3cbIudvIhe58w2rQMOzUE/
t/04YjdP40zFimzNA9fMWA8qTbtqJ2ublbE9QOPAGXGBCzvPPLWbHcgRccxU
/YDQj3t2t+Z9tZNKW+Z+VUrtwEzri0szdVjtZ1a5mD/5r3KAR4pfJ6dOxF68
/5Ha5yfKB4yuzPFfWqtsP21xgxjTKaUDIveX/FITMrIX3SHHJrhe8QDHzQuB
x0Md7Cef2fNVforCAS2Zheq6bL72Koe2nor9JHeAjVPrO0N7pL3S648rq/fI
HJjYfSRie2CaPcT9UgcucLO9DSkotpcGu1figEHKonUbHjTYQ9wndmCB9t0Q
RrNeqHuEDxx+qXnskOZMexGw/YIHLrl/UHRuXWqvCraP70CgyiLjNfqboOZz
Hdjstj1YSWGfvSTYPLYDR5sLeKyUTtiLgfUzHihcMcNyafAlezmw+l/7g2sF
l61ff9NeCCz/cX+Hdt3Ui0YP7KXA/If7Z5w0sjRKeGTPAAWXZKd03ut8bA8A
LPm4wA==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHijmdte9/PmAnL6LXObNN64DTb+k4
4wmX7OZpnKlYka15YNEqNZ7AW4/tZG2zMrYHaBw4csi3TnDaF7vZgRwRx0zV
Dyid/X2i8BiLvVTaMverUmoHfrzn/i2ZJmI/s8rF/Ml/lQMSoiceqzYo24v3
P1L7/ET5gH5+5NkNhkb20xY3iDGdUjqwqj2cU2+6g73oDjk2wfWKB/YcZJ3w
fY2v/eQze77KT1E40LanY/084yh7lUNbT8V+kjvwlvHKsqCvafZKrz+urN4j
c6BtvfO9dywl9hD3Sx14+8pCvjql0V4a7F6JA0KM15z5ZPqg7hM74HtlffqO
9zOh7hE+ILxPUGqnzjJ7EbD9ggdkSjW7j+3cZK8Kto/vQJs065opv/ZBzec6
8OVK03yuwyfsJcHmsR1I4F5xjXfPJXsxsH7GA84adf8TpG/Zy4HV/9o/b4nH
eZGQB/ZCYPmP+9tmuz+bEvrIXgrMf7hfc+UMLU7vx/YMULDJOdrG+8tjewC2
QLvC
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHotiAnILpDvIiep0z27QOMHJD+PM0
zlSsyNY8wCcM4cvaZmVsD9A4wKgI4c8O5Ig4Zqp+QNcSwpdKW+Z+VUrtgHoy
hD+zysX8yX+VA0xrIHzx/kdqn58oH2jUYgTzpy1uEGM6pXTAmo0JzBfdIccm
uF7xwNNmZjB/8pk9X+WnKBw4JsUG5qsc2noq9pPcgfkzucB8pdcfV1bvkTng
miaE5H6pA7yv5MF8abB7JQ4UepgjuU/swLyueCT3CB+wKFkC5ouA7Rc8UCEj
yQjiq4Lt4ztQd/kWI8J8rgNXfwgyg/iSYPPYDux495IFxBcD62c8cM+xmB3E
lwOr/7X/HWsWF4gvBJb/uH8bhygv2D1g/sP9Jfn7+EB8BigoXJ7GD+IDAN7a
l0M=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHgnr///+fP91BXkSvc2ab1oFFFhD+
PI0zFSuyNQ9kL/0H5svaZmVsD9A4sGDpXzB/diBHxDFT9QPZL3+D+VJpy9yv
SqkdmPvsB5g/s8rF/Ml/lQOl6z6D+eL9j9Q+P1E+ELPoFZg/bXGDGNMppQOi
H26B+aI75NgE1yseWLB+P5g/+cyer/JTFA48TpgA5qsc2noq9pPcgYcBdmC+
0uuPK6v3yBzYpr7hH8L9Uge0S3b9BfGlwe6VOBDfJPwH4T6xA797HH4i3CN8
YOXB6i8gvgjYfsEDj9fPfAPiq4Lt4zvwyov7AcJ8rgPhu/zOgviSYPPYDqy7
nrUFxBcD62c8cL7nzEwQXw6s/tf+fevCO0B8IbD8x/1N/9V7we4B8x/un6Ii
uBHEZ4CC/w6dLAwF0x0ArDraJQ==
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Temperature\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHwliAHIYP9vIiep0z27QOtLJD+PM0
zlSsyNY8wMwL4cvaZmVsD9A40CEG4c8O5Ig4Zqp+gEMdwpdKW+Z+VUrtwAZn
CH9mlYv5k/8qB3JKIXzx/kdqn58oHzh5GsKftrhBjOmU0oETiYxgvugOOTbB
9YoHQtKYwPzJZ/Z8lZ+icOC2FguYr3Jo66nYT3IHmmzYwXyl1x9XVu+ROdDT
z4PkfqkDuSdFwXxpsHslDqTtVUVyn9gBUUtHJPcIH8h2KQDzRcD2Cx7Y+3w/
mK8Kto/vwGNVF0aE+VwHJvRJMIH4kmDz2A4s2R/FDOKLgfUzHohjFWMF8eXA
6n/tD2SUYQfxhcDyH/fLub3jALsHzH+4P2WdABeIzwAFe1uawXwAMy+UNg==

              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHspP/A8F7e3kRvc6ZbVoHzr7/B+bP
0zhTsSJb88AZNQhf1jYrY3uAxoHJJ/+A+bMDOSKOmaofEMj+BeZLpS1zvyql
dmCN3zcwf2aVi/mT/yoHovXeg/ni/Y/UPj9RPiB/5RGYP21xgxjTKaUDV1LP
gvmiO+TYBNcrHlhusALMn3xmz1f5KQoHimamg/kqh7aeiv0kd6Cp7/s/EF/p
9ceV1XtkDmwuNf2HcL/Ugcf/nv4B8aXB7pU4wNm55BfCfWIHdpac/IZwj/AB
k1VuH0B8EbD9ggcuBjc/BfFVwfbxHeicHXcFYT7XgSWbTu4C8SXB5rEdcP58
dgaILwbWz3ggV7usBMSXA6v/tZ9n7YIYEF8ILP9xf4eRcTLYPWD+w/0dz62m
gPgMUHBlvwQzA8MHewDRmO48
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Pressure\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994508146973`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/o2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "o2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2otransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2odats", "]"}], "]"}], ",", "\"\<Real64\>\""}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "radicaldats", "]"}], "]"}], ",", 
    "\"\<Real64\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.77737719579126*^9, 3.777377203789566*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"filebase", "=", 
     RowBox[{"\"\<data/h2o2/\>\"", "<>", 
      RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dat", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
       "level"}], "}"}], " ", "=", " ", 
     RowBox[{"dat", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spatoms", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiindices", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DisplayForm", "[", 
        RowBox[{"RowBox", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"spatoms", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"elements", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"spatoms", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
             "\"\<\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"multiindices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ind", "=", 
     RowBox[{"First", "@", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", "multiindices"}], 
        ",", "0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"initials", ",", 
      RowBox[{"multiforms", "[", 
       RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.777378504069335*^9, 3.777378511832087*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/transient.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7773764217499638`*^9, 3.777376551135895*^9}, {
   3.777376646046295*^9, 3.777376649152425*^9}, {3.777376876353582*^9, 
   3.7773769577868843`*^9}, 3.777377089434372*^9, {3.777377126378562*^9, 
   3.777377143488243*^9}, {3.7773783744819927`*^9, 3.777378375675869*^9}, 
   3.7773784473213673`*^9, {3.777378498912328*^9, 3.777378500646846*^9}, {
   3.777378689105578*^9, 3.777378726734768*^9}, {3.777378765672946*^9, 
   3.7773787747723007`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHAqTTrv77f99eXkSvc2ab1oE9LyI/
/AXy52mcqViRrXngivHd2D9AvqxtVsb2AI0DC9e0TfkJ5M8O5Ig4Zqp+wPXx
rWlfgHyptGXuV6XUDthyr+x6DeTPrHIxf/Jf5QDjuRt/bgH54v2P1D4/UT4g
etF+9x4gf9riBjGmU0oHbm/pcG8D8kV3yLEJrlc80FaXF6AG5E8+s+er/BSF
A3rr2tXq/923Vzm09VTsJ7kDAW/3Lov5e99e6fXHldV7ZA4csz7wKvk3zP1S
B/J9uUW+f79vLw12r8SBO/oceiyfYO4TO8DJ2Ba44TnMPcIHROx4Dh69et9e
BGy/4AGr7xuUd2+7b68Kto/vQK0uQ6FgI8x8rgMnN/ptX65y314SbB7bgbOv
UiIntd2zFwPrZzyw+xWPpVv1XXs5sPpf+/mv+p4IOXDbXggs/3G/2Yy8pvbf
N+ylwPyH+3tPL8u9cf6KPQMUJNytkljpe84eAHou0RQ=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHZNWqeP78v28vL6LXObNN68CUTLee
H0D+PI0zFSuyNQ+8a3/n9gnIl7XNytgeoHHgrHOJ63Mgf3YgR8QxU/UDKg8T
XK8A+VJpy9yvSqkdMHorO20zkD+zysX8yX+VA/+ONG+oAvLF+x+pfX6ifID9
1st/okD+tMUNYkynlA7si7hVkfzvvr3oDjk2wfWKB5iYf5/U+nvffvKZPV/l
pygcqFqyjJn79317lUNbT8V+kjvw/gJ7ZtT3+/ZKrz+urN4jc0ByqT/vpw8w
90sdkGSI/X3p6X17abB7JQ5EB6xk77oEc5/YAX77jUfUNsLcI3zg7MZFPxrL
79uLgO0XPPD01YLVZSL37VXB9vEd0IrcfWFT9j2o+VwHGvaVpDkF3LWXBJvH
dqCirEvqR/1tezGwfsYDQsFedbnLb9jLgdX/2v/gwsI0gcYr9kJg+Y/7Y7fd
+evld85eCsx/uN9ILeeH9J9D9gxQsHMfY63lr832ABNYzgY=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHuiY3r/jx/769vIhe58w2rQMvSnwq
PwL58zTOVKzI1jzwTODs8cdAvqxtVsb2AI0D2uedlU8D+bMDOSKOmaofMN4l
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pn8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzaq7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXAvJ
dL8Hc7/UAeutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/iA/56X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NR9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ipafXl3D57KTD/4X6xDUVlx/dttGeAgrYdG5Z0di61BwDPac2b
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6pWT+b78v28vL6LXObNN60CLqXPw
cyB/nsaZihXZmgecX1z/fQ7Il7XNytgeoHGA8X230WIgf3YgR8QxU/UD3NIP
Z4UB+VJpy9yvSqkdUDi+PuTiv/v2M6tczJ/8VzmgnPit6Pnf+/bi/Y/UPj9R
PjCH2yLQ+899+2mLG8SYTikdOLj1Qnblz/v2ojvk2ATXKx44MOnj5wlf7ttP
PrPnq/wUhQOa3On63G/u26sc2noq9pPcgUB7BxGnu/ftlV5/XFm9R+ZAoohw
z+LDMPdLHfi6zuhz+PT79tJg90ocWP+eM4LbG+Y+sQOv2Q5XVpy4B3WP8AGp
aBWTttd37UXA9gsesNdeGPes5o69Ktg+vgMLLlzVP2ZwC2o+14E4rhWXl2+7
Zi8JNo/tgO7dRevPfbpoLwbWz3ggp67o0b5rJ+zlwOp/7f+QlN0Qzr7PXggs
/3H/C4fsB0X/NtpLgfkP99v5fktqqV5hzwAFEvUTuot7FtgDACGYytY=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHph3WFnv3/769vIhe58w2rQMvkn5c
ugnkz9M4U7EiW/PAKT+FnM1AvqxtVsb2AI0DDbcm9eQB+bMDOSKOmaofEJ2y
qOfrv/v2UmnL3K9KqR3Y5XZUWQnIn1nlYv7kv8oB4UgJofV/7tuL9z9S+/xE
+YDv9Z5a5V/37actbhBjOqV0wPaHtfnGr/ftRXfIsQmuVzyw8vXOv1/f3ref
fGbPV/kpCgdurXvo0/3gvr3Koa2nYj/JHZiyp83M6+R9e6XXH1dW75E5wP9p
jrPAQpj7pQ5c9Fau3hZ9314a7F6JA1lHTV/cfHIP6j6xA5ls3QFG0veg7hE+
UNI1yULw9B17EbD9ggc+MN/9sGT1LXtVsH18B+bOOeSjnnUdaj7XAZ+uHQq/
b16ylwSbx3Zg6bHvnKw7TtmLgfUzHjCIOfcjKeuAvRxY/a/9V/jKd89o2mwv
BJb/uJ9v76adGmKr7aXA/If7DV+F5CSHLLFngAJHRfeEFfdn2wMA1p/L6g==

              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHWC1Fc/79P28vL6LXObNN60Dp1c/O
f4H8eRpnKlZkax5w0At1/A3ky9pmZWwP0DjgLcF6+DuQPzuQI+KYqfoBpUUP
NnwE8qXSlrlflVI7wLVXXOU5kD+zysX8yX+VA7NdNp27AuSL9z9S+/xE+YC8
8KxPW4D8aYsbxJhOKR3ImmUxtRbIF90hxya4XvHAvKXT4mWB/Mln9nyVn6Jw
oHDXfYOyf+ftVQ5tPRX7Se7AIYHIjcF/z9srvf64snqPzIHJW198jfoNc7/U
gRdBmgrvvp+3lwa7V+JA5JoL1r8/wtwndsDirlHS8ucw9wgfCGvYe23P1fP2
ImD7BQ9I9gk7bdp23l4VbB/fgWNnM+dxNMLM5zrAFjDz3zyV8/aSYPPYDtgl
fDnT2XbOXgysn/EA57Ky77bVZ+3lwOp/7bfffJDJ98BpeyGw/Mf9XXvimxt+
n7CXAvMf7l8uMXXmpfNH7BmgQN7tyewFvvvsAd1yzmc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHKswjyv/8P28vL6LXObNN64BEypuK
n0D+PI0zFSuyNQ/c5nx39TOQL2ublbE9QOPA6kfBpS+B/NmBHBHHTNUPzLpq
d/EakC+Vtsz9qpTagTe1Emu3Avkzq1zMn/xXOaCq0vazCsgX73+k9vmJ8oEI
f6nDwkD+tMUNYkynlA5c0nXZEf/vvL3oDjk2wfWKB+znXtmt9ve8/eQze77K
T1E40P1u2ie23+ftVQ5tPRX7Se5A94zwiLDv5+2VXn9cWb1H5sCiy55/336A
uV/qgNX3ujfnnp63lwa7V+JAhfOZX62XYO4TO6AywWe30kaYe4QPuDXbfK0t
P28vArZf8IBcf+emIpHz9qpg+/gOHOCwfrku+xzUfK4D5gyT59gFnLWXBJvH
dmBaZHrjl/rT9mJg/YwH2Jy9jLKWn7CXA6v/tZ/B6EUPb+MReyGw/Mf9R1kz
q9z89tlLgfkP95f8+n5a4s8mewYo6H8jMc3012J7AHq6zT8=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDv3c3v/z/3l7eRG9zpltWgdWtRVb
fQby52mcqViRrXlgWvi0J8+AfFnbrIztARoH5JeofT8P5M8O5Ig4Zqp+4Fu9
ccIyIF8qbZn7VSm1A8I/zkyLBvJnVrmYP/mvcuDsgtePrv07by/e/0jt8xPl
Azvf/Nr97u95+2mLG8SYTikdkBXx44r+c95edIccm+B6xQMnowW2zP153n7y
mT1f5acoHFgxefmU21/O26sc2noq9pPcgf+hi3bMeHPeXun1x5XVe2QOXF+z
vMP5Hsz9UgduvoyOyD163l4a7F6JAzu5bs2smgVzn9gBUWPu9OoAmHuED+Rt
OFNz+uI5exGw/YIHNoduCXb5fdZeFWwf34HFfvwrrk47AzWf64Bs8JZrRyJP
2UuCzWM74Bn1euLfT8fsxcD6GQ+c1nhcpOR4yF4OrP7X/maOgk1+FTvthcDy
H/dfa1nM/v7cOnspMP/hft6E5B+H9y20Z4CCNqVnfK2dU+0BYCLS5w==
              "]]}, {
            
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHbKw/Tvj6/7y9vIhe58w2rQMfZ+w2
fQXkz9M4U7EiW/PATskTdy8D+bK2WRnbAzQO3JTsy1sF5M8O5Ig4Zqp+YBHv
Yd54IF8qbZn7VSm1A03cnzqv/ztvP7PKxfzJf5UDjh7TWl78PW8v3v9I7fMT
5QNBd6pFPP6ct5+2uEGM6ZTSAddW/7aSn+ftRXfIsQmuVzzgUJR1pfvLefvJ
Z/Z8lZ+icCB/Qi8/25vz9iqHtp6K/SR34IvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCEj8KDoOnn7aXB7pU4IGBZHcDmDXOf2IF3zS9bi0+cg7pH+MAW
tWWJja/P2ouA7Rc88Fei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgQmHCtae/nTQXgysn/HA/bV7+3Zd22EvB1b/a3//qz9PA9nX2QuB
5T/uj2H1t8r/t9BeCsx/uH/NYQHD+uoZ9gxQoKsa9zu/Z4I9AHWszAg=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeJY0R374f95eXkSvc2ab1oEswySm
e0D+PI0zFSuyNQ+Ylp+22QXky9pmZWwP0Dhw5b4gewWQPzuQI+KYqfqBg0k7
pv//d95eKm2Z+1UptQORO9f5awD5M6tczJ/8VzmQdSnhybo/5+3F+x+pfX6i
fKDfPLFb7td5+2mLG8SYTikd8FNkrF319by96A45NsH1igcOvYxgf//2vP3k
M3u+yk9ROPD27tnwlgfn7VUObT0V+0nuwK59nW7OJ8/bK73+uLJ6j8yB28/z
YjgXwtwvdcDzgsri9dHn7aXB7pU44GBjp3X5yTmo+8QOHCrZvU9b+hzUPcIH
Uh7FfOA6fcZeBGy/4IGba5bIz199yl4VbB/fgcnhnEZKWceh5nMdsNi9n/X7
zUP2kmDz2A4Ef6ux/r99l70YWD/jgSPhytnxWRvs5cDqf+2Xco5rn9K02F4I
LP9xv1nnqkdKYrPtpcD8h/sN6jSZ40Om2DNAgaz6d89F97vtAZNNxp4=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5Kdot3XrZNjLi+h1zmzTOmC2dM00
Oc8S+3kaZypWZGse4L36VPLh1wZ7WdusjO0BGgck7+QxVnzrtp8dyBFxzFT9
QG2y8/aglGn2UmnL3K9KqR0wE9MWu8uz0H5mlYv5k/8qB17umcag9He5vXj/
I7XPT5QPvHg5UeWn7Tr7aYsbxJhOKR042ObKvvrZBnvRHXJsgusVD5T+/jxr
acJG+8ln9nyVn6JwoP/WyufcWRvtVQ5tPRX7Se7Av4lnT3dmbrRXev1xZfUe
mQO3dswUK8/YCHW/1IGEHUzXZqZttJcGu1fiABcL08eY5I1Q94kd8Fu99/Xe
2I1Q9wgfMLd90/Q3eKO9CNh+wQNXt552kXDeaK8Kto/vgPASEebHqjDzuQ44
9K3JmPZ5g70k2Dy2A22+6wq6526wFwPrZzywuKzvHh/PBns5sPpf+6+c/FP9
wXSdvRBY/uP+zJavDNFGq+2lwPyH+x8/lmOQWrHMngEKxN9uKdxbt8AeALFD
wKc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH+u65HrolV2cvL6LXObNN68CMmOc7
n9/tsp+ncaZiRbbmgV0/g149XTrdXtY2K2N7gMYBv+oFMnm2S+xnB3JEHDNV
P/Df5sA5kZ4N9lJpy9yvSqkdYBTJUNroudN+ZpWL+ZP/Kgd0Ks47rOg8aC/e
/0jt8xPlA0euRL7fUHDUftriBjGmU0oHfqh+fq+jf9xedIccm+B6xQNdB60X
fq4+bj/5zJ6v8lMUDgiJfDqgXHvcXuXQ1lOxn+QOfJ3eOvNf5XF7pdcfV1bv
kTmgU5As0VJyHOp+qQPfv8b+Y8w+bi8Ndq/EAdHtppNao45D3Sd2QP1yn+Qf
2+NQ9wgfSGjsEd3Nc9xeBGy/4IE0p53LVHccs1cF28d34LrrZmYNjWNQ87kO
nPyUP2+n2VF7SbB5bAc478ZJZq85bC8G1s944MCTkFe8rgft5cDqf+1X3bHv
P8es3fZCYPmP+yfEVerev77JXgrMf7i/YdpmASe2JfYMUCAh0v1epbHPHgCm
J8LN
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH3Jsyjiyc2WUvL6LXObNN64BTyzO+
K19m2M/TOFOxIlvzwHKOioQfc5bZy9pmZWwP0Digr+W95q/YZvvZgRwRx0zV
DzCouocv7NtrL5W2zP2qlNqBV7wPv9TfOWI/s8rF/Ml/lQNbgtj2usw9ZS/e
/0jt8xPlAxqC2lMYW8/ZT1vcIMZ0SumA+p0TGVcZL9iL7pBjE1yveODMxBxu
X5kL9pPP7PkqP0XhQOQEWaNwqQv2Koe2nor9JHdgqcHWpxWiF+yVXn9cWb1H
5kB1t8JrVt4LUPdLHdh29q7xkT/n7aXB7pU4cPv8tAaVU+eh7hM7wNgVuepj
0Xmoe4QPcG9QUt5595y9CNh+wQM/uUqe2j48a68Kto/vAEf9nStRdmeg5nMd
YK5ewLNo3kl7SbB5bAem7DrV/GbZUXsxsH7GA907dks0WB2wlwOr/7VfPK2u
5Pj3zfZCYPmP+y8wt5tMDFxkLwXmP9y/Zn7ur/acTnsGKDjv3yabwldiDwDc
GL/j
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6ht5l3fdmGIvL6LXObNN68DDsJCi
dMUl9vM0zlSsyNY8MOXT4e/n5TbZy9pmZWwP0DhQ9V3cMaxor/3sQI6IY6bq
B6Sieu4fajxqL5W2zP2qlNqBa/KckR/qz9jPrHIxf/Jf5YDVjvWah4Mu2ov3
P1L7/ET5QNbVpoplsZftpy1uEGM6pXRgxprXTW/lr9iL7pBjE1yveCCf5/vk
HPMr9pPP7PkqP0XhgJJU8YHHhlfsVQ5tPRX7Se6A+pGZpxnUr9grvf64snqP
zAGx6xotyiJXoO6XOqAi8eVc2+fL9tJg90ocCDK+rB27+zLUfWIHjlzZ2O0Z
fRnqHuEDek/6VlzaccleBGy/4AHhX8Wd/asv2quC7eM74Or4MFvy53mo+VwH
Srk01dc8PWUvCTaP7YDeGtaeB/8O24uB9TMekBbXj0u022EvB1b/a/+JPVsb
KlYutRcCy3/c3z97aUITd6+9FJj/cH9szex/L4+X2zNAQWTO37LDW7PtAfKn
w2A=
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH7AJi9dk+zbOXF9HrnNmmdcAjSsx3
Re1a+3kaZypWZGseeHVT7/ufUzvtZW2zMrYHaBwINHoUyfXlsP3sQI6IY6bq
B3jyGiyFZpy2l0pb5n5VSu3AIbsmrtsVF+1nVrmYP/mvcsBnqt6db5uu2Iv3
P1L7/ET5wOYA77Sr96/ZT1vcIMZ0SunAUdO+dx9XX7cX3SHHJrhe8cCUuWkX
cg5et598Zs9X+SkKBxaryMnP33bdXuXQ1lOxn+QOpN3puT170XV7pdcfV1bv
kTnQNE9n5d/661D3Sx2oiVu2JdDlur002L0SB5Y4XloqfO8a1H1iBzqC1nJv
NbgGdY/wgWYX65q//FftRcD2Cx5QsHz78o/tZXtVsH18B1T/3gjOLL0ANZ/r
wOl1tgF8miftJcHmsR0w8F697/b9/fZiYP2MB65UvJ77V2GdvRxY/a/9JbYr
ubRip9gLgeU/7q+Pf8+Y/KLWXgrMf7i/tMKxetaXQnsGKJitt0mF/3+aPQBt
7sQK
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHOJ7xsKw72WYnL6LXObNN68BittyF
JtFT7eZpnKlYka15wHTKTaP99xbbydpmZWwP0DigZjE5eN26TXazAzkijpmq
H9BZnTyN8ddBO6m0Ze5XpdQOuM3sCys4c9FuZpWL+ZP/KgfCetOMnzA+shPv
f6T2+YnygauuNnMzLT7ZTVvcIMZ0SunAl6nfA/Q/MNqL7pBjE1yveKCirXHW
g3cC9pPP7PkqP0XhwI5i49+Jd+TsVQ5tPRX7Se5A/sorL+92aNsrvf64snqP
zAHhDquIOA8Le4j7pQ7UT7lxN9/N1V4a7F6JAy+YxXsOTwyyh7hP7ADLtx/P
yrUT7CHuET7QI5P+w0g2x14EbL/ggdkLpH1q0yvsVcH28R249nxbTYJqK9R8
rgOpelsf6LpNspcEm8d2QHdDZ8Syovn2YmD9jAfYtHRtW+6sspcDq/+1vyJS
Imjxim32QmD5j/vDsuPTK7YdspcC8x/u/8Nnumrp1bP2DFCg2Pc793bZNXsA
8Z279A==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHpN/6qrx9tcROXkSvc2ab1gEX16m3
k+ZssZuncaZiRbbmAdeZYZFx9w7bydpmZWwP0DgQJ7qeVeLRJbvZgRwRx0zV
D9T7LpjrfeuhnVTaMverUmoHPM6X3vrO/NFuZpWL+ZP/KgcKJs3n21XFYC/e
/0jt8xPlA3ZbrYMW8ArYT1vcIMZ0SulA+enzebHr5OxFd8ixCa5XPKD0cSOv
TKSO/eQze77KT1E4sOXg8qXLGyztVQ5tPRX7Se6Ae7dMX+h0N3ul1x9XVu+R
OfD9zNHdd68F20PcL3XgxtPgX22hifbSYPdKHHiz+bv2S4M8e4j7xA4cmbBM
aa5lFdQ9wgcYjm1YHLqjzV4EbL/ggcJ1azM05062VwXbx3fg484XgSevLYCa
z3WgM7AiymzZGntJsHlsB85or7mc+H+7vRhYP+MBn6kuai3TDtvLgdX/2t8h
+lSyb/k5eyGw/Mf9U59oH0wou2YvBeY/3D/33vSQbqZ79gxQoJ63589nhkf2
AHotwko=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDmUw/jA322InL6LXObNN68D1xsif
234csZuncaZiRbbmgfLAXweUpl21k7XNytgeoHFg4hu2CzvPPLWbHcgRccxU
/UBT7j27W/O+2kmlLXO/KqV2QInx4tJMHVb7mVUu5k/+qxxoe86nk1MnYi/e
/0jt8xPlA2mH5vgvrVW2n7a4QYzplNIBnitLfqkJGdmL7pBjE1yveGD7pQuB
x0Md7Cef2fNVforCgWViC9V12XztVQ5tPRX7Se7AXVat7wztkfZKrz+urN4j
c+BU55GI7YFp9hD3Sx2I4WZ7G1JQbC8Ndq/EAYWURes2PGiwh7hP7ECG9t0Q
RrNeqHuEDyx9qXnskOZMexGw/YIHDrt/UHRuXWqvCraP74CnyiLjNfqboOZz
HVjjtj1YSWGfvSTYPLYDh5oLeKyUTtiLgfUzHshbMcNyafAlezmw+l/7A2sF
l61ff9NeCCz/cX+7dt3Ui0YP7KXA/If7p500sjRKeGTPAAUXZKd03ut8bA8A
0km6/g==
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5hTUHXz6+YCdvIhe58w2rQOb51zd
bTzhkt08jTMVK7I1D9xUVBcMvPXYTtY2K2N7gMYBp7yoOsFpX+xmB3JEHDNV
PxD64PeJwmMs9lJpy9yvSqkd8GLj+S2ZJmI/s8rF/Ml/lQMabCceqzYo24v3
P1L7/ET5wLO8yLMbDI3spy1uEGM6pXRgW0c4p950B3vRHXJsgusVD6w6wjrh
+xpf+8ln9nyVn6JwgGdvx/p5xlH2Koe2nor9JHdAn+nKsqCvafZKrz+urN4j
c2DNeud771hK7CHulzrw8pWFfHVKo7002L0SB/gYrznzyfRB3Sd2wOfK+vQd
72dC3SN8QGKfoNROnWX2ImD7BQ/Ilmp2H9u5yV4VbB/fgTZp1jVTfu2Dms91
4MuVpvlch0/YS4LNYzsQx73iGu+eS/ZiYP2MB5w06v4nSN+ylwOr/7V/3hKP
8yIhD+yFwPIf97fOdn82JfSRvRSY/3C/xsoZWpzej+0ZoGCjc7SN95fH9gBP
FLuJ
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHUt5Z7/WbdcpOXkSvc2ab1gGt4745
R7/etZuncaZiRbbmga7u7Q7fMz7YydpmZWwP0DgweY/+8yW2jPazAzkijpmq
H5glIHdFMl/QXiptmftVKbUDOif08hq/K9jPrHIxf/Jf5cDaGytn3vyhby/e
/0jt8xPlAy0Ocw1fZdjaT1vcIMZ0SumAyJM1n851eNmL7pBjE1yveKDPP+cQ
y+Rw+8ln9nyVn6JwIFTfQihrd4q9yqGtp2I/yR3gfnvwpbZckb3S648rq/fI
HPhx4XDk/7Z6e4j7pQ4wqeQFzg3qtpcGu1fiwO8yxidqE6dD3Sd24INrRsRq
/SVQ9wgf+LT7+/q5EhvtRcD2Cx5Yl8oiz5q9x14VbB/fgQkHnd44PzkGNZ/r
wNX15tHH2i/aS4LNYzuQ8iRSqP7WDXsxsH7GAw2FG3Yz7LxvLwdW/2v/IT7b
6scij+yFwPIf91vMUXKrFn5sLwXmP9zP1mrPsXDxY3sGKLjgJ/uZUeeJPQD3
Bb3b
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        TagBox[
         RowBox[{"", "", 
           SubscriptBox["\"Ar\"", "1"]}], DisplayForm], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        TagBox[
         RowBox[{
           SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm]}], 
      RowBox[{
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
        "]"}]& ), Editable -> True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379156663431*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],

Cell[BoxData["\<\"plots/transient.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379158209385*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Runtimes", "Section",
 CellChangeTimes->{{3.766592582520748*^9, 
  3.7665926070101557`*^9}},ExpressionUUID->"be75ae60-b525-445a-a2f8-\
07a7bd6d9534"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dat", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimesout.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat2", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes2out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat3", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes3out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Runtime(s)\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Dimension\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive calls\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive levels\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Python\>\"", ",", "\"\<C++\>\"", ",", "\"\<Parallel C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
      "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/runtimes.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.767467469483581*^9, 3.767467519058926*^9}, {
   3.767467556456477*^9, 3.7674675579975157`*^9}, {3.767530949583584*^9, 
   3.7675309707708282`*^9}, {3.767531004631811*^9, 3.767531101524459*^9}, {
   3.7675311405548067`*^9, 3.767531141762246*^9}, 3.76753130045408*^9, {
   3.767902448613002*^9, 3.767902458418908*^9}, {3.767904719279963*^9, 
   3.767904767322049*^9}, 3.7679050738828983`*^9, {3.7679176371929083`*^9, 
   3.7679176384770203`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.011509319999999934`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0813438649999999`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.5962182649999999`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "4.287848875`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "24.673300776`", ",", "22616", ",", "21"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "133.293162891`", ",", "50049", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "644.16902838`", ",", "102480", ",", "27"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631484823*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.0016663130081724375`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0026924300036625937`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.01155992699204944`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "177", ",", "0.02193124999757856`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "21", ",", "298", ",", "0.06308137100131717`", ",", "22616", ",", "21"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "0.1508594839979196`", ",", "50049", ",", "24"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "0.3248912150011165`", ",", "102480", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", "1277", ",", "0.7218115940049756`", ",", "200145", ",", "30"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "33", ",", "1888", ",", "1.3522880889941007`", ",", "370476", ",", "33"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "36", ",", "2803", ",", "2.493587140997988`", ",", "661388", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "39", ",", "3965", ",", "4.547302400009357`", ",", "1135106", ",", "39"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "42", ",", "5612", ",", "7.907720365998102`", ",", "1893255", ",", "42"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "45", ",", "7663", ",", "12.99118743200961`", ",", "3063616", ",", "45"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "48", ",", "10450", ",", "21.246270654010004`", ",", "4844184", ",", 
     "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "51", ",", "13862", ",", "32.91214892799326`", ",", "7477740", ",", 
     "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "54", ",", "18348", ",", "51.23924410699692`", ",", "11324874", ",", 
     "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "57", ",", "23760", ",", "78.78004793499713`", ",", "16818920", ",", 
     "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "30688", ",", "113.30796434900549`", ",", "24581466", ",", 
     "60"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631488085*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "19", ",", "0", ",", "83", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48", ",", "0", ",", "245", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "89", ",", "0", ",", "598", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "1", ",", "1369", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "2", ",", "2827", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "516", ",", "1", ",", "5561", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "807", ",", "2", ",", "10248", ",", "9"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"30", ",", "1277", ",", "3", ",", "18195", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1888", ",", "4", ",", "30873", ",", "11"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "2803", ",", "3", ",", "50876", ",", "12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "3965", ",", "5", ",", "81079", ",", "13"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "5612", ",", "6", ",", "126217", ",", "14"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "7663", ",", "6", ",", "191476", ",", "15"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "10450", ",", "7", ",", "284952", ",", "16"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "13862", ",", "8", ",", "415430", ",", "17"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "18348", ",", "9", ",", "596046", ",", "18"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "23760", ",", "10", ",", "840946", ",", "19"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "30688", ",", "10", ",", "1170546", ",", "20"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "38940", ",", "12", ",", "1606694", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "49274", ",", "13", ",", "2180000", ",", "22"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "61446", ",", "14", ",", "2923048", ",", "23"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "76411", ",", "15", ",", "3880353", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "93864", ",", "17", ",", "5099087", ",", "25"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", "114989", ",", "18", ",", "6642312", ",", "26"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "139411", ",", "20", ",", "8576593", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "168576", ",", "21", ",", "10989255", ",", "28"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "202029", ",", "23", ",", "13972160", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "241515", ",", "26", ",", "17643841", ",", "30"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "286488", ",", "28", ",", "22128615", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "339030", ",", "30", ",", "27584561", ",", "32"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "398493", ",", "32", ",", "34177030", ",", "33"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "467337", ",", "35", ",", "42113553", ",", "34"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", "544800", ",", "38", ",", "51610691", ",", "35"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "633763", ",", "41", ",", "62937086", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"111", ",", "733337", ",", "45", ",", "76372469", ",", "37"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114", ",", "846870", ",", "49", ",", "92260201", ",", "38"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "973333", ",", "54", ",", "110957124", ",", "39"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "1116588", ",", "59", ",", "132897080", ",", "40"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816314924383`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, -4.464598137055273}, {11.5, -2.509069863034937}, {
             14.5, -0.5171484625147089}, {17.5, 1.4557851794440688`}, {20.5, 
             3.205721718753769}, {23.5, 4.892550934728942}, {26.5, 
             6.467961158094638}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., -6.397141872829248}, {12., -5.917311146054348}, {
             15., -4.460210731324506}, {18., -3.819842718743159}, {
             21., -2.763329782796962}, {24., -1.8914064449660575`}, {
             27., -1.124264875758159}, {30., -0.3259911242743334}, {33., 
             0.30179803849721}, {36., 0.9137222926554756}, {39., 
             1.514534178021714}, {42., 2.067839543782565}, {45., 
             2.56427123774491}, {48., 3.056181381333915}, {51., 
             3.4938418579366193`}, {54., 3.9365057249095132`}, {57., 
             4.366659766009154}, {60., 4.730109459905931}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQYNRg4MyKDB1OG95a9/TnrP7CF8CzR5azR5Owdu
5rVVryZ/hPAPOEDlv0H4Dk5o8s4Oxr1vvzse+AmVd3VgUtD6xb36D1TeDZXv
4OEQHmW0rkjpP1Te06F4tbX9pkUMEHc5eEPNZ4TwD/g4iIVu3b0xmwkq74fK
P+DvUDvv8h6xh8wQ/oIAh8AeQ22WVhYIPyHQYfnu62KnZFghfIUgB3kPX0ux
VVD+gyCHqvpfB7NXsUH1Bzu0Tcy2qpZnh+oPcZj4uLja6TuUrxDqsHFd/hS9
aA6o/lCHD5sv/q0V5YTqD3M4K/Xh1RQBLqj+cAdlr2nXolZA+QoRDrOvcf9c
ZsoN1R/hkH1ix77LO6H8BZEORz/zB0cV8kD1RzmscDx89JgkL1R/tIPfmj7X
1K1Q/oNohyUnF5dxl/BB9cdAw5cfqj/WgUf4UHnBSyhfIc6hUvP4z1R/AQcA
c+GaRA==
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -7.403909194843006}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Runtime(s)\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {-7.403909194843006, 6.467961158094638}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 2.9444389791664403`}, {11.5, 3.871201010907891}, {
             14.5, 4.48863636973214}, {17.5, 5.176149732573829}, {20.5, 
             5.697093486505405}, {23.5, 6.246106765481563}, {26.5, 
             6.693323668269949}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 2.9444389791664403`}, {12., 3.871201010907891}, {
             15., 4.48863636973214}, {18., 5.176149732573829}, {21., 
             5.697093486505405}, {24., 6.246106765481563}, {27., 
             6.693323668269949}, {30., 7.152268856032539}, {33., 
             7.543273346705446}, {36., 7.938445551164788}, {39., 
             8.285261134068948}, {42., 8.632662441222351}, {45., 
             8.944158830970403}, {48., 9.254357257392957}, {51., 
             9.53690656247793}, {54., 9.817275855717062}, {57., 
             10.075758773476581`}, {60., 10.331626977683165`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDjqbWdjM+tgdIHxNh9LdATYWP/igfH2Hb13r
xGO/CEL4DUYO1llFMxK2iED5pg7Zer/vXzopBuVbOLi7lmQy/5GA8q0dqngO
L/52VArKt3PYmv859s1sGQj/gIPDul7lm/46chC+g5NDXODde98PyEPlnR0O
egXv552kAJV3dXB4dSfkjbMiVN7NYWud18mMx1C+g4dDF6OPrHWTElTe06F4
896sp0LKUHlvh99WCr8LF0H5B3wcJN/PuXVSTQUq7+ewxfY+0+mVUP4Bf4er
v7/e2KmsCuEvCHDYpzX1js0cKD8h0MHkqtEsF141CF8hyKH4sqTEvRoo/0GQ
ww/HeU5Gz6D8BcEOCs9bGhX81KH6QxxiXMKW794A5SuEOrRVbVL4J6gB1R/q
UJCtmrg2D8pfEOYwv6giVeQUlJ8Q7nD/asCrJkVNqP4Ih5bPDUm7yqH8BxEO
r88VnS4/BeUviHSoY/jZwi+jBdUf5TDPruzk1CwoXyHaoey0nCP7Dij/QbSD
Gc+jBfuYtKH6YxzOnnsQX+gD5SfEOswJDLq1eTKUrxDncKSE7QXDLW0HAK8M
rAk=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 2.0850860858989155`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Dimension\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {2.0850860858989155`, 
           13.925788164890385`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}]}, {
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 5.805134968916488}, {11.5, 7.110696122978827}, {
             14.5, 8.185350223178686}, {17.5, 9.167745974343763}, {20.5, 
             10.026412899373426`}, {23.5, 10.820757804523783`}, {26.5, 
             11.537422936570616`}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 5.805134968916488}, {12., 7.110696122978827}, {15.,
              8.185350223178686}, {18., 9.167745974343763}, {21., 
             10.026412899373426`}, {24., 10.820757804523783`}, {27., 
             11.537422936570616`}, {30., 12.20679738284463}, {33., 
             12.822543944292201`}, {36., 13.402095936032913`}, {39., 
             13.942236596607357`}, {42., 14.453808127933891`}, {45., 
             14.935106475617856`}, {48., 15.393289368069954`}, {51., 
             15.827441165260032`}, {54., 16.242512103443666`}, {57., 
             16.6380150011729}, {60., 17.017503302309006`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDk1PknqfrBF0gPA1HSoniFz1ZBSD8vUd4p4n
lHBOloTwG4wc9h63eqfxWAbKN3XYrs13Z9NJeSjfwuF6let+e3tFKN/aYQJP
ySqbCiUo387h/IIbWRrzlCH8Aw4OaXMWn763RgXCd3BysLvxsXLeGlWovLPD
VRnJAKvZalB5VwfZz0t+X65Vh8q7ORT3PW8zDdaAyns4+F++43FIThMq7+lQ
mb21//h9KN/B22GFTiLX3BlaUHkfh6iL0h43PbSh8n4OJ/mcerQ+QfkH/B3y
GB+rBE3RgfAXBDhYLFZ17TPQhfATAh0e3zH4svMYlK8Q5NCwdFnPsXA9CP9B
kENiB9vneY+h/AXBDpHW04z/ZelD9Yc48DQwqN58C+UrhDpoR2ZvTzQzgOoH
8lN3Sd8phvIXhDn8PbLo+7T1UH5CuMOiM3/vT3wJ5StEOJzqkmX8q2gI1R/h
wJmbaHozAspfEOnAb7tJ068Pyk+IcvisldIcewjKV4h2aEwN9NH4CtMf7bBC
yHrJBjUjqP4Yh4IL/4KFwqH8hFgH3pr8A/5tUL5CnEP8/Vk1DVuMHABNvKsC

             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 3.3008608660431737`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive calls\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {3.3008608660431737`, 
           18.705085552035026`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 9.}, {11.5, 12.}, {14.5, 15.}, {17.5, 18.}, {20.5,
              21.}, {23.5, 24.}, {26.5, 27.}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 9.}, {12., 12.}, {15., 15.}, {18., 18.}, {21., 
             21.}, {24., 24.}, {27., 27.}, {30., 30.}, {33., 33.}, {36., 
             36.}, {39., 39.}, {42., 42.}, {45., 45.}, {48., 48.}, {51., 
             51.}, {54., 54.}, {57., 57.}, {60., 60.}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJw10clKw2AYBdDQlUsXXbhw8TtQVMQ61lqrxg6iKA51aOtEKLj2FfIoeZQ+
Sh5Fy38aCJfD5S7yZWXyO/ipJElS+39nGZ+1NOaC3JSLsi6rMfN9XuIjXuYm
Bz7lVT7n9ZjTlGsx0w5v6Lu8pe/ztv6Kd/TXvKu/4T39LfuO6R0f6O/5UP/A
vrN45EbM7ImPY4YBu0M594n9M7fsX9idwiu37ec+s39jd8yGfGE/YnctOedi
rL+0f9dz+NB37Dnn4lPvv2Rfeg7f+l76B9xNOq8=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive levels\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 120.5}, {0, 60.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{"\"Python\"", "\"C++\"", "\"Parallel C++\""}, "PointLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631713992*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],

Cell[BoxData["\<\"plots/runtimes.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816332767353`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temperature - pressure sweep", "Section",
 CellChangeTimes->{{3.766592615367303*^9, 
  3.766592626251006*^9}},ExpressionUUID->"c2959b04-1b75-4321-a41f-\
acca99c56f61"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"press0", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"press1", "=", "10.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp0", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp1", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntemp", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npres", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sweep", "=", 
   RowBox[{"Import", "[", "\"\<data/sweep1out.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Median", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
            "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/sweep.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.76797441972853*^9, 3.767974432723997*^9}, {
   3.7679745105405893`*^9, 3.76797455934306*^9}, {3.767974773725747*^9, 
   3.767975020078126*^9}, {3.767975052455942*^9, 3.767975204700876*^9}, {
   3.767975249793244*^9, 3.767975265357834*^9}, {3.767975501386704*^9, 
   3.7679755024689083`*^9}, {3.767976308001234*^9, 3.767976342670101*^9}, {
   3.767976424351769*^9, 3.767976427222715*^9}, {3.768735103503188*^9, 
   3.768735130752122*^9}, {3.768735177807578*^9, 3.768735240765869*^9}, 
   3.768735887133437*^9, 3.7687369854116898`*^9, {3.768739517138527*^9, 
   3.7687395177520933`*^9}, {3.768739819874299*^9, 3.7687398338631353`*^9}, 
   3.768756048051762*^9, {3.76875610678244*^9, 3.76875610811451*^9}, {
   3.768756149752689*^9, 3.76875616713223*^9}, 3.7687563512518272`*^9, {
   3.76875638245875*^9, 3.768756398025935*^9}, {3.768761363033943*^9, 
   3.768761369263657*^9}, {3.769187041101717*^9, 3.769187044627632*^9}, {
   3.769190357182425*^9, 3.769190384467431*^9}, {3.769190775863057*^9, 
   3.7691907769403667`*^9}, {3.769190979483322*^9, 3.769191093948797*^9}, {
   3.769191192278215*^9, 3.769191204420977*^9}, {3.769192172115891*^9, 
   3.769192173115179*^9}, 3.769192844668851*^9, {3.769192909982746*^9, 
   3.7691929197983723`*^9}, 3.769192988228796*^9, {3.769194123012789*^9, 
   3.769194124818673*^9}, 3.7691941754909286`*^9, {3.769194355125226*^9, 
   3.76919435686584*^9}, {3.769194708421194*^9, 3.769194711390852*^9}, 
   3.769194892749398*^9, 3.769195161669457*^9, {3.769195213740037*^9, 
   3.769195231962879*^9}, {3.769252452905332*^9, 3.7692524547796183`*^9}, {
   3.769261394229494*^9, 3.7692614190987177`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
RUH3k1f7cst+jG1+HJUkOoRHSWcXeH2lsGbTNv7miwNIu6HtasXPhLrotscD
PRQ6/m3/cTNmEHtyHJfKdTFxx45hfH2SwpXCe+36GUOgqo2Knr0dxr7GOxdc
FtEQU/z28XcxE42pakeUIljoXmmYaapJI+bX3sSsrmE0nVwxM+MEG6fjfg0o
76KhVlt80/UHC8Ujy5M1tnHw9M4LKSE3Gh/Pn/+S9YUNPuvYxRakL7hHW9nK
BdAQ6IjW5p7nID9DcEm8Hxe8+ojGwHAaXc9LUxTUueAfDl/CEebBcl39jn7i
hdPii2TsmVxEvl0tu+ERD7Nd5n82fE2jwissLPYhD6sesWSvqlEY2Gutk0Tm
7eBWY4tb0hQYS/J9Z0dQoLoUb72+RqNvs04jh/SUk42yPpPlJN/cByxPz6Sx
M23vflOSd4+9H3rT02kMJDnIqFyhUHgmvj3pHwVD5havfl0aHyyCe4emkb5v
rGw3YyeNRV3zPVu8aGh3GiQ/CeTh4lwbb7crNGxnyz4ZeUjjcK2G78JyLhL3
Ve/oi6bxdtfiM0rEnV8s56ilEl845h6WP0hyZHemot5hktf1kykDm66zkSaw
4lfNOxqXE7cJPSDvs+qfQ0y1Ewtb78pVGRNHyUsFtDeQvIo9amDoaDiMxapL
thW2kuMYKbldSvIt1SNsrd1cJh5MxI3ak9zba/rd1I302nkhsSpzVw/Cp+T3
w3/EadLDzdNFiQ8jXqyRyt7dj6OFKqaPKmisTLb+kPWUxr8/b77befbi+FP5
MT3SQ7dNd/DeR/ZNQMQmVwm1HpgnlMV3k95v87lgzW9y/Y45VKe5nOvA18Je
3fJQGud9WwaZ7RS29e6IdLrbhiPF7w5hL+nPD5+uqZKksHrk5LrdrS0oOOfk
ni1FY4b41QNZ+4iDfx28pSPVjBDZP+eVyH5pHn128G4UF2GazjdXWDei/FCy
Z3wShdFPAgp+9RzEXcgSEHlQj1PCuqeCD1EoMsnZPfSK9Pmhk5ohn+sQ7JM4
JCpAwYm7RKn3FAtzfv00ObWlDmMfnVRi3vHwfnv2ug6VYbRfthW0+FCLd5JC
qouPkV7A267RODwE6XBVB02dWvw4zK1PWMCDld2PiorEQXyIm22qfKoGm49t
PiZVxsW7U57JpqRnLeyPu23sUY0s2uMsdYmLjBAn9buS/ci5dyDfOagK+9Kv
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
9U0pYn0AlwvhLeeLqyNpXD1546kZ6WfLYy7zxCs4CC+Ve2BE3NZhHud+7Tlx
Vtivx89S2Wid/vtM/n+uUizGR5I/xmuXW6y/wYKc5MJtml9p3EycKzKeS2OH
4ORUmfMwHszc52PURvrpbdOzAyT//I0K9//bysRyya/LB4nT3t48oHqD9NaH
Q2NmaU6DsK+QqLlSS+PZ2QVDKiRH20dbNa2C+/F3WPX8CrIHEhWdH9WQ45RW
3zSDL70Xb/ZPV/hCnPZms+IBjwc0fIqunbFK6EFcd2DNEdKLnczWiC2KoBG9
piUsbbgDBu6v/RPI+20vfrBz8huFkNDLa0Ir23Cfv+XeQmsasynODcZaCjMx
kOUt3Aru2ydpIWRfsPUPPCk+yUPDsuEhB/NmZA9UpPMxKXxTKwlLe87Fs+7J
zO23G9GVOhnvlU4h4lKE7m0WB/NPutCatfXY08mu2OBEfL6lTnVnKxuP53AX
yzfUYXTo3NqPEuR5JK5kGUezsGxJv9iM3XVQMXx3wOgTDxnXJSy27BlGw+s5
yUOVtZDcK6tVcYYHG/ZIwQZRJs75BhZ9Na2F+hytF7uX8jBirPBgbeUg/HP7
3S3DahCSFPniBbk/b0qXdm28PoC4gL05g7erMdm/+VRgMBf9VkVS19APQZEo
3oxHVbglb3fYiuSy49WTmdW/ejH5sMpbPqMS8h1h2xQnOJiqavCZl8lA4buc
czofKnA7N7Z0IpPMy3SBlke13XBnRdeaV5ZD+uCqo7Ykx6ljQxaY6IDy07Op
fW1l2BQv9O2xEgfXvOKlxBe2Iv1huy+n9ytu5t173DvMRmdFbkuORiOWrt5q
wWKVYua0No2HB9ox0fphWdkfBqbd6626akGh8frzH6NLO2EZ5dj8+1MvZjq+
DJ7tQJHHV5d4rO7GU5ERH+/4PtwUn+M1zYOCb8tagRNbGGifEWCuEN6PVV86
/rmTfTP65rearGsvlL+LrmgMHEBi8subvQmkJ5V83V8b2Yffvk8ngjwGEVFx
eYFFLpkvkQf+QR/6UXpCp0bdaQjuhgceF9ZSOGKxL6+xdwDHivHu+y4m6B6b
7VdYFFYdTXocOjEIhaEV1j7KZE+dEwlwIv3rUvC/q4biTJgvEZ+amsGC3c/C
18byNMKfHXWbUhyG2YtZ8YE9LPgneQ6v2kyj6XLb7uwtLLiGztkyi/Ry1rDS
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
2Vw3/t3Efl3TJzC3H8JfWynjk+PwuK1/36AsBsQLPIrtlwYhQO/+QwuPSRCP
ejJmq4q4cWTup5jMMHzk8dtsd2MKwrT8ckZ0MXD9/v7ddZT/7Kz43qXANPjz
o1KyRrn26K3gjvdj0FLy8Uotywz8XePkmnDBwHydqZr51wT0PHxnwoXPQLno
N8PeG4iHisYsFU+mQJxNX+Lz1Cxsk84ZOH0bgzMv98i5dUwDPXrit3fPHCSH
eF0qf4Fy9r6f5gLLMyDCEdQl8m0erh3VpIvVYXBKuiuodd8ciJL4i9oqiVDp
x389YwiD03Uc43tgHtj7Lg725pDgos1oYvcPDAJqPL/2WxNh1cks2NafDAMx
t2rLduBQNDb8LNWHBALrRsLjxhRgET7z87YsDrmPzqdqx5FBXsq25tIBKrxN
+S19TQeH9ws/r64/pIBbRKADcTMNTviV21s5oTqRt79Wm0wFOb9gWVINDUy2
eb4pC0Y5AAqJy5po/V3hkjtqSgf+5FeSG/uu+le5zimu0GD2wTe5yCk6CCYv
PLiG6saY402bxxs6JJ3PO9jpxwCQPrlrAPlQaE/SqUIXBtDmX8kLM6M+MZiU
fPwzDpOMPuHSzRjKD5SbJ5C3/4yMTBZC9Uq4wZu33RRD+TY6VKEKzetErfmA
PPKkI2n7Pe9jkGNtGLIfjQtfadbu268w+J1i97QZedEXD9Mb/HI45DPPjBnL
IV9Vui0rhfJZXkNB8DbEa43LIY/ZixlQqv5YaAl5c2+QTOsblFuMMw+Yp0gw
oNbb5rsX8qy23jM5pAIcrmy7x7yXmQ4WJtqNs49xOKoc4LYPcWx7tk95GcoR
z3JCH5xHPmn269vRcxv78EOj7bW+UGDlxS5/wjfkX+/VmG8jLl1NtGQafIRy
tOlBA70BHBzVKIRWdP5yxrP3r9wkQaLhWaFaxLE57pNqtoh7k7q8rpQ6lMcI
Ng0XNjj2yWHxDxqXmMMVB7PmUf8U4v1vHXHsSR3pdR7y3agqxf5T7DMwOeQt
9BBxjK7z2PUM6itevwosKQdRPzfX/6aGjkc8y0CEhDhmuxc/Kf14DFR7F/c2
PkIcHGyZzdiNQ/DW7+z7xEdguiD54ElXlPNkNuOBqJ+ss6nv2eYyBA3j0rKl
aHxnyO+a7DIZYJ5++NPPwgFoD2bdJYnmQ+JB3wUNAh1CLtbXjc33AduBydl7
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
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", 
                 RowBox[{"-", "1"}]]}], ")"}], TraditionalForm]}}, FrameStyle -> 
        Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1:eJwVl3k4VV8Xx2UmSUkZSpEGDRpUCH2TyFAyVYZGMgtJpkQqSomUsYkKKUOi
IilJZHbN8zVe3OmcDL8ipfe8f+znnOc5Z6+919qftb5rK9h5mjvw8fDwVFFj
HjX+/14R8dp3yWgFwnSS9O/fbkaZhMZl7T4uaj74hZqOfEepuMStd4tawJ3v
/rlvkAsaE5GRjEr87Q6va09owTKh5H+hI1y0yggnVA5XQePlX4nfK1qhw9u0
V4nFRZch7Sn/cDV8fH0sl6e2wu0v/9UKLhd9AYlZe4dqkKvLTtizoQ1x02pl
zuNcDL88XRA0WAuOhF336dw2lEy68s//jwtW5/qvhQN1WE/vkL+2qx1M4rFe
9jQXhMh47VR/Pc5mHrZLK26HJIsWfvgPF1MaH9q39jcgxb8i7fu+Dmgz+CrH
/3Hx5+3e8+89aejR02YyKzvg1L9LJJaPwL/aVF9LkgZpybebxA53IqbbxWiX
EIF5DOGgCY9GWPZv8FJp7cTHtke3O0QJ8P91D71LNOJu9tN8U9suMBobagPF
CQhKNYareDShNlD6l/dAFxbW8YqvWExAZPPOyFpuE4QMonfHOXVDo3Ln4RIp
AvP1kmJczzVDV0owuIDbDfsy57tnZAjIx+9Vpo83oyMj5NdGrx4o9U0vN11B
4LC1B+NPSAvkq+Z69rN7IKWlu7ddgUDo8kdP5cRb4cC8/PWEYy8Eku7Yn1xL
IL+v6sTuR63IEvn7wnegFz//aw9nbCDAePZLxpqK+4Ry0J3o43SMmCu+ct9C
YKnjmja/wjZoGM16Z7TT0f7avW5SlYCBssW9eP12XHENtCo178N3sYIfgeoE
AjlXTN61tKPi1ox2V10fCl3mLeHVJpD1Oke0xa4D4UeKYwKU+pFRYawWoUOA
7t1TMfGjA68Yl/gF7fqRuDreRkKfgMQu0WuLQjpRd1HT715yPyKu9F9OMCKg
M6OGrQu68ENglinf24+A3g1P5Q8T8C52mDV52AXJ+KLjmbIDcN198VuaBYHU
kPsF55S7obY2sEHNagA2CSWjm6wItO0rvRBZ0A2b9xr7vsUNwHhKZP7b4wSE
BcktmXo9uKw/89a0eQCaZpYqmmcI7K5azqlq7sHTtsJ1vRKD2JTzxOyrA4HB
QwfNFoT0QthO0j/z2CC6czWXrXEnsD//j+iQOh0SbpoFss8H4SrIm3PxAoEX
0tnfCifokPGx/xlBDOK3beX+ikDq3INPBEdl9UHh8u2dMxpDiHgT1b30KoGC
ccHl21X7sSE838c5bAjSQke8nSIIOP8fgLv9UI3uzm+nDSHjuJxI4V0CsscK
WoW4/dBM5JvUXz4MtbyBZOFEAjUR0XkThgPY/3Tj9vdOw6gQythlnUzgcrFT
dG/6AA6+sji/Jn8YR0941L1MJ6BCwr2SbxBH8i/lxs4Ng5G34+zvbAL9CtKG
+acHcbL4OclnxICP8Oxvo3cE7ln+WPPk0yAcy2tULsQxwH+yNOZhMQHdG5W8
EbJD8KyfPDfYz8D9/BvrOWUEpj6k9F3wG4Jfu1y22aYRKIqYlGjVEEjn+Bef
bBnClX5dzhe/Ebw5ueTonSYCx1aaJRluG8ZNptvGrWUj0HnbxentpPLIXNl3
R9QwYibuuyaLj4Im8vSaygCBsonR7quMYfxL8ytoNh+Fz4zdtkEmgeD76TqN
Wgycs7blF04YhTRTqS9ugoD6DocXK2MZ6BGDmVb3KIo7RiINZwlMtKxe4MFm
wOiL4hOvlWM4XZmx+y8fiayLg97F+0ZQeEGQnWo/BoFC17FcMRKOS592iD4Y
wdp1LLXOF2N4+WJT/FkpEqsKTu2xHh9BbFfd9QWcMRxKIHSl5Ul0HZNPfWEw
Ct6oN406W5kYD88dr1lLIna6R+Rn8ii8dOLkfX2YiPP1Tg7ZQsIk6aHn/l+j
oE/5u70qZELDccchVXUSIrttWu+ZUHYzjhfS/zDRe+Tn75G9JMq6pDUH0sbw
0XavgKQOC6F6hRkPDElcvtSesuXvGJQXKpkfCGNhzc7AoybmJNSWxwsGWzKR
8FUo+VIVC1VKWvy8tiQmii3dazOZEPRls18vYMNjydybd/ZUHE5INsnyseCj
3KA+bMbGYv4vp1zcSfDW64TvN2WBXb/JPTCKDXvGajcBHxLRvYfblSJY8LUK
dm/5yMaCVzXbvANIyHFPrBf4ygLPYIO7CpONQo8L0/RgEhl/3AIYv1m45aZw
7uZSDuxU5UqMr5PYJRZYXa7KhtR/3ucGdTlYMP01rDCC8lfuply6OxvJwd/O
aZ3noKDY9eCaaBKmG+Pdw9PY2CC81CP+CWUndLHkvVgSvbtTPznS2Xgb4+Tx
o4YDMf2izrkkEq5GeeIHlnEAuQ8eRjOUHVG7FLdkEtPWX06tM+WgOlXUM3Ut
F3YNIk4dqSTCXOpzhSI4sFQ57jlnwYVY7JvNeq9ILA7omTdWykFfQbanVSgX
BVbWU29ek0i+yTKv/M2Bi84/z7wcLs6smPdR/h2JTYnTzzNUKb2qNvUS66Hs
DGaE3i4iUfRC8L+b7lwEWz7zchQh8D7d1GC6hIR+wRJ9lzQuhOmTXl92ETjj
Ni3uUE6iuUIxwZDOxX0nvfOyZ6n6sjWltbGahHLKR5biPAK8Wqb7F4cQiLOX
Gip6Q8KOnlQyLU1g+F0BTydVRyJNxiXtqHg+Wu4fW7+VQMWWlZ+SnxG4rlG3
X+QMiVaboy6pBgQyXoYHOL4lEKT08mIuxaF40o49gacJ3FpN7NxcQcBnYVj6
MQkSBu2LJU39Cbg9PjIx2U7A/ffp9rlRSqekxkfXUOsdWvYpp4jKT3uGlnB6
CYEii4bi2RcEtsQouYVSeWhLk9agcgZTMdkxjdT3RfMj1xksIGHxccplyoPA
ZtptxxeU3cnrk0PiK0kYp9MePKR0xFHcVfMySaBlzialdSsJ3Zismn3yBJIP
GkhYCJF47//1+KN9JDSDbv5hUn1F5621jPXU/MQJZRl7SxKqTmc3x9RxsbiK
v2huF4lA95hWZUcSG833nlSn4m4sNBTVYkLCdmQ65ocfCUXt5dF9QVyE6ZXa
v6L+0z592qSAiqPs+umScEsuPl9LVr9Ccb2y67to8EOKD8mWH5s3cfFi3Y1X
k9dILDVSkS55TOJ11M369kYOoms8ljtR88WKYtfwpJA4KKqdFerHgb/n0aiu
KBJ8G2a36zwjwQwbj9i4goMzknt4TCiuZ5LO7L1KcRk+L92p9SsbhgVrvEsp
rn+IVB4qSyehdNlGL8SZje22C4Z3UFyPBKjY8r8kUTotvlpZnA25f1NHMqj5
vcxYZ71MEid9ynia81nge97zXY7iutl69mJ4NolZ0o8eZM0CR/+bRjTFdXXV
mWvfqWei26bitf+YaGVlZvJSXH/RqLwrnEdi52h/Ei2Vic9R91f4UlwXvFR5
YviWRJNdnF+gERPp2y9FMymus2XiMm+9J+FFNzyi9GMM0W12805QXKdGzBbW
FJJYaDO3vT5uDNSkCzSK6wczZyrEPlL1qDVPwl+TqtPy2xm6NBIxLpXNhz6R
MDRzIhQGRmH4VYZSSBI3OlUGoqh1RmrlamvCR7E96Isko4NE3OsYvaVfSJym
d8XwyYxC1o7hcKOd8teMe2wDZSdK7vW6Y9dHwGcgWqjcRkJiysB1D+VHsdW1
T69IBtibt4jWtpA4FJ8aZF5AghV3zGLOhoEWScvjHs0kbqnzRDtS/ko3b2Sa
VQyjeMY/R6KJxPcu26eBVB4ekOAJSaN0Lq3vMU8+tX+BywX5UTkkLh5qWTLz
aAh3yr+aH2kgsW+lZMUz6lye38p4dVB4CL6Zo6m/6kiElHp0vM+g4vk9aG/K
BUqnY8R+JdVS+7OvZlWnkeARMGubpA9A32+boVYNxYnA2r90ih+VfWvcDxgN
YMuJow/pVZQOZIQunKS4OB4yM+/hu34s073EvVJJwseoV0GI4vNWcV0Csaof
PMopWP2dxBuO+g65ByS8J3Vtr0v3YUy8PKacOi8iKlZ/SwKJ+nOc8I1kLxqn
mENO36j82fbDSpfidONYbF5TeQ8+dInvEi0j4dJs7HYshjofO216wKNu/HWH
zyOKg4Cp14G/nUhc8JNptezpgmfrxYx0is//LBOFHTaSeGYd/abKtAsD2lk9
ufdInH93Jb6BINCoKRC1p7wTFumDEh+vkOBKuSjtziPAI3/JNV+jE+XiMnrl
HiTcfM3yUi8SUOUZ11+f0wE1v8MBDcdJjLZp7F2oQcBu0HH1Y8UOvOwLy+40
ImGvplgfQN0r7n3r+bcooR1yBsUDQ1T960sQPT5cwkVpunlP+Px2ROZOSBGU
nttOTzBNrnHx42Zl4WxIG+aklY2ml5Bot+r2+6DPxSq3PXFeU63wCj0VzEv1
FxYfygSURLk4fOjteYZzKwaZcXli4wQaZLLuR9VxELxlg4lNbwsszWtHlvYR
MA6MVZi5y0HOopQNDWYtqCjilVOoIyiugl7bW3LQOykltL+iGWqrNQ5v/Ej1
ZZoO2vWUvom13R4q3N2Ml7c9r+18SaDk4aEa9W42tArnfdn8uglyU2kFoOqu
5p+d1s+fsOH2wO/Rs9VNaFPyamq8TKBH+VRlowYbX/78iX3/uxExR3Zz7Sm9
uXzsphpPKwtSp67eqW5sxKFwfuGfVP++IuxNuooXC66lQuH0jEYIF9Qr3txG
4HNel9SJ+SyUrL4TPBHSiLLRRG1ZSo9O9fOF3U5nYkn4Yj/BY40Ilra3yprj
gkd889QHHSZcxhI8ZVUaoWG4+cIeBhcpmkftx3rG8NlohbOKQCOmAn7dodVw
oeMS0rTUfwyS2c9O7+uhIfdVaYZdHheD8Rk6epJjcF643vpoPg1u3bfLphK5
uPatMfdCzig+n882c71Fw1qxo/TwEC6UJn6vfGY4CsmW7UbBZ2gY0Fo1I+3I
xbeVStG04RE47yrcd0+dhsfnWJKZB7lwOnRobi5kBJ8TtTXTF9Jg9eStijal
78KXfM9tlqP6xJ9hTj51DZBsCDZskOHiZUZyj+17BmhFd60eXWpAwz+Ds2d4
uDBqqzS+ZcZAYMhDw2/KDdj5cEMke5QDrdmmKS3OMIiaocA1XfX4MV+z3oHS
DZp48qLpsGHMrHuxaSaqHplBxhL9RRycVXRTyV85DP7rrvRa3Xo4cW3NbVI5
mN6pZuzxYQji/ZvvpkzXQfGke2zLHQ4iDfmclS2GIKM1ruOTXQd6fVCbCaU/
q040XB/mDGJ14tvJA3Z1SMId6arTHLzzevg0OXwQKlN+aXLL6nAk97GNrhEH
htedPtusGoS6qeYxsqYWEgo5jz6pUlwmqHZLFQ1AN2tOuOxKLWpiPtPVKB07
n/nvF81iACbCX4vid9biBm/DqjxBDgRKapZEUvcbq7Nh7q6sGuy70Ge36Qcb
D5oSth240Q/7Lwbye5JrMDdEpqZ3sqEyYm/Cq9CPc8vFaIssa/DBkmd0VRkb
1ydPtQVe7IO/f0MoQ7gGF8sllB9msZElO71wPIOOqy33VD98qsbWXQpuUvFs
tOjcNXTq6cWdrUcZkd7V4KRvy44OYeOP8/prvQt7kRgpk3B6XTWUvaTUE1zZ
eCw0dLDwTze2zbu84UtXFTIYdk4OR9mYHcg5qVfRhcVXc3Mc7lRhnW1uvOo+
NqyLA72aojsxyTu8ff7eKqTR/pbPU6H64Hj9q6esO9BybVlB7kQllPSN/2uQ
YUP+/OJYjmI73vMbax5Nq8Tzj4lKTwTYCDKmpwVwWpEQFlwye6wSittGLNzH
Weha86pA8H0L/AXzdJ+KVuJpuuq13b0sqPP4Vt0PaYb1DcZ3/U/fsXJ5aJ4w
1fcndOl0rzJswm5hmYMcz+94ElM/0PaWhZ9vF3CzFzdCLuIgLUbxO1YILV+U
lsJChnz+34uFDfgjcsVSrbUCD4Nc9l6IZMGh2UjhrnEdem/ld/TcqIDsxHtP
HX8WFG4O7n9Fr8bn+aPHr+6uQJITf/LCsyzQtQKdv52vxJNI2YF13HJI95rV
9x5m4cH4okg6fwVCFpg41CWXI948+W+mJgtW6S9fTyeU4XRUKNPbvBxSlZxN
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999998, -174.99999999999997`}, {
                    7.499999999999998, 174.99999999999997`}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999998, -105.56844547563803`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -105.56844547563803`}]}, {{
                    7.499999999999998, -24.361948955916468`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -24.361948955916468`}]}, {{
                    7.499999999999998, 56.844547563805094`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    56.844547563805094`}]}, {{7.499999999999998, 
                    138.05104408352665`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    138.05104408352665`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999998, -166.4733178654292}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -166.4733178654292}]}, {{
                    7.499999999999998, -146.17169373549882`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -146.17169373549882`}]}, {{
                    7.499999999999998, -125.87006960556843`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -125.87006960556843`}]}, {{
                    7.499999999999998, -85.26682134570764}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -85.26682134570764}]}, {{
                    7.499999999999998, -64.96519721577725}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -64.96519721577725}]}, {{
                    7.499999999999998, -44.66357308584686}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -44.66357308584686}]}, {{
                    7.499999999999998, -4.060324825986078}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -4.060324825986078}]}, {{
                    7.499999999999998, 16.241299303944313`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    16.241299303944313`}]}, {{7.499999999999998, 
                    36.542923433874705`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    36.542923433874705`}]}, {{7.499999999999998, 
                    77.14617169373548}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    77.14617169373548}]}, {{7.499999999999998, 
                    97.44779582366587}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    97.44779582366587}]}, {{7.499999999999998, 
                    117.74941995359627`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    117.74941995359627`}]}, {{7.499999999999998, 
                    158.35266821345706`}, 
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    158.35266821345706`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -105.56844547563803`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -24.361948955916468`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    56.844547563805094`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["24", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    138.05104408352665`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"16.28599877318526`", ",", "24.91024755009402`"}],
                     "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
2peXLxm+bIRriMqsD+BA8ERUsjbhm33ezhoHdDnYZ75iv8ASLrJTNCM6n9Lg
HxTK/zTNgWzngcsdGVwsKdR3CCE8cvhgualyERfW3259fLOP5FhFuYEC6c8X
gYxwVzUKzhtHNeLIev1XtuO3vT3J25hftw9cpGCm9jcxuYdCdM6B0ULCZ393
/nqpRdYpSy5XOp/k3fcikfplhLfns84WyqyiIR9mHN9I8jrUpSY1mHCAtoT3
AK8vjblDm5cySX8vviAX1LmJCwezWTGh12lkOQWGRJD7vml7apPSQg7kW7Jt
QY5vp+jsMiKcNqfXM6KY7Et/6/7Nf7JpaHg0LuQnnKZ22/Kq9fNRKO6dkMgp
ozFzvKu3OJdGoke02g8PJk7K3WEsaqdxv+6JfUAB4TrV2QdZKuQ5+UsdsSOc
dmP3LJczJA9bKZs7c1WHMGWlV55OOE3dW8HRieTo8NYjzmpqA2idzdo4Qzht
U0SehTW5L7EHrw6aqPdD/kf2/X2lNEL4PsHsLg3mgviQdrseiO2NrS0i6/3Z
2sBUxpFG+PqbjbnNHXjuZhopQvL9242P21m3KeRuvvpE7WcbtumOXjclc29i
5TNGzhcupNNkxB4vacWleVOp8X8p8IvWup//zkF9+m4nYe1mvA/ffLfrM4W1
eQ+Y21ZyUGxX6njySCMOFF67yPGloB8k1n6W9LeXyJ73m8fqcXu7y8oL8iT3
tnxc21o2Csefc9WjHerRxZbtF6vgInOBFP+6U0x074qxbWqtQ/TQ1oB7Z7lw
5n9ywWPhCM57/dy3ZE8d2u+f3ycnxUWk4/DyO++GcLDbIOleUC3m3Rudn1vG
gUoKq0TYchBWQ0033njUwDhuTZYS2a8LzVM/9P5mIHRuelqDWzWSxo/fj1Eh
5y9acMz3P9Kvhyv+lbtU4Xp+06k+su/fp9f1ftzUh/O7FOlLjl+h4N7iLnWT
jdnLPjmopHWjpdbBkmtbCd6jVftTdrEx59qc+5hoR3DVwI56iwq8LzBtSuVl
42pvvPve/GZoHlYSz9tbjuRjd/ilP7KwSKz3ke2leuikFAw7bS2D4qVTR7M9
WVg370jlRzOSmyIZ9xetLUV/WJhG08JWiIi+j+Ss6sWlXN7KJi0Kxz3AWDPV
hpHV+ulnnfpQHad5396IgmXLpVuBAx2oaTwhw91McqzZ3X2ccJqxXeCO2q9d
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
5Ax7ddWy7FFMx6yINyTr+HTQRuJPFrmOW8qOv74xgqdltv6LyDoMGFqsXJJz
QS4j53R1GRBSFpO/0UZyxP2f3PYCkjObkx7uYQ+jSL0grorw2/t5krLKxMNX
cpVvPkcN4usNBq8E8U11wdhl68jfda7aNezP6Yd3lqLTBXL8gCc+fyVIPk1u
HBNPHqPhZ3ZR1Ycvs89t4jQIRpHzeiG69OpAN97+1fAWIDzJmnD9I3uIg7hF
Z3awYzpQmTUUdJT0K9cXCbHfr1FwFAtNPZHbhkNDMRkJKhw0r7ytmZvGRnHj
op1lHS0oWaKV3v+Tws4RpZkbHSx8shXvWD/dhL0r6+TWfaDw2KohQ3MRCwEf
pcq9JBphT2Xa/HOgiHfAUPLXKIoGT/Wn9NbD/1h/w13CI8/CHHsux4/ghM+r
TZRJPRzeRgesyGfjhtCprFwtBr72Pera/LUO7qupxUnWbIzk+EoyhodR/vPL
Y3uNOqRLqNxfuZSNE6rf3/93ZwjmN9u4N5vXgjvzj9V4HgulpQs3pCkMIiq+
NFXAoAaWiwXsLZ1ZCNnovMq8uh/5IzXSyw9VgzdLvyh7NQuOi5NKCh36sP6B
wjrm/irw2tpFFtR+Q4v8K2GWUDMWVwlFthKO3L7o99K8ndW4xbJg1fS24Ivd
+M/DhP/rdrfs7TatQ/gCyS9vMtrw6V7T4Tpukifa5XMs+RrAm/pfQrhHB9LO
v8/SW0qhbl9HfkdRI0xYY1fd9nWhd22M4DcJCpkuW+ok0prxnH+Thxe7G0f0
WZ+PyFP4PbTT5+KDVtx2tzByDe+F2x3xu0PbKdzkilYuudaOKzUM4ewEGm6e
PXDy8kEK6z5b9Ymd7YTi9QZvZZc+OKZ6Kc89Tu7HtsfiT053I/lUmvKnQ/3I
vbYi948dhYPWrts30XqxcVhlgmUwgI6DV35LBVCIntmjeFypD78PaX6WMiH5
VNmlrpVA+lmNzO5HTv3Ypj7hZ2Q2hDheM/ez7ynkFIsd7s8cQPrD+wf9jg1j
q/HAh8BaClbzkqPs6IPg/9X02ciUjpJnO2uERgmvPw7+z1p4GP1XHz1J02Tg
jsqRdb95OVi7/5vZWdDBxYe78zaQumpLv9ErS+qzTfbjSXsG7JL0rlkJj4L1
0aj1izbxkMOxMpZRI3BoD7mQ85dw2mIr5YzTHMRnzGlMCh8F957SV39KmSiV
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
ehtw6Xk36i9FyJuRutBU5T7/XKgDtln3T26414PTmlNXGV4U/Dt3lq0w6sIf
1Rg1h/u9aOHszue/ReHDAu+2Q0HdeNQ2NB4R2wfJVUkzKinEJ0yV2MlFPRgV
z/38LYGG205c2POZwvjUw3+0BX2w6pIIGHvYjwwDr8unia8H1w7fl9hKg0Tb
1ZfMyAHE7yihLIcpnP9uN7zCuR8af/dHGlyhQ/xgiqGmIAf/FVtZiEQMYMt1
54sPXQdxlfEkUUKFAw+XPS+X5tGR+mWR06Q1A0mHW8fmmXLAVpwSEGAMos3r
u7m1LhMa8/6zYMzef+j5Mv9qCQNur37/+8Vh4kWp44qXZN3XD5cZU6FMsl72
bSy6xULOuhVje0hekWpqb7Ldw8JEY4dznBwbhS0qtb9TOFhSKeH+czkbz1xv
JnkUshEgU5gVS+r1qq0St2YTG3HnHnbqHyHX6cl02Oz3n3zbdz5LI/16UNB3
1YWnJD/vdXDNtybe6BX4OTSEeLGE070wGoVExnPL1YRfDK9tjafbKESWrBF4
TLzTUYhP2U+XAvdul8kDZNxbL2+4+/4IBwnWIn+b3xC+Fjc87Sf1/HZSweXp
7D49V98a3Cb1IHHvgl8y8ZWdeb0bXAgfjgZ/iZIh4/4738/GjozDKuvEH5nn
HHBtPPUg7wMDoi6b1UTJOILdLX70EZ45c5sY7rtG+ob7KdGanxxk/DGLfkxy
4o7zXd4cEzrOpGy1uE04Zli96vh+4mNuM8UFBiP9yPf+md9C8ubCWhln83cc
vBB8VOBC+pYdJakiX0ny6Zr1tjvJcflT1o8F/e6BesJQ1FkyTyGnD+7cSnir
6Hyv+slYF4Ryg8a+E36aFYqtVo0mPrlym4Y/px0+D763lpDcm6IfmRRnxsER
g0LVqIctYLdmCC714iCz5r9G50ukHrKd/3ETj1jCOOq1X53433VjfdUMNs5d
trb17mpAQRkr98FvUmcFxtxjxHdCXArM6+fUo/pUVGI36cMLbe4veM/PQl3d
dUPlNbUIcfS7xeNBweqH3NltfxnQz9ilaNFdjRsDnv2xJK/2S7TkRicN4vaf
Y+PxNtWoqvxRKfuFjRoeS6ceAzp0pGsTun9UoShnPZXhwsaDdovlIsx++LmV
ciS2VWHHgtEryoJsOMzVb1C8Q8P0pQCtBLtK6IpK3O/PY8H45cFbfzb2Ydd3
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
e/DfM3Wti/w0PLtv7WOdSaHt/bsvija9yLO4O/1CoB9X3e6+9SH1emf+Svbq
e33Y2NEY7Lt0AEqSW4afd1PgveS3c+UXGmJdg92rpgZwxOz57ogZClz+Mgmi
zH5sava2UBigQ/SBTPI5CVLPeUqjy0TpEKI9UQuoHoTAnvSJw9tIPSzNMhXc
MQj9Li2Rjk8MiDtqWRocIOs+e+fp7EMMaJ79wFSLZcLlg1O2mQ/JVw5iI+vW
MPFOnya8UIMFwfzVEb9IXlFPSjl9t4+J+9ue6LVWsZB2lHEyKo6DM/R1v/+l
sdD+T9Y9k/Divnr5bq0MDtxUes+6u7GxYjAt5joPhYHgCpn22ftyHg9tEiTX
OW7ztbDzJJfEabnJsGf3Y3Y4pDlmR6Eht2citJAC9y11eRMRDtasmtra9pLU
21k5p0dzODjb/1sh/RYF38fKel/Jz0LxMVXZhNe/3JcoLOSi8O2w166nVhw0
K0TplpK8GnXmicwxXzYcHRQUN5Fx6MQtshUlHAt4slBkJJ4Fm1VbRymS04wC
HCUbCDeKjY8Khx5j4pfh4bz0FxxE5qn0zT4fKfpF41y5DSSXb6GCncg47Fzu
pFsTjnVb5Dflk35S0GS3T7KGg8tzP3guJRx7Mfk8/ODXAdTIKRWfJRxb+M3q
KI1wjMk/faJVsB8BBiM7igjHHpVq+rYSjvH9p1nItbQPvlvS85aXc+Bxuy6o
mpyP9lKzNLllPfhfR/cdT9X/xwFcRiqKQilla0gkI2W8KbNSGVmFyPgmZbTs
lVVZkRQloiEziSg0yN57dq97XVz3nlspJOX39vu37sPjfs457+fn9XpwzhHv
ndt/Dh27XO55r+7h8v0baT+OCZKgrP1i4St0DBY2Z1aiY7mCzKkx2WHok2nI
v5qE37PTJNj1OwEnnppU728agPMnRalVp9DZxQXfgxIEJJ8SlCyf7gN6myaF
W5gFXPOuFbwmTNj/idynxtsLvHu+PDg5iPtN/hzXaAgDfKHQulSuGyxzvn67
/xD3p6MP+QqKpmHvGvbZvcadYJtWdtoD80KdvvegkiMdVM3NaIpZHRDzrtaT
5xsTal5HPa/gngIFj9Rf8Rs74I7Ooumz+0y4qrSxRCN/ArY+Et7EuNkOE8fm
MgE9fSo9G/rWlAY7k87a315oA0VwcPWjM+BISkjo4BwVRn+dVCwca4VwtTsy
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
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
0Homltnptizd9AW6i9+eleQrx/8A4XvFVA==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -175.}, {7.5, 175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -89.48362720403023}, 
                    Offset[{4., 0}, {7.5, -89.48362720403023}]}, {{
                    7.5, -1.3224181360201512`}, 
                    Offset[{4., 0}, {7.5, -1.3224181360201512`}]}, {{7.5, 
                    86.83879093198992}, 
                    Offset[{4., 0}, {7.5, 86.83879093198992}]}, {{7.5, 175.}, 
                    
                    Offset[{4., 0}, {7.5, 175.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -155.60453400503778`}, 
                    Offset[{2.5, 0.}, {7.5, -155.60453400503778`}]}, {{
                    7.5, -133.56423173803526`}, 
                    Offset[{2.5, 0.}, {7.5, -133.56423173803526`}]}, {{
                    7.5, -111.52392947103274`}, 
                    Offset[{2.5, 0.}, {7.5, -111.52392947103274`}]}, {{
                    7.5, -67.44332493702771}, 
                    Offset[{2.5, 0.}, {7.5, -67.44332493702771}]}, {{
                    7.5, -45.40302267002519}, 
                    Offset[{2.5, 0.}, {7.5, -45.40302267002519}]}, {{
                    7.5, -23.36272040302267}, 
                    Offset[{2.5, 0.}, {7.5, -23.36272040302267}]}, {{7.5, 
                    20.71788413098237}, 
                    Offset[{2.5, 0.}, {7.5, 20.71788413098237}]}, {{7.5, 
                    42.758186397984886`}, 
                    Offset[{2.5, 0.}, {7.5, 42.758186397984886`}]}, {{7.5, 
                    64.7984886649874}, 
                    Offset[{2.5, 0.}, {7.5, 64.7984886649874}]}, {{7.5, 
                    108.87909319899245`}, 
                    Offset[{2.5, 0.}, {7.5, 108.87909319899245`}]}, {{7.5, 
                    130.91939546599497`}, 
                    Offset[{2.5, 0.}, {7.5, 130.91939546599497`}]}, {{7.5, 
                    152.95969773299748`}, 
                    Offset[{2.5, 0.}, {7.5, 152.95969773299748`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -89.48362720403023}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -1.3224181360201512`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 86.83879093198992}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 175.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1:eJwsm3c4Vv3/wCVCQlbKViijJauUt6wkhBJCJKRhVGZWRkZpoDJKRoOEFBLh
MRpIsve4b/dwz3PISFa/z/e6fn88l6fznOvc5z7n83m9X6/n8Si4+9l6rufg
4Djw/3/97+9N3P52Tzh3wauF0/F7m4agU2Pl5+mNGOwN3D+yYakXblqriP09
PQZv3ig/rVHCgOcc08NJoRe8vIJnLTNH4aoq7tcji8HJqIcMgnY30CSOX7Et
GIaH4m7spM0YyOyXXsuz6YVXbhsdZZtHIbv1yG4XeQws771U+FDdCbn7cquL
twxBRZr76XfcGPB+6T05qNULHVu/9216OwotDjVJN+UwWOB9XnJmpQd4mnd9
OBI6Co/5PWNfyWBQsfPLhjPJvUC7uJWwMD8KDh+eLOhtR58retzefnoQrF43
lDedJ4Dz3kEvflMMBA7e6WOKDICGZTHnOuUJ2GjSc6dPGwOurSox8k/7QcH/
Tax+/Ti0uJdGch3AgFzxWY3/4BA0Hc7ggmgCWIy0uzibYfBpr3YecXUAxJ6F
1cXOTMDROleSjT4GH7T+NgTlDsGlv4Fs3lICaM2RxwpOYLDx2k/eZ6HDMCEa
AaKbiFBg8ZaRaovBx/ovV/LnhuGsDLn47FEi5Js7W0eeQc/nTdOLvD2DcPaC
+OtxAQIcdWVGTgAGmyxI0g09I3DyaDJ9KY8IOI0tmOWCAfGXpjDt/hCEHz/h
4fuaAA+UuN9uRZ/76Vr4k4OPhyB2QZeq+oYADJGMAxboeO6A0gV+ygiEr2cZ
hLwhgkLpitTOcxhcusl93bpkGNzOTmQFbyfCp9WAHN3TGOjvTHvjUj4CRJv2
+Lk0Iow8z2WnOGPgzlS7+FVxCGqG6wKDQwgQkPmLu+oYBvWOBlLFO8dBm9N8
QObZJBj0zGi3XMfgqtfYeIz7KFR/4fbsmCDCRd5/V5TdMVCtK5uP+jYOnXdc
0p+MToLWMY03vKEYPDqouqRpOwCGF0/ldjlPQPUxqYohXQwO8QQ09jYRgb84
N3OolQwOkne9xgoxmJDt666NmYDm2bNJ/3aRIPpkZNC1WxhczDgyH+I2DgfS
+yzUyych6VZlClcgBrFHpac2po3DicpWx/Lvk/Czcp8SZzAGPjw7s9SciXDm
21636CAyfH5beqMlFwObrzaKdCsiCJ97kll3hQwGP+FQXQ4GGYoUv3p0XFF2
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
wXrvp78MzMUMpU/oDGBKcxXzkmwNhFU2BgeUM5DUGZTBsO7HohQJlw3u1ZCV
+vXVI5z03aCN10vPPmzrZVsKUasQ6h02TrVmoDL687XFxPul3hI52VyFuLhT
bT47GTA69GvLnu896G1a3JbvXYk7LtojSYsYeKagedm4vxv8EVrOCX0VuOf1
bp96PR1mXkMPnbm7YaPqVcR5oAKfkvJ8DsXTsSbj0IXdZzrBp/Duen9MOTT2
nFk6f/13x6rLi76S8RvEXvI90GcE/5XQbyt+YcO1M7c9hHiUC+fnLt99I2A2
HBV5Td6fZyPfFTmR//esJcL3/sQwfEo0eyTJ+/x0mu83LcIl8/px1vWkYVxQ
EmCGzJ8P8GNHyzriP793q0nZWAzji+EBfT4yrnfuXLRylvyeFufhpBMiw/gR
UCf1kHBjdavbnTriUYoPXPh3Vg5h1aPY76cIxzZGsORohGM128bHTDsG8aum
1OsP4dKawyonckmH+tWFVy65PADJNeIafwiX1i3LjL1KuEotcZtTC+3H7gTT
hk6yfcneFwsECIdtkjgbXVf3gy92l20B4dI7Sf9zycSXnppPiKXE9kFKjevA
AcKlJQ/KnI1Jl8lSF989/awXjOUC0jJk/zl4NI6PEv68lmzOObyK+PLuHT8W
Ei7FakSkPCJdNjdWdUfsZQ/KBOLX9hP+XLorf0maeJHryJu7FbI98FHVEy0i
/JkdijiVQ7rsSsIStlFSNxa3XwuII8ft2KzuzhPEi1TM+te/3doNi5Vq5+8T
/tiOrE4dJF1GiU/RsLPrwnDmGlML4kX2i/lNbhIvcurqKy9z6YT1VJ+KOuFS
e0pQ/FLiRRobHjiq3erAxonfb8XI67UrrKYngnjRganZg67323H5iKP6T+JF
n98mys2fb/624UKMqE8b1ISl1MXI6/okjzdkzoH0ZvKHF21DrRAKoMWlES6f
SV04uEiVTThy5tTmy60IXfkyXpjw0SxQ5voZ4i8qyskTfVMtEFDVDNn5iI3F
eher66pZ0G1N83x2qwXPy16pcxJf+mKhcGMT8aWfHn+vpRBfCpYy2XrelrxP
2ndVrrRg4YpWvqfHf83YS/+op0a4tO1i4mk1wqWImoGV6tNNkDy3/pnDYcJz
4WZuBRoTVoufKo04NOGo2VbZOmU23hz5FeFExv1TFes31u2NUPy6uuaUOBs3
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
vjWWGMRrQ6fukKoa+M9WLpGcYUB6YO5V4bYBGDHflcvz16A876MfjXT4kmti
R3Yd6oeM0J4bcWerwcjQ12b6M+D07t8C2VN9SFYNlJdMr4Luqb0um83I48ZB
EWsde+HxL2PHmUVVcBFqjkncwMCdiL4Bdc8eGHMljbqcqoTxCNcLhwk6TCz2
BgdHduPT3Bcdp3cVuPc+Qv/GNzoY5u4Lr1p3wbV6c+a5hRV4MulaVO9PxyKl
lGW+kR3g5H8wYWJaDqEdL9+Zn6NjyrnAWFy/DUHOc/e/vi/DMTcztr8yeR98
bb5o8rIZAjwXvq1dVIaIJ04aKxcTb359teDVeAMyTSz/FZ4uxeZkzurxFhrE
Vvg67zpWh2CNum05aSWQ1bVbcZtw6YlFZ1Ia4RLPVo3w+yCc5mRFnSVcynOb
ntQlXEqSOqWXXdyDielq6f2ES9MJWqpDhEtBR7Vv0nR7cPzpdLzU/P1GNe66
3Cdc+m14LU6ithsLtJjrFhIuPUq+Gi1JuAQN9kadU91YW50Z3E+4ZJk5/OkT
4ZKXxPZLtNwu9ORX/ikmXLrS9SDXkHBpn9Eyp91lnVjg0nXqDeFSaYdMLCuU
jONvE57uDR3Egp/G+BAu1Ua5Wsyv//yGeu9XYk87Di3bVGtHuCRivYsuQ/jB
6+U2+oPZhootGs/z8thYxagWtif8iM2/Ze0t0QZblyUf/xHvTDKIuZZygo3o
k5/aJt62IrH4M/c+wqXAPKrbAOFE48X1ucd2taKq/NMnd7Jdp5BHuwRZLKTG
Wp7xLWyBqvWVN6lku9ytq+iKuSzwX2pfFqvfAr2lM+c6rxKvFQlM3uXLgsuo
5I1HHc341Ogyx2VNPJjxdrnMKRZcJ++1Kdk346/wU04ZEzZufr6SS5cjPvZZ
caHPVBNSejNY30gnJu2i6giSTuwc1BLIWdCEgX3Toq9I9x2+f3XJjg2kHwtv
rG1MboDR3XZ/8wkWophTUTlk3qY8O9e+croek6Pjj+MGiHfJG7QIvGFghHNA
IMOrHlbGS3xHGlmwmHbJsbzGgMhSXh9NwXrEnC0vScpmQYl1mefvUjKePl9U
9lxbhzRla1PdGMKrHTbC3gV08KYy8f5KLRIqNy2WCmRh/JTErO19OnZ+CHHZ
IlYLAa54asxNFh6fUIxU3EJH8e2rTiGTVIyF8tfMr9cc5BRatamJhr9J594m
11JRy/fU6/dxwiWf2q2yHjRsZqfXn3pPhfKY8McPhO+cPV7XajfQ8HnKKOru
YypoPV6xi6RZWJ8jZ9tWNYLjOVpn56ypkMz6olHFy8JTSmp/zZUR/Io/zflS
g4oZ2x8RzJ/z60u92bVRaAQrSi42bZegojIs2lK9lYn+c0dStdKH8anOgf/G
OAXvK1eY+RcwsWOrdoer7jAiO3fslC2noNLxo0BqAhO1d5SqB7qHELpLZG1/
NAVr/m2RrnNlQtg+g1tdYginF4bZJR6ngE/QXFGXdPthv2HdtUmDwJ9Xfvnr
KNjf+udziwQTKyhz8q55A3DqtqVsuV8D8ZTNXUd7GVAy5zr0qbaf8PHcC8uS
aqyT7lzPlUr8Kus03XCgD1J3PCr7xapRIN9R/fMGA/ErBcd6ZnrxbwFbWuwS
4VXxyd3imgyo3Yrbfn15L+zv3dyzLK8S5b/smHcFGfh05/UZOZkeDPr+06Ss
qIQTfU+SfBcdfv53exapdWP53108V60r8O+K5rFVKXRoNF7MPxnfidC+xuIl
ueWwk9pWa3yDjnZNszGzpnbktEeteS5YjtRr4s2zunRw6Zq9k13fCpW3Yql3
rcrw7aJyLd9aOuzkLu0LdG3CsaSgUcfPpRD6Q1937SfxLmeWG7O4Hl/YggFh
fKXQFJYcV/pBQ1r2xzf/Sdai76dRwDKrEmi+aRXUJFwK+eXBGCdcci7o/Hb5
eA/cpUOjNxAutRQrqwUQLrUriv5JqO9G5nXxDTyESy6shfc2zd8f/plRa4tp
NzY7nU+mzX+O9Lwwrzhqfh2znfWi37ugNyy+qZJw6VlH7KgF4VIl14I9btXE
l+48jnlHuGSsxxT8TbhU92DBZUor6ThHZ/6A+evpesvXhREuHSje7S011I54
n/LLlwmXnki0CCkTfng8qxu3GW/DLK8SS4z40k/mw4JIL+I/97dvOLSmDQv/
RBqdJb4kbrEilm7Axp5rfxbWJ7firLKydizh0qMNX17tJr60wOnly1PElxST
Nxj3k+0qe+9TvU18Sfa68J1q4ksPDFjDMmS7HDRp1xziSxpMm5VKRi1YszNn
j8W1ef4EfmSQvgmNC3S42dMMH9n24+GES4talyUImLIgHvC7INapGTs1btSX
Ey4Ndto3S8mzwGueN/pyrgmh+XNiU9psvNUwfiY+xUTJ0nuFF32aELmPd1BU
jfy81vlz44VMPJ39yd0t3ITggL9mWzaT539/yePYp0wENZs7zr1qRMfA2/QX
gmw857hRXLqPCQGrk/HrexsQnT3WemuQhXbjzfdpiQwMDSZmHiA+PpmmTi0p
Y+F610iL6BEGpspHVZBShwahc5HLv5DxXnuF216UgU06n4RrVetwIlj+z4kU
FuZEt9/JHqDD6flxAdOSWhT+l0vtCWBhl4DoRad7dGyO0MwtEa2FW+67nGW2
LFTqJxve76PBTN9lVWoTFfXNP5OiDVg429hGf+xPg6n5r2SlD1TcVX9fukCd
dGuxZXOXCg3LmQr3LgVRcer64/HNG1ioj37Fp9M7gmUOTjc0nan4oVoQwrOC
heSoG1U+voQ/x/f2v9GlIvxuIc17lgnXk6/yjiiNYFX21EmnDVTwcJ9T9yXd
t6y3aHJ94zA4RWudL5Puy92xesdEBRM+AS/k492H8f1Fa96tdgqe+XmYvMxk
YrPJ+koFsWF4vuCcMfxAetAtV9qC+FXyUJGxcNYQDu6cEswkflVZNKm72IOJ
arWWk1G6Q2i55WKqe4EC4XOKWx3MyHzzUnPqds4gVtKPPry4gYL04NCO1zuZ
6JJpP5knO4isIaadSkMNrn2unn3JxQQfs2DnSesB2PoKWSeo1YAuMZX5uJp0
Yu1Q06Ib/ShynNK7+qAaa+7f0t8WyUDy3ndbtR73wf6UUktmYxXkbTN8uK0Z
KLFO7HSN7sXkkEDcS/kq/Mws+C6mzEB3kHNndEYPgkQNzTVvVUIwyOeR1V86
5GPP17SXdCPby0Axu7oCvrNXAsbL6dDnTOP1Jp7hP2b4g1OmAtuk9ZNLwuio
viM0Xk3vwCatTbq73MuhHZwZ2GNNx1DAG8v0wjY0KTyJ8q0sg+v+g+99Vel4
NnUXGbwteMyvGdC1pgx9lwv4PJbREVm74ZSWcSMKC5aGn3IphSXjndCPLho2
eITuyHpdh3Sx7Y8Wl5QgcerquEUmDf0fsx6q/qbArezNvV+rSyCi1tGwlnBp
O0OEy4xwKe607ac7F7vx3CXtAmcpG7J8a0/Or//saS/VYNvQhQznaEYv4dKF
osnop4RLl7nlCqk9nWhoKXIpmj/fgP2xW4F0nH+O5c3drA6U/GKPJxAuBVtS
REsJl/Y82z4ZPtuOA8EvnB4SLnEv4tawJPzQzFlPn1jcDnfHglHtAjaER8vx
3If8u4qi8p0NbehY/ikoMJ1wVks/ccKYjPsjn23WfmhFQFimaxPh7/ElrQ91
5NgY39fyLedAK44cUzGRJL/P8rAV/4txFmz43tgfp7Rgsf5h9nnSh+n6tSr0
byzESAkvaj7TgkG+1vr464QbFe/ebicesSWl0dGI3gx3hZR7AzbE9+x/RVw9
y4JT0ePgfPdmLPywTlPm9Pz3lKdzkxXIduwpMsKLm7HhU+neMzps2N3v4mkk
4ynakFtO91kT7nF9Vgvaw4aAv0oQm/SHgkr2A7N1TXh6uOJzgQLxxShDpfFQ
JsJX+TmpvmuEW5Vj3qAk8V4r3t2tF5l4cmbYrUG1EeKforI4+dnoTZoajVJm
QjM8I0LiRwN4dU0O8XGw8bQ/VnQLBxNFN7e1jJ1owOZ1uv7z92U22ttQKPmN
gU67LakZBfW4aJmerUae/95+mgcUGFj03jqv2q4OpuWbEpeS7jtV9SFVj3Sf
R9118zmbWojX1yQ3ke4TSyvdrnebjv+0pp0lRGpRTVE4O3ODhSsr+cr8N9Hh
kKWY5zVBhYV85eP/CMdlTkho5b6jAca1d1u/UfEbK69Wb2ahaNs92aSJETh3
W7d8uU6Ffyj/AU0RFn6foa09+nIEnMPhZ1YaURF59mSJDwcLw6k3WsWPjGDW
66H0KiUq9IoPs7xpTCy/JundOjYM21u9PanLqeCKcyzcUs/EGoYrx/6IYfjd
u7X60wgFq8aas62+MnGgsqiXuW8YJk+XjPAVU3BdxnRkxWsmeO89T7zSO4Sz
390qvV4SLv0Mfcbvz8Tq08vuaHgOod+fVdfjTkHpaj72zmtMTFDpGV/WDYFr
U+q5fn0KAl5285kQXslbb9ixifBqnQinzwHCq5ryh1oH9zOhNFO/gHJ8ENZq
DQrnpmvAkpDS/8nPRMsBQ0WNgAH4LXH70mFWg90UX4mgUeJRXl83tgsOYPe6
2nW9U9WY/lMvX/+FAYkLhwOXyPbDpEk7dE6zGj46ti0XHzLwbd95F/ZO4mPB
zjEzYVW4LUZT2mDIAE+RdfUn7V7UqG2xixqpxOYAduratQwY/C5Z6G7eA+0l
UkM/91RiBU90vwGdeNe3yXaNK93o6gyw5AuoQJHdpHdxNh3MRzz2JnxduLxE
4Omf3nJYV9y3/8+LdGJp+mTo3g7EeXf4U3aXo+yDxpT7STomM1qfCX5qxc+j
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
GW3cRs1lDOxwjPRkmfNhrbZKo9JnEK1F4a/bRAnXRRSERpB52mw0JHRNdhCj
shfuSVQ2oHBINYEEDNpb487FfxjAhkHHqzIXG7C3IPtC6FcyTz9LpqbLD+D5
5w7ViV/1eMGSC2AUUbhsrf/z5fp+3Dx8JyTeoR7Rux4sLE6nsNneVUW1n4Nc
hln9VMV6uP5dtfLoIwqjVoZxzjc5WBW0WexiSx2WOluGM89TaHa9lOwnxsH1
wyLcaYFk3cTEtcWaguBHfY6Udh9sHrPNbjTWYtUBi4T+tRQi1pkUf6ntRY/a
PMn427VY9qlmqe0CCn52OQL6cC8eP/hcEL2FrB/42/5HnPBhcWt01PReKP9e
pSj7pwZi0/IV+8d44M3sVs163IPwqWYKk69rcDHxniOrgYc9fX51RcPdUEiJ
1tmkVwPO6u7BL3k8TP4zkxZf0A3JvF1GG7jV8AoNzlgVy8PJw4/OtIl1YWRX
R2vc5Wo4iDbf6j7Gg62Knept4w6sMgqNXMyrQsKRprgo8HAzXcg50LMNf82+
WE6uroK1vOtGr9k86GX8s3OIbMZIg22ZbXAl3pTL3jvYS7hLxzQ3tZANWfeZ
CsZ1FSiXXVwW+ZaLhPZOQYuAgce6skUcpQqcnaZx6vtlLraGXM2KJZ//8yB/
gZNnOY5kJQ3d383FDqv0eY3vyvFgvp5dXnYZ5Cop7bOLuZB1NmXLLCuGqVT2
UcXpZfgfXt48Yg==
         "], {{0, 0}, {51, 51}}, {0, 1}], Frame -> Automatic,
         FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999999, -175.}, {7.499999999999999, 
                    175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -143.8427299703264}, 
                    Offset[{4., 0}, {
                    7.499999999999999, -143.8427299703264}]}, {{
                    7.499999999999999, -39.98516320474777}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -39.98516320474777}]}, {{
                    7.499999999999999, 63.872403560830854`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    63.872403560830854`}]}, {{7.499999999999999, 
                    167.72997032640947`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    167.72997032640947`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999999, -164.6142433234421}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -164.6142433234421}]}, {{
                    7.499999999999999, -123.07121661721067`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -123.07121661721067`}]}, {{
                    7.499999999999999, -102.29970326409494`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -102.29970326409494`}]}, {{
                    7.499999999999999, -81.52818991097922}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -81.52818991097922}]}, {{
                    7.499999999999999, -60.7566765578635}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -60.7566765578635}]}, {{
                    7.499999999999999, -19.213649851632045`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -19.213649851632045`}]}, {{
                    7.499999999999999, 1.5578635014836795`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    1.5578635014836795`}]}, {{7.499999999999999, 
                    22.329376854599406`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    22.329376854599406`}]}, {{7.499999999999999, 
                    43.10089020771513}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    43.10089020771513}]}, {{7.499999999999999, 
                    84.64391691394658}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    84.64391691394658}]}, {{7.499999999999999, 
                    105.4154302670623}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    105.4154302670623}]}, {{7.499999999999999, 
                    126.18694362017803`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    126.18694362017803`}]}, {{7.499999999999999, 
                    146.95845697329375`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    146.95845697329375`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -143.8427299703264}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -39.98516320474777}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    63.872403560830854`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    167.72997032640947`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "22.999043443834854`"}], ",", 
                    "10.735320819945859`"}], "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422153275*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],

Cell[BoxData["\<\"plots/sweep.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422416079*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Import", "[", "\"\<data/sweepout.dat\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.769252501113154*^9, 3.7692525252988234`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],

Cell[BoxData["1365"], "Output",
 CellChangeTimes->{{3.769252504152606*^9, 3.769252528136264*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
       "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"Median", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], "&"}], 
       "/@", "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.769261460062886*^9, 3.769261496895557*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
kbz6XvEi8nrqgjm310lWPfPzJiXG6upD70ImTpUL5Q4Vmtm4iOx9UC91ui33
BdJk48WbXZ43VO9PkzzjLqW3Ol3ApFvLjY49W/vMKiFdY1Z3nOhRQr9+pnON
el1e2GquGvfzXxVsymj+u93Xuj1zOGvWv5/9hEUj8hWTzen+KfNKu0KPlQt5
95xafLWEhD+pkXD4PueoGWWC99YG6W+Km1ikWc2nU6r5FDP9/CK7+no2Lz3M
fG478laZ2fNPlJBTxztWOH6PdQ/Jkranqtuky+r7pciA8yEdLv+nvl+K9DPM
jqta2MSZn38T0k7aDggx+yTD4HbzbstScnL/g4n5HNW/Y1vZmW/lFuPQ/JrV
n+ucZDgbkmatX9/fLHjfsS/WMqJvgxz5j5bVr7t1HtjwhouTZp8+q513b3bB
9/OWg/3Grb23xEaGBXUY9G+ql9afH9pYe+NJb7w/WsbvPP2l3ttS8vrz3tuV
P3BOcIxsml6x9pfl6t+9QVIL/dHjeLTpczfz86ds+4/eM+wyv95lyJhlDqhL
zMw/4xtX7jvzjXp/kow99bxQ2hX1+1qIt2ebcuW+2Mrc/aFj7k76aPpcUp8T
VtLZ8fmxIqI+160lvkB5v48j1OeMrVxd+u+d2EbKdw4ye/eQD3keKHYRz5t3
77zeqNhbvG56HpnVUXGkzH7SKe7Mu9Ky6UTHvTeqcO5+lKy3qtTvRm/1/gR5
feh5yOq7pSVn442t2kyLz/r+zM8Xr9A1OStPVu9PlOdtLx2Zlar+Pp4bPULv
OW6MUnkoTHqVsruecrislLY/OLXJNd67FC5vAivGZLio90dI76c1L5f9xdwH
vaj/wml/x5WVS21nGGfGoS868/OywasqX4vtMfkw8/NxxfU5S9YnmvcpHGuv
LTnhdllZsqlVwpoe3OdLk26pEWktD5r+/MzPg/lje54uO0P5OkSaz6na2H+x
s7zZWfxQ4TG8hzBUGoy7+q3A3+o5VeTaueRrj8RZFsxMqmtZRPD+OImsu32X
30/mc6x9cz5tq3nHWbqn/5L77WOeA6fI3IpFgnwj1OdKqlR5d6XdkAnq6wOk
Tc5qte2uu8rE5R1yn7Ypb3pd5fFAufnf3kaOGepzJ0gKhvr/XO22+nmCpduy
tCpO6YpjpantPz4bnrrKA+dblav9xzmMRrm4uMWw1Fzq+4m06LWyfA879fXJ
YvxUwftTG1fp9rel5JvHOqlkCe1QcP35Ber9LjJ9U0bk0Vvu8uCPo3/fj1K/
p4f+usrWVUOGLHTXr8/4tuf9ofqKPaVtqQQLVxvF3hJUwq9Z0BX182bm15DG
3daOVOwv9Z++nLfCRXGMLDvd+2WfJ+7S5eLDHr8+4RxjgzRcFnHl3mNzHfGI
JYsed37nLr3/+rNCXD/UFWd+Hiz94+nkGyVMP0/m58GayQNDP4SYn6vuPyrb
cuDLctLnt5ZG28+fjer3+B4tpcHUJUOGrSxnYitp03zonysaK7aWaq2bFFpW
UrGtNCte8nDng+rPd5C/n5Tr+dMAxU4yunl3m8GBiqOlUtWUQYu+ekilXMvn
OpbAXPNMf48a4Opd+L9ykmtPaceR6ejDyfT7wv8mtb7xTH2/58aGDa5Ud4hV
eqSEnLxyJ0S8pGK/Io4fG/IejigJiyj2NtZGvT9BymzI+c3um6dYDu62peSo
eLw/XLa1aXd2+0of2RLbt9m3zbwnKkJCrxmHGnqY+7RnNdh0pk2Sj1iMWbB8
yjrOOYiXK+VHe4wvZd438RiVePBrtI8crr2wpf1M7jumSfHksSNeVjLfG7q/
9nxjzW9+cnLtiVoVv/Ke3RCZ8Vd6ZO2p6rk4VL4UPrVgbznFYdI9dfmIu+vN
c0pG9X5Z+fdDfuLzenmDvx9K1u+X+fn3KOxwtfiB5nODKoVkZNckP1kypW5f
jxU8d0uVLQ9GOxQKU+/3leoeR3od/VBeLDuvr/7xmo/pdfP98zZ39/QqMb28
ft3ul99+ahqqOFCiXOd0/vuU+R7hNiWHdFjd3jyHqPKuhIM7XMtLXJcTNacH
CL5/inyuM3qtzaTy8nBM0gPns6w7SZH266IaVmmhvr+LbFze7IPz+wAZ+GZj
w+er1eeB+T7xqDITkhIOqe/vIX1HBbarMVmxp4zyHnLKtYVibxmZXmriyPLm
uWJvXybItZQA2WRdtkWMJebyZX4+vWh45lSOnwKkYrxhsL0V68isJEdhm8d2
XwJlQ9Fx94xji+q/l+/RWkYP6/r0v8Pm+9M9F61ut36y+f50uwdJ+3o0M9+f
PvXEcy8HX/MczX/3pa/973Sg/PKtV43YQ5xDa5SPbwtWGprXXAd68emXImkn
AqVgVOH9xxqzjjpZXAtO2L7PxnwffJ0Cjdcd6WC+z7dSoNeGTQvM912Xbznp
5KNg89zbXR9PeDsvC5JWC4822DWdc6OTJNl/WUrDCUGSkDCoWq9t6HPI/Hz9
umhTnnyjgqV7/+k3pnXHXPbMz9MJIwyPXzQNlsKr+m11dUZfRObnxZ+7V+Rc
+zBETsTkbd59K+8JiZazhTs+nN3K3HfkmntFg07RIfJRjjZtNgl9e5mfJ1PS
+17xORcqu/Osqn+zJe97ixCbhm1tl40030MyckuPmr9Gm/v+giMb5YxwD5W0
s39d/lYEfYCZv/f1pEWbRr8Kk4fJ24d9Oc37tULkRp9Gtzv/Yb5/bsSiYV5l
25h/jnv2szuGlDH34X70urfjb8cwubZrWlD+SfFZv1/m59OjyrlG/rI+TDqd
cysRVYv7rgHSzL1V6cZHwiW890rfIf1531GgPMhbtZTzEPN9YO0Ppw5tGW3u
k58TaWmx0itcKlyc0m6VYzy+Pk16u9f9OHJuuFTZ5ZvT/jjPET2l+cLLr889
jZCLLyd0dB6h8pb5vhnr5z6PWy8238+0rvX5mSd03vCXxnNKVM5Z3DzXIq55
mfG9UyIk7U7K7Ej9+W4+d5kzqcSrfbMjJHfujOHPq/Ic00X+PGBdffrZSLky
0vliywvqOcp8/8esbvGhnsPN9+U8WTt049Io89yZtt67Dt/rEyn5Cm/pXboC
5zalyreJg7fkWxMpKy7VrTriCutybMX22qVZW/ZEZT7nF35S7QzvY3AQH/cH
U4p2M99X0ulO2f+aOZvnQtk8bNLr4L4oKRXaLvD4A8n69Zmfp1/677gQfzFK
3A+krbjTmXVAVlLP/h/5Y0m01A1Y/bxKa7VeM8+7rzJk7Od7dtHiG5k75tEY
0Xrubr1OJuU310VUnX3W8dsita9hntsWUWTLrDfuMbJ6zJyOi5wlq56ZD+b/
GdlprW2MRAfu7Ga1gnWultLl4NyTT4MNMijs+pN67dQ+lHluYp3udVbMq2qQ
UgN/GrurPOaQZn5+N96/ec2CXgY5+fvZ1KHVWDdrISsDuj/bkNs8j3bsvv8m
fm5mnvvrVu79SZvpsfKi8ej8Pe0479QojTv33zChjLkOt0n9kFvlXsdKmTsf
jjt9Zt9HtCz2+/fF10dG+S33x11jj3N+ZIz8s7jArKEDzPNVx9fx6324oFHy
n67ss3MV+0Yixebzu+OFW4ic3n7UvlEXzt+Lks7163UK9DXXyed7U+5piUoi
Tt0XzN3QnH0n4fLaaW5YgRMidnVWDDhajPPLIqTd78nNLk0TKVqn6fKzpdmn
EiKNz746Vbh75nPM5xrPT+7m/KdQ+XNQDme7aPO8pw2nfTb8m8vc12I3NOho
oeA42bNmdpPzF9lXGSxvf7q91rgiTg68LnRlRBPz/Jxv/uu6dZrOvstAWVi7
iUVQ13jZs3Tc+InXOF8kSGbN/vn6sxATZ+afOTvP53odHC9el95M/bmRuQ+t
U9dZuSP3mect1Pg3eutaV3Nf2qHZFmttu7K/PFEKek5odb1Wgqyb6N//zX/s
h/aX5MruVYteSZC1h6seaHmO/bgB4tr18d6/ZyVIyIUN6wN3sD/UW4o1Llb+
VcNEqeK2ecWw2+q53dyvePxXY8UvpRNlU+H4L56j2S/nIT41zvoPvJG5jnE9
3bp6EbVuMver/Do2PHbjHHO/XfvtM952m5cofWrebhlqZD+Ri/h4NEj50i5J
dq/5VqFnLdPz2v/qj1m35f7aNDdzv4X3+ymdH8YlyfWwMYt2novH+x2kjnuP
YyvfJMk//7jdr9JB7YOY66VX72691GKNuZ/jwQWPOQMfJUnk/tVflrWMx/tt
xWuL4WiR2GR5OHLXyn+asD47Xjp/Sm0wqFKyXBpw6n6pbaz3TZNP7++FNs2b
LJVnzXccX4fnblbyweOv+gtPJ0tzQ/6eby3Vvqq5Xm9ywfi/Hv9qrh+2spg4
yy7zcy/Ytnb+6Lzm+sg/X34LX+LHczwLyd0jrd3d9inSLGLZLwtafUL9oKVM
Kv5bnFMZc31Z0rq9xrGNU8Rm9ova/vWy15v9VOnJjT65U+RJvbHjf86Xvd7q
eqdt7923psiOgdvPOgay/iZNfkq7fv7KzBRZ0vX+xLA7rE8R8ely5t2nBqlS
6zffvfmmmOsVqtneGP/vfp7PG8Wxwp25qzakymG/cSPiV5vPb8PG9Z80YIn5
zx0+5nzI77+bz6uKvJPdyWPM5zH/XAmLtO9pIeu3dOoe9ui5cY/R4LnVzlq+
fX09/0ab58YNe7q2uD7LQY7l3D9yQJeXxla78+QP8nISt1d+qePTXhiXFHr8
plNrFwlpXW9NF59XxmkHamycnsNHtrpNXXiw0Huj9+9bot4tjc/UX9e5//W1
sXHeP5a9tk+UBUfnl5wy8JWx7PPuLTwGJcq1XE2qHHN7bsxRbcmFxWEpUs7i
yLnt594aQ+ZuORl9oKh8j/nEcnEZY3xlNyk7Of2zZWgOcXR7cLthlJ/0HT9/
XJeHuWWIc9i1Od/ixNu2xe2rH/JJgZYt05f2jZf5AWFteq3IJ60LPzg67Vq8
VLuQsbv/wzzyxWtijU+BCXJ2novXprK5ZN+MhM1DdyaI3ezIVhUP55LO5Tus
u1YmUe6+XWjz+GoOmRWacsG/opWEdxy7qvFUS+lhf3x7txUl5V7YzJ63axWU
hs/Kh9Tzc5VOu/481WxTIZlfpX31Ofcy/z08mmxzvn0RaTI92adipTi5Mqz9
xvUHCkm5S5W3J6yNk/TBVxdF5y4oBdaEVRraMVWWPe+wP3FrEZnV2Lg+95lU
Wf/PG9eKToWly0XXXXUj0uR9uuFMv2EFZeWgXjtW5yyu46PLfQt12VXKFEvI
OoffEt1L2JtiCWl77/d+BWs7mmJxeViu+PJtvzjJ6apuNXp8sxK3g+3Xndjn
IqmjzraYM6yYOI2uH9b0q5sYbTb8tPtzMYk3SuuG7w1i+cViSqebJeTRgguX
B+2MlWXDG3TM97K4FPiwfmTHqUbxvnPUY3X94lLo2/CSF0qLtHhvXLX2gpW8
MaT/W/k3kcXP1t3u3MFKctc/tMXqU5KUPRy0e9ilEjKnzZDffFoky4MQ+58a
FSshnvvyTfE6kizxxWKXVapeXMbWr9qndlCKdDvW98jKicXk3NKnSxfOSpHf
Y3saS161kkFH+tevmydVcte6d3S7t5W0u9U2YN/7vBLyIti2ef9S4uNysVhq
45I6Nulefmb3LbamaC0VvraPXL+5rCmWkmPnmhVv3sVZpi/f67bvmo3YPzno
7OTtKmGXMpNELRv5+963sulbPGXi8W/GJ51LSp3pRQ72/xol9ZpHWb/6UEqW
jtjS+dS2aJntcm173H0bubCpxYw6g2KkzsVRrRvksZFS1cbUM8QYpLEEtnjz
3Fqmlgn/mNE+UdY82Xo6X6VS8nafYVnx44myqtTTuCntbOSXahneOQKT5POQ
nLXyjygpu+aWWjp2SpLcf7Mzoucqa3my+dFir7xfjTv+6Nt+1CB7+dzD3btj
XC75uq34lE3z7eRC0fFLyz0sboqlZbJ9/n5LS5cyRXvp2tH1ZvggOx0dWoSP
KdK1jCnaide5vvcCmrpIzWVvjjXfbSuOIU8dfQ55S3S7fw11xtjJhJ3FtjY8
HSFJL5NvdE6yl+6JjVs/GhUpfxfrOWW5T2lZ6m4YcCYhSmZPff06raidvNv6
8fisu/Gy+a/zXa752kupEX5z5yUlyA756cVn39Jyb/t/cbZLEiTwYqei+wLs
ZKf9gTXX8ibKzatOA9+E2cqLuLG/9xjwxth//O0HjZqWkVa/FhxY7U2oTLTz
fx93vqxUrp/wouaaMAlqXfhg1V2OUmZErh3NmoVLulORJ4MHlZGqyyo+aGMT
IdEL/BfMqu8g1T8sabC+c5wMPRJ+fmLPshJVrVXJDUfj5PQgl5XTGzvKy5wb
Nxz0jJexpebP8UsuI6sTZ15P+jVeurqf+ewf5CCxhZeNjhqQKi/aS+NzD8vK
le3H5jneTJWLF1p/fW1ZVprPHldtXVKa5L7df+goP0f5533XrX43g2Xdi5td
G+5zlu7v7Mf6jg+Ru0/DHeo7OYuVVZ7id5JCxcmpgNvh0U5iKHPhbHQTkdc/
16v6rLezfDto2Xr+VpEvpVwnD7rlJH1zvd/sViJOHhS+cWViJSe5+mnHzgsf
k6XHs2cvGzx2luJLLA71bpAiadNz2t5u7yy2bf/127A9RZrO7rbl2CMnmfht
wfUx9qmS9nX4wODOTnLc892u3ffLm6KrhFQ5tX3TjgBpN3t+z469XKXsob8m
n/s9UIxjxnktT3GVbc4hfV82D5LuCe1e39nvIi47qh6fWy5YktLnzTRUdZHJ
Y8PTbD4apFyZLhN9X7uKW7OT1QzLYyV1z9wFfWu4yojdQ5ZY1jeK1YB8lYut
d5Gie37d1TS3SKyF/duBxTL/3Y0s79//TpJUdN+99fkEV3EYv/K/JZIs3WT1
5lk5XeXGh9dtas5JlkH3z86q3NNFmp8I2e78wNkU3WVDw2HHKq52NUV3cbwx
Ib9TZ3O8N/3vSD+vcqboLjG739nWe+dpim7S+u/d9Vrt9TZFN7FYVKZxiV6+
pugmXSvlLBLj6G+KblK8l7P3kA/R4vY0vlbeV+7idf+fw2d+j5HqJzZMWJzi
Lj6Ll/mermKQOhWq1184x03en47vMWxg5r/vlILHS350l04r/vAskPl8v2H5
5oWejdzFanP3kc/LJ4nx0hH3fX+6yeEqt1rFjUwSl+iRk/K4u8nOVY0fVF/4
zThtU0FDhdfl5LWxbe165/LKl5P1S9psKidR5RzSuh4qLCfypxSf3a2cFPfJ
+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
uzqHRYq/R/qrQ09SpFGlJ/d++ydSnN40X7nWK1Xk0f46zWtGyoa8uZ4+jS0l
f+zN2LHjZJSUrd4s+HnF0pJqfanQ54lRMrFeUsD9emXErU6xY5F1ouSQZf2h
D4KcpOVQ3/if7aKkfaLVhaMvRc6McFo17W6U7Jh8qG9R7zjp5fXbG8daUfLx
9rSpa9JT5PVf5f2a/hclN89/qtV0XYrsXflu+e4WUTL/j97jSjUpIhtLPnux
72i0VKuz7/7cc8Vk8pTn28r1jBbn0h8Kpoday4jkr4MbF46Wr8sGVvy0M/P5
tPqXqW/7RMvuAYMrbDWkSP9Puad07RctX2bYVDnXx1Lk7L6RUUVj5M2u/1If
VhN53O/KhDMLYiTRWHr06uEiIweG2DTO1P2KTc+YdyJZGrgE5DDOiZFPPdfU
TsuTIm8fN1k5sUCMrCuYuD26YF5JH5Taq+1eg1yeMXTKiGOWEj1pbfEJdgbx
//Nx+5zrjaZokGk1u3fMUUzEf+mdCzldDPIlyHnJ+5bJ8qF1fKUXfxmkWlnf
T8umJ8uC2Hpvqwca5GOoR98FP782Nmu5sFSFlFhZ+aZa/FJ7C9nkWOHBz7li
xfMXp25HtxpMMVYqTcr1x+C25th11Prme0oYTTFWHLyiHy/9kiQRNdIvVP0U
K/UbeW/tEZAs67bW6nq/WaxM/zWmZNiLKFM0yqxHNTbfWRRtikZZ4PXWObFu
jCkaZVSu87Z2lgZTNMqj4V8XjDmWJOeKfkmwm2GUzu73J246HyFbJvb4+3IH
ka4b204IzlyfRVzecNguScSv+kCrt4YomeZptPzkKHK8hX27Sz8lmaJIx9/G
XHOZnfQ9OmRysQyLFdvCZLOlWJz/V2TwiP8+7u4ULnEH0gdc3yzS5/HRQV2c
I2TXm7t7towX6VvhyrmzsUnf426RAwlvnvZ+Eiy3FvTtFZMeJ9XbHkmaPy9E
lgffdTlVNU6GHBlWf3aNUIm/u8+3ilecLNhx9mrLPGFy6urDp+tyxkmOJ5Pe
T76b+D22jpOe5SddG18syRTjpOjM9KZFRwaJZeUda4YfiJO1Od9unhwVLPVy
9GtYYU6czF7jVnbt9kRTjJM+1ScsbPUoQHYuS60e1DNe9kX8Mrv5jMDMdZvx
xNrMz7Gh5xYlNUkNkvgOZ1zKu8VLiVfVX+1pm2iK8fJtfWC+GeMTv8fMz5Wl
82u0v74pQGpWW77x2eXMz73De8JzSOL3uCdeAg/7Trh5LEBsW0093LVNggyd
6r008ZUp9kiQvh090u3sEk0xQdZZxVW0muMnvomniifeT5Avh8/tPP7KX4xB
oV1e7UyQV3uPlvNxD5APN+5OmjIxQW7XetJr3QlzbLOppUf1+V7S4L/padbt
EuXX2y9v5HjtLTe3xvS2MCTK0jfBt6em+EqHL8e23i2WKM0enSmYY2XC9+iT
KHOjR5zx+cNdHhRZ+LrC40TZ9uRD4OIvHuLfb2Cl9n8myqs7r74VreIphg+f
vw2ZlCh7R3UfN7FFwvd4K1FatXWdEDUiwRQTZeBPxRfZHXAWp1m52+fNfO64
WzpqSVqxzHXkr2Pb10hMkrIupT92a+ImI0b8OnB2qSTZHuKU6Psg/ntslySz
x5we7uKSYIpJMmrtydb7jthLsbfbKtX7kCRnH6ZNHtbEUaIMI9efOpokt/d2
rObUx0n6PC9tnTo3SXpMWD/jWo/47/FVknS3efm5+9Z4U0ySbRcMzYassZGL
2/P99Lx2skz2/np8WYyd1Dz4p92Ucskyq+rPCxtkrgf+f2yRLL/mHvZphk+8
KSbL2Nm1A3I3TzPFZKlSb1SfcT5FZNji6e+23kqWJa83BTWbXUym7K6Td8yG
ZNnTvuOTNy7WEtHpt11NhiZLRqM7idcqx32Px5Ol/pvxpZtOjzPFzHX9gGYl
+8elfY97k+XS83NLLid9NQ5fGnbev3uKDLt+paeja255v6vx/cD4FNm/sebi
Sq75pVJ07SMhxVOkxtP8u4Z2FFNMkROrq26sv0W+x/AUed7v9vY5mT77HlNk
3o2Bra1c00wxRaKONd5+tu5rY4unZ+bsXpgi7cL3v3njJ9/jHylSNeThJ5dH
qaaYItWMgcbTedK+x2EpYtNrU9q5c0YZveOyW4cOqTJuTY0SJ4PEFFOl7pbO
T6+dNMWqqXLgZZPTcxfHSos+a9qdPJMqx5169MxjMErb8du2D56bKrcL+NsW
2WKOZVpcXGvcFitF1nW8NK9RmgybvWXGuXmp32PZNPkfJQriWg==
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1k8tOlFEQhP9hBiT9Dw/hE0hkLsSEBQu8AHFBosFENiSEAQ1uJXjdKigs
5WJMfBVx5TAkBJaA8QUI6Fq/SpeLStfp/5z+63T1uT7/bGalryiK+6AKKqAJ
GuBtFEWdxGviIusdsA0WWH8mnpac4XsPfqiz8C7xAPwp8+wb9jbBGLkRYn89
86rdZc84+VH4MvgK/0XuNziGPyH3t8y6z+E1zg7CX8FfRvJNYpX8APwFfAg+
An8Pv+TsEXU68FFiDfSD1Ujd68R2pIZp73mq/7oHSzoLfpSpX/do+C5TxMfW
fML3b2AQfjPyP6rVdq2211XzFrgFBsA18N19kJY19QhtF2X2RflWpAfqm/ra
sC55sm9t0jVlbdJ7J/IuE8Qbkf+7HXmnpjV07LPWk3xbId4lDkfeRXeatgZ5
1TKXXvldq2Qf30V6JK80E5qNB5HeS/MW8cxeLEbOwZi1S8OuZ0va9rx+xJ4v
xIfET5Geyts591y9Py9zj/ZqbpTX9wPPqWpuROqs1NNv6S3gH9znvnrOkGZJ
87VlzZrTQ2uRpp7raf0xct40d13PvR7Ojj3p2OeqZ27X7+N/jZ7fyFWZ/9Us
bzunevfsxSzxp9/CUmSdjvv0D+jaZF0=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkskuBFEUhm/1pHOrXsLW0HTEEEszS3PYSQytpC2N8QAET0CEJ2mWEjqh
7cTwAsa1+P6cu/iS/69z6t4z3OalzclqxjlXghwceee6IgT8xc59Qh6dg11i
X/hCZN/28Lf4HtJ7YQDfBlln32rEnuEMfQ7LxFqh2453LegS9KHzcE3uLP4C
vQGj3r4pVoB2/BhU0f1QRg9CJdynWhbwl85yJrz1oMsiOMQPQRrqeSQ24u0s
5Y+j58L9D/BC/Aaa0EXo9NajetUZOmvKW3+qQbVoRppVHb+CjhLzmtcJPpOY
1gxP8fvetO775q4PuEPfw5Y3pLPk7KDXvOWqxldyp73NSl61qyf1pppU24w3
r3obxA7wRc5q4H/xqTetmb3HVnM9/K/dzYd5K76IHg73aWfaXSX8rzN/YstR
rr69xXZnGvapWl1ivWgmx/jV0I9moLdVC+9Jb0RvpRz2ox1oF09wFerRrre9
7VYz0+zUg2LKWff2ZgrhvXSg/wFZmVVV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.44697442364361184`, 0.5615685129975149, 0.9497017929239753], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmGuQl2UZxt93LY3n/0dYOYioKGZ2MEkN8MBhz7vsEqibJsVMNc0kBCwL
LIcF1g1wNa1JZ6ovsSBCuJxKWaAsppP6oSlUDiIuhq6QgH3qOFN9qa6f9/UO
fLjmOb33c7jv+7nu+3nHf629dXFFlmW/y7PsEpXfULlZ2CQk4YT63hRKeZQD
wj9KWXacb1OWDVX/SdXfEv6m/mMq56n/8jz6/ii8r/6DKr+i/lMqdwq7hBeE
R4Qe4W337RZ+KqwXNlh+h2V+5j5kfiE8KjwmXKG13lE5KFTmMVfR3iP8WHjX
5U+E94S9Qr9wTtgn7BfOuo/2iDzkkTttueeEPwnPW35YHvvjTGc8ztjwPPqK
fez2Ph7S+Y+qXKPy5z43ZzggrPOZ2cc33T5qWzwtHLFNaB9z3xbhuPCMsFV4
3X20Dwu9ljkp/T+h+WZr3VF5nIf9VpazrEXt76v/TZU/ErYLa4RGoUm4Mo8z
o7PVqjd47DVho9cYmV/Q06uq/9Bj6GKt0GV9UT5sPa3xGLru9plPSGab99Hv
bxk7aDt/S3jDZ91m/+qzf+CDz7qNj253+7TOvlXlXJ1xUPUtqj+o+p/tZ/gU
e31ImCectw2wySUVoUd0j03rhbo8fLtWqMnDL0/ZTxdZ99hgoUvstMAltvu7
9nCZyi7t4S+qV6jemeKecd+GCKtT9K9KF+4eY+yXfb8v/LMU33anWHuY9zXf
Nu+1nbAldlsp7BZ2CStc7hSWu9whLBWetQ8scYktFlvfW21bbPyK9dHJPq2/
jR6nvcfrzfNeGGv3fMzV5vmesR3Z+1DfG3TNeQ74rOftr6PzC/47yn6HniYL
kyyPTarzuHfwQqV1N12YZj9FjvvNfb9K5RjhU+hc7ZtT+Dt+z3ofroh7yJ3j
Dozxnfiv9D9R5XdS2KfKawzxOlPzsPMU4e48OOAdc8J+n+mceWHQY/vcd/Yi
zho095x2+3lzUME3Zzw2aM7izKxRmV/QY539da/vMfL9Xuc96/iA70OvbTbf
tllkWxU+TbuB+dGv0OhyhFCP7TxWi03xS6HOJWNzhY8LnxCaLDdSmI7/4+vC
i6WwxafVUa1SNJUNFeh8xf5XUREcxP3MK6KPdpXnQOb3qnySuVPw7H1CK+uX
wz93pODFB4QvZMG5nxNmmXdahJlZcNNMj8FBnxfuF6okP0FldQp+avUYvH6v
13vc37IGcesej633OrOziGmzPTbD+hjl9Ufji57jemE8+tR6C1hL5fFS1OtV
bxLaOEsKn1mdBc/iS51uw4tLhKXMr+/aVX4phX+uFFZlwZuML8vCP1dZvs99
HVnw3nJhRRb82+H2BM11l8oGla+Xwt7TUujiWmEc6wk32Q/Q13U+24PCR4Ub
rS/OeoNtc4PHmq2b0db3OMuj02u8Bnq82m30OtZt9H2V29hyjNszrWPaD3uN
Fp8Vv8Sn0NMUYapwW4r6jBS8Wus7ts1c2W7+nGouWGZuqDLHTnO7w33V5sVC
jvku992t9z2uvIiXmaPBfVeY84Zaps5yyCz33DWee4r3tNicRLvTazSYj9s8
vskcQD5YxDDu/2b30V7l9ZBf4XVq/d0dwp2e7y6vhxw8PdlzT3R7gfvuML/c
aRl0BHeXrMO+POIT+hviMfgYDjtrH4WDGuz3cFOT/b7B7Q9VRDyH09/ynMS+
AeuX+bt8D5vt+3We96THkVnrufnuD6XggZoUd6jWMh32nWr8rxyxuFfffKQc
ceeRFPkXcYaYMiOP2ERsa3bJGHnYCI8hx1mJE422P2NFXMcfi7i+wmfrcHuP
bdbpeYkdxILdllvl8y29SN/LLP+fUuQebSnaOzy+yxzAues8B3P1pcg7xuqs
m31O8s1NKc42vBz5DfGbPAj/W+29fS+FXS/TN486V2P9DSni5r9U70kRt/6t
+sYUuhum77+dwq+Iz0tS5I68P9pTvBnOq74vhb4+pu+/7pz8bfXfYu56SfWd
KeyF3WYKtxN71PdkCv/My5HHI/tXfb/YOf051ReleNucVf2pFL5coe/Xpngf
8U46ksIX69S/N4XNbixHnkQcI57BV+uziEvwJLHnMXNTt7kKriOuFDFkg2Xg
W2Jej30YHt9tn0auy5zZY/kiznWbG9e53eo1mYsY9Lj38YZz6QdS5NPU70+R
Z29VfU4KDn/CMrX2C3yS2EKM2W6O7XN7pfeITxFLiDE77F+73O5wX5/vNXGO
+DaQwkbY6lbz88ul0CP5QeZcnpy+yB0oc/MBtmAMHuYtxFsEPuS9wRtrm/to
bzZ/FG8ySuYmN2Gd/5lLBjxXn7mm4I+THrtX+/yiRI6WIgYTY06ofo/qc1Q/
UooYT3wnzpOD8cYjF/2qcxfedpPLMX+/+mr9/SH135ci1h5TvTVFLCYmfzmF
TQZ4r6t+qfbcUI5877jXmJUiHh/WNwdScAd50/4UfHGT6r9OoY/bVH8thT5r
VF/g98wZyf4yxZy3lsM/tth3jqbIrevVfziF7mtV/00KPd+u+m/9Lv2s6i+m
0NlE1V9NYbfqcuReE8zBNzuHJ3/EPsyPXdEXZ6T9tPXH+NQU+SF54ndTxB8S
x0Mp7Fil+sspdIuOX0phu0nl0Bdz/ioFd8ADvO9/kIKj4fgR5m54Gk6BW8iP
iry5IZb7ID4QJ8iJsBc+MdLxoMkczxxwJHGSeEksne77w336jLnrFp9job/j
DnAXyFmIYZ3mA/LuJu/jkHPIOnPbIss3+I4hU+n9Mket7yr3sohV7LXOczN2
tbkJTrrUNsCvqh2LiCHkIuQz5CbVvvMdvuu8YU75rvO+5Y14vTkILpxiOXIV
8si51l2v7yL3+26PFzlIm882zrwGR053jCPmDff5OEeNuYq9lmyfD3JB7x0Z
9EceQK5RvHPQzTTPx9mqfCbsRMxtsb6u9fpw8HU+E3sq/pUU/04oi/8lz5nv
4GviC/8u4PJ+yxD3yKt4v13jubEBPM6bk/flJPsO31Xap8jfmv12aPRbiVhJ
PHvX//rmp7jP3OuFKfiafy7FvxZK/lVs8L54S/Z4jhfsQ/A0cWi9x3lzdntf
nGGd+9gruT78Q+7Pe2iG/bXe/AbPkYvzloE3yd2JW8Qx3g9zLE9+P8tjY+2P
tIt3BTGK+HbQZ+Zt0ez1eGO0uN1oG3AfrvQ6jI33HPhln/30pOW7bMP/Ay8L
fkg=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlElsT1EUxu/7qzbuey07w06UsDJ1olU1tuYhQWuOhJqqJCTmWcyzjSki
ES02pphinhOqA6osDEHLTsw7fl/OW3z///ned++559xzzm0/o3zsgoRzbg5I
0r937gX/x8GH0LluETxw7iW4iVYEctHKwVDsQaAXdhkoxM5k/WvWvgH34Bnw
hsC+3YVngTTW9gc52I85ozN2F5AH78n6V4HtuQN/i16HVgtmwh/CU535kK/6
0GJZCCbD+7E/QULNQDV8GriGthm8Yu14b7EqvxLsdSCVswpAc/YWgCBhPp6h
5cP/oTn4E3hH+Cn4aXABXuotvmPgHf4HojdnbTKoQ+sb2V75rII/Yk0Jn4pB
b3g6emVgPs/Dt+vOsEtBKlod6yeydhIYi/YA3gIb0/XkpytrngdWo+vwTpHF
dgZchHeAVwR2xln4SLCVvePBM3x1j6y29eAWWv/I7i4J1HiLQbHMAge93bHu
+gSYgr1XOaKFYC12H2+xqqaqbQr726C1BQfQekR2lmp8G74SpGD3Bs3Q9qi/
Avu2Cvuct15SDsrlHz4zA7ujbWgbvPlu5LzfaGvgr53VVLV17MnGzgI74PdZ
k+esh7t5O0Nnqed/oA2O+0M93dVbTsqtAf4rNB/ylQDLsJd6sxWTYqvwdvdL
lbN6CeQEFsNOtMNgOXYhSEObpx7Gdwv4z9B6VL26BUxFawjNVs2me4tBsShH
5fpRe5z5mAv/FtqsqCdXwJvgV53NwEJ4I/yKs2/l8NnxvOsOvqN9Apfgl8F8
bzEq1iJwCN4KPgR7KDgKbxmZpm9H4Pu9aa1BMtrn0HzpzAVotXH/q6fHwFd7
yz0PJLG+2NtsqgZDsJ+yflE838PgVfAl2IvBcPgNb7OmGdAslMT7ldP70Gqg
WiwDJ+VPPZiwmdZsl8G/OstZuWd46w/NmGatJrRZVcyj0arhE+L5HeVthjRL
+jbC20yq7fJBJkY2KHD2Zunt0p3objQT+3z85gQ2Q5olzZRmSzVVbXUnuhvN
hGbjL9++OIt5k3oPvVdgPbYL/ge9ydmajfBx3t4m9YPeUs2IZkVr1usuvOWq
nDUbmkHNonzu9vZG663Wnevu9WYp93TNiLcaqBbKUbkqZ+Wumql2w+L3Qv51
t7l6o+L71FvYLrLaaCYq0QZE9vboDa2F/wf5jcoV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7728642530128351, 0.8224866955302859, 0.9779955439793904], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vvXu7PUPWn/s95DvBH1qroGuz/4POAv2Pg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlsVlUUhc9/Eduee1QUTRDkwQRwSIxDS6kGZRIThaI0olFwoLaFB6UM
QgItPqgUUNDEAXDA4QVkMo5AIjgyOTImUFqBFym0wANTUQH9VtbDSvb3r33P
sM85+7++ur5qUhZCmIkuQVemEF4ohDAbLY0h3AAfJD6AvoIvooouIXRF9XiD
UX8GKEO/4w2ByzP/9gc8DK4gHoB2wEOTY+Vsh99EIwqeU3Nfh+YQN6EVeEdQ
K7kr0GN4I9H9xA+gZrxByXOXol/hK+BGvm1A78KVybkjUAvcF/4TrxV9AT+F
vmHfJ9CRPIR78e/MvOadeOXw5cSXoZ/g8+ScJbcTzYf7JI/Vgj6DZ8Kl1KYM
FZH7DzpN7hnUhD8afxZjNaADcCd+L77tiV6Eq5K9RnQIvg0uJi5CG+BiuJLc
kegt+Ge+f4Kxx6GBcBl+IjdHP6i2cB1xLdoH/5t7LdrDPHg4/l2Z97wLHoVe
wduImsntl3z2qtmXeD3hNcSr0TK4f3JtNOePcC/404JzPoFLk9cS0ffwL4xZ
zdjj0WB4efRYumO6a0fxN+FtRlPwDqI1mWum2rXiL8F7B9XgTeS3lsx3pBOe
A9dQ+1rUPfeZ6myPo8n4V+E/zFxj0AdwtWqItwjtJ3cC/v7MY57Fq4H3qnbo
JHw7XJL5TL6Fc7if1o6WwJPhS3X26D94SnJcjALj70Mbgu/ck9E1Vq3129Pw
1Oi7pRqoFiV834ex+6K38YqSz15v5o3oN6i3qDkvwHVwc+Y9nIHbcu/9GKqH
V6L1Bb8xvbWr0SPEj6KP8dbqzRF/jW7E+xCeW3DNVLv23GezBU3DWxT9rdao
tbbgLw4+o2fwapNrpzWdjq6xaq2c8XD35LPQGj6C/8LvwGtHz8JNyWdZh67B
mxtda70pva3DufembybhHYO3Em9D0+GO3GvVb8/Dx3N7OvMZcEyurc5wMdyg
fsZc5SiSO1v9qot7XoKn6fzloQyugNsKrtkWvv+b33qrtqoxPAD/cME5m6Jr
qtquVY3h7eS/GvzmKvW+c+9VPUS95D7Ug9pdi3bjb46ONabG3kH+guAxHsTr
ndw7dWar4Jeie4t6hnrH1OS7qD0U+PZc7rWqB71M7p7oXqk5Nfd70b1Ub1pv
e2N0L1LPUO+4KXkv6yS8m5Nj3bH18E7GXxi8xod0/tG9TT1cvVw9Xb19JWrD
+y26l6tnqXeNRauIV6N2vMeTc/XbUfiO5N6iN/kdPC45Vz2jA97N/K8z92uo
Cp6V3Jt1xiV4n0f3bvV49Xr1JPWmW9Ag4nu0p+Aeq147BL41uIepl90d3Xs1
h+balXsu7Xk03qnou6Ieol7SmHy3dKdycp+Lvuu6M7o73ZL/e/Uf9j7e/+30
+wQ=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9605916799651181, 0.9701299199599625, 0.9515921858697814], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmXe0FUUSxu99dx5IzwgIKC6CgGGPoCBBJCMsYCIoKGZRCZJ5BDECggTF
BRVdSZKTGAB1FQRF1lVcyaggqyBJDGCOawDe1u/UN+fyR92emu7prq6urvqq
bvVuRZ0HFmQymYP2k7M2iTOZfvYwIslkPrH2GaNnjeoVZjLHokym2OhBG3uV
0dVG4406i19r3+RsXBubY69985zR80Z7NAf8IRv3itEKo33qX2o0zvhOmquX
rVHf6AKjasZ/nc1kvjH6qz3/aO1PRmfb8w9Z58+y5++zzp9pz99lnT/Dnr/N
Ol+9wOeAv93mrac1qtr7r7K+Rk/j66rvS3v/smQ93ehw1scdluwr+U7tq0Y7
bQ8LjBYafWS0yGix0S6jp42WGH2sd/D/1VjGfW7fv2T0T6Mv1LI2Z/KC0YtG
n6ll3If2zXytt8NonvjtRnPFP6Tz6WJU187kaOTnV7/QzzBj7W7JxRlPtXfd
jXoYTVOLPp6K/Dx6G82IXHfw09UPv19nuMyoiq13KOv6SiLfJ/r4xfg3jf5t
1M/eNzRqZNTRxlcyOs3oCrWVja5Uy3x9bdyF+magUROjpkb9NUdjo1G2Rnuj
DkYD9I5x7J+zP0P6qCYee60qvq19c5JROaOL1ZY3amNUVn1zIpebNWcZ9Ylc
rmLr22i0Kee2e7rm7STZ4a8tcLvEToskezPpFBtvYDRI75qzFxvX3qiDUQ87
pzqFfobvJH5+7WM/nzqy1+727nyNq21j1pmOlwa/J2uN/mX0q3T/ltHPesd5
HDO5N2gPMyUTe5tj87S19ixbq3ni36+2OYfau4uMWhqN0ZlxVg8U+FnCj5bs
8GPVjz7KRH4fsLuykbf4mMHadwujIWpZ4/LE7/y7wWVqIDv4m31T2qhMzu/E
CKORujf3F7j+2Ms2o61Gm42yhW7z08VvitzmNxptkJ0zdkvkZ7TAaL5sfou+
2VvgdoF99DDZYmt/Cn5fNmkuznGhvp+iuddjJzauiY0fZN/9Ys8n2vPt9pw1
/Taz5yH2fNTeN7bnInv+X/D99Ub3wffbK3FZCgp9P8iLv4U/Evn5Ywf7TM4K
suGMzd8UHdu3ewpcduwZ//i60Zqs+5TP5WNSH/S5fNCX4pcbfWp04Dh/hH/6
2WRLbL6eifuqgxq3Wr4Wn8s3p9iYk3PuO/GhaRw4pDVSf0ofd+0Do/eNZqt9
T/fuPZ3r9cQnvg2uX/zbEen7mPhlknd/gZ9PRr6PcyrWOOY4SfccXzGhIO87
adNYR0usW1XgsYrn1WofVAwYq75JJttLNl9F0/01ic/5SfBzKDIaaHSNfBJ+
YYz2v0L3aIV0c9DGvYCN51ynyxUP2NMy8Vcm7l8+DL4Oe7hGZzdKd/EO3ddW
kc87+rh1HtD6n9oay7XeAfly+JXqH6v5XpaNjJaML+vO8Q476pS4bHuD+8Px
BfnYPk7ztE/8zn4c3F+MkRxXqn+MfMcDx/mS0QV5vzhKaxbgm0zGoYn7wKlG
UwpdjpEa003vntTdYBzvxurMVmrsSwV5X/Ki9DxO5/3qcecNj93Uk08uVkyt
pzXWG72reFtXPhnqobVby29hb5fojnJXL9P94J50sztT2+h8o+5q6xhNs32e
bPNWtX0/ZvxNRjcb9VB/XaNHjW5U3yNGN4jvqf56RpOMrlffesmNjtpE7pdP
wmclLvPVsfOfCMeBt95QXCF2ZfCtikNHcx5PykU+FgxYPvIWrDdVOuih9bqJ
rxB5Pzhios17neQDhzEfMfY242tJL7cYnWt0ntHyxP1t/dh9Gz4OP41cxOTN
OceFayQ3fgX/Mvc4n5L6mNnqw1fg09NYMV1xAP0dtamPZVyPtMUZ1/U5RjX0
boPRxozL95u1v2sc7zZl/MwYW9Noa+J6uS72/TH2j4yf55GMr8f5/5lxnv3T
D3+rdMB39YVFMoqTnEmB4iVtzugfWf8GXZbExwozopsJRg8LE0yS7Zxhsj1p
7YLgmGKy0eNGOxK3m64mcyF6tDnez/kaW63dlvPvWKeb9M7cfzc6IfI1wa1P
6CyRCXk5qy05jxmrsh5DkJ13zAuOf01xCzm66nuwzETJvVbrTBTeeUR3okTk
MrLnKHIZkfvxxP3sabHfrf3yf211D8oJjwSjOHKMxh5KgUOMSkeOa1qrLSs/
e6L6Gkr3kXxwor6LNB98I/UXCmvMEB5prnVYG8xYUmvDkwOQczDHTuUTb2fd
L0yWjh7SuTIH+uabt6QPxoGPS2jeyfIlXUU1dccaS64SirszdWe2SkZ44idx
lLs30p4vN2pnNEJ+DX640aXi75Pvg79fY8Hu9+Qci4PB71XLuDuMWhq1Mrpb
uJxxQ4xaGF2U8/xnoOLr4JzHBfrASZujPG7aEuVx01btCV+9XtjhTrOHKvbd
78H9/AbhBeYlfoPVUgyRYopN8hNDJQuyDpO8YNW7cu73kftOvWutcWAnsCA5
2wDtgRyuv/hW6gf/rUzcfzWNXafEiorS3alGf5FOKyiWtFM/ff0Sx1ffBF+j
ifbDXg8Jd8225745z/87aL5KRh3VnmZ0hdrKObdjcjvy2llGffT9TKPe4rkD
9O+SbmLt+SmjXho3R2uyZ+73d8KO7L+xZB0k3TfX/vYJ17HP/cJE5NVDZS/P
6AzQN2c1VT4dH0/eRi73nM4Gm1qcOE6qGbu/mSEZl2i+YdL3AeFb9EoL3n1W
6zAX9jJF6xHbiUXIukh2ic0u1H4G62yYAzy9WP1DpW8wONibc6Af/gPpCxvB
n80W/57OAH6bzgB+QuK5cenYMSn3kztHvs59457VUf7APSAPnGo0zejWxDHP
geC1hiLJzdmD2bEbbAEZ4ZdpPu736MRtJYodR/IOHwCWHSE5yK/I54sUj8mt
yd3nqaWP2E5ORY64QGMHKc48pX1ukrzTc15Pult726x3nOULWp+1Vykv+Vp2
tlpxJV0bWbDRlrLZz3QGp+pMKulufKH9w3ePPSYSG9FFZd2TvrK5WbK5OeL7
6B3+8+bYMQBYAJ1WkY5vVywAf/SSv4UHP+I/8CP4hlaSdbj2ib7R3Xztp7/2
xNobgufy5PT3JH4HT4gdmxQL2/SWXKyHr8C3ztP9nCt76ym5uFN9ZGucRV/Z
IPwAfTdXtr5Itt9PczAulo5byLbox9a48wM1xwfBcf/FYNLY8fV2MH9wuXdR
DwmOrXbHnj/jN44Ft9kF2kNjzcc+BgfHZods/G3BMdvHcd7H4fOuih3Xr0sc
n4JTUzxLCzYAt4C3LlCcJ95fqLjeUnEeTAG24PsN0jG4jjjeQnE+1lh4cDR4
mvpOiuEaCAMURfka2EDdkxR/pHiENsUgrSQHOBo8zbzVYsc8YB8wI9iRPjBI
I+2hlORK8U4zrU/e0kb2R9xvKz6tnbXVPSEmtdM96SC+tGwWe+0Se95ETSuN
MYzDZ16iufDt4IU0pl2qPvBIY8laQrqALykZ4fGji2Vz+DP8GnUufC3yVZQv
eFF3pqLkTePq5Vq7mfxNkeL705r3Pt0zfN4fseP/B82OLoi9RraIeBIcq38V
O57voXyuhrAWecOw4Fj+axtzZ3CM/w1zBM8FDtvzyuD11Bo256vB69A17fmV
4LXWcxJfp7Zygd+Ue4Df6sVeU1tIPS/2PGeFPV8cO5YAUzSP3bcus+cWsftc
8qrWsedIr9jzvOAYvkLie71JeeW5wuBgxgnBceMR+2588HHo5uzYbX+qfdsx
duzFfwUdYsdkb9jzQ8H18qe9Oz32esRke39m7HdtSuJzd5Xuzos9X51t72vE
bvMzE9dBt2w+X7wtm8+TbpWspRLPMafYmpUUF6nZnBv7PZpF3VH5ADl3rdjz
AWqiTWL3qc/bc4PYMQPY4eTYY834xO8DMegu+WXwQ4oNaVPcOiSXx6qD5f+4
H2CJYbpjd4lvpn782dTg+XFI/C4N0xr4cmLiDPFLZK/EQuJ9GhtpU+xDm+IX
WnDTtOC1gThxfDZT8w5T/xLd83s03+zguUY58sXgukXHzWKPQUsT93fkz2le
S5vmtbS1s/m8mnEh9rhyX+L3oJbO8Lng8bpK4v9XgLPAWyVj3z8x7RLdzzSH
uFeyzg2eD5VP3B+Bi+5X/zLpqJ3epXnMSPmJZ4LjhsqJ+6HhWuMy9cM3F07B
X2QUE/Ctbwf/j6Nh4v8JdFKti/8GOotP//OgHvZVcMx4U+L/JVylcYeD48kb
E9c1Op9j774Inn9RE90XvC7YmTpc8Jy/uj1/GxzLgemWB8/Pye8rqdZGjS39
D6ajYi0xd3vwGuW1qiseCp7n3WD95WPHXePseVXw/LNW4nVNxlKL5P+Vq7WH
j4LX16j/zQ/uCysmHneJi92C4zG+5z8aak3U/9P/+mj5D2VhcF96auK+sKp0
+XzwmkI1e18m9jgODt0TvCZJbXJX8Hpfh8R9ZxXpHv/KHPDgQuSuKjm6aA8N
pa91svGJqjVQd3hTdYhHVHd4U3n2W8fx/AeW/vdC+5P6flVf+t8bNo3f4ow4
vx+D4yT+c9gRXA+XUYMJ/l0ze/5P8DmbJl4DYe4fFRvY5wrrPyV2mycnoD7w
vXIt6j8/iH9D3/2g+sHrwsavqQbE/0u52DEqufKJscfuUYnfDe7Is8Hjw2PS
wcOad430tVY8vpw6DrWH3cFtjHr2ROmIcb8Fz1vJX5nvbemUb9aJR27sAjud
oHVel79Hf08oVj2q87lZ3zPf/uB1/i42/87g9sb/Tl8Hr/XeYs+fqrZOLf8W
zYfcN2i+SdIj62O75BbVZfvEBPIQchQwKDWYHfKj1FR3y+/uEQ9W3alxS9RP
7jxP320X/iCn/kj+fZf4RXpHLWiuxpIvpnkyGArMTd5IvjhH/e/Lx5M3klfN
Uv82+X3epTnxFu1nmva0UTFkr/aAvySegqsWSpadufx/fmWEZ/sqB2qovKiv
8Fx/8WBhcNQQ4dc7xIOJuSfdo/z/hYOF/wboe/RRRliYGh6xG6yAfOWifD2b
tqz8NDlPL+HsPuLfCe4TGyWOj8nHeuqbNsLcdfWuh3x9L40jxu6TXuLY86Lh
iZ8PuJz8gDMrLZxeKvZYe2/iuBL8c0C6ziqeEBep4+P7lql/v86EPIFxnCWY
GIzcLvb615rEsS85wFGdJ7kK34B9D2o9zrwwytdHaRlHjgSmHCLcMUm+D3ss
FeVruicIg2MTxVovrZWAqdP/M8Bn2HdQnoGNoA9yIGyKvRbn8vVNxi3VXvfJ
ZksK+/8fTJtjPw==
           "]], 
          PolygonBox[CompressedData["
1:eJwllklsV1UYxd9/aNR3r2IsRcNMBGIpLARNpC0kCjhEWhMGRRCMLcigUTvg
QgXcSAu6cCrFCYHCQoGiRhCKurFVisaooEaZwURpKwsZBKHq7+QsTvL93rnz
/e69b1jVk9OeyCZJshrlUUeaJP35UIHuiklyKCTJN3z/GlXj9cCXiP9B9fBQ
yryWSZLXUSt8PVxNPB9tElP+o1ySrECNeP/ybTzx42g5fBEeRNxFf0vgg8F9
7UOP4N0Q3dYCtBluQDcRz0ERL0/5+6g/EC2F38ffjdeDSuBa+AJtlcC9lB0W
PdYmtB3vT75dTjynpfAB/L0FSdKJqvFOo97EZZ7GX4NfyEL1RSPwhsCvZrwG
W/G7+HYxcZ81Ko9m4b2Iiih7Df7zjLVCawK/i9+ItwcNhpuj2y5CIyk7L3gs
a9C3eE3ourzHcCPey/AJ2jqJBsMz0HzK3oza8bqD90pjqqOvnegUfQ1kvcer
L7QaXoXW41WlXnvNWXOfhZoL3GZn9Bg0Fn2bGzwnzU1tbKDuK9Fj+Q0NxS+M
bltzXIffD67KOEc2wj+hBxjLcHQ33pDguWtOmltL6r1SHdUdhNoy3uP38GbC
jdRdhU7CM+CGrL8dh6fDHxBvR8fg2+ABWed4O7wNdWS8h9rLadFlW9GR1Guk
tVKdL+EzKDC2iage7yX0Yc453l+5CN+f9ZwOUfZzOMta5VAlfhl8lr7OoU78
UvhMxt++gt+Cb2f+d6Biyn8GZwrcRgW8Dp6MNwWNgT+FkwKXuRd+O7ruJFQC
vxMdq85o+AB9TGVsK1BltBQvRwfxjqae+3E0F+8hdIz4KOpKnaPKVe3BFvgE
ast6zbX2qqO6qtONtxeNzHqOmmsx6so4B3fgVUT3vQz9Ao9SzmZc5pPUZ1hn
Wd92wXOix3IEnYJnR8eH0e/wQp0x9uJqdC71Haa7THPeD/+Ruuy1+Ivxfk3d
t3JEudIGn6evL9Bo+HDq3NKeam8XoJhzDvyFtwjuk3Of53WfoG7K7kLz8B6N
HovqnMUrj9579bEvdR/qq105DY+JjpWTe1KfYZ3lsWg6+zc5OJe+Yz8/xpsK
jytwDigXdMfprhulM039y8Fxsc4gvJkyddStR7fitcA1xLVoLLwpOlaZW+Ar
0ULG/iZqwCuD9+OtR1vgS8Ft605eSfvj1Ebebapt3dG6q2ejtanrqO4GVKqx
BY9FOa/c152ou7FSe4i3NbrsRlQOb4uOW9AEuDU6Vp8T4RDd14Oomf7S6Fh3
cBM8IPhu0pnV2dWbpLdJd3I/vOHBZ0t3rO5a7aH2cjfqof4L8FrKNqO+lH0W
Xky8CF0FPxMda82ugHfCP+S9ZnfCO+Dv8/42BV4GP0bZJcop+B54RNZn5mf6
ey7aUx8pfkd0LmjPZwbfmbo7VefH1HeS7qYJKItfFx2XowxcGx2XoURvUfRa
6w3tE5xTyi2NcRK8En4j5zkXBueAckHfioLfXL29esNzwW+63nbNKQa/6Xrb
dSYuML6a6L5L0X/wU9Gx/gl64Yej11p3yunUZ1RnVWfsb/h/vjYflQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.994470734889809, 0.9905817859607862, 0.6395517993036217], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
75X4ELRo5rp+5o/dccFCxBO5vxMzyuKelOEj6ujX1OMyWlYx7TmnnMuNbMNy
tit58yLzlrvMXfZz7eOLJO64pF8m4Vc2s/6C/+DDfdKYt8zjh1m/nlUIP7a5
++edMn6m9WkWMxhcqLy7D7Eeesy6Ej2KTkCfn+7z4Zw4kxluH2Te4s44xfqD
MfQjToZ+R5dzv+1WqLzvdreeneN2bAL3bPQ4ep07f3+vY7bXBa5pbu/v+a72
mK2+T8GPxBGIJ3QVfTaXx12D++BXTtFn8ChxR+KP/3Eduu2b8tBl6LCvXUf5
2/KQSeT+B88Dr+00jhWmb7npvToJXV0F+iRRT3mLcYPr+/LQEaybO1/e49/1
vSu7iyTGOcE0y+IWpFmcg7S3ebK5+etwYiO6m4wpBT+3cBv2n/vTd4D3xDrQ
PeggfI2t9tmXWi8R6yaOXJvYi3A+VAq/H////jTOcI7PvHoa9uK2UvD0Kebx
qtYvLcyvzaxzjiJGLZzj1L8WsW70RinW0db8vI9T+LuGU/yJlean7M1hgmnD
mYw133FPwkcZaj7tY76ZZJpRnmsepN9bxpHF5ya6L7pqH8+PztrX6yJ2j+wN
ScNfamOZwZ/6znegFV4La+UuTQyIM8b2gi/zs/a2zF3vNUFT7BD69OA09DWy
hxx/ko87+t5JzLeX8WT0Yn34T8gr8ohvgW5FX57mlLbT3b6Xy63dntEaXPgm
1Ty+hdfOHvBnftX8vyWx7709JtM78C5+1q4k+uFPVRhXc7eDq6Xx0YZu4J6A
LwbeRp6n6D1kayEFHzKD7DX1+FbGV/BamafM7U08T0u3Zb4sa6zidvwRbCk2
dT/vr+Ee+2jgMbz9IBf9/f5Q32vOGUcjl3ck0U5az3tr4vnK3DfnciPvmTJ3
hQqvF5sND8K/+PLVvFfsXmrafGh7STl790I+iBHsloE0zvl0n/Ea21pw4Vdh
A9C12EJsAHyG/Zvu8kduR8axedPchi1EF2fvKlPdhu81y3gznuP8sJPE1qfa
3k53GX+MNzJi4fg5xOuJl3d33Tj7PMTcid+38/lwTuiJfV3u6XZwdfO47P2Q
lPchzooz2bWHrc1sLynxFHypA4y/r9fLOwBxZ/r3TsPHnOl99vZ6J9qfnOI9
tPT9mPggNhA9gG46TeXrHE+8z3f9pXvE47L43Ou+249xzCCL4f3d/XiPJEax
vBhxvzfc73TsNfY4qYzBETsgprrMcbPJausjuFowxSmxyofdDq6bVH5asFBw
i2CR4JkkYtTLjWu42xcIWsOHnps9pi4TOy26PCkJG/l2EvSpCq97DdhCbCYx
1YLbdjqeksVa6jlORKw1cb/JHgfeicb9VhIxCnBXSyKWW83rOMO0QX+2cYo+
nZaEDcb2TnXKmm72vqHFMtG8o9ILHNs7P4nyaNOYs3wiCX/oI++3t2lN31qC
Q5LKeHELj6fu0CTeBYmxrylGnKrLHnGsqxyjIv5CHObsNPirpfc6yPgoE9Pq
6vGPmh6rkqAfsWLibcgDb3dvWj6Wu8ybK2+vV6URF+tmXHU9jvJ5aj9IcHAS
cS7iX/UdF2ONWZzsCsfSkAfe9Xi/m5OEzYNGyMq/3DY3CbtIW/Y+/ZZla7XL
nG8v0xS5fMfj0SPvusw7K7HHz0XD29Tv3CTWO8JpB8FIp5wJeug9j6cPsdPn
kpAt1k4M/VaVn7UM3OZ2yr84FgmdtjlGmcUXT/S5nS97PUowUnCY4ELBBYKO
gtvddojL9K3ldXUwX3R0+WDXsYfz1G+E4DZBB+OmfK7rbhUcLrjI85HeJbjT
c9/huc9x31sE7Z3enA+aEosmXnyhxzHmbLfflK98Iyfmf5DXBa0PdHpOEn7m
kepbJ+93X79N4gMTV6eNN2HqeJskzr673vH1Ou7Dtyq8o/A+g09Ofe188EWZ
3yzx2w83jfdHPgTtBAcI2ru8n+vaJpXvzWV+W67iN9GaXjtjuBccYVriwzMn
ZfQl3+Twbc1JpkEXv7d2N124Z3Df4G5cxzEYYjGPJWHj8QevT4Lv51hXtUoq
9WJLy3Omv2ibmYT9xheY4RRc+L07PR/xcfgRXhymtqcE8wWzrZPwF2Yl4UOs
MV2hb6ZPW1g3Pe6+9Jvu9aIf6/ndhn3yPQHfFZyQhn5H76Pv25lHhufjbbqX
3yjbuu7GfLxH93Zbp3y8xcCj9d2XORKvhTVm+jrT36TYOt6szhKcmYS9ae11
VHc7ZfgFfrrYfEPayWfZyfJR9NqhdQ3jY759zS/MgU+xwroS32Sly/gcq1x+
2b4/dwDiDY/Z15ngN1XeVolJzXAbfgi2BRuDH7LQ5S9dl9ldyl9Yvr7Qer/M
R1/G4LM8KRgq+JPPm3SYx2LDbjEvUHdjEj4oNvOfHr8gqbTltGe2nTTzBW4y
Lr6x2P0eV4w70ZOe81XHw36wPfzRZfySbY7z41tsd/lvfgf4yX7Nzy7/1fFC
xo83zXiD5i42b4+9Punyeu+NtX/mtVDmDQx9flka99qtPpulXiNlYoQzfR7E
D9Dr6Hfes3nXXlAMX+wnr2mRaYlN4G0PP+APadwXsJvY2Y0+N3DxBo89eKkY
eLEfIyy/+AHY7ZlOB3vt7AG6cjfAn1ltvNwRmAd7nvOdYbnfoHb4nf8Xv5E9
ZbqAa5nbaWMc48E7y3MOcblKoRLvKs+z0u9a2PnH3Zd3cPTYAO+BM7jBZ7LA
/MTc6Lbr3bbY+x7p/pzlJz7DdS4/a7pCI3TidR6Pb/SV+P0/to+blG7Oh17q
73Xgv/VzGVu5MR/9eK/l3bZ1Gr7ZtcY72/ugjJ0FH3PgWzHP145NoLN+lwb/
I3/IG77LE14jsoJuaGv5wL5ga7Ah2BLkFb+JGCbfO9COHdrfY/Z1Gb9sgvud
7XZsF9+ocU/4tBjrRT9l3yOQousu8/0h+yaFNPtegxT/tL3x1fR69/Hc6IMz
XcfZtvIc6I82buvmtY+1L8TesPHcGbCB2fcOpNjoDj6DWj4P6tDh+Ig97YM+
av8OvTnA7c2TSh/iIM9dw2vF/+V+wl0H+WvvdVzue9Gf7W+OcXm46Qu9r/S4
MfZlx/o+dLPPClzZdyfM8Yl5d555+gzTAl7EnmBXkA1864leK/oYnsM2faz0
3/mg9ef50NfYo4/y0Yad+jAf5beNY5L5Hx2U6Q/SL31uG/KBC1rwrcY6x4GI
B1FG96AbuNtiK5mfNs6Yvp/lw0bzDeeH9pHW5wMv/Ec75Ru8P/aMb4Gco6uw
/9NdxlfhW1m+AeWOxP2NO9Nq7yO7k012GzKCXkAnXWeebe0xfc07md1CH+Dz
gHuN7TIp68ZfQVeit/BN0EeZX0OKTK51O23cJeb4LDOfifHZHS+7803z3mra
J8YXPnQPP/1A+9a0oUteEPzF+miJ4Hnri+fdhh5Z7La+ngs68G0K36g0Syvv
3tldfHJSeV+cZJ5YZJ8cH/1Zp/j3/b3eaeaFeYInfcbzBU/l45400Ty6zu20
XWNaQZ9rTbPZPpc5Lq8oxbjOaeU7Pe84fEvAN0B8i4Q9PN5vOvDlQsHT5nXS
Z+yjkC4yPbijjLScLPKeLvJ7F+9e/bwn6DXEa+Qs0c3PGUdmLznLAeZHaDHQ
dZQHexz9njPNRvg8mH+U14iPyn2GWCL8Ci/Xtp/O++mRfofFd0dW+Q7zCcs2
3+fPzVfeLbFZH7udtjdMp20VcX/DT8D2ZW/t4N0kqKW+B+fjDbGz27I7Knh5
Z7zUbcf6Le0y0/0Kl49xHf3W+/wX5OO7ZN6p82l8FwCteZP+xGuf53Mbblpc
4Ddc3nSfMW1uMU9zX7zDfE96p/l9lNuOMM2yOe40LtZxo+fgWyv8/Hpaz0H5
uMfuvrOW4u1gL3/DBe67zK98nzzMexpmXPDyULdt8F7ZxybzFGeOr3acaUZc
g29Zs2+WSfnmlTeYrX6T4c2Iezjnge5D76MLodENnq+J9RWy28Y6i35L/T4E
Lu4DfCfL97LP+z2Jt6aVvuPS9rLn5H683H1Z34t+c8rei7b4beol96WNdxL4
BfphH4d5HXzrs9zf5sEHvBXyDouNxGZjM7GHw62PzzXP0tbe7djDxt4fOuls
1+HXnG56YAOzbxTuNV/e77dXvh1a4XU87G+PkIM/up0xj3iNtJ3ltbCHdp6H
9bX2POgk3u/QxZwNb1ro6CPSuB9O8HdfyCtv63dbVu91uZPr0C/wMvGL9taj
5+Qr4yXnmhezOMg5lod2HsM9Afk8ym876AXu9NxtkD1klPsQugM54G5BHWP4
BhrZ2+5vnBlHP+4hR1nHcM851nLcxd9qQT/ewzjvQ/zt5GbrDOQP20RsZon5
Czohhx3d9oJ5B/7r5m/kxvrePt7lrq5jPuSzrfeM7HEnzu7lpNyZs/dU1jHC
NOtgec3iTOiD870O/tPADl2cht7t4Da+m+Q+flxqGbONzuLv+NjYDvwqfMFR
1jVL9tBBL1inLLT83+665y3/m60PWOdi1400jsU+a2zQM3vol/nWedQ9bd54
zjrlJtctNA5sP3ae7/KxC43S+EcL+TnP/1XMt67KvqEndjLUdfO8XvyJzHf4
2ngze7/Iuoe+c13HnjZaDy7wutFndf0tP+343QfbbnK3oYy+o514FfYJG/ax
ceNDYBPgI+Jnh3qf2PUN+Upbjm3HD8OPxC/Dj8SXpYx9xMelDG58UHxh/ET8
RWJamT9Xzb7NRuPF16OOftBmndfEfJw/fjR92RM8MdfrzfbAPMxNrPA761b0
xWbz6wLvY71x4xPjR6PrN5mf0akbLV+LfbbQD58K/5gx0IO14I/Pd9s6n8F6
l/mnjnjamWnMSd/M1yYFF/LyovkYvV/PsUNsA/EyeAVbQYyMMnKGvmeNyBjx
SGJX8B105xyeMC0+Mg9xj+XenMW8iIFlMa/axvG1dQTlLbYvxGL5h4S5oQ/y
itwSl/3eNg5c39omoTsP3GN99D3P83xjG8b31tjHw9KIsfJtcyPHbZu4jP44
zOtC/9Y03t0x8XycJ//mwU8t09Bxh3oMZ8Ve4fXDzMfsrYPXxPiOxsGYzE/9
3OWvrEP/B1UkexM=
           "]], 
          PolygonBox[CompressedData["
1:eJwllllsVlUUhS/9h5b/3IJjKcpYBwQEEymQSFETpYATqBQBBxShJAJWEymg
iVqaoAJFEWnByGCBAgZbElBBBH2xkw9OFDRiIkqbyCCgD6UMid/KeljJXXft
s+/Z5+zhDpxV9tiLWVEUbQBJkJ8bRU05UdQMdoQoWhBH0QUMusDlTBS1g2ae
14In0NaBiSycAG7FfjN8Cs8lYDj8MPxyKoougdnwVngFz0vBdPgZ/J3GV/9E
FM1Dmwaq4TWgAy2JzWS0SlCB9iXvOrtF0RD0sfBDYBS+RoKHsZ0P78zyni9i
25d351l7CKxCGwiaWd8E6hULGITtDPAAWr5iQqsBW9EOxvZdCB7EVxW8A1/t
4AZ4NXw8sRaDm+A/wPdguxfMhPcHeUmfkc4qw/kWcrYjwYdoNbHPTj5ugf8n
m+woCqAS3h37ETlesw7eK/beqkEt+yuAt3RzTA3wAbFjawS74P/Cu2fbZwXr
31eMfKsXGAAfDu/C9gI4gH0X6Edsj4JytD/hBzibf8Cz8KOgndg6wFzWH4Gf
SPndHPhy+ErWVoF8eIr9J9h7EqyF/46/5fg6CKZiexb8ko6iX8Hr6Enss3K8
Zo3OD97F80WwO3gP2ssZ7QlfR8A0nleAyWgN2AztTjzY92NtBH4k9p/Au2iN
2Mxlr6WgBL469lnojvrBZ8b2rZw8je/evPs64ZgU2z5wEttTujO0d+B70faA
PNnCR6eck4/Ae+e6llrAJ/AeoCLhNVo7LPbZK6f3Z7xn7V0x1wfXmGpNNXEC
vVuuY/kZrEa/OTj3loBN2K4HBcpFMAjt29ixzgGPw0/Ct3PWO8Cr8Ev4HJJw
zah2vgffYdsKnkb/FH4EX22gCL4y+NubwWW0ZfAynotAJ/xteG2233XB3wu+
e92B7qJeOZS0z7FoDbr/pN/dDR8Dvy3LNdnE3orgg7P8rgW+MzgX1KPUq55D
b5QtOIs+K/azetR5+P36fsp3orv5BvThuS+YhPYmfGnCd5ILfyY49iugLXbP
Ue+RTU+0e4Pvfh/YjbYr9tkcBnehLQ0+C9Wcak81pFpSD0sE9yD1IuVUn+Aa
UC18Bf5iv6Wq8bRrSrW1BpxLuIcNVP3A89K2WQB/I7hXqIZUSy/BF/M8DvwB
XxJcW3Xgb/ip2He/E7yGVhL726rx46ol3q1LOQeUC1qjtcqZxWgLg9eWg3a0
D4J7mWpWtTuRd9OzXJNt+NsSnPvV4Fr0Y+jXpx3DfLSN6oFos0EP9PXw0hz3
PPW+37C/Lu01L6DNA+PTfidNPVu9W988yvcmBN+talS1OiU49xVTi3IreDap
RlQrG8FinheB24NnkGaReuAF/C1S/iVcIyn0q4N72wzlBNrnII3vFBiH9pHu
HF8LwWB4B3xR2ndSDv8stq1y8j74htjf1pqh8Er4k/h+ClwTnIPKRc3Q51WP
Gfd29Wz17nMZz2bVgGohHbxWe9beewX3Js0szS6dsc56DtiAdmPwLNNM0Gz4
AmSnHFMxWs9c2+pONsELgnuLclK5qZ6j3qMzHIa2JePZpJmk2aQz0lkppquC
c0a5ozN5JbiHqJd8DFbA65Sf+NoORqrfB88azVTN1qnB/w6TQFPsHFeuF4My
tNFgP2uXyQfa8diacuZltDvAW0n/o+hf5aHg2a6ZoNmgHFWuKidr0WYEz3L9
s+jfZVvsvdWBwuB/EP2LqEe1Evvk4L2px6jXjAnuDTpTne0I+Lake55635XY
satnVqFtje1bNncG9xj1GsV0T/CM06zTDD2m3h2cazoznZ1iVuyKcRTa/4ox
U74=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9523141239636311, 0.848648422431656, 0.28048902869100883`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
pms99+XazXl/cM+s05wlupg4LPYW9hTxWUpsE+KylNggbZvzLqE/MV10NvYR
cVxK+n+jvbWNNtT22p7YUjtoz2IDbqmd+qW2F3gvzw/nqZ/+zHhtsq21ebHb
oA1+TTVt/s2KtPU6aZN+q20HH2V8v4z3P6Bf/WE1dd+QIuX9sbGFMgdT5mQo
y3zLI64fuS5sO+JVM+xHLAK9TzyInMmJlrSjzyLHgMZi8en2Wyhf+PbzG2sx
oMWNtRgQ+HfVjCVdUOQcaDvP+b1v/yl+e8+9Au0yRvKB7bh7fimvF7n3odvd
fcbexMY9LqBfwPxqyu70Iu11vnG3X2uJHuqhjNjjhyg78AOkx97s5Xkqc1lj
bUfcHdsLO+A66aHn8KlOCPhtJXPCZ8sfOcIx4gc7JvgNtuV+Pdn12dVvxOx2
tm5n53+945wg7Gg7cgidjB8/p02NzdytOc8P5wZdSnyROCP6mRgs8VnshLes
486aax26lNgnMVDyWuS3vlUPv2u7e6RBf3yN721X5tvIv+F78s5jdWOZxDSJ
S+F7rrQdcRW+NbTU3oLQ5wVpQJdYKTHTZuOjtK33vQm0eVeC/UPMmPjw/ZbE
cnsWeVaxnY8qUo9zT55S5B6aG3/3K1KHo8t/V2R+l5z8H4rM774Rf59c5P4g
/3xqkWv8bvw9rEh7D7tvZJEx80/i7xOLjHG9HX8PLvL8co7PKPKcL4i/zyry
DHwUf59W5L5l/06Rd9bg7CJjy5/H9xFFxiyXVGvvacr3NZS8uyFW8KPyxX6j
HfXXWfeSe+llcezAf9iO2NarlVqsixJ5Ezv4p+vJPv+r/W+QNjhxataHNe7v
fuxkPmP7VXD264rVM5exwpwX+nM7293qmIxHfJwYOmu/U6tsS57sZnn5h+f6
pUrNj6dk73DnPuBe4G6fKn6H+wl+73QM8Ls8H+Dc0dPswzz/o0yZ50/i5xaZ
11hereX5kN0wx2QNx8sL52OwZ6y0j+6t1GxGSs7iEM8Y7cbZj/M3VHqljTPZ
dmOLzJt8GTzcWeSbqLXDTry9yPdaa8TfZzXnuxjexwyx5I3Kmc35PoV3KoP9
Bk4ulXcxvIc52ZL3MYNsy9uXMyx5H0MedoJ9Tvcbb4nKNWbN8Z2Ii+FLYdNN
VN4DXQPW5DT78a7pJMfk3c+pzfmGiDEGWg9OnvScgDEBB1meHXCg5Wh54i1B
+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
XUfeOX+7K0dk/H+1HKwi
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlslkUUhseW/+9Pz/dHMBpbVGobUdECegN4oag3Qr0QiBFUBKlRQKXg
zupCsQhoiwIK7oAmbAFBS1KESE3cwBuNu6DBhRItYdOApajPm/fiSeb9znxn
Zs45c6a6ftrohpKUUhP0gK1ZSh8x+Biui5S+Rx/LpXQcJqNPo78uS+krWIzO
wx2lKS2B+dh2ovf3TGkT1BZTysGQQkqDYSm238tT+owFu+Eu5n/At7PL/c8g
5v7Lt2/KvMZz2NrRo1h7JNyEbkNXMe4LN6D3oLcxboVb0dX4OBdfFbAFfQrf
l7O38TAj8x611xY4S2szfw972w2r0Y2Zbc3QC/0lehe+22Ei+gi6yN4yeBy9
Fv0+sdoOg9HfofvkU6qESegz8b8S3yvgNXQD9gH4roVu9vZt5rkVcDf2LehD
+OqEYehe/P9ywT7eQE/N/K/O1MX/H6L7s7fLYBT2c5j/HnNb4S30pXALvhbC
KuYe4Z+uEu9BezkO13CWq+Ep5v6FHlbmb43KL/6GFpzD5eje6HmMG+FN9Drm
L8X3MhiK3o4+wfgkjEDvRY/gbMPh3nAOlAvVTA79K3oMtrHwILqm6NxVwrvo
fdjr8vZxP/on9I15f5uK7s/8OcydC23oF6CKvXWy/9Kia1C1uBl2YBsN43KO
mWKnmCg2z8BAbGOgJec5n2JbiZ5UcA6Ui/rwXVBNqDbO49sBbB2wAdsT4dpQ
DBXLceHaaYbP0VeGYzURVqOvD8dKd053ry6cS8VQsbw2XAuqedX+OtU0aw3k
PBey9mZ0LeMJ0E+1onj2cM4vwfYH+kdi9QPMQP+J3pv3t1no18O1qTugu7Am
fBdOQx/038yv5iw1MB/bndCRc42r1meGfetO6G5MR89Eb4QO9H3h3M+GXzLv
UXsdD63YHoJFedeAaqEhXAv94Gf0I+j1jPdBZ2af8r0BHsV2IPNYcx4Oz9Fc
nXG2Yq01icVFUI2+J3zXVEOqpUr2011wTNdiuyrc+1TTqu3bwr3lIHyROeaK
/QB4R3dLPSPnHqReNCW8d/VM9U7FULHUGuuxjQz3Mv3zCfbh4V6mHqdeNxZ2
l7hH/sZdXRbunVMg8NWEnk6s18A/zF2AXsD4ZjiZeY/aq3I0QbWsO85dOwbn
o1+CUfjqC2X4aw7flTb4j7mLwuMm6EI/Gc79Yc50FP10eC3VhGrjMfTOvHN4
MLNP+dYdfBHbGeg84xy0oOuZc6rEPehwud8AvQX6dhQ9KHwX1VPVW2vCuVNN
q7YvCJ9FOVVuS/BfVvAaz2OrhF2lPrPO3jvcy9thMXpu+Cw74BB6P8zKu2an
qX+Fe4V6inrLs+G3TmtorQxGFhzDV7AtCZ9NPVK9UjlSriarZ+gs4VzpTdPb
pjW1tmI2B9u8cO9VTk9gKy/6X/WcFdiGhN8WvQl6G9Qz1Dvq4Qpsq8K9Xj1Z
vVk9Rr1GPez28Jl1dsWkAr0V6nr6jdRbWVV0LauHbML2ari364w668ZwL1aP
U6/bFu618nFx0TWiWlENLsT2drgX6g3SW6Q7r7uvGD+A7X8rNCfd
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8653181407433735, 0.48132295751061743`, 0.2093304940928569], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwlkz9IlWEUxg961avHuwQqZIKpeFEza8uxtrKGrmSIKeRki4ENLRUNSv4J
kaAcbCjIhErIDDVvSf6BXJraWoJy0CFJSMka8vdwhh98z/ec9/3e87znO9p9
PdObY2bNkIDSlNlW0mwTnrnZRrHZ/XyzEehDX4GVPLNd+IK3B20FZpegH28b
vUPtL7iFzkAntWOwjpdi/wH27ocJvHPQgNcFq/jX0LWsbYdv6Msea1fhMzrN
+o5CzgHzeN3wGy9N/Vf8RvwfeN/hPd5HSBdRgz6BdwTKeT4ML/GS6FbOkoFH
6LtQXRA9qbfbHr3o3Q56wKPXQfiDvoleyo+e1bsyUTY601W8aajjW3vsX5GK
HtWrMrmI9wK9TvCf4BS6npoZ6l/DO/Q9j29l4R+1ZdqDvdbguUfP6l2Z9Xhk
pKx0Rx3oKY9va43WLnlksQzH0aPon+xdiZ+LvuFx1+ppk70+eGRZQoZN+G89
sldPNehXHllegGr0G3QLz3egFr2AHi2MO9Pd9XrcrWZKs3US/TARGSiLLBzL
i5k4i9fskc1fmMV7ip5LxoxqVs+g9xOxRmtVo1q9O413iJr5ZKx5gn7sMXt6
J0+ZKttFGNLeHmfXHegu1JN6Ow+zeFWpeFaPM+hFj7vSzGn2sh7ZqucG9LjH
bGnmNfsPPLLWzGn2Jj3+Nc2kZnPY4yy6k/+c7QAWRYPo
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.817319, 0.134127, 0.164218], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3367, 2447, 3000}, {3376, 2600, 3008}, {2550, 2498, 
           2499}, {2499, 2447, 2448}, {3374, 2549, 3006}, {3351, 2295, 
           2983}, {2498, 2550, 2549}, {3357, 2346, 2989}, {2999, 2447, 
           3367}, {3371, 2498, 3003}, {3364, 2397, 2996}, {2447, 2499, 
           2498}, {2549, 2601, 2600}, {2601, 2549, 2550}, {2982, 2295, 
           3351}}], 
          
          PolygonBox[{{3003, 2498, 2549, 3374}, {3368, 2448, 2447, 2999}, {
           2996, 2397, 2448, 3368}, {2989, 2346, 2397, 3364}, {3000, 2447, 
           2498, 3371}, {2983, 2295, 2346, 3357}, {3006, 2549, 2600, 
           3376}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2982, 3351, 2983, 3357, 2989, 3364, 2996, 3368, 2999, 3367,
            3000, 3371, 3003, 3374, 3006, 3376, 3008}]}, "10"], 
        Annotation[#, 10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxS0sBAAYANDPLrC5C2wUyrHZGEMj0lxzRaA4hXI2gsImMCMIAoGAEfwU
d5vNYTaKQCFRBILCJjAj8MLbS+fGs/myiBihozJiOxnR6X13ec/dLrrHBff6
1H0uOeMr9/vSWV97wLce9I2HfO9h3znnR4/6wWN+ct4vnvCzJ/3qKb972m+e
8Ydn/eU5f3re317wrxf94yX/edmJVMSKK7zqcq855XUnveFqb7rKW671jmu8
63ofuM6HbnTRDT5y2gU3+dgtPnGzS27zmVt97nZf+B/HLznh
           "]]}, "5"], 
        Annotation[#, 5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTlIFmAAANBPSUHtsGzwD88gbNItx9pqUxoqXfIgA2+h1BSMNET8PQoN
Uuge0gbTIdDNpsCWWkwoQ8ODLFBLEE2lNzxedlnd5dqYEMIoK4khXDscwpKv
etnl3nSZ113qDdd6zzXedbX/udlxSSE0Od73fcIdTna7jzvqVHc74n6nuc/p
HnS2B3zaw87xkM/6hXP93Hke8Tm/dr4nfN7jvuApX/SkL/m9CzztQn/wFX90
kWdc7M++7k8u8Zxv+otveNYV/u4az7va31zpr67yDzd40XVecL1X3egV3/Ky
b/u3W/3LLV5zs3/6jjfc5nXf9ZY7/Nf3/Mft3nand9zlA/d631HvucexR0J4
6Bj3O/iB4/3IcR7wIQ86ycNO9GMneMjJfuZjfuKjfuqTfukUv/Ipv3HEI071
qLM87kyPOcNvfcbv/B+1oWCM
           "]]}, "0"], 
        Annotation[#, 0, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTtIFGAAAOA/asqs7U4U9MwSyrNBa7k7XSyxUpO6kxbPsCYDm2pVN4UC
S3pAWZCei/dYfGAvl/LRUItnSw3ZWs26+Q0fX/3Qvesjh0II0+SOhlB1LIQ5
R/3WEc/6pEuud9Ex513ngs/5vZu96rjfuc1fnfKWk95wwpu+4h++7LK7vOM+
//Q1/3K//zjj305717f834P+66z/+a73POx9P/DhihDu+4jHfcJjrvSoj3vS
EU846keu9kPX+IljfuxaT7nOL9zo5z7tZ27wU5/yGzf7teOecZNf+Yxf+qzn
fcE5n/ecWzzrVpfc7qLbXHDKeSe84KRX3OllX/KSO7zoi15zrz+5xx991R/c
7XVn/MU3/Nlpb/mmv3vA35x12be97Ts+AD+JTNY=
           "]]}, 
         RowBox[{"-", "5"}]], Annotation[#, -5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0Tky5HEABeCfSdDdkSUzqmSMA+ACJKgaIlug7Ym2NFXMkkyN5QCWiJkQ
seUAxgVIaIWMbktgrULPzPcPXn3By96rSqbaRgtCCD+kPxbCaTyEPmbYyxMm
ecdp3nKKN0zzmpPMcZxZTjDPRb5zgW+c4yvnmUiEsMo4VxjjEou5zHL+Zhl/
sZRrLOE6K7nFj9xgBTdZyz1+4i5ruM1q7rCBB6znPuv4h008ZCOP2MoMW3jM
Zp6wnRds4xk/85w9vGY3c+xilp28ZAevOMIXDvOZQ3ziIB85wHv284Fpfog2
ZkG0LUO0Nf/px5hnin/5nQn9N8b5lTF+YTFnWcgZFkVfsDz6hqX8yTL+B3DH
Spc=
           "]]}, 
         RowBox[{"-", "10"}]], Annotation[#, -10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 2618, 3015, 2619}], 
          LineBox[CompressedData["
1:eJwNxbcyA2AAAODfgsMpI6YcYdRNRLTJaXkAnM0diWdQXgCTsopRG3ULhzSD
2LUnUDbf8N0XmU8lkiUhhAViFSHcV4bQ5zv3+9kJFzztvKec86SzHnfGE371
nIue8Ytn/eVlfzrlDyf97kW/ecl/Xvev1/zjFX971eVVIWy5zBsu9abrvOda
77rG2672jht94Abvu95pt/rULT5x1Mdu9qGbfORe37rHN+72tbt85U5fusMX
bveZ23zuURc84ryHnfOQsx50xnE/ecAPjvnRYy76H9mDO+s=
           "]], 
          LineBox[{2623, 2624, 3018, 2625}]}, 
         RowBox[{"-", "15"}]], Annotation[#, -15, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2602, 2603, 3009, 2604}], 
          
          LineBox[{2610, 3012, 2608, 3011, 2609, 2632, 2634, 2650, 3030, 2652,
            2653, 3043, 2666, 3042, 2667, 3060, 2686, 3076, 2704, 2685, 3059, 
           2665, 3041, 2651, 2648, 2633, 2630, 2607, 2605, 3010, 2606, 2629, 
           2631, 2646, 2649, 3040, 2664, 3058, 2684, 3075, 2703, 3074, 2702, 
           3073, 2701, 3072, 2700, 2681, 2679, 3055, 2680, 3071, 2698, 3070, 
           2699, 3085, 2713}], 
          LineBox[{3013, 2612, 2635, 3020, 2613, 2611, 3013}], 
          LineBox[{3014, 2615, 2636, 3021, 2616, 2614, 3014}], 
          LineBox[{3019, 2627, 2643, 3028, 2628, 2626, 3019}], 
          
          LineBox[{3029, 2645, 3038, 2661, 3037, 2662, 2682, 3056, 2683, 3057,
            2663, 3039, 2647, 2644, 3029}], 
          LineBox[{3061, 2688, 2705, 3077, 2689, 2687, 3061}]}, 
         RowBox[{"-", "20"}]], Annotation[#, -20, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.44697442364361184`, 0.5615685129975149, 
              0.9497017929239753}}, {{0.7728642530128351, 0.8224866955302859, 
              0.9779955439793905}}, {{0.9605916799651181, 0.9701299199599626, 
              0.9515921858697814}}, {{0.9944707348898091, 0.9905817859607862, 
              0.6395517993036217}}, {{0.9523141239636311, 0.8486484224316561, 
              0.28048902869100917`}}, {{0.8653181407433735, 
              0.4813229575106175, 0.20933049409285692`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -131.24999999999997`}, {
                    Rational[
                    15, 2], -131.24999999999997`}}, {{-7.5, \
-131.24999999999997`}, {7.5, -131.24999999999997`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.49999999999997}, {
                    Rational[
                    15, 2], -87.49999999999997}}, {{-7.5, \
-87.49999999999997}, {7.5, -87.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -43.749999999999986`}, {
                    Rational[
                    15, 2], -43.749999999999986`}}, {{-7.5, \
-43.749999999999986`}, {7.5, -43.749999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 43.75000000000001}, {
                    Rational[15, 2], 43.75000000000001}}, {{-7.5, 
                  43.75000000000001}, {7.5, 43.75000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.50000000000001}, {
                    Rational[15, 2], 87.50000000000001}}, {{-7.5, 
                  87.50000000000001}, {7.5, 87.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 131.25}, {
                    Rational[15, 2], 131.25}}, {{-7.5, 131.25}, {7.5, 
                  131.25}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000003`}, {7.5, 
                175.00000000000003`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -131.25}, 
                    Offset[{4., 0}, {7.5, -131.25}]}, {{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{
                    7.5, -43.75000000000001}, 
                    Offset[{4., 0}, {7.5, -43.75000000000001}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 43.75000000000001}, 
                    Offset[{4., 0}, {7.5, 43.75000000000001}]}, {{7.5, 
                    87.50000000000001}, 
                    Offset[{4., 0}, {7.5, 87.50000000000001}]}, {{7.5, 
                    131.24999999999997`}, 
                    Offset[{4., 0}, {7.5, 131.24999999999997`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -131.25}], {-1, 0.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "15"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "5"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 131.24999999999997`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "22.999043443834854`"}], ",", 
                   "10.735320819945859`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "20.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "15.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"10.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.769261497286374*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
+oSjjR9Phg7W8wv8otkR7AR2BruAXcFuYHewB9gT7AXmO4R8Z43vSPGdHL4D
wncOmOPOnGrm8DJnlDmKzIljDhZzfphjwpwG9qGzz5Z9hJKR2QfCOnfW8er5
BX5hXQnvzXkvyHsPnuvy3Ir7cu47uK7ivEFf2LIY9fwCv2hdzS/KRw4Zf5+e
XxQ7gZ3BLmBXsBvYHewB9gR7gflOJ98h5DtrfEeK7+TwHRC+c8Acd+ZUM4eX
OaPMUWROHHOwmPPDHBPmNLAPnX22kpHZJ8U+ENa56/mFdYiss2IdCe/JeQ/I
ew6e4/Kcivtw7jO4juI8QR8k/9+jjR9X8wv8otkR7AR2BruAXcFuYHewB9gT
7AXmO7Z8p5PvEPKdNb4jxXdy+A4I3zlgjjtzqpnDy5xR5igyJ445WMz5YY4J
cxrYhy4ZmX2E7JNiH4ieX7Ko42WdIuuwWGfCe3TeE/IehOe8PMfiPp37EK6z
OI/QJ/9rrHP6w5Gdt8vYf52aZ1xl8PcvW6QefmaZ8KLGyeElytl1B7k+JO5J
k27GO7EDcwzyNo+sqnXz2zeDvfoYuf8NJ6XMn/PZeCdj8MJnY8uvz5zjVHFT
amih0v9afhzs4jfGbOQ6nXfaG9z/TeY+nfXZuhR97/vC8vPZKT6TzbH614e3
Hv3m3HTjXuntuRVnZv1l3MOOdNw9p2ll4+fE3raVHvfqyHnVTWZNLrnkYpM8
MsQhas/t4mo+VPOsnxxsfPPds7U5JK6spdK1SXwXN0TedJl+xCO3g+xZ02vW
oxHGOwcvq+R6cHW/kVPVOH/tyOQfY/H7E2T7k5Rvo6fnlDJf/Td7iyvP9ZPl
n8Mb90bfyC63Tj1OO7Lipf3fRc37zywVKl6feHxdfil29q+5xZ6qv7+T1Bs6
J6lg52qam18uV8D2nO8uRMvQqodrz59eQH7e1zemjR9ygdL9Ue712KNOZRzl
Yraa5axbYrU+6H3x6RfrGvcOG8tW6t1owXv7389ZOo3q3+3OqQqi+MvoL2W/
f5WyYUtRWZ+76aenFfkuaqiUuLdxc8xIJ1m6qeHUf9oYOffLRh3LdXu+kVO0
uF2T280fx2b8/el+Cm9erO5/kcWk66u41LBxvDd0kIa5+6QlhpYUl7zlx51b
rr4P1DrJXQ7O2vbv5qfO0qXy6AJPf3HXeo1Xt4e9mmi823qySWWHpyeYu2+R
Wg7dsjdeVVI2T0ya8Kcjc2HipM3+rVWSOxaXk0FNVi5wN+qWG76MjXHea9zT
RPUssaPA6hx2dpWUBcETP3WoqLlRkSY7fnjKd2PDpMjWId1HeJWWDRs8FnX3
NXLNJ9z6uKd8ZyOXZn/3o+3y1DfqpF+Ur164z0PjXijp3awb1y7ktrP6vvKQ
B0u+eprTqbyU2LCxc+9qHtADJCH3h2dll7vKsTfF221paLzL6f77oGwrpxi5
6tFxHf/odBq5OOk/b/dVH/59u5TyMnNP0wqXRqBuO/3n4/jfHObVWFtWWpdq
W35EWZ7DO8qQdtXHnC1QQXK4xC3bVDCv/ePu0vNetRXf7PbQ3HTmVdcN84x3
Qis4Fdi35hJz3kV27w/9r1eHCtI/oMTp8/lE6zXy+rwy/2rUkfdsdrXo+3jj
XLNtne93jfgqv/53a/r8zIUW9SpprvFT7ysr7/Bd0nD5+fy3AdWcKkrfI655
lrobudkNZg1o/3s10Xy06IBxT04Zdesrk3xfFOhinKPef97hl0F/FbSzpwxz
LHyq2bNKmr+MgbJtxrS02b96yNcenU5VMRnvPN7pNG9hxd5GTnepAd+OHN5E
NPskNRuw5DXr5BMlunf/dnNdK8m+fj0nDJ3Cew8nKf3Tgbq/NqssP1+t07bf
CPVzyEv/ul8b3T1Zq3L6n7+pakPTb55aTxo9YFLJeca7k/UutWtV5BJyw9PX
A9eGDKr028zKssSvfb0fxgo+f7xcOXA2qlAnT2nQJnTKHC+j7vJepYkzuh0y
zpmjkntEn8pe1M7eMiPHw8ZtB1bW/OSd7fKa93z3MkICFm/Zce2Cl+S9Pu7Y
r6FGLnP/Xjnr1t4pmieNfNF1eVOjzjPhq0mtu702zrWHffrKY1bNYnZW87CX
zAx5EHV8no+UDpn52urmBT1I9nx/om/+Ct6Ssu3z63K1jHcFHz/4PaToWCMX
WvL+eaX9Lcn4+9PXMyUWX0hr8cpHto8+cfwB607T1x8jf4vvsmmWt+TKNSL2
uQvPEZ3lVerHLr3u+Erb+p1eP/tb/dz1k82z2l7ufd9Ls1e2Ee1MG4x3DhOz
Lxnl9YQ51TFS6WTUiW0eVSV7jumNvi1u9IU/TXNxf7zRqIMdePRa6x3VjXOZ
s5/bb0m4XdzO/nK13eX/ynaronnyP+aH+V/yXcVI2ZmvwZ0NY/1kpE+1Z7n8
jdzfFVtHp/ULMfrQL+U9PnxJqlF3e9J/wxO3XsY50PtSndfdSShpZ+M94Yin
taoMv+AvxX6/O6x7Wb4vHCzDO6b2+aaSv6QM3bJ/Uw3j3TpLYGqNtaON3GGv
Gy2/OtGOuRFWKTlv2ufk9/7yefys8E+sa0xfL+acf7OOT2N/GVBlj1vcfJ7r
usiIn7zPRQ4LkMaNzGn7NhrvxzYoO7tkiz+M912D5lcfu3KZ8Y7e82+O5V96
CznI6evvU04bOrVfEiBHG8ROTJhs9OmXLx1b5Ts/o26s0evPD9YfN87Jgo+1
qzP5aSk7B8n+ER3SDvTy0Txodq9xV1/z3T6zWOf2qru0RaAsWBH24a9AI1e2
fcTsDbe3GbkA2+++qxHY2KhT8467kKPtS+Ncbn4x22vr9tL6/8uYI/XXlr3o
o/nLaJKWMb+MXhcUJFv6336b38t4B+1DF/eBeb42cmzL52+x58NZI4cgftiQ
mTV6sI40WZKbF5zQ3RYkBa503v1TAWPf9qLgjMI/X1Xrd+M9t87XT066nJT+
+Rts3ZDU2XjfbUfpaw0X9TLeX4tL+Xn/vLVGju7FVaM37n/NHASrXCqSFru2
b7DU6LPm5NNpRp3ebysj7rn685zFVUxnNuTZ4WeS/SFDa02aYbzPdaXo4noH
DhnvZyXdbFCl1QLjfauelfLsbfo3c3xjZYtv0uNlvU0y8XGvCwsLxGr9zHf1
9qeuNOoEn+69Ojsi0di3Zt/1075excvaOVQWzOozYVPOqppvH2l5pvFe472g
qA6Nfq730cgN9r/495X5rrGaCyXtrHthp1GH2Kno3U/JTYx9ce+8K8duKK32
S2HiWzOld4OfqmpWf69Dib1b9v4UKtnWLT2wLNN7K1Fyo8qnM90LhUpypf/G
LIoycljb/hlxzhoVq3l6tzm2wZeNOshtl/49/Lq/sS9fMeTgqE3T1N8nXHJc
Xtw69WBVzcN/yvf+bjnj/Yr4znneXGth5LymvfpxUquasZoP975t7fSQdZbJ
8mJu1f6tZqb//Xq92j1+t/rzIiTP1SMH912qqrnAZr92LasY+f/e00LX1+lo
5MhOMfVsOKxerOY7b3/6JttTo46zc492TcvEl7ezkcfepXqZ941mREhozrp1
HF2NfPbRI9PyZqth5Ke3v396y/ufjJzaTr+Vavttu1h8vgR5vLjhjcB3EbJu
qOXO6P9VB5f6vt6PbW+r7ycj37r/hCWtT3tFyoDAvAk+3apCD5Ed48a/a5EW
KXGBeyoUfWnkVRcpcaNwXn8jJzfl5QOvbiGx+P0J0qZk80Mlc0RK9sNOS5JT
WbeaLIk58nqcmx8pvTv+u2zkt8a5yp2z+SIvrTHyjPOv3n7w7lkjbzi2XsV6
PZcyDzhKnEu0ndc9xSxJ6f+7u9w08nuL//P8zPLCsZqbTVv+5tQao272zZK3
IZ2qG+c4W/d2+znkhJEP+12dqDszrhn5rVf+m7byyGojX7Xcgf3V9j0w8k/b
9ir8rGaxWM2TUzfWS95g1OV2ChwsFWsa50SzgsoOsNQ18jXbhtTpW3qxkX9Z
OHh913wTjXzKSyd/65j7hJEf2XVmwrGPOWI1uxx/UbDxYqPu99jlf14ctvDc
1lU+nEm9W2m4Raq3K3J47ib181ik16xynkcbGHmC382I73ajo5H3F3I/3+ir
vzCPL1a+/qq5f7Xg9D9vXqNn3Z4ZOS9VW3mXuD3RqDt2cdiyu2xV4xxs9vIF
aXUP2een/5XPdtHy54dFzUT8C1+uUPFvH63n2VJjSyEfI0+tb6PiDfN1MvLO
Xg3fN2nweebKWOVOriItW1pEfpz8s9fZnkbd844xfttcChnncId3fuPYP1zN
lzFSooxf9NaZPprTBt9p3NTRyKfqccr7+4ZWIz/q3PpHNT32Gzk2v3+V/MjW
mn0IybJ4zsedIY9EGgz3uxvzybhX6iU163faqP49YsRaau9Dvz98NM99UeTY
dE8j72dVzym7prQ38ngWma8+s6r5OZ2ffuO/Z/u37HtIlkovug4ZVCL989Xv
POmamp//v378YL11E9TXHytVC3bqeH6fj+YcI6/171jWyE+ZfPXn9+2aG/km
n0LnvVx9wsgfeT/Z8W6xLkbd+LQi1YvczmOcY5q/uua9pIj6emPlRNcLJ04O
89H85deZ5MiLaaubfR8rz2dHT2n/n5FPMav5zhatI428iEPxLaZ5/WbkORz+
UGj+4Obs60iWkUH/DbwRHSvX981NvvDWuKdrt7JWxT4bjXOOYL9rjYP/MPIE
1i6aOn6WXi8a/cSpb/+7OvlirETfe3Rz+i2jP/98g9OvkvR6MU6euVysd1iv
F+OkcImkpMhTvEd3kcDB/U9EfB8nTSa+2eH4xr7+tsWJpcxp1899jX7tKoXm
Xx7U3+inLuk+Y8H3m9HvnP7/9UyJyOABTeOkTae55h0DjH7ky4NS/CqXNOr0
W7x9cMN7i3EvOXnR+XvbWqn1f7y0nTVnU+MqRv9r7wM9lq2oZ/Sntv+xUMel
E43+0XtDPxc+87XRz9lq69sj5pxGH4B3vmV7ohcb956dvv6c1PSa+nrj5arH
i7vLOhv9gynNuxw/28vo74t81fziqbVG/13ue73a3u5n9MMNvmlxae5s9Bls
SfTdMWsj6xBcpGa3C6GD5sbL4Td/nq4y2Oj3qme5uXLSdqMfK+lmcX/rHKNf
6ojXr41jL6KfKf3fu8eThcnT98eL6+5Z/6WMMfqNrkxcYC7pZfQ5jHFxbNzx
sHGvu6h9q6cjNxn9M3+Vr7Fz9x9Gf8u6TyeD/1bff+ncfuTlhL9uGf0h42vt
8u+ivt/SOfvC4Wuuq++3dP71XEL7Sur7LZ0rt27xT7P/jP6Dx+2t2yv/a/QH
3J2fGjBlh1G//yH1SfDEN8a6o+OMnl0PzTHq3c+EDC8UHmbUn+87ZcnV46Jx
Lz10X6388yra90O2BBm/OkfC0fw+mrdsadr7xgGj/rn968cJVz8b9clTXDoe
7ppi1AtHr5n8zWWzUb+7ZcqqNf+kGffe5vLrz3w7Xe2/EuWdcwuvwHgfzVv8
S3UocY31o2ZZnZTDcU76769x+mJkMVejvvOko632qNVG/eXQvwa1eFPdqIdc
nHvcjXwPjHv2zX//eyD7R/X1JkroL1XcP/b30ezTZGHbD++MerwRVfJHvTMZ
9XEVbza4OmCHUb+W8ndc2wdNjHqytHKmTtneGPf4KdfmHAvQ+80kiTlYZ8U0
vd9M5z8aVDvy2qhneng6b8tDen+ZJNkW5at0Xe8vk2Tg09oOzfX+MkmWjt7r
t/OVUSfQbkbfslOuq68vSXZcKV4/rouP5ue1muco/8KoB5FdFzxdqxn1GQV+
jknLv9Wonyi9yPHk8IZGPcN3rwvnOvfCqD9IObvlxtKH6utLlmJFgzbV6uGj
uZ850H/JK2Mf6uf0b+iiAON++9Hbkh9rbTPmwQZFYt4eaGTcB1fa/6nje71/
TpZLK3NOmFVYzU/p+4YNljGHh/poXt822/zrn4z7yMSPZbdciTDWuUO+eznq
n13G/d2yLbeTO+j5KFlq1y+RsuWdcf8VW7NRr9zPfKVIu5Vjg2xvLWEVPvuV
/WySH4q9eHr++WeL1/KPV+6ttkruO9P3fvj5tWX+qRK7KtdKllmb/mr3dsm/
lthrR482HhIlhd4nJGx9kUPO3KlYfdiQWHnRMnqxx/08UnzRxFm5PN2k0YiI
ViVmO0rqpb0P0v71k/rtPy/rei+/HG++M9v5uyFS7+L5gpNDCourXwtTXf8E
2XNjY6McufJL1ZszWs784Y1l3IBKs5amFJETV7MlVV9eQWbuzjF5eu1iknNR
QY+q9aOl8IiQyZuTiojXg5n7LlyNlZjkbTnXvikqrT7GTtgX5S/fPc9vyv7W
WTqY3kwbsyxUJl64VMdzbgkJ3n7bdHZqgqTsr7Ru6ExnST00qmfHgtmkS7u4
sE2jXCQx9eS2KnkqysQVc3o0KFRa5rg+v/nDHX9p3/vQuEczysi28gEmn0IW
+XvIodTVYS5yL2mPw7OQOIlIfJHLtq2UbLeN6NDkWvrPpVweHrvel5aQUqFP
bxbNLfPGz+vfK2952b/Gb+ng5DDJvW3n9DeVysqZ3/uVebnGIhEl/+x+cls5
qXj3tuuyGA/76CYt4gbHm/oFyJZR70d3eegmFb/pfmrGsTCxnk6b6zOtgrTp
vLTl0VFxYls6o3eFMm7iPPla++3eiVJfhky6sdJNLuZ+UbbuwLyyZeigPKmt
3KXXx+UH2uarZB8ryqWcceFv0wJkfd5RvZ9sqShDEpzT0v+3yNtS9TpdNrtL
wbSgvcd3xImp05mP3vfc5WKKe6nktonSdODYDh4jK8p39fqFjr1RQFo1vDKh
XVgleWma37PWA2PMd6NdP0tguDgf+P3hkA4ecm5ilUZJVpHYyGUNKxSvJPvq
+KV+eJa+jrDsqPv0YCU5dnTEwkZNA2XqlLwxq9Z7ys1xrt2W7Q6XQyXDL9Uc
WFn6PNr8W/H5iXJ8zR8vGvf1lEu3jjxq94eT/PP8Vr8Nnb2k+gw/rxa+le1j
Fdn4uXa1YW8Dpf3n+a1yPq0iXmP7Xdo5WWSh18W2j2K9pPDYtKK5Y9Lnea8u
NVxyVhHTwhvh154kygXbqHuDdlWRYefmf93ybVHZf/904NqBPjKwqPl28foR
8tpjwFGfJd7Se/zWm5cviBwJSBvbo4mPxC/duvVTsJd99JXn03Y8XDgkSG5W
7nMh5pOv/BC2fMjmmxHyqmftT51+rypXukw9/ePQ9HXOquSIz7l8JfZmvdA9
XkmSe0zilXfp+zTXZkv+6F6luEz0Pf9g63Q/OXRq7slHYVXsYzVJHBV8cdKT
IJlQoPPq8leqybVHZ57dco2RgessByf18ZO8b46sCPg9Xjwvlf/lsHM1OeOW
2vFVlySJGF533rlV1aTTiubjL9wuIaVXlmhv2uEvAy/G1+ifHGkf/SXyROkN
9RrEyHczTe1+WeYvHy4HnFla1Vs+PZ5973yJAMmz4VH37v2C7WOA9DwVWipn
aqR9DJBVt04eHp3NKo2PzJlQJEeAhF9Pett6TZL03jflyd7mATKg0Oc8F7KX
kpSDn2O2SKC8L7mmer5AH/k0rnGlXHMC5VL+U5sbPg+2j4Hyzebd302dFSOn
Og187FEtUO5apw5pH2eVU+M8Ph0eFShPJtZ6POZxklwuOy+t2OVAWTS64Y9t
OpUWL/cL5V3mBkmtmuU23DvhI56eky69vBMkfovWrbRYzPYxSDznlU4e+XuM
1AwxTc03LkiKbB+wKayrVdx7Pu/Y62KQzL7Q+VnFc2WkY7/SH5PS54FCu2p1
CQoz2cdg6XZvYOcjE8z2MVgariswfuHzGPm1VSmXmFvB8mx0H+d6RZLlepF7
Xovdg+WHZSHzqtl8JarBvFMlxSQFl5RxbDbWGPOem117VqrZPppkpym1SNJs
q/TpuqLiZH+TnFkye8yeiGRZkBxQbHA/k9Su8zrx3kpXSW3w6dwO7xCZV968
6uJ1XzldOKVR154h4rYj14+uW032MUT+XNS33IkPZvsYIm9vx9T7tlCsPD02
fPHfriGyrJTL+ZfrrVIryH/JvbYh0q7Tmo196yXLwbPNv36wOEQO9Lu1Y0Df
stLzygC/cl+Fyu+H733331dVpf2tPpGf14ZKzqn/OHf1jJW8Hn9VuVgzVLYW
amb7eNoqXctudPh3fqiUC9seYuqXLOaePbt3eRgqqR2mPbrRrpyY/rr9w/bZ
YdKpd3a/Q7uqSnB4tpI3r4RJ7eZhZXY7hNjHMLkdXt3lljXKPobJxNwt935n
jZWyBbcPeTw2TO6XrFVpwj2rnKs2t3rpM2GyrpR14Jl15aRbwrmrL1eFy93L
b1Y7/1lVXnYf2Hjso3Ap8Lb//VC3EPsYLpW35nY/0jrKPobL180G555UJ1aO
b3xfoNyCcGnRpPXa5k+ssnXtnpZb/g6XQiujpqytXF6Gd6mz5NGxCKl/ve7A
lGoh9jFCyj5p2/d0vyj7GCFnnvYc9+Sr2PR11Y0SV3ZFyJCcuU42+bacuMVk
ezljXqREPOh3882UqjL/VUSvD0cjJbH14ClXnP3kl3V7jn6bL1IK1fdq2eaN
yT5GSrXHPW7/ERpiHyNlf/bSKaavo+xjpEw7NH1UdHKseI6pUnDw1EhxuRva
w3bNKgEne1x12BspH3uF/fp1+jr63a2e9U84RKZ/n+18WqxPsty52Pda5buR
8lX2rXVX9Skrs2xVUx+2NMuTQz8W/bZkVel/05J32zizLJt15M6wnSb7aBav
cYPH1nxgjCmt93r97RFlH83S9scFHoerxMrB/6KTxzcwi3PJoUvP77NKFb/s
NZYONUv/y4/HtGicLE+2Xi62bbVZVm5YWPf9Rlfp4us1fY9vlPx56cWZIn/6
Stdu/94b3TVKhvk/W1N/pck+RkmZFW/cXdL/3C9jlOQ+ertIWadYyT/5WMUI
tyjZ+qvsK7ou/fuxwVBbpVZRUn39xPIJNZJlRpuylvEzo6R2+KJa3be4SoPa
nRq0qBotBdsMHT7/iK/kXr9v/+n20eJ5sefzmLkm+xgtS7p3PbfprNk+Rst3
u+YMjSoSK/98F5RjoHu02EZ9GuyVvr5yKPjhQ92m0XJh8NJhC63JsvJD9Vwx
46Llp4hNE3bvLiOLT3dr3+OpRV4M/+3iHKurfHRb169jEYtc8R01b/Z4X+lR
4mCtmgkWKeNmKxY40GQfLbJmxr8/lFxvto8WqfR0zJzBL2KkxtViQR9uW6Tu
q2G2fjliZeH9XNke5bbIr3t2zTg73yoNBvf3WRRpkXqP7zXYGposv6SdWd6t
h0Vc2tz8xdWhjOSoOWh6jjYi0bmCPJ/c9JE6+8eP2TVAxGFAx8EP4nzFIaVZ
6/dOIism/Tm9QwOTpB7pWn1jFZFfHw7+6Y8RZmn0es/BzrEi013v9it7OebL
2EKk2OWUbJv6WO2jSMnmtxcUHG/9MhYQCTr/blqoR7J9FJlqcvfb3aO0bEw4
tPTtqfTPNzJqVdIvPvJ12zPe5++LVDqxY/zDSiaZeqdlwuupItl8p8eltDBL
thLHK5xZI/Js9TyXpUdj7GP6r3/3pHab9tYv4y2RgEqF2k3/lGQfRbrdX1F2
SIHkL+N4Sd/vPCm7a2Rp6XRpd/ttdWPk/p/3Wvud8pH3r/+dVaNPjKSduNf3
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
AJ0gqJI=
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
l/En9X9N9FMmBjTx+SG+Lh7/D7c0/v8=
           "]], 
          PolygonBox[CompressedData["
1:eJwlkjFI21EQxi/RpMl7AQdxcHBwsoODWm0nK3TRScSpiEPRWBVpFSeLU8FB
oSA4WG0UQdBBEAriYOkigmAwilCn0kEH0SmbdjDo7+OGD97v/927d3f/axya
7P+cNLNWVI2motnIC7M2tJkz+w0PZ81a0C38P5iNE/hagrfgAgnGUISnkaXN
Eugtd9eDex0ohbcAJzifJcwq+O/RKbGr6Bv+gHy8Emn6OJ/qvSruo0POT2it
2mvoJP4ATuKdk7MWHo1e+5Nywh+in/XGElwDJ1PEc78HPoKXs95jGe6CX6W9
B/WyAuczzAcdw5nod1XDO3gpeG/qSb1t4xeJ/Y7+4F/Aj+Q+QRX4EzGj9NeO
ynjd6GPa35zFb4DHqK8D9cNvos/yDJ6AN6LnVk0l+GvwWRbQA145+L9JohvO
l5pXlc+wkfi66Lk1g96cz1iz/oGu8V6iQsprGMRvif62vuVznlO5z8nXDO/i
VzLe8194MfqsKvyDec7/gseqhqacf5NXRL/gYvTZ6B/cq57ou6CZzMFf1C+x
ebQD70ffRb15BY8En6V25g5vJvgsNGPNWnd0Vzs9E32HtEvamXrNL3otemMP
/hl8l7TT2u1nmgFq1w==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.48194262517586367`, 0.590301760242435, 0.952359435349301], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
T/z/J62913TUNF5fCj6vx1mVyDVl+3vYhWp33ZUFzrvOXdd9li+PyGnl0wvk
uIotRXLjWZbb5txXbhGHR5xbF7+5ydiYPuGd4PyqyCufofh3Z3Bep8nF3ZZt
tcl5lANNidWK2S3yGI1NyDV6xK0d8JeC51E/Tz2/uUS+k+VDl27LgZZuq7Hb
1E2rjCsfm5ArHhFLR+QjA/AZcglfR94qNdcafLdZe5W89WHwomK3OYd55LlH
F5tRvFLcmhY8rsU2Xow8fpUixxWbytEFPie+RZHTiX7P/p9Gnnt+SHqWI0rd
n29xLmPGjw2qBoXIeWi9GetLvoHBMHJ5++CKm4ny2sjz1UNye+GKo6fIe1S4
kPeYGCvQPPW9mDiff1h7zdoVgyuR570H1BFnvCuoFrkVvEa4mbodV4gBBXxu
BZ9bAy8ST4Rnd1V39/PBbbCWuu9uMG8BfopPXeY2sK018o9DbGWXGnsbfJ8z
3uYd5ynwAf5D/uFfwW3lN6nbbiu+yEnbzNM71oRaqEMMl9x6izqkPupjs+L1
QvDa54fG8+vB7fSjqdv4GfWb7P4Wuqxi3xEwpS76U/D2mfSi9sjfVnss3Faf
iF6yL8UX+d1yfJEPVpBbdPu86WTva9LZEH3oTPS+pj7tLfP1utNfCX4G96Xu
4+Q7PqB3NTvgJraygh2d2xP5qWxcNq16S3WY6gHVBb9NPH+6wjy9n3Yjf08V
P/HdjDy/aZLv1BjvGFR0dta+mvgdqfMO24BOvO4Obs+ya9GNuDsN7lyXu7DC
miXaBne5AV+NX0OmRe6E+gpFzxGVO0dFz+eEy5/UwTfh00TuKnLeG5z+9an7
/27mu1lTNDX6Otz9GN5V+hRX5QeKrD+NvBXfiHW0Xoz+tE4VOaS7jwSX/U3U
kmNiyFuDx2vF8IiYWSVG1cGPIj9PyVRgXDSZHqXXu4L7sb8nHo9O8Td3BPet
J+QGA2oD6Uq+csw5dTjvAfJ24CWeL1t7T/Bz+Z9sKrg/PEt8Hyf4umPOfXzb
uZY4Q52l7GOF+ClffIoM8tHV4PP+nbhvHjN2hHwjzqoI39ptPnsLHnvY4pj5
Orchex7Ca87YMfgG56B5Hwx+ruXU40CRNQbQ6fwl9w1i/pTYIx31GRf9u4OP
/TnxtefEpnV49dHvEHyE7iX7Jryl1xvs7Rp76kYX57bJ2JAYOGcfx+Bn+GL5
HeUdTfy53pOeZ6zK2/A6dX2Nu1Sh7/y9mDt3fteC9/UTr6Oq2b3jvSfLAZvU
aKofrlCrxXzTqPPNQ98+vp14Ht9krMw3FuFdZBHfInRZDVGjhngt9XpBdUOf
elry6v2qTI1Q401b+9T7VYn6YcDc7G2mQ32od6zzbwgLXpNUqVFGjHe5hw3k
22P/2vdDwdt3ph6P16kL9IYWU/ssUS+oPqllubDBSfA3/5HRfit47vWJ1ONS
n+8BO9RBa+Qcu3zD2KY20phqC+Vqop8ynn3/aPG9oUguPie32yCnP2SNXWAN
miXqD8WoVvaeyvhl8ArfCvS2XyHfz+r4AvvcCS7fp1N/P5AcMW8BC9D8Ifi3
km+m/u2lyreTVb5vaL1ng38TeSL1MX1TKLK35fLFd54K9Jm/Ps/jmKdxvUNG
1J56nyxiXwPqkhn12xF4n74p9ZzqkkPqjyn4iPpDNH3ewrXOMrags68TW2RH
2buqbKRJ3C5jXzH4Cn16/3gh9TVVD20Ef7u7O/U7rnc3vbGpvlVt2ky8thhS
vzSoWbtZXkjtUadvAxhB06XWFa6cUby13oQ67fydgtopq6XUZvWT2uwtTa3k
a1CXdXkjL1D/14ir0oveBFWbPp14DRsTD8e822U16zF1rfqU3ygPEl6ivpP+
5vj5PereE97oFGsVS0fcdZ3BG4L3/SJxf9PFd+h9T+uLpklNqT3obI6ii5xL
bfbmrVbxLQ3+vqd3vjbvgj14j9nHFrV4VrPuMbZO/d7Hfw3BN6ATfl/wdRZT
14d0oP1nNX/2BjDPX7xTztBBNctfiu5fdCc65Kzb+IJ9vr1t8xZZ5Y1vh3e1
Nd7Mlnmvkw845Hth9i2wxVtmjXfDOd/19J1PvkNv8Qv4DtHpO6HwA741/jT4
3EdT/x7ah16+QN8+Ra/vwfou/I3U+27yvbDFu+Ny9vbKHrLvi9qT/Ipoz5Cp
g7wH7Ft77cGrzZ4uw7dPn3h9PzjdZ9OL/feQbx9+y+z13FeWvJ5XrS//NUM3
VXQhv3YjuM5axvNXwccfT11HPdaXb51Sl4tGY+I1oVZTrf9K8Nrpd0Z7V+K+
4L2J+1zVHOfv4OxVck+h61PHXMcmDoPbyLbx+T/Dat0E
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh6/3+trXe16QGBKJIWxMXaihNRUhoTZCbQyVIKXGtsLCtGnD
ghBjoq3W0CYsDDEnioUhJGiN7caQYGHYFAtqoXy/nMUvud//nHvuuefee/5D
V1aWVCRCCKtRFjpjITxJh9CN3mRC6AcXpEJYi0rgQebjBlQKjzAfP0Nl8H34
WG4Ij9Ev+CA8llir0EO4WvFziI9a4OtwPr5l6Au8Da7NcZ+r8AXzXOTzAa41
j1WLWuFecDLlOc6Di2MIp9lHBXqP7TMc2VhHEmbciNay4QZk+B+BCxL+LQUf
hacyTqO9jL+jQuavQwXYu6KPG1ER3K6YxH6OhsNp1nye5TkVw/+i++rbTPhd
dN8knAdXwJU9QpiCVjPeybfJ2TAqJtZl+ZNLkjl9sJXCaXxfs78FjG9GtxWg
AdhblV/ScxoK34OLGOeiFsZnUDPxKtEJxpvxmcBa49E01qvm2zPiJ7D/hWfD
x1mrDX2Et8ENPdznN9wfFbHXXNSb8VLsCWwT0FedVfTxGtQJX0RZnOULzu8t
a982P3vdmU74cPS1dSY6m0vRz0o1UC3moPLgOSm3U8w/Qaz1qI35E+E0e2kn
nw3wYvgVfArth68wpyPhNeiZ8RqoFjrzbHhJ9L1qD9qLaqbaaU7fjNdctdcd
+2R+R3RX2vHvhmuij5tQl/mZ6mx1Zt/gFSg7x3M6QrxN8AZ4EmqGD5i/Db0Z
vZ0a9BI+ia5hfwA3Uqt16Dt81ryWqkE7fMfcVoi+wmvMY2vNevgQPBHfFLoL
zzC/a6rZFni7+VrK6TxcZ15bzXmk/ZvXciPaDe8xj6Ucb8FzzW26w7rLj817
wV8J3hr9LugO6S7lm59VE1qFfT5cz9xWtA9eZD4OxD8Mz4HLs91nFzyaGJMx
y2UU4+nmd1k+O7C/VH/QG2L9bni5eaxxqA4eY967Evivh6dE7x2Kmae3b27T
G9FbqdKZai46B98wr7Xu9Ee43Dy2fJpUz+h3QW/8p3qfeS46w9/YO/QeuV9V
aBi8EE1N+ZsajO8QVJnyb7LpjemtddA/5sJ/mF+lXoQK4VxzWzOalfGep96n
NUZkPGflrh67VbUw91WMadjaoueinjEQHml+NsphGfw0eq9Rj1Gv+RF9bfXY
fOyd0XubeqZ650nzXq1/ymvs/wEjedNu
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7566896881992415, 0.809851002566661, 0.9763834145186735], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmkmIpVcVx19Nb/jufVXVoOLCKbrRaBbJxlRX1RuqepFkI0lAUDRgwKCm
u+qNFUjERUTBOIAaBIOku6veVO0EjuAEhgQFJSHdXW+oV90RA0rixsSFySZ6
/nV+H1WL0+ed79577rnnnnum6lse3L5vazaTybxo/8wZXjOoGWwbPBkzmWk2
k/lkyGQWc5nMYdbpov2eZJ0uLtjvefttEOz3yPBYtPHrGfQN4oJ/07x6ksns
zNgehmuGOwZ7BsF4jozf2CDmHGuPxQXnPTW4x+S5aTgxeYIJOzLeY4MzNufG
PGO2dph1XlXJJx4GG+AlwYLzOzJYXnCs9e3o4yvGf9/43zA4MigaTGb9TH37
PTU4NHjF5j9cyGR+b/M7pq+xwcggsW8lg3WDNYOawbbBWYMtgwsGPZt3aDAx
2GPd0KDLN/Ha5dtBxnnV4aV1i6azosHUfi/NON1DronBCvucN7gTLFlXkUVy
iHdi6wozvn+YcVp7xxmnu/AbG3TAozmXUftr3gA9SS9xzu9E+qroLrmDgt3L
QdbvZnPB70C6lw2sGawb1MElgwa4bLCx4HagNedYpzt/KPG1W4a7tl/doGHw
sejjZ+xeSjm3CdlXGSz7qoBlyyWTKTEIBpUFt1fZdQ9+TYOW7VMxqBo0kUv0
mq3P5/x8VdZJ1nW+ae826zZk78arhqxPJ/67Z3hdOkKOMrJId7LpKwY/NGiY
bksG5Tl/Tx2DLu9KuMc7FO7zZoQHBotzbr/TWbf1ffgeMS76XPR9Zk1vLwe3
u3tNtk1bu2SwbPB2m3PDePzcvld5G+Jd4e5FN5GxgrzJnL/XMljzfpP492cS
53s063y1j2QULb1ez7rdbLCPxvsZt3u9g4HBEfT9if++L3FdSqdr6LQE/aLZ
/YKNzxsM7XeiuQat6HMrwfVeOXUPZdYX8SmVUz5FdNbWXzVe1wxseaZsUNIb
MqhAS/eL6CeX+NzrBvnE8YF+439XDQp689AJ/EQXDarwTden/IRTWYR1zrei
n/Vq8PPVDLaz7gP2DHYL7jMW7d6LBs2M61f+qYV+RZeMR1syGK7n3L71tsRj
VHBdftH22jLedwfnO+Rcl8HX8UmiL3EPuo+r+Cd9u2jQYH/5Qvm7DrJuIa/W
3wzuH+9K3O8szfsZ5J+iYtG8+y2dSXQdfh3iWwe/uw0Wr4fZ/+mC21Of88s+
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
jv8D5gYCUg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh2+1fa/v3r+2EtPCbGNO2Gipp7QLtRENC4KEBDW1r6WVEBaE
BCExJkhMLZ45MS4MiaqQkAqlJaoSTYwbrYVhge/kt/gl57vn3vPO/9xzzxu6
pKq8sodzrgJloaveuTYWfKZzvSPnJsOTWa9CRdhNqBRfPrqNPQ5Nw5eLXgfn
NsLnMpyrQz/gP/B6ApeiAuKNhuNOMcdgd3v5eqEJ+N/DHcQ+j9qwP1k+2AH/
Z+wF6BVnE8RfiL0I5WG3s/aR3xuK6rKdK0FziTcBbsc+h5bBJ+HTOc7VoGfw
TjjCfkNSd+BRQXstxiJ4CZyL723MuQPwPnhqjs40wluDzp5BN+AaeC12MWqA
N6EqzlaiGfi2km97hmr0OyhHy7UUDYGv4X9H/c+jPHwbg2JbzEvwIfwl+PJR
D7gMTvPtteg9ew/CU/ClUAx/2itWHTrudWd2d/YbffDP5EwtuU1Hm+H5Qd+a
RnvgM16xGtBZrxgWy3KIR7oTu5skGh9pj+21HsqFd3nlat9s334kqPZWw8f4
HdzA2TZUAnu4A/uC9QzcavEy1QMj4Eq4iFgpVIVd7nX3VgOrxWzOnyT3l2g3
++cF2XHqtx+ewZ5TTj3Uia8fSlL7ajQH/2A4hV2PFsIjg+xWtBQ+inrG1RMr
8B1Gq/mW46gZX8qr96ej5dgbUD12K/oVlLPlbmvdcBq9zlFPtnJ+L1yYo5iP
4BNBsV+gV3AiqFaefMrgLXALucTw34Yr4EnwGlQPb4BPxLXnOrw4qBa250ik
N2RvyWr6Fd/ZoN/KTlBX/DfhAuxV6Au8I+i3LMf78OWgvbbnA/wEfo6dRdy/
8N2gs8fQd7gpyLY9P+EpXr1rM8RmSVnQW7E73BbpTuxu7E4G4SsP6k3r2e34
MoJ6xWaMzZpGr9mVRA+wm1F1pnpoWKQ189naAIsdVCur0UX4t+3PUk8m4UL8
eTHNkDVw36DaW89Y73R59b6dmYj/i9cssxk2NlIPWC/YjPrG/l6mbPX4TPz9
g96+rc2KNPNs9q1Hw+GH9j6oVTXqgu8F2Un0FS6Gi2KaMTZrCuBETGvr4FtB
ewPqhMcH9bLtWW3949WbCd7oX3xXgvZaT77DPy1oNlgNauGn1n8J5fQr0n+C
/TfYm+rA98wrd/uPGIj/gFdsm0k2m1qsfl4x/uFfGTQr7U3Z2/oPb6nWLQ==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9422895062908184, 0.9564801888007287, 0.982572991928977], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmUlspFcRx3vc7unx972x3d1ue0ACETixBSm5ECQ046UXew6gQIQEUoSC
RAiIgMZjuzebQwJIRIDEdiBCEERmbPdiTxCLRAISSwQSKEgIMpu720tAJBdI
OBAuof6p3yf7UK6u771Xr15VvXpV5Tse+Ny9D4+kUqm/2p+04YVTqVTNYM2g
dzqVOjDYNzi08R2DXYMj8DWDyeB4O7J1Nq9j0NYa+9Y16BkUjV40qBqsGmwb
bIk34+K7xjqNddlzCD/hAWN9gz3WC982KBnUT/v+Xwv+7aNxKtU47WcQv6bB
DnQbfn3WddmnfNrX1JG1xboFeEvGnVHThcGBQQ+8b7BksGGwbvBmk+GiKfNZ
08k1o18wODLoGAwNBgZd1oku6JvNHxosBB+PTP4No5fSzmvdYBF6Ou26k00q
yCi5N4Lrd8nWziOv6Jm0z5XdvhRcd/fanLx979u3gUEh7Xgoe6XdftpjKu3f
RE+hF+2ZR1/SvXxm0iBncJAx+U67zctG5w0KBhXwlEEVXDzlZ5N857RPxvco
nPazFjlrLtnHYBKs81XTLl/xhF7EaxHe0wb9rPmNQdtgAO4YbJ5JpS4brBi8
Mfj+z5i99mxsizVXbWyZeeUxO4tBweBFm3/J8C9Nhzmtsd99g13sLP9YCS7j
rM0p6Qxp13cv4zraN+hk/MwDg1baz6NzNw0q0P2M61o62Ms4lg4+GxzfI/7o
XrresTmH7PGLyPf9reGG4TJ8Pxmc112xyyFbSe8aK6DTMvKKrqf9DPomWQvY
fzvj8u3xrYJPdDmfztbmfJpXlM/Ld9N+b6b1LeP6msk4/S2TbcJ0/0Ds/tg2
6BhMWGyaN5hL+ZpFg6rBqtlm22DLIG/z+qaDgeKX0W3GZD/Z+yr23oJe5tuV
M773Enw3bf/LBisGhybrjsEucvegdY4utGS/yPoPmPwlw+dM/mvc2w3WyK6y
8xSyVzLOt8U83f8OfJ8LLtcTxqdmuMN5JgzmDeYMxsGzBn+z+Td0Lps/rbtr
OjiUX9i3ksGCwa9tzgXD37A5Z1knujziuisYlAxyJ2jpcqj7OuJ4X7o1X28b
bBssG1w1uGJQHPFx7S0ee6fcHjUb67DmEnOfNLhssMn6RyKf/5jhVXhvGayA
NW8L+8nmipdt9PV85L8Hkd+DPfORfsrvg/Ag5bFHeJjy2CO8b1AnFis2z4y6
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
V3D8cnTsNxp7Z+xn0Zlkf/mB/KXJ+XvpY9+q4Eca1z5l7mgd6HKfFSMLxNQu
cXpIT6tI3D0gLosuwk97JD2yAj3IPH20DjwUzyaCx7gfR/7W6pto6encif7T
zOhxj2eaezGkD6NezXuD+4P8a59v8uN3B9fdPyPXUQOfKYG1ZkDfRrweivyO
fCpyHTVZ82Bwm7wrdn8qYJM+/Z42/ZnFROfoOPG1KmNDbKD18pUi97yBDSu8
DUvYr4W/y36J3Jr3auzvj3qESX9Kfr9M/q0eQJt4UCO26vem4R8F7+VeotZZ
obdbot5UXtbl7dRbrRpcvQz19RUjFCs+b/g14xMb/kvsNbvGVcfPkQevkN/V
qGfVgzlLXaS+yzi1TdJ/EV2m3pUce8Hn7sTH7/30ifde9Dy8td8S43oPVGtO
UhOp9lUNHNM/UB9BPYMkRicxe51cKonXGpsgX58jX1+AVn1TJY8NwdcpT8yT
n5aoeSrQN+hTSA7VltL7p8mr89QFHWwlvauvIV0mfQ7h8ei45yVZethHsia1
rmJtOrgOvkqNXKAGUx06hVw5ZNR5DsgNlHuoPs9REwb6QOehF6g9xukDJbXp
LPMOg8/9Wexxo8072uftFT0BD60fMq4cIkeNoz3U25ukRvp38P7D74zn74P/
f+K79vu12HM55XQlatkavUb51g1y/Bo1wRw14wp5/xq0ai/VYMvUYCvQffo+
kmuXeK+4f55+mPpi28zbO9HTFK1zrhHzd3g3tH6LufLNHm+Exjb5dgseqru1
9yHrtf+FE/25Lm+K1l9l3U36AKsnenUrrMlTO0q/HeTS+nnqyVXG6mPHfc0a
Y6r/Jc9u7DG/i6+skTsoH1DvosidUO2n/0upFlwnP186US+JvkKfTnfiX7HH
W8XdpI7SvMKJ2uUqPT+t2SKurFKrF84c1+55+mwr9E7UQ1FcXqOv/iR7Kh78
Nzj+Y+yxpkvfZJOeovZTD3IPOulFim6S7ygvkBzb7PeT4PX7I7HHpDZjNfRU
wg+qJ/KIRXKyBrlT5UTeIHqLvoX6FXVqGtU2t+lrqJ+xybj6Bg3GpcerfJNM
Neo5rT+gj6I8vcv/BFTDPB28p/eV2PN+5b6VE3m/aPXrBuhimpxYYy+Qy+t/
G5I3R52t/x/r/8hPR16riJ9yjVv0YtTz6AaXtRn7O6TziFbtqLWqSZKenWop
nWec/mMefqoVSsH31/9YatgzsUEfPe7DQ+fv0MuRH3XwEeki+b+41vwfK785
vg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllF1olmUcxu+9H+71uR/ZVKYWKKlHfSxCT1pQ2T5M3x0oUwoKFkzQZTTL
j23mfD1IElwqaCpoQYlTN1db9uWBGlhGQaIHUTN63WqzUE9MPUg8sN/FdXDB
fT3X/7nv//fctnUtHZkQQjvIgbUxhBcqQ9gIjqYhfJGEcBWDqdkQauBD6Onk
EJ4H4/A/0a+hnQKPwofRp6ONFkLo5/wl+gT/fw6q0c/AZ2X9TdpUbKblQ2gC
y9A3wt/h7RdBH/wCNk3Yd4PZ8EPoG7j7GLgEfxu9qyKEAXAH7TEwwF1lsBr9
AHojb3WBSng7vIjtDPAa57nYd+X9Tyv6dvgYb38KvoZ/jE2Jf4vgIOeBxLHo
W4reDz+ZcY6q4K3wau5uADe5ax4ocXczeBl9fXRuj+sNxQfvI18j4D/4CvjQ
pBB6wA74G/Al2NaAj+Cros9/oe9PHYNiGad2/6CdAFcKrlFZOtiatw+PS0+c
C/ks33tVr4JjPovtq9F3y4c9qWNW7DNBFr4l2vffwVfwnuhcqWafwVuw78eX
MlihWkfXthu8hH4EPsh7m8FleB28mrcawCb44WhtMfgJfl/5pzGbQR38oehc
zgLL4W8lzrV6QL1wW/2CbTd4Gv1DUF/pnn5dvRb97zXdqXpgv7XCPXEL7Zvo
3l4PbqA/i15PLJ3gOc5PgSWca8AVzUq0752ghP1F+Cj/DoJ78EuJe/ckmA+/
Dp+Ws48L4BXRvg6CjN5G7wl+Q2/t5duignv+x9QzpdlSDn+D74RPKdjmPLyW
f6qCfR5B2xedS9X4u9QxKBbVaBTtFfAHvleRnw/Qv1X+8X0xuAk/F50L9ei/
8B+iY5PNbfgY941mHVMtfCTxLiiBy5xXJu7NIVDkvCXxrJbBPe7KglM511i1
bov2RTVT7d7Xjsh4hjPwT6JnXz3+q/xBb856pzycuufUe5rBv7F9AgznPQOa
hebo2VoKtqX2Sb4p52NoP0fPYuT7A/Qb6uGcd9yT8ET5z3lnFdXv8P5JzuHu
1D2uXtdOeSR6h2mXaYY3wBeC8bx9WpO65qq97myE9ybOjWJW7PXRvs5Qj2ne
+DZc4Z69i1aM7j358B76M9G2eqMD/ot6PnFPhikhnI6urXb0BPqdxLOlGBfC
v0+867VztXt3JZ79Cd57oNgT97JqrtpvT6zJJ/n2bvRuUE+e4b4F0btYM/5m
6p5Qb6hmc+AxehbVA03w/wFuK9sP
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9911581770317097, 0.9906116932251957, 0.7961954186963089], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vemE4w==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlWto1mUYxp8d3m3+n/8g2phtzo3KL9ph1PySfbCjYu9b7WAa6ActwZWi
oKawnPO0FXiEUoIOdICCZLWTO4CHQFAKjPZBUomYtjnc3g+ZflEC+11cfbjg
vt7r/t/PfT/3/dzvw29tbtlUGEJoA8VgfxJCX0EIk6ALe38M4VppCJVlIZxO
Q5jht3oc80UhNMAXoc8uCeEVsB3+GXwPvq+BX+CH8H+IA7KgCP4R+lK0dvAz
/F/0buK1gkXw79Gn0AbBZfhBeA32FDmcga/Bv47cpsl1BXa/9Fn+5k/08/yW
I7dOUAe/nNgeAFewW/HvJde/wBH0Xvg431YSow97q2omfjO4BW8EExnXuAn/
U+iT1FJNvNPYV8EodjeYh94VnesgGIY/j76PXJvAH2gpyFPrKFiCfj3xXSrG
AngWvaPEOX4A/yb6LnSnY/BV0blXEf8YPAffB28Cu+EXiNdCrHowB/6JOPnW
gcPYNfi3UE89aEZ/Ibp3OrMTvhifZeTaAZ7DLkYfINcb4GX0x+F9Gd/JenhF
dCzVlIMvhw+VOKcP4WcS55Ln/Cp4NXoO/06wEv6V+oPWD1L1F/RnfMZj+N5W
P4ndCZ5BW81vN0t8xlH4rui73gN+TF2jap2hfyH1DGuWNYP38f04ejY1U5qt
a+g3yK+a+E/i/2n0bPaA3+DvwfcS+3XwHbw7cewRcA9tIZgh1xHQht6AXhV8
h1fQdvDbXHKtAy/CHwTVGd9BE9rX+HcVukdlqWdUs6qc5us+4b3EmgBvYMfo
XihGFn0b/H1y+0FI3TP1Tt+Mo42CV2f5jUyib4Avw3cn+Ba+M/pbvfEhvR94
D77j4C78BPFGCp1jeeoclMts6p/C95Lq0R3iX1DuHqgXurMOtKcTz34teAr7
y8S7QD1X7y9Gn1WBHfj+3cRvT288j9aW+KwseAe7KHoWNJOazUdBV8Yz/Wb6
f02lvpOtaCcTz55qUC0XNM+ctxvcxveJ6N4pxlr4S9FvST1T70a0r/BtBzPw
LcTYVeAdeUdvNfEsaGdodxyI3pXacefwfyR61jXTmu0sPsPBO0G74dno2dAM
bUbPRO8G7cTF8J+ic1UP8/B18NpSv4HjqXegdqFiTqCNJd5F2gHaBb9G90Y1
38P/bHQt6vE/8OnEs6831ph6p2m3aYfWaD6j34J25O/az4nfqnbgA6l3pnan
7mgidY/UK93R32h3Eu92/Wfov2Nj9FtSDV/g/3b0LtNMfg7/DyYX4FI=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9881038583972336, 0.9715336624063002, 0.4082861655814366], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmVtopVcVx8/k5HLyfbsPIig0M8m5JFNQVJTWByto8fZgO01yrjMoaFVQ
UStoFR9q7UxybsmIglTxCiooVhG1MyfnkmQEoVWhUkXwLoi1M5Ock8tUH1oF
1z/r95E8rOyzv7332muv+1rJPfDg8sfGUqnU0/YnbeObQyp1eTyV+l+USl2Z
TqUeNbhokDuVSpUNSgaNyVSqaFAyGE6kUl2DnsG+nZ+39YLBgf1eOOXzkf3O
n3Iceylf1zwLvqLBG+zeht3738jXKifua+pOg2WDusGqwbbdt2awbnAQ+7dP
2Nmr0HvJ4H2R0/BA5HdWwSuaasznuF+4d2MfP2z7d1NOn9YXjK7zBjWDvt6g
Nxn0GIcGXcZdgxdiH+uGZ020GmwZbKQc745B06BkUDb4Z+zfKpG/rwe+rn0b
cka0ClebN2hsnfL1HLws863J+9ZPnNH9m6wNTvk7Gow9zm2y1ku5zIS7yD7R
9UBwfi8YvfMm+33x3qBgv/cmfJ6336MJny+YTp03qBlsGq6WQVs6Yucv2PoF
wzfPetXga5Hv/6qNOXRLuM4a3w9NOW+lnV8t+Jex83Xb/23JedJpOZxwXGsG
bYOPB/92l92Zs3nZoGSwZPtXDVYmXQ7C15AMoFF3FKCrYpBn1PkN060Vg9Vp
v3PTYIv3D5iPsIm+wYeC6+urY9cj2df6uPOoz5lDcGhfE9sqT7pMDgz2keEh
c9FaRIdqdmZe/DY4z3jWoIMdiNYBOKS7WcO7O+H8LRvkJDeDkkGWeVVyBW+F
dc0filyvPhm5beygn5LRBezkIO02M6832u+CjXmD60bHE9PuV0Zp/5YzGKZ9
zCJn4dL5od1xh427kctev7XWF16DkcF+2u/RHa8Ijusfos1gx+7ZNZi37z37
/if7NmPw3LTTcjry8YbBmcjHm9O+V/QJ17bhvSW6DGYjXxde6X/NoCrg/nl8
xDz0b6adF/uMmm8ZrI37Ge1tG1SYtwzKzLXvkHN6g3SuO+0+Uu/vjTst8neS
8zb2oTNZ9Ec++s7gfBMvL8C/O5DTwgl+Cm/T4DXB5bBj+/tpl594cQO56T7Z
eAX9vC92Ply0cwNw6B2bjG1+H0hW425bsrFqyu2jbtCYcF2WTtcNlhlXDW4z
vF2zuccjt8ky5xVf5FO2Uh53Bsw3WUu+aVTM6XNPUzbHN/m4v8ZOy+sj96G7
+L2jM+CQX5aevydyG20Te7bQC71tAO4W9t9in3zbOv5I/JJfE//W0i4zyblp
MEg7v6/hG+QjtuCf9GWbUWt1O7+MfFvolc5nI9eVofQEfNLlNvcc7UMOsh/J
TXos3zl2m5/7TeyyFY3y68/GzuNzsnvRB92X0aEL0FRj/png+N4Yu20UuOPu
4Hv/E/k90uWeQdH40hhzP17BZ7fGnP6iQSntbywbVOBViXnC64T3A/zp/Pix
zW3hWw+Qfx+/vMk3+ewnI7/rmcj1d4BNjDK216BvMAe/xfc1/LRw/z34vsdj
l/cWuNvQW5Vvk0wyvm+NbzXx0OC8wYW020GPXCorv5XxM/LvWcV46eOk516K
D8ph9tH1Mut56SvrLYPepOuKznzR6NyUzcYem/LoYpc4Vp/2eKBv8h85fFFp
3OVeg9Y+sX0Ev/eZz8kvZpzuHuvC98HgseZOu/e9wd/3qth9zwH+qste7duf
9DeI1kX5aPnmab9/XnFF+oz/qSKPOrF8D52XLXT5prV7g8e1l8Yuwwbfq9hx
mxjXxm7LjNKp55WX2v0/j/1tGwbdjPs72c/bYvf9e/j5ETbXJ76N8KE9eCxc
spdr2HQS/0bpYzuX3d9v+2Z4fwlapL81cl7RXZp2XZF+nYc3Zw3+Ffzbz4y2
Jfg3O+38lWyly8t8k9ykp3nFaYMHg6/fLV6xnkV/u9hDLbi+FmzPm4LHogn7
PRdcl38ZOd3Xbe+NjOt7Afm1eV8SHzaxN9FyM+M6VOStukO0C4fWKvjDo3Po
+JEuoPuFlN+zZ/5jf8xjiHLZLr68QZ63yrcNvvXZ1yaebLJvcGKtzt4W6wNw
rLKmnEz5rvLZAboguZeRsXRBPlT474v87hXO3xP573dGnqMJh3JPyWQ05u/R
+68adDKewxXISVV/aFRuq/pDY3bM8S6diKXL5IufC57z3hv7G5q8KUteLH+c
kg7Y+PnIvzXx0RXeIX0/itkTx7pZOmE3ZexpHX09j75WmZeRYRN8FXyN6gHV
Badj9ztN8hLVUqJPNCW2Klwvt/237Fsn8ty0yto891RP5MSa14hVsjPZyeGY
ny9Qlx7lCpPuZ+WDRvhQzfPUsdqnGLiO/24F18FzsddhQ/IK5QVnuV/5wQJ0
Vblfeix5zOHfN6hF5LMUX9e4Q3G6QP6tfDdPfq4YPk9OPhz3b/Jxnw5e27w1
9lqlhfwWgtP7u8j9xMGYv3/H9nYm/X7RewF+7fJNfnQpuKxvj/2OErJXDM7h
O/LwPqknyuxTrM6ybwg+8fQ0NeBM7PbSTB/nMq0TOUsbXsgHXMEG5FsbnFH8
mZ88rkEL5C7yNfIBeqfi/AJ5yIvBffFTsefxHXLrEXYue99QLjuVSj1ie94S
Oz/F1xX7tmiwZHBGvs3GmwZz8ls27hqssr5sUMz4WtZgNuN7tU+2u0c9dsry
rttNJr+PXVblE3lQhfpzjV6FavpTwWvARuRxW/5dvryJ/er8abvr+pTTt059
fZ4ctMq8Rh9E/ZFh7KP6JX8Mnu98175dAYdwdYKPq7HHMd2p+PAS+37N8P0o
cn9zxmA25bRk8Us9O1c3aEw5X5sGrSmnNYcfE79mxcuEv8zP0c95lFxxDrwP
Q9+Pg9dzquvEx5F9yxv9OYO3B7eNoNgdHMc1+92xPZemXJ4bjJJbUhPORMc1
oeaSn2Q7FM3QrjeUGPWuFfRI+vS94Pgfir3+7lA3XTI89xssZlyPVqDjIuuq
rxKfvkc8OaDmX+HcknJCg6ZBw+CZ4HbxHbvrIvaheRG6xPc6ufZRrgeO5Yzr
Txe6k/gxwtfu0s/qg6eJXFahu0FerHxAfOlOuZyT/lSVXlPpRF+qzJrkIznt
Tfmoc7onB64RtrQB3m8G59dHYj/TR4/yBhVkMovNicYGPT3dfSt4z+HJ2Nfr
vOEMexfRuSLnp4PbinpROXBLzllG7ftJcB34VOzxY3vMbUBxuq/4P+a5Ypb8
Kem1iR9D3pnoVBYfUSN3kMxlZ7LhGYP12McvkY81yCOVJ82Rw8k3niFXvIFv
0vmr9DNu0AdSTqmcejjmNXVvzHt/dehTjjFLviidPMeZHXxc4sM06o6kLyZ/
1iRm9ulZteg7yt/L7yueLHFO5wfw46iHmfF8Vfza4lzSN12jj6nernq8D0du
a4v4vtdG7nNeF3nPdJX3LMKDM9jcDHPlpKfJrUXr3ok4P4JWxUPFxZsGfwu+
96fG/y8E//au2GPjLvuOYtuY52pb4VhuTeon5TYNeJPUZD1i4b9jf5/6as8G
53k3dp+xg/w26GPtYK9D5h3iyU1sIrGnIjotnb3KuvRC+Zz851cil+sl5LyM
Th35A+xDdjJCR/r48BE+cIm9koNyiC1sYJFvwruPHWwSgzfZl9iSbGsG/TqH
zi0hV/mOAvGpgp0XDL4VfPxA7Latfo1yrhVyFcntyL9wfhUeb1ArbKKjZe4X
3jI4dKYZHEcpdl8su7mOXpaIdy8Qb56OXY8WecMT7H0Om1zmPXOc03wDv7aD
Xxsyv0ReL9/9q+B+/OuKs/hX1V05eh4ldC1HXiXeLlBb9eiJKuZJLmepCQv0
HCqcKdFbkYzm08c1U4FcrkwO1uTcGnnYAj2ApBavsV5KegaT7pc61MklcDS4
uw3eGrntGvguMx9R8+ht7wheI0/G3n/dpmZeJr9Q3twkDiQxqj91nGv0po51
uUsskf2oL6w+7lVqSvnOVXgsmv8Q3Ef8gBokS/1Wxc/JR4/ov6pHNBOcl+oh
HVLbitY8by6Tw/epcw+oebfoww2YD6knlYMqds2h3x1qYtF6ll6ReFakjhff
VY9VqaPy9EfL1BUl6r4c30rUyVX2HZJnq+Z4ZfDa5s+R90O1567IfYBkI70r
0HdR/2VAnS3d2aWe1hvq+I0uNn+ID9inN6Mcf5va6xD/sscd0iH1SaVTie/Q
HTnqnKQGGtHDbHOH9qp+kQykL/cFH2+LvS+u9+ltc/Aj0aNl6uSkTtN59S/E
56dsfFlwm9mKvN7aR4Z/ib1mv4e8d5V6vgUtA/LtbehbJ0fQvELfQj5J9dse
utBIfC0124B58n8FyVh5tvD8MPL4k8XXX0GXpbuKSXPkRKfJG+8n7i6T/x3y
/yTFWMX2ImtZ8kvNRU+RuuKA/w/qzIuxn3sk8vi6xB3SVfmyFWxpBdsqgVd5
T4n+ZIP4OksuJnu8yHn56H1is/r+0qMrNv42eN77jfg4/5Yv75MLa63MPcox
Zav7/L+sTn6n2Fjnrcmb69BZBE+dN61mjvPuFWhrsK904p0d+HuJNzRZFy2P
ktc/Qe5WJJYk/z/uUwcO4G/yv2StNaBX79xjr/Z9OTh/3h17PNyDX78Ofudj
sceYDn7vF8H5cTn2mLhE37THWxvkdVc5I53aJReSHu2Q6yhmDsmTlGMtk2dL
X2Xz0hfF1BGyS+qrDvnHFe6QzG+SOw3BqzvFy138nXDkidPCVSBeK+/J8v+9
LjJK5DlLLq2cST5e9ZvqQ9372dhtqYFt6f9b8u3P2/j94HnGR2OvxzrQKf6o
Zz9Ep8qJXLFd6fF28LyrHlPTUpN0Oaf3tPBpsvstavs17Fu0yGcMg+tFL3Yf
sYbPeCy4fbw/dr/S4vz/AVV8nP8=
           "]], 
          PolygonBox[CompressedData["
1:eJwllF9o1lUYx8+r2+t2zm8XUhg0ZOp8FYwK1G5SUCztws3cnG4OgxwFan/s
okQv/K+biqJCWYkWpKCoF/7d3KxtgaAoJBqE9k8oNbH3NXXahSb0+fK9+MLz
Oc8553nOOc9zRrYtbfxwUAhhESpDE1MIxfIQavIhLM1CmJRsN6Ll8LPwGPwD
TK6HX4L74K2oDc7D/fi2oalwIdk3X4JXxhA25kLoRquwV6M+7K3oEXNfRw3E
2oDWMP9p9F6taBK8FjXja0H1zK1KzkUx38C3Dz5VEcJtdBWuhduJ3Y0Wwp/C
1fjeRJ9hb0OjsP8ZQh74n4FHMHcOaoD/I34He/egKXB5sl1CM+BH+JvKPOdV
eC/+Tew3F12E98NnKjx2Bd6V7FPMs/D05LMU0Ap4Frwl7zPqrHPh7/Ie2wy/
Bd/Le2wn/HH03bWg97CX4d/MWeahg/jfhWuHeM3n8OTkWA8430dwNdxa7jfV
2z6ffHbdWQv+V5Ln6o0Xw0uI0ZjzG97H90FyLMX4Gn978l1+i07Dn8DrsTvR
Ufht1v9NndWwfiF2M7oP96KbyWfQWQqoBP+A/qokL8ZzVbwjPAtei4rsdw4+
Wek5j+FVen9i3UZd8MZkW2/em/nN9fbr0AV4JvtuIPZpVIc9Hg3HbkATsKeh
LdjN6DfWrk4+m+74GOuz5FpQzdRlPqPOqhxW4juueqt0zjfx7UmOrRq9DB9K
rlXN+R3uTz6bzjQAdxD/Qc498iT5znR3eoMi3AuPGMyboWrmPxSXuSZVm/9G
985YNDFzD6uX1WOvsf5P/AOs7Ucv4PtC+/MhzEFfYr/DnOGcZTb6Cv9P6g/G
S+Q3iPeoS+7VLrQJ//vJc/XmB+CmZN8dtANekGxrz13w5ejcO9AV7B/V79it
qAb/i8m9qz9pEXwpOXYPegL/Ep271hTgU3A3uZdQJ/Y+9Qf2fFSJv0vnxe5H
Q+E+eMxgjz0Hn4+OrTH5zifH6kAP1Q/RtVCrvxJ7d/TeBbQ9+s50d+2ogvnf
RNvKqQo+Eh1bOSm3tuhaVw+oF5SzctebDmN+fXRvqAZVi6pR1ap66Ib+NriY
85uFzH+q/laNPVbuqIncR6Jbme9Yd92DRsM/R9slNC5zzav21RO/Jv/Z+rv1
R4yGD6O7Ff7TruErRteWaki1dCI5luZcx/998t0phxL8R3Qs1ejLme9Md6ca
z8H/AzIC5xM=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9242676864480319, 0.7374536436035741, 0.25792220673145727`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmV1opGcVxyfJbLJ937cXiqDghbabZGYyyepFqxdW8KPqVRWE7WY+k60f
oGKrIC1604pguzuZz12siB+ICopF0QpW2yTzkUlqKyhWBCuiolUv7DabzEwm
2Sqef87vJbk4eXLe83yc55zzPM/5n7ntvgc+fP9kIpF4zv5MWbs/nUhsGrWN
qkY5o7z4WxKJNaOq0TBKJGrWdsNEosM38etGl42uGG0aVRizwTfxe/CS32CM
+F2jZ+BfMXoavphMJBpGdaP0jPFGBaOMUQk+xbe80TxtzuhbpudFaz9tes7x
bdloaHN1jLpGZaOWUdNoFrnG7KOj9v19m+eKfXvQ5imaLdJGGaMBctkgZzRn
NG+0bDQLX7d+hWkfVzA+ZZQ2ytM3hW3uNbqI/S7AN21Myag87ba7yNwdfFMz
+lfk8/0sdL9VjNaMVoyyRouMX4Avobv4L0Quf6eNfTXyffwqdLs/hi5t5tN6
tweJxHX8UyMuClAKu3zH+lQtlp6wtmttzahuVMLG8qX0aU37/mSXxrTb6bLp
sGHthdDXbBOLJfqqn+IzhZ/3pr2Vb1u2RtloxWgw7bGiftK7w1wV5ttA5zo2
TFvgD2zccNL5LmO+GPmYD5o+mSmXj4wWprw9MMpOeTuedHvUTp2bKrZbnHL5
oVFTtkDX4bTHsXS9iu6rRkHk7dcDj8XKjMefYnMNXrFche8zr2zQw94Noy1a
yQ7kf+u7YNSZdB/JN9uM0/paY8NofcZtXcT2Wm8TmdZrw+uc1dBD568OrzPZ
gNf6RfYsvQrwWjsPrzFd6cWYHnyVb1rvJ5Hr9XDod8oyZ65FfCvevxR5+37r
kz9rsWGUOuu2miNmisanjTJGBeTic0ZzjLlodM5o1miZdg66objDF7PMG987
8T2Umjm5q9LcVW3TbWTto6HfWxl8UeBuqxl9O3IffTx0/YYzPkbr78742tJ1
MOMy6b4/47z0ll7ifxG5DR+xea7Y93vZ008j98tD9v0HkevxQOjzruPfPdpN
5trE/hXuxTgGl4nBfuS61kI/d23OTo/zpTiqsL5sWWWcbNblvKjfEF93iaE8
tuwQBzXiok5sxf3q2KiLfIOzEsdsBX3rzBfHptoSe1tjjQG81nwqcpt/OfR7
9xx3uu7N0Rk7T0ZNey/7RlsJv//27dvgjN+Daodn/K5VqzEv2Vx71veineuc
0aH9v2ztpt7dhMvaRgP4T5oO2zbuLTaubHwr4Wuu0U/jakZdo07C3+Ecb0uN
Vm/O9cjbp0O/o+a5r88Ffpfv8t7czj6rzKc1GuyvZ1Sn7bJv6T9GrvYAudoR
/dQOjT5rOhzaXt5mOiwkfD8lowxt0SjPfrR+gfXE640an/Hxf7bxFfv2HtN9
GVuIzzFOfCrw91vvs948+Urj5wPPPyQrsrc66zfh7w7czu8N3AZD/DEbuJ2U
s6TQT/qm0V381K2+5m9Nx3nk0muOVvrOBT7HHrlBj/fmtWafHbsLfxw4P5r2
96FmeneNOkZLRpeMVo0WaVeMsrRlo4bRllHPaMfulJtGRyJ7g7aNdowOjfrw
28gPjXKmQ9XGzZn+V022YrRqdI32klHdqGBUNFpgzZLRfTa2be15G9tAXlJf
+1Y/4/uQjleNWkZvjny+5wOfQ9+aIsaVp3wfY87aWDx6l+irvfaJC/UbJV2n
jMYk3S4LzL1N3w7n8vh8Jr1vGnsdcE5brK/9D5IuT+GHEePvifzb6+TryG30
e9vLJyK/B+4M3R5aR/wHIp/r1tBzT60tvole2qvy0RGyLaNx0vfRoz2W2Tod
o65yENqechBa2UjjFokLxdEC7438fJ44kr+XiKP4ztKdsJD0eTXfuyLXdTr0
N6pHzhzfaxqT1j6mXK+/B/7/fwK30wK5Zga9Na9skeIOkr2z5KLy3yI56qr1
v2Z0NemyMnmI8nTFaz/p/Vbit5++kmfoq9zlPHF/k5hNTXmup1hWTrY05e9u
FzzQwO7ap3yfpV+RcRnsq/huYu86vNbfQT/5pIZMZ0zxpPOkOCqeOTkTPWJq
B/k14rvJmD7nUv6sErtt5mgwx+cjzzXfZz7KJt1vY86Q9FWuuhn43p8NPK4X
2NtnIvfDXaH7skhevJj0OXRPLCW9lR1TyOM3JE+e28Qnst0bbM4ju8eesrWy
yjsnbC6jNXv720abZ/1bz2jLqGp8B9mrpse2fXsk8JxBfTeMRvaty5gx4/oT
LttTTsYcQ+VGRofINVfN+C7ygfFto86E464Cb6TmrRs1JhyT5U/huRy55u28
kRfIA5bBY3+JXPak6f7KWX8/43f0ImPa6LXPnvbRex3dd6U7emmfyqEG0ydY
XO0euEXtDcW8rTdW/IfOz5GPPh55+7HQ35YD3pIO74nm3Zr2sZIdgQH09vwz
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
           "]], 
          PolygonBox[CompressedData["
1:eJwllGtoFlQYx8+u73bOu0C/GCTkZXtnzqwPTQQVksg+LSHYdM7rNEUxNaiJ
ftlIyE1zzTZU7PrBwGgFldDK27zfgkQDyYoSvPShzXQXs63w9+f/4Q/P7zzP
Oc85z3nOmdi48ZUN+SGENagQNacQjmZC+Bv1ZEPojiHsIuAE+gK7Bu0k7jh6
Gfs14hcQuwMdJP4DxpYT+zQqhC/CKwpg1Ivdih7mhXAWjTL3fXhRvnOUEn+e
scOlIfSjEXgXPLkkhDp0Gn47eW8aOw4vQu1FxKFyfDNYb2HwHn+DP0d3iZ3E
er8T24S/k9zL0HrsBsaWM3cFyhH7JWPn2EsnOoDdg/7N99jYrOdo7jTUT3wz
3Is9gEbgE6i11GcYJH57tC/H/Dx4JZyD61Ffcg7lUs0i/lcZK8+4ph/DHdG1
VM1Uuzd1H3nOOURsS3QtdaZh+ILORK3b0ZNZ35Hu6j66hf8F+D3spWimaqX7
wD6D5kdLtmJuEL8/eu+6I91VU/Jdq0e+yron1BuDaAz8bbRdSf5x8KroWinH
n8xtjN6LaqBa7CBmdzH5UB3+zaiDtZegz/A9UP/QmNNRNTwdfy93NYDWwv/j
7yp0zGy4Fv8x1rqHdsNL4X+wT6MF2NdQpfbI/RSUhfBNcm/UotvEf59s6w77
4Au6U+x2NAQvSV5bd7QX/lX9wlm7UA4+hH+KYum5P+CTyXMb1NPw5eTcWnM0
6zeht6Eee1z9H1073aHusjt5rZPounodfgp7mPy9cB8xUzh7A3oO/kX3wdxB
VAXfhEcKvEfttRqVB78RvRX1gHqhCl1n7U+Tc72Lrqp/4J3FrmkbXKx6kGsQ
vQTvhReXeE9n4OHovbSjWfBHyWsp5gf4v2if1ngePpxcG9XsDvxTdC31Z0yA
H8M/Quw5lMHuj+4FnelZ/H9Fn1U1UC1mE5Njr/Voi95fcq1Ooe/glmRbPfY1
/GPyXzORufllzqFc6qm5+F9MXusd9BZcndx7yrEJLkuuRSVjNfAB+EiJ/5yf
4dVwVcY9uA8er/MW+c/S31WR/HeppxvhOfA0Yh/Cr2edU7l1BzX45qFlxY7Z
im9+8tvR2Db4EzQ145wb8L0R/dfoz9DfsTH5bSlGsZVwZ5H/QP2FeiN6K3qT
epvPwGeLHLMSfiL5rDqDzrIn+W9uQ5fwz0jeu+asgz9M9qkmV+Cr0X+TerQC
fgTzyeye
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8540959562791269, 0.4168108017263711, 0.19943565486652315`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVj1opFUUfZlZMzPf+7TYylKbVbOZ+WYWFAUtRLBdsFDBJJv5iYXILjYr
WC1soVho1sxPBBELLQSxEAvFZtlsdn6SQlARVgsFQat0m6yTmeg5OWdIijNv
3nv33XfvuT/ve7Rx5aXLuRDCL0AeaOCnC3SACTYGwBCYehwBnTn8BwZAA+jO
aa0J9Dyve63t+chnOB4BU885TjzWoLua0xnq7gPvpyFsz4fwSgxhP2rtWhLC
GazXIfsJ/pdhdx1YBXpYawItYI06gQvAXZy9hP2nIb9oWc5pfwXIgE3oXCyE
8DpkW5zbH9pHuzKgAjRyujvzXQ3b3fL8cO5ENgOPhzlzaV3cfwN3jR8I4Snc
1aUdQBMYAp2gtSZk+pDJovgs29Yd+glsAiPLcr4HuVXsvwkfN+wf/Sw7Htzr
mCveR27IEX3t2g/aP8Fe1ZyQL+p5AeN12LOBWFyM4mXH8ezbpzHwFmTKkHkO
MpOotfdwNsF6G7o/T8RdJ6f5OMgn2ngYdCfnbdtOW7/H2QPE5V3o+ydKtpXI
7qpj3HFM6EPF/tXNzxEwBe6VQngC5x5PxDPX6Cv5/M9yTftNvfkHJfurYzRy
fIa2n5wNrIO27zomH3vcDSex2vF5+k+/v8bY97mxY07d1Pcn7ruD8WKinOg5
xl3X3+z+oeuz5ft69rtrfZ+BtxXwdiUqH3gf9Z5NlZPfJeKIsjO+OW54HPhM
xXXOHBo4brP7p85txmBqDs/hvjby9jXccwP3bwO3C+KeMdgvyQ/6w3qljR8V
JFsN8od+Zx7p0yTV2R+huwAMzoTwEMYa9tZ85kvf93ZUzR85rrR/bK63oOND
YL0ku6t51ejDOFvBeDORj9w7NLjPvXcgs4rcfjHKh1sl6cucu8wD9k720GZe
/pOHx6JkeYY+MLcmzr9vUnFzLYrrGfdrp/Ko6hptus767o9Hrr8d99lVx4h5
wzi/mpz0WcrdKIawDKwU1SMofzVR75r14H3sLbBOSvKp7zwYO3c4n/j+oXt8
/dQ70LCdz6eKUcG9omkffie/4OYvjJO8/g+Bddx7G9gqKmY7rp/MZ6mXdi8A
54uKN3OlZh6Hp2p95PMT2869v2HPEnz6IaqXnLeum6nGD6LicL+g/ZZ7es19
u21ff2NuQd8ziezu+L2k3NQxeTnqzeLb9UgqmZ8T9dbMetdsO3U1Zm8FsJ0q
Rr2o96flHr3guHGPtcKauVQ4qRNysey4MX6Zc5C5yPqpWO5J6G8gLgeu/bL3
tl1/1P0sbYbMUSJ91Evu2B8WfYZ3MFcOiqqlJcv9lCqGX8D+u6lkvori+8D8
9lzXjOG/8+Lqzrz46bkvMBeYE8zZc6nyhLkzyznm2n33Fdq+aX3kdcn1zTpf
tg7qqvqbhj1rN9Xap1E+bDn/9lKduxX1zUHbVqLqp+vvAfYI9oNRotgOncdN
95LjnuLvgONvB+jMwOdeolh33T/vpeoLw6g8bbsXX46KL/s38/mC37gt801O
G+5Jx70pp3f20L2g528XvrtcX0/k05Z7Fuul5jfuj1Qx/hZ3/g8hZnUm
           "]], 
          PolygonBox[CompressedData["
1:eJwtkz1I21EUxa8mmvh/fxenjnWxKvEDQQVpB/FjFTqIghq/B4cEF4VOgoOD
0EZUVBDBwUGQFkoHxUXUxPgxCDrpoqDolE3FGEp/t9fhkHf+5773zj3vpnQw
/jWWLyJ1IAjuPJF0QCQH7llPgaM8kSzIOZFL+GLAasp8kU98WyigBgzBj+H7
RSJPIAevcaZlwRh8jv3VXDgAgvAWeJR750Er6wyowcggqPfNg3rRb7XwDc47
CIs8gyv4T/QFzkqDX6z70JOFIq8gyvrcmZdytECxyDa/b9RWc+YH9negz1Ob
ArPwL/Aq1v3gG3wdREOcC2JobexfwesIaGK95cxLBXfcUDvMtyqy6gcZtD/O
tB7wgD6pfvMs02e0v5onvaVBM/qLZ73rt8/wGWpeuLuSO/Z886hetcdOtC7q
U3jJgm7PoGv18Ii+BhJhy+yCvaPwSMh60t6W4L1hqznzLUPNUjMqgZ+qn4C9
+Uf4rrNefoAM/Lszb3pGEj4FPwyZ5x14g7O310zH4QnPZklnQGch7izbObCJ
vurZbOibevBGeERsRq6obXf2Nvpm077NjM6OZnCLNuFZ9pqxZr3vzOv/mfRt
JnQ2NINl+Ilns6A9aq+TzrxoD799e+OR9//HNdo/QSt3sg==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8173190000000001, 0.13412700000000113`, 0.16421800000000014`], 
        GraphicsGroupBox[{
          PolygonBox[{{2618, 102, 2629}, {3035, 102, 2618}}], 
          PolygonBox[{{2617, 51, 102, 3035}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 3035, 2618, 2629}]}, "22"], 
        Annotation[#, 22, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2615, 3034, 2616, 2627, 2628, 3041, 2639, 2648, 2649, 3048,
            2660, 3054, 2668, 2678, 2679, 3062, 2688, 3068, 2696, 2704, 2705, 
           3076, 2716, 3082, 2724, 2734, 2735, 3090, 2744, 3096, 2752, 2762, 
           2763, 3104, 2772, 3110, 2780, 2788, 2789, 3120, 2798, 3125, 2807, 
           3132, 2814, 3137, 2823, 2830}], 
          
          LineBox[{2854, 3163, 2855, 3171, 2863, 3178, 2870, 3185, 2877, 3194,
            2886, 3203, 2895, 3211, 2902, 3210, 2903, 2910, 2911, 3224, 2918, 
           3233, 2926, 3232, 2927, 3241, 2935, 3250, 2944, 3257, 2951, 3264, 
           2958, 3269, 2967, 3276, 2974, 3283, 2981, 3290, 2988, 3296, 2996, 
           3303, 3003, 3310, 3010, 3317, 3017, 3324, 3024, 3331, 3031}]}, 
         "21"], Annotation[#, 21, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0ohHEAx/H/GZSXG5QyUFJuUqY7C4OUTM8NVxJleWS45GVAmS4GMkgW
imRgUBhkIMulDCeDopQkg5jchuVSPoZvn37Try2ezk0lQgh5pWtDyKhLL3Uh
9DFSVu/2EGONqWxPcFZz+rYLrHCFifoQ1rmtHdXY+zzWiRrsczaxyJJu1Go/
MMVndvCNn/+fSts/7OYve1ntc4BJRmxks1o0YrdzmCnG7GSeGc6whwvs5xIj
LjLLVQ5yg6Pc4jj3OMlDzvOUBV5wmUWu8ZqbvOUu73nAJx7xlWf84CXLvOIX
S6zwjlXJEB75BzpuPHc=
           "]]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxHEYx/HvDUrcTcrAJCZ1yZ+JQSKL33LSZTA4GZDcILHcZSGDZECU
DAyKgRSyXDZlUKeUJIOY3CIsl8HL8O7VZ3rqaRjLDs7EQgiTaq0KoU3teq4O
oYcDivRmpzmqjEr2FD85y5zyKtvLDPEQ1ritHVXa+0zwmOe6UK1dYD1vWNS9
muwnNvOVLfzgt37Uaf+ymxVu9jPOiDVMsY7DbGSGSU6wg1l2cYG9nGcfFxlx
hUNc5wi3OM49TvOQczxljifM85JLLHCVG9rUrb3LIg/4yCO+8IzvvGKJ1/z6
/wfLvGMsEcID/wBapjy6
           "]]}, "19"], Annotation[#, 19, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxGEAx+FXbnKnZGNQbCLUTSykLG6RPxkMLgYudQqZriwng2SQDFJc
UWcQJRlcBqUM6gaFjVKKRVhk4PkNn56+y/u+vY0Ts4PZihBCRu1VITzGQ+hg
t3r0ZPdzWCN6tcc5rYw+7Dl+M8e8lvVnr7EyEcIWd7WnhH3IGp7yQiXV29ds
YJkP0VvUbD+zjW9M8oud/I3Od09MfXacKdZygHUcZRPTbInezlZOMcksu7jI
Xi4xxRUOcZ1j3OQkdzjDA85znws8Yo5nzLPEVV5xgzfcZpkF3rPIY53oxT7n
Oy/5Gf0Hf3jLUB3CHf8Ba3Y8MA==
           "]]}, "18"], 
        Annotation[#, 18, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzj8oxHEYx/Hv3aKOugzKolw2dYabGChlcYv6yQ0Gww10yt8yXVmuDMgg
GVBShjPIIBlOBrkyqBsUFlFKYcKChdcN7159pudJ5Wei6VgIoaB0IoT7xhC6
2Ks+PdqDjDSsF3uM75zgrOb0ZRf5wxJXtKp4UwibbOAuyzpQ0j5mCyu8VFVt
do0dvKvf15PS9isz/GQ3fxlzL64BO8EsmznEVubYzhGm6r+zk+PMcIo9XGA/
F5nlEiOucZQbzHOHBW5zkvuc5yGLPGGJZ1zmBdd5xS3WuMdblvnAIz7zlG88
5wer/OY1/3jDfwzyPNM=
           "]]}, "17"], Annotation[#, 17, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzT0oBHAAxuG/5eq4ZBCLiMnXchNFUpa78bAoN5wiSncp08VyZaAMwsBw
KeUWGSQDGXyUQd2gmHQDg48JC5bLM/x6eqe3fSo3mq0JIcypuzaEHvVqQIOq
1IWQ4AtTnFRaH/YMs8rp287zlwVWucYtbSsSC6HIA5VUbx+zkWe80rVa7DI7
+MhOVviqN8XtL/bxj0MMvkYYZZINbFKzxu1WjrGNaXZxmnHOs5+LHOYyE1xi
kitMcZ0T3GSGu5zlPhd4yDxPWOA5V3nJDd5yh2Xu8YElPvGIzzzlOy/4yRv+
8I5V3vMf2qk8hA==
           "]]}, "16"], Annotation[#, 16, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0oBAAcxuG/QckpgwwGw00MBhMTyuBMum6SM0gng3zEcpfpykApOguD
lGIgRTKQRcogNygmGRjEdCYsF4/h19M7vcnx2cxMTUTklKqPGNBrIiLNEWX1
YU+wwmnmVdC3XWSVKyxpQ7UNEdtMcI/HOlGTfc4WXvFOZSXtR7bxmR18+//T
p7rsH/bwl/2s8znIRg6xmRm2cpTtzLGTU+zmAns5zz4uMsUlprnKYZY4xi1O
cpdzPGSeByzwlEVecJlrWteNvckyd/jAfT7xiC884zsvWeE1v3jLKu/5Bwdy
PBQ=
           "]]}, "15"], Annotation[#, 15, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.4819426251758637, 0.590301760242435, 0.952359435349301}}, {{
              0.7566896881992417, 0.809851002566661, 0.9763834145186735}}, {{
              0.9422895062908183, 0.9564801888007287, 0.982572991928977}}, {{
              0.9911581770317097, 0.9906116932251957, 0.7961954186963089}}, {{
              0.9881038583972335, 0.9715336624063, 0.40828616558143643`}}, {{
              0.9242676864480319, 0.7374536436035743, 
              0.25792220673145727`}}, {{0.8540959562791269, 
              0.41681080172637125`, 0.19943565486652318`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -136.1111111111111}, {
                    Rational[
                    15, 2], -136.1111111111111}}, {{-7.5, \
-136.1111111111111}, {7.5, -136.1111111111111}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -97.22222222222217}, {
                    Rational[
                    15, 2], -97.22222222222217}}, {{-7.5, \
-97.22222222222217}, {7.5, -97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -58.33333333333326}, {
                    Rational[
                    15, 2], -58.33333333333326}}, {{-7.5, \
-58.33333333333326}, {7.5, -58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -19.444444444444343`}, {
                    Rational[
                    15, 2], -19.444444444444343`}}, {{-7.5, \
-19.444444444444343`}, {7.5, -19.444444444444343`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 19.444444444444457`}, {
                    Rational[15, 2], 19.444444444444457`}}, {{-7.5, 
                  19.444444444444457`}, {7.5, 19.444444444444457`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 58.33333333333326}, {
                    Rational[15, 2], 58.33333333333326}}, {{-7.5, 
                  58.33333333333326}, {7.5, 58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 97.22222222222217}, {
                    Rational[15, 2], 97.22222222222217}}, {{-7.5, 
                  97.22222222222217}, {7.5, 97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 136.1111111111111}, {
                    Rational[15, 2], 136.1111111111111}}, {{-7.5, 
                  136.1111111111111}, {7.5, 136.1111111111111}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000006`}, {7.5, 
                174.99999999999994`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -136.11111111111114`}, 
                    Offset[{4., 0}, {7.5, -136.11111111111114`}]}, {{
                    7.5, -97.2222222222222}, 
                    Offset[{4., 0}, {7.5, -97.2222222222222}]}, {{
                    7.5, -58.33333333333328}, 
                    Offset[{4., 0}, {7.5, -58.33333333333328}]}, {{
                    7.5, -19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, -19.444444444444464`}]}, {{7.5, 
                    19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, 19.444444444444464`}]}, {{7.5, 
                    58.33333333333328}, 
                    Offset[{4., 0}, {7.5, 58.33333333333328}]}, {{7.5, 
                    97.22222222222209}, 
                    Offset[{4., 0}, {7.5, 97.22222222222209}]}, {{7.5, 
                    136.11111111111103`}, 
                    Offset[{4., 0}, {7.5, 136.11111111111103`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -136.11111111111114`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -97.2222222222222}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["17", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["19", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["21", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 97.22222222222209}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 136.11111111111103`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"15.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"16.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"17.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"18.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"19.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"21.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"22.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.76926149739569*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 693},
WindowMargins->{{Automatic, 0}, {Automatic, 5}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2096, 49, 215, "Input",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7",
 InitializationCell->True],
Cell[2679, 73, 1347, 20, 34, "Output",ExpressionUUID->"be7392d1-8798-4a17-83b7-703b34c81b67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4063, 98, 18472, 498, 997, "Input",ExpressionUUID->"a6921c4d-267c-499e-a24f-b6f885b72b58"],
Cell[22538, 598, 1384, 20, 34, "Output",ExpressionUUID->"e3404666-2201-4ec2-b273-df9b92f7b538"],
Cell[23925, 620, 1460, 23, 34, "Output",ExpressionUUID->"a04884d9-7b28-473e-8485-13a3f282edcb"],
Cell[25388, 645, 413939, 6876, 725, "Output",ExpressionUUID->"a3956785-e81b-4781-bfcb-d4fa667ab804"],
Cell[439330, 7523, 3221, 93, 34, "Output",ExpressionUUID->"6f1f57e6-16e7-47f1-b044-9f88a6f711b1"],
Cell[442554, 7618, 1370, 20, 34, "Output",ExpressionUUID->"49f2a56d-2ffb-4ce0-a55c-892c978f60e4"],
Cell[443927, 7640, 1383, 20, 34, "Output",ExpressionUUID->"67ad7a7b-3ded-4f0e-9f02-7052e1ab0483"],
Cell[445313, 7662, 6256, 116, 238, "Output",ExpressionUUID->"d4dde45a-3094-42fa-9886-d92334a9d553"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451606, 7783, 169, 3, 67, "Section",ExpressionUUID->"28eb6b29-ffe7-4933-a48f-f62c4f958e62"],
Cell[CellGroupData[{
Cell[451800, 7790, 32523, 755, 2278, "Input",ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-e8947acb2d3e"],
Cell[484326, 8547, 1089, 15, 35, "Output",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],
Cell[485418, 8564, 2558, 40, 104, "Message",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],
Cell[487979, 8606, 2558, 40, 104, "Message",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],
Cell[490540, 8648, 1079, 15, 35, "Output",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],
Cell[491622, 8665, 64953, 1313, 746, "Output",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],
Cell[556590, 9981, 2154, 59, 285, "Input",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],
Cell[558747, 10042, 6241, 171, 538, "Input",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],
Cell[CellGroupData[{
Cell[565013, 10217, 5364, 119, 400, "Input",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],
Cell[570380, 10338, 70110, 1436, 502, "Output",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],
Cell[640493, 11776, 452, 7, 35, "Output",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640994, 11789, 155, 3, 68, "Section",ExpressionUUID->"be75ae60-b525-445a-a2f8-07a7bd6d9534"],
Cell[CellGroupData[{
Cell[641174, 11796, 12575, 312, 745, "Input",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],
Cell[653752, 12110, 1511, 39, 82, "Output",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],
Cell[655266, 12151, 2964, 85, 174, "Output",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],
Cell[658233, 12238, 4652, 121, 289, "Output",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],
Cell[662888, 12361, 31000, 658, 700, "Output",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],
Cell[693891, 13021, 680, 11, 35, "Output",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694620, 13038, 173, 3, 68, "Section",ExpressionUUID->"c2959b04-1b75-4321-a41f-acca99c56f61"],
Cell[CellGroupData[{
Cell[694818, 13045, 12158, 288, 837, "Input",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],
Cell[706979, 13335, 297649, 5091, 379, "Output",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],
Cell[1004631, 18428, 1783, 26, 34, "Output",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006451, 18459, 267, 5, 30, "Input",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],
Cell[1006721, 18466, 180, 3, 34, "Output",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006938, 18474, 5530, 154, 262, "Input",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],
Cell[1012471, 18630, 103163, 1895, 379, "Output",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],
Cell[1115637, 20527, 103504, 1918, 379, "Output",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
}
]
*)

