(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    890598,      17018]
NotebookOptionsPosition[    886625,      16949]
NotebookOutlinePosition[    886960,      16964]
CellTagsIndexPosition[    886917,      16961]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rasterizeBackground", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"res_:", " ", "100"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Rasterize", "[", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"g", ",", 
            RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
            RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameTicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"AxesStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"ImageResolution", "\[Rule]", "res"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", "g", "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"AbsoluteOptions", "[", 
      RowBox[{"g", ",", "PlotRange"}], "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", 
      RowBox[{"g", ",", "Epilog"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767992001084045*^9, 3.767992001258741*^9}, 
   3.768740627708583*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7"],

Cell[BoxData["\<\"/Users/zack/Documents/ignition/cantera/ratematrix\"\>"], \
"Output",
 CellChangeTimes->{
  3.7665850611448402`*^9, 3.766589115206512*^9, 3.766592477239758*^9, 
   3.766617124782028*^9, 3.766962704110284*^9, 3.766968142160677*^9, 
   3.767387558371922*^9, 3.767400037834375*^9, 3.767400673171481*^9, 
   3.767484943725606*^9, 3.76753868731644*^9, 3.7677047996747637`*^9, 
   3.767704838526515*^9, 3.767790543182493*^9, 3.767807429745779*^9, 
   3.767972371161368*^9, 3.767983235938697*^9, 3.767983414249508*^9, 
   3.768734085141776*^9, 3.768734141267956*^9, 3.768740180920973*^9, 
   3.76874063904241*^9, 3.768747290458273*^9, 3.768756050493822*^9, 
   3.768761372153511*^9, 3.769184191709097*^9, 3.769186503460576*^9, 
   3.769190175126215*^9, 3.7692524076845512`*^9, 3.7692735629594088`*^9, 
   3.7698618962607718`*^9, 3.777118804759316*^9, 3.777203687721294*^9, 
   3.777204841070319*^9, 3.777205799481782*^9, 3.777206201826849*^9, 
   3.777208471199668*^9, 3.7773019608664017`*^9, 3.7773151350529833`*^9, 
   3.777375814952393*^9, 3.777376262573162*^9, 3.777919197456595*^9, {
   3.777998713799151*^9, 3.777998725613471*^9}, {3.777999175589031*^9, 
   3.7779992004052753`*^9}, 3.778018679354946*^9, 3.778020995235167*^9, 
   3.778075170578211*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"be7392d1-8798-4a17-83b7-703b34c81b67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"filebase", "=", "\"\<data/h2o2/4\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
    "level"}], "}"}], " ", "=", " ", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "=", 
   RowBox[{"dat", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rows", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"#", ",", "\"\<Integer64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"filebase", "<>", "\"\<rows/*\>\""}], "]"}]}], "]"}]}], ";", 
  RowBox[{"columns", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"#", ",", "\"\<Integer64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"filebase", "<>", "\"\<columns/*\>\""}], "]"}]}], "]"}]}], ";", 
  
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"#", ",", "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"FileNames", "[", 
      RowBox[{"filebase", "<>", "\"\<data/*\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"rows", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"columns", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "1"}]}], "}"}], "\[Rule]", 
        RowBox[{"data", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evecs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
     "dim"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperatures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spatoms", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiindices", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DisplayForm", "[", 
      RowBox[{"RowBox", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"spatoms", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"elements", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"spatoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"multiindices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{"A", ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Rate matrix\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}]}], "}"}], "&"}], "/@",
           "evals"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "Eigenvalues"}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", "evecs", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Left eigenvectors\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"P", ",", "i"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "\"\<Steady distribution\>\""}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Round", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "dim", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
               "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
    "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"spforms", "*", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"multiindices", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"Ordering", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"evecs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"temperatures", "*", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{"evecs", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"pressures", "*", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{"evecs", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7780751119646187`*^9, 3.778075166887443*^9}, {
   3.7780752386692677`*^9, 3.778075245235718*^9}, {3.778075339522669*^9, 
   3.778075378513865*^9}, {3.7780754299954576`*^9, 3.778075431391799*^9}, {
   3.778075837743642*^9, 3.778075852672986*^9}, {3.778104857640315*^9, 
   3.778104859914747*^9}, 3.778109204454328*^9, {3.7781101407495747`*^9, 
   3.778110141011674*^9}},ExpressionUUID->"a6921c4d-267c-499e-a24f-\
b6f885b72b58"],

Cell[BoxData["\<\"data/h2o2/4\"\>"], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916396435*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"2d5c7a7e-4ff1-4d22-9124-62c5ff978667"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "231", ",", "24", ",", "31422", ",", "12"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.778109916431385*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"d68de117-44a1-4354-90e6-ee1ec5ec9aa8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt3WewbWWd53F6pqaq5928mZrX82Kqpmaqe2pqutvYZhExo2BWQBARASVI
EAwooogNKIIEQUCQm3POOZwbzs05nLNzjjgNXsu5/ebWPr//mbP2WfdZ+1lr
7e+nftPVPbXPWs86yPf4Ytfe//XaW6/4+r+75JJLbv/b8//jimvueu9tt11z
z6f/0/n/48pbbr/xhluuv+7Dt9xx/Q3X3/bWa//9+f/P3N9cckn+/P/7t//9
rwAAAAAAAAAAAAAAAAAAAAAAAMAQK22/TdbtjMl8nzF2Knt/LPN9ogi1yztk
vk8EDC+KHQLFBuAFxQ6BYgPwgmKHQLEBeEGxQ6DYALyg2CFQbABeVA8+Luu8
cU5W2fewzPepPasefEzm9zzd9mmZw4t3msdkldGHZA5vl1ad5nGZ7xMhkSh2
CBSbYk8XxYYTFDsEik2xp4tiwwmKHQLFptjTRbHhBMUOgWJT7Omi2HCCYodA
sSn2dFFsRKS45WZZ7eizste7WZnvUw+UfcNbt5uR+T6jM+3qXllp++2ydmW3
zPepgWFBsQNRbIoNxATFDkSxKTYQExQ7EMWm2EBMUOxAFJtiAzFBsQNRbIoN
xATFDkSxKTYQW4V118iyiy6XdeqHZK3iFpnv54hQedf3ZDZ0gzxPp3FE5vDi
7dJ2WXbx5bJ2eaesmV0pc3ikELqds7IBH6BTPygb8AGQVhQ7EMWm2NNFsRER
ih2IYlPs6aLYiAjFDkSxKfZ0UWxEhGIHotgUe7ooNiJCsQNRbIo9XRQbA5Nb
/hlZcdONsvKu+2Xd1kmZ7+dwpjRyt27HHTLfZ3Sm2z4ls5/vl1/zJRnfHwr4
QrEFxabYQGxRbEGxKTYQWxRbUGyKDcQWxRYUm2IDsUWxBcWm2EBsFbfeIiuP
3CurHnpC1q7ukfl+jgg1c6tlNmvR3b3bHZc5vHjt2PMy+7e4cXaerLD+Wpn9
QC2Hh4w/+4cvxZ8nBr8odiCKTbGnRrExMBQ7EMWm2FOj2BgYih2IYlPsqVFs
DAzFDkSxKfbUKDYGhmIHotgUe2oUGx7VjvxWlpn7blll389kvk8doW7rhKx6
6Fcy32d0plXaKrOvqR58XFbedZ9s8CcHhhPFFhRbUGwgPii2oNiCYgPxQbEF
xRYUG4gPii0otqDYQHxQbEGxBcUGki6/4ipZZd/PZe3KLpnvU4eUW/5pmf3e
qHZlRObq7q3CRpmrK59n38vXLm2TtQobZNmFH9ItuFTWKm6WuTpzpF+sFk6r
uEnm+0TABBSbYlPsCyg2Yo5iU2yKfQHFRsxRbIpNsS+g2Ig5ik2xKfYFFBsx
R7EpNsW+gGIj5sb+8D9lf/rzX2T267cijU907Aco2a9a6+dtcuHYvw6d2n5Z
6ItXDz4qs8XuNA7L7HVySz4uq4w+JGuOLZJdxG9lgk5tn8zVlUNrV3bLfJ8I
Q41iU+xeFFtQbMQKxabYvSi2oNiIFYpNsXtRbEGxESsUm2L3otiCYiNWKDbF
7kWxBcVGrORWXKlb+glZccvNssr+h2W+nyOk4tabZYUN18t8nzGkxumZMtvD
ft7KmFv+Gd0Knaszx/BLu2J4JAwzik2xKXayjoRhRrEpNsVO1pEwzCg2xabY
yToShhnFptgUO1lHwjCj2BSbYifrSECv4tZbZdmFl8pKO+6U1U+9JvP9HCGV
9/xQ5vtEIdVPviKzX5rWru6V9XPl7OKPyFyduds5K3N1ZYf6eZMkMDAUm2JP
jWJTbMQHxabYU6PYFBvxQbEp9tQoNsVGfFBsij01ik2xER8Um2JPjWJTbCRL
btknZad+/R9lzewKu8aZuTLfjxKssP5rsmZ2pSzclVv59TK3Jw/UHF8qq594
SdbPdTJz3iWrH39RFu6EMfwar07zuMz7P0dgahSbYvei2BQbcUaxKXYvik2x
EWcUm2L3otgUG3FGsSl2L4pNsRFnFJti96LYFBvJkl95layw7mq76uHfyHwf
PFhm7rtl+ZWfk/k+Y0i1w0/Kuq0TslZujayZWS7LzH6nbt57ZeFO6PCL1aLT
bZ2S2W+I831GYAKKnUQU2wmKjcSh2ElEsZ2g2Egcip1EFNsJio3EodhJRLGd
oNhIHIqdRBTbCYqNxClt+7bs7Ev/3a79xjlZ4/QMme9HCWa/Rs33iZwpbLxB
1ipslDXGFsrsdTJz3ilzdcJ2ZZedq4u7MskhS9tlvs+IoUax04FiO0GxEXMU
Ox0othMUGzFHsdOBYjtBsRFzFDsdKLYTFBsxR7HTgWI7QbGRDqef+S+yP/35
L7L4vwPQvt/P1ZUbp2faubq4K7bhldGfyuwnStl3AIa8e3GzndsHjIL9VLR2
ZUTm+4yAothTo9jBd6fYwKBQ7KlR7OC7U2xgUCj21Ch28N0pNjAoFHtqFDv4
7hQbGBSKPTWKHXx3ig34c/rp/yxr33OJzPcZg+XXfEXm+0QDVdx6i6x25Ley
8Vlvkzk8gP1wKocXj0grv9Zsncz3GQFFsVOAYodAsZFEFDsFKHYIFBtJRLFT
gGKHQLGRRBQ7BSh2CBQbSUSxU4Bih0CxkVo3XaKLmdyKK2W+TxQ7pZ3flWXm
vUcW+uL1U6/JHJ58YJqZpTLfJwJCodjJR7EDUWykBMVOPoodiGIjJSh28lHs
QBQbKUGxk49iB6LYSAmKnXwUOxDFToRu+4zMftBN7chTMt+n9qy45Vuybjcj
G+R5SjvulDm8eH7V52T2vXMObzcw7eqozPeJgGAUOwSKTbEBLyh2CBSbYgNe
UOwQKDbFBryg2CFQbIoNeEGxQ6DYFBuIrfzqL8qqBx6R1U+8LPN96ghVDz4q
s98+Vtn3M9lgT/iYrJ+f6rZP29mXFdZdI8uv+oKscWa2zPUjXqzK/l/Ikvh1
YJHqtk7IfJ8IfaHYgmJT7GFAsROKYguKTbGHAcVOKIotKDbFHgYUO6EotqDY
FHsYUOyEotiCYlPsYUCxU6O4+Zu6TTfKyru+J2vl1sh8P4cz9v1+xc03ycJV
NJx2eYfM4cXtpyrZ/zzYf/rtyi6ZwyOF0Cpuktnn8ntCwBWKLSg2xQZii2IL
ik2xgdii2IJiU2wgtii2oNgUG4gtii0oNsUGYotiC4pNsYFEs+/irh19Rlbe
fb+ssP5rMt/PEVLt6LOyzPz3yTqNw7J2abvM1XlsQu1rOs2jdv1c3BbbPlrt
2O9kxU3fkOWWfUrm6vGtdnWvzvzy7Xla+fV29uLdzllZdA8SnU79oMz3iRAh
ik2xKTbFRlJQbIpNsSk2koJiU2yKTbGRFBSbYlNsio2koNgUm2JTbKSJ/Te9
lV8rq4z+VOb71CHlln9aVthwvay86z6Zq7vbX3Wkny6Ymfde2evdnMz+VLsy
IqseeFTm8JCi0zwmK+28U1bceqtddEcCYoViU+xeFBuIM4pNsXtRbCDOKDbF
7kWxgTij2BS7F8UG4oxiU+xeFBuIM5sR+57A8si9ssK6q2W+n6Mvxa23yOxH
D7X+9c+y6M7TzK2RRXev80ojd8v6efNYeeQeWX7V52XhzmMfv3b8BZn9KfuO
xPMLd4Ak6udrQJFiFJtiU+wEodhDjmJTbIqdIBR7yFFsik2xE4RiDzmKTbEp
doJQ7CFHsSk2xU4Qig0nJnvj3HV2vo8ZRn7lZ2WVfT+XhbtybsVnZJO+rFXc
IruIp5kgv/oLMvvla+3aqMxeZ3zW22WuTtg4M1uWW/qJSbbkY7JO44jM1ZH8
sv9hCPfRYRhyFDsEih2IYguKDScodggUOxDFFhQbTlDsECh2IIotKDacoNgh
UOxAFFtQbDhBsUOg2IEotqDYcMK+S7C043a77KLLZPlVn5P5fhQ19srfyZr/
98+y+qk/yvq5sn0zm/3KtgF/a5v9Fjn7mnZpm6y07duyzNz3yLILPyTr5zzV
g4/JGmOL7DJz3iXr1PbJWoVNMte/PD/a1T268g6Z7zMidig2xabYXlBshECx
KTbF9oJiIwSKTbEpthcUGyFQbIpNsb2g2AiBYlNsiu0FxfauMbZQ5vtEA2X/
7Ruf+RaZ38/DOfnYf5CVOv8qG+R5YqiZXSXLzH232btkoW9X3vMjmcNnSZxm
brXM94lSjmJT7KSj2B5R7AGj2BQ76Si2RxR7wCg2xU46iu0RxR4wik2xk45i
e0SxB4xiU+yko9geUewYqp/8g8y+pnF2nmzw5xyYVn6dLLvow7JBnifcm/Ts
RzOdX9RH9cX+A2pXdslCX7zTOCpzeHJguii2oNiJQ7ExPCi2oNiJQ7ExPCi2
oNiJQ7ExPCi2oNiJQ7ExPCi2oNiJQ7GB6bLvJGxmlst8n9GZ/MqrZLVjv5NF
d/fiphtltcNPyqoHH7frts/IojvkIOWWXyErbrxBZr8OrM+Ll3beJYv0WWKu
2zpp5/tQCINiU2xfKPbAUOzUoNgU2xeKPTAUOzUoNsX2hWIPDMVODYpNsX2h
2ANDsVODYlNsXyj2wFDsFGtmV8r6+qnxJbKoz+lE/cTLsuKWm3UmI/kVV8n6
u9dLssy898km/cHyrvtkTn8HMdLtjMnya76km+wNkNmFl8ra5e2y/MrPyXw/
7uB06ofsfB8KblBsiu0LxY4IxU4xik2xfaHYEaHYKUaxKbYvFDsiFDvFKDbF
9oViR4RipxjFpti+UOyIUGy40sytkoW7Tl8fjXVmtizcvTLz3iuzr7Fvyavu
f0Rmf+r1N8/ZhTvkUBmf9TZZ9dATssbpmTLfp/asXdom830iJADF7kWxw6HY
IVBshECxe1HscCh2CBQbIVDsXhQ7HIodAsVGCBS7F8UOh2KHQLERAsXuRbHD
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
W3GlbtknZaVt35EVt94iG5/xT7LSjjtk4U5oP6rOnuf8ynt+JHP7i5padsnH
ZJW9P5bZjyV0dXeH73Vsji2SdZrHZO3yTpl9H6m9creblfVznnA/hXAodvxR
bCcoNsVOAYodfxTbCYpNsVOAYscfxXaCYlPsFKDY8UexnaDYFDsFKHb8UWwn
KDbFTiv7RXLN3GqZ7zMOtczc98jsa7ILL5Nl5vyzbHzGP8gi/WNdWPsVmcOL
B6of/73Mvt2x++Y5WePsPNkgz/zXf/sSyQ0y+5ra0Wdk9ZN/kNWOPiuznxQX
7oTd1glZq7RVdnG/AwSg2DFHsUOg2BQ7rSh2zFHsECg2xU4rih1zFDsEik2x
04pixxzFDoFiU+y0otgxR7FDoNgUe3jYYjezq2S+z4gA2QUfDJyterh72Rie
X3bxR2RuH/Di2XckZhZ8QFY/+aos3L1ySz8hc/gg9kvT7L/C2cUfldkvO2tX
98j6ubt9v1+ntk/m8GFhUewUoNiBKDbFTgeKnQIUOxDFptjpQLFTgGIHotgU
Ox0odgpQ7EAUm2KnA8VOAYodiGJT7LSybzqy7wn0fUYEGJ/1NtnYK38nc/Vp
Uedl5r9P5vBZInL2xf8mO/PI38jCXbmw7hqZ25ML+y+sfU9gPz8V7u7t6l7Z
xT0Npo1ipwDFDkSxKXY6UOwUoNiBKDbFTgeKnQIUOxDFptjpQLFTgGIHotgU
Ox0odgpQ7EAUm2IPs+b4Epl9TePMHNngzxmRxpnZsn5+yr6drDG2UBbhmc/O
lVX2/UxWWPtVWf3kK3aTPNqJl2T2Ne3qqKw5vlhWPfiYLLpfiFUZ/ams2z4t
6+c61UO/ssuv/qKsdvhJmasHaZydL3N1ZSQUxabYEx6NYveg2Igbik2xJzwa
xe5BsRE3FJtiT3g0it2DYiNuKDbFnvBoFLsHxUbcUGyKPeHRKHYPio20apye
JWvl18t8n9Ez+71R/fy57Edu6cdl47PeLqsff9HOfgNXeff9uj0/lPVzJJu1
Vm6trLznB7Jwj2/VjvxW9vqb52Ttym5Znxfvtk7K7GvspzwVN94g6+dendp+
Wbu0XTaN38vU92oel7m6MmKIYgei2BSbYiMmKHYgik2xKTZigmIHotgUm2Ij
Jih2IIpNsSk2YoJiB6LYFJtiI7aamWVmS2W+z+hZ4+wCnaM3UuaWfUqWmfMu
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
           "], {{0, 485}, {486, 
           0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Rate matrix\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{76.83333333333333, 
           FormBox["1", TraditionalForm]}, {61.5, 
           FormBox["47", TraditionalForm]}, {46.166666666666664`, 
           FormBox["93", TraditionalForm]}, {30.833333333333332`, 
           FormBox["139", TraditionalForm]}, {15.5, 
           FormBox["185", TraditionalForm]}, {0.16666666666666666`, 
           FormBox["231", TraditionalForm]}}, 
         None}, {{{0.16666666666666666`, 
           FormBox["1", TraditionalForm]}, {15.5, 
           FormBox["47", TraditionalForm]}, {30.833333333333332`, 
           FormBox["93", TraditionalForm]}, {46.166666666666664`, 
           FormBox["139", TraditionalForm]}, {61.5, 
           FormBox["185", TraditionalForm]}, {76.83333333333333, 
           FormBox["231", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 77.}, {0., 77.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1H1Qy3EYAPAUcfzhNbU1uZ1LutiStxpRXlYWndcjdJckx7JlZdzSi1bY
Zh3ZSS/ih1Y5L6dSelGpMaal1zWhxNJ6oUl60U9ezvU8d753z32/n7vne/fc
957nSw/kbztobmZmFvQn/u7/lqls7GTpYvBMDuoFmzuudqse+AJ24coO8ATo
e53ee50LP4MTrcnFO+p7wKSVlQ2pQtuG3OJ4vekGB3fXDPYr0dfue/BYEejy
WZWa3mVd4ArNeD7Z3wke1ylLSSxFh2QNVn7io+1X1xmb16OLLsZv3LwUPZc5
2185Hz2saBofnW0Exzr4GDyT0Kaf/Q2OWR3gw3Zx8mPl7WCdl448GtJelhml
lWcTtLL/vGZegK5Z0m2AfOLGgsiSjA/g/Bj/drGhDfyzoWIiZxXaRBRbH3BE
0w0rz1G178GzJohGfIvQ494lfO6fiK7f7mq/gWwFX1YFfOzrRQ937cs/lIGe
Ljksip7UAuazZGvdY96BL5IChvTTW/DyEa3FcMEbcEayU6KNphksDErtoTLR
hP8od8ABvce6rlIR/hpc5fCBYvBAG8OkFDlDD3anj+7Q03VguTsjnXusEbw+
rWumJR+9rqU3lN3UAPalB+v9z6LN5KO3Y+vqwWyXuUfibevAmwpY140/asEd
H8V6ySm0H1XDa31WA86ddtc+j4Oe1HpUsUX2Csw0PRJkO6G/uem+elyvxnpe
RJ8KZWjBFkQUhfB5DhYHa5iKcDW4mr2lZkOCCtzT6OlXEI6uFgz10HaiL0xp
4thaVoDDrp1xW/TjCZgbqc7xPlkOrmRrM+0moAWcFEqJ/DG+1x1Ji7C+BHzi
vewSOacYnClmpovTCsFxxINU4/k8vB8YRvjm5oJ39y1PdCy4h/NhGVUrpaHL
F0YOfRm5g/0hVclXhqGHRFEPBGolmOayaD9beQP8lOfKj52BnlPLGLzZmA5O
oxJXiwdSwaIKenjA3RRwUna8TJ1xBecjOXMyZbYCTPFRm/fxEsAnt5q6vlLk
YJ+qtM6nKgn+b99jhFLn0+CHmuORSwpjwFvVU08If4nATaq2C6aOg9gvw/rz
m63QfE2oHTWHDX4W50nbZT4DvOLlEOPFcwtwsjCf9EpKLR2zd1XbN1eusmTM
Zd4RClaEgDXm36ki1mY=
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Im", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 1.74\"", "\[Times]", 
                 SuperscriptBox["10", "\"8\""]}], 1.742958860763042*^8, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], None}, {
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Re", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 1.74\"", "\[Times]", 
                 SuperscriptBox["10", "\"8\""]}], 1.742958860763042*^8, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], 
         FormBox["Eigenvalues", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {Automatic, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1., 3.732281456181438*^-27}, {-0.00010922047972660808`, 
       0.00010922047972660808`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
PYG4miMj701MwJWOt7xhuFpJk6mK7cuwk88S6E6SVXq3mztqqlIV8krbkJcu
S0Yip+GVsNzWFdE2b5taSKpZb2yy5K1anr3+8w/OCSAZNhxLPuAdTJNUEfEO
oBK7AZwZvzHwQ6zdNzD2wNgDYw+MPTD2jzJj91aRLlqyjlDMG/Iq0owUXhCp
KNCUzstJobYb1rWOGAfqgPIcSZoyHRn/65o6b4SzxD5nJMBib9Uws3BG+N4k
7lh5ZsA6qiRKfpPUbaVb0i6rckJuSVYf76TusIqQ7dKajXMGgtJ2rWtJWwog
IChrn/PFOdQ6wvlljbT11thtCBIipSQWs+WvCCpSlZtG5ede9FsygNwCNhR6
aMW9p93D1qMjGqOOGUbVWUuYpwavkl5Jeb2/snNyISK6reFyvRB032/4ytyA
M7g1FSGAcGJto2s7w9qkW30sM4bU1lxTltOqzZYDYXCEIgpyIgld3j6ya8PF
AXpxZ8TjDEqZqSIqWYaFQBp5NhAhuI4sNGi1q5qjnK83nLE80KZqmg5DgRDM
L2eZjU8NExKohp5Xozpq56NzAjaa2piSBhknhR8LKrYMlS50pZxH13hnqGPQ
09nX2z265Wknaq0iXqVMBJtegOtTyLotqQ5VSV+zTdDefeo9awNmx9k0XjNw
I3c/hnHNUV9YFWBS4Hn0rij23rZoAzKYFosweFYRUq1qt6MtyZJJ8c5piuVR
WsJis71KffymFYFXnrQqcN4jowH+dwy/7ZHjAl60BAMwsXJYq/aPzQKySHTH
Hi232vuYGkeqFZmdgbEHxh4Ye2DsgbEPe8ZmFan8nRwrcm51t8U0EIgR4080
6QR1ZuLGgBOKZfEzs8unQ56CjvgcsffEVS8JCIsiPFTCwLceHQ2wS1jahu4L
d64OWM63r90WYPNnl6j62BkFZ71I1HJzUyyVT14SArHYOSmYF/iShK5RtFUF
oYfa4Dj1/Ostq7cGBDU5nIWSbgAJOSMAFawn0m4Ncstyrr33yhirKs5AIW3r
Y6t50h76w5gQELSGiLi3lBakseoI7j3xlhUBAma+zLXh6jvb3ZzgqZ4ttIwH
k8zzY9rZ1Xkj1Ud8Ym3gi3etCaAyQ21arX1Ca0LlnYkhJC20Wt/zfmq/iVN/
xhNNhxW0+c7Yc99qE2cLsqkRAG8FAZUhCSfWVS+dF5IMCBpEFF4qhBRya1ra
JMqpiF5pWBhsOoZI9/1KNm4Vr8uBVX1CPW1DZ0NU0twskxOWOixtLaAO29nk
VS8NeBb2oP6zuqBck+4bdeCdXsrqUgfNpASSNAMbwK6K1ZsXa99bgWIpx167
JKAc5QWPjQU2nvX3A2U+yq3QvkmucOno+f80IIeRB1ADyIZNxCCTAb/V8ZFz
fyJge7Kbc/CpDylts01exuSGC1OpqDO99OTA6Pn/LMAFzMpHZgRMaiFjlGVu
wMVRWEEBx9kIZlaf33r/4p1rAgqZMvHpwsDYA2MPjD0w9sDYLzDG7laQOD1a
s3H2es8IUGst10KbPmAcEKk1RUuyWlGQNASMLQCPGQFjiy7D/wHyWYydzjID
ztPnQfePTAf8Kx2WE8pDUZDxLEdqMvaX714bOJSx6Z7UIoytsxW1lV4heTct
Y6sWUoydYT+KIZx+3/oAPeggxk6HSwU7VbmMDLRTNCO1Y3fA2OVXSu/qcdct
CWAVArxf2RdIxioiDlNBA7OJ8dyKceaKJZMBAUgtY7N11OpIywPGFklVB2Xm
CpIipKr5oYyts06ZJLQ4/CDGzunAzFx4hzI2aXG9Kson370m4IkoiLOMaUvs
4jGXLgiQ0oseHwvwSQXkzjABUZkxtgZ72WgZm+IvncetuEoNTjF2WiTsCAYT
Y1syd6zbFmgZ28sP+WEbISGCJxUht/YVS7Hee8ZOrlYLJY1R2tAydhmUktvR
oFKKftUzdmeda33ZrmTV2Z8YwqhoJPn+iGtlu+QhmFWopylM1zK2ZeUaDGPo
nNVIZvojcrrfGgpy63vZXj1jd13A9oyNxdg8uTk434exsy89Y88LmBQs5G7F
2Gnd5QnVkpax7RFYC2P7pts4krHNkfc0p20KumCWGRh7YOyBsQfGHhj7BcXY
veexyzkVW25UsSiDg5RqQqjXVpC1TDtGTbQbGi4t2N/yOln7eTSEHkndJer0
FEploCLSU6qdgchOwrXEEYa95Y/zIcrApXUe5HnM6cPPDDLcWG0APwW/zaCx
IkpP5LV0GnJzGIqgJgGNEsbtDgKEKkejKYc4deNrAlYKkVBL2U5BRG1evBgy
GgwmB41oIita4kng/EdGA9ZIn+KRqUPpaNMRt9IMw6Kqtmglw6UgM0mg4fae
x84ZxzllddhYpXhYBcrQbTj9xwL2aENR57+k81TNRvuLlchBJl+Yu80e1L8D
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
fP4PjCX8CA==
           "], {{0, 221}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 221},
         PlotRange->{{0, 486}, {0, 221}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Left eigenvectors\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{99.5, 
           FormBox["1", TraditionalForm]}, {53.5, 
           FormBox["47", TraditionalForm]}, {7.5, 
           FormBox["93", TraditionalForm]}, {-38.5, 
           FormBox["139", TraditionalForm]}, {-84.5, 
           FormBox["185", TraditionalForm]}, {-130.5, 
           FormBox["231", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {46.5, 
           FormBox["47", TraditionalForm]}, {92.5, 
           FormBox["93", TraditionalForm]}, {138.5, 
           FormBox["139", TraditionalForm]}, {184.5, 
           FormBox["185", TraditionalForm]}, {230.5, 
           FormBox["231", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 231.}, {0., 100.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["P", "i"], TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Steady distribution\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {{{1, 
           FormBox["1", TraditionalForm]}, {47, 
           FormBox["47", TraditionalForm]}, {93, 
           FormBox["93", TraditionalForm]}, {139, 
           FormBox["139", TraditionalForm]}, {185, 
           FormBox["185", TraditionalForm]}, {231, 
           FormBox["231", TraditionalForm]}}, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 231.}, {0, 0.9999999999999998}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.778075170793952*^9, 3.778075247288375*^9, {3.7780753190511417`*^9, 
   3.778075345618866*^9}, 3.77807537969267*^9, 3.778075432181704*^9, 
   3.778075774432939*^9, 3.7780758567921124`*^9, 3.778076183544285*^9, {
   3.7780762834630127`*^9, 3.778076300661168*^9}, 3.778104861689818*^9, 
   3.778106259766802*^9, {3.77810919203209*^9, 3.778109204768342*^9}, 
   3.778109634240233*^9, 3.7781098351545563`*^9, 3.7781099167759113`*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"45cfd52e-0d03-42fc-9bdc-9e585f939559"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concentration evolutions", "Section",
 CellChangeTimes->{{3.777919387358829*^9, 
  3.777919401179955*^9}},ExpressionUUID->"28eb6b29-ffe7-4933-a48f-\
f62c4f958e62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperaturedats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressuredats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"filebase0", "=", "\"\<data/h2o2/\>\""}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"filebase", "=", 
        RowBox[{"filebase0", "<>", 
         RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"dat", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", 
          " ", "level"}], "}"}], " ", "=", " ", 
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evals", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", "*", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BinaryReadList", "[", 
             RowBox[{
              RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
              "\"\<Real64\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"17", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evecs", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"I", "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BinaryReadList", "[", 
               RowBox[{
                RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
                "\"\<Real64\>\""}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"17", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
          "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spatoms", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiindices", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temperatures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pressures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DisplayForm", "[", 
           RowBox[{"RowBox", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"spatoms", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"elements", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"spatoms", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
                "\"\<\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"multiindices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ind", "=", 
        RowBox[{"First", "@", 
         RowBox[{"FirstPosition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", 
            "multiindices"}], ",", "0"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"initials", ",", 
         RowBox[{"multiforms", "[", 
          RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"PseudoInverse", "[", 
          RowBox[{"Transpose", "[", "evecs", "]"}], "]"}], ".", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ind", "\[Rule]", "1"}], "}"}], ",", 
           RowBox[{"{", "dim", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t0", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num", "=", "25"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num2", "=", "10"}], ";", "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"t0", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t1", "/", "t0"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"i", "/", "num"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "num"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"o2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2onorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"radicalnorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temperaturenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "temperatures", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pressurenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "pressures", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"o2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"o2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2onorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2odats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"radicalnorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"radicaldats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"temperaturenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"temperaturedats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"pressurenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"pressuredats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"ListLogLinearPlot", "[", 
         RowBox[{"radicaldats", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "\"\<Radicals\>\""}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "initials"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "3", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", " ", "p"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"temperaturedats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"pressuredats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Pressure\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.77713438694239*^9, 3.777134429198846*^9}, {
   3.7771345229764013`*^9, 3.777134532571751*^9}, {3.777135122271962*^9, 
   3.777135139764135*^9}, {3.777136408612295*^9, 3.777136409407316*^9}, {
   3.7771367184030027`*^9, 3.77713675225874*^9}, {3.777137543164104*^9, 
   3.7771376435400257`*^9}, {3.77713768719775*^9, 3.777137828845704*^9}, {
   3.777137861869976*^9, 3.7771378880460567`*^9}, {3.777137921929947*^9, 
   3.777138049446335*^9}, {3.7771401298750153`*^9, 3.777140130078288*^9}, {
   3.7771401639670477`*^9, 3.777140173261187*^9}, {3.77714044244271*^9, 
   3.7771404466792803`*^9}, 3.7771999300508823`*^9, {3.7772007585293713`*^9, 
   3.7772008043513317`*^9}, {3.777200863193564*^9, 3.7772009418878202`*^9}, 
   3.777200985976596*^9, 3.7772010391198606`*^9, {3.777201126737507*^9, 
   3.777201175644846*^9}, {3.777201571213813*^9, 3.7772016782844133`*^9}, {
   3.7772021113041573`*^9, 3.777202154664967*^9}, {3.77720224993499*^9, 
   3.777202317099625*^9}, {3.777202415296564*^9, 3.7772024329521923`*^9}, {
   3.77720248674479*^9, 3.7772024946344767`*^9}, 3.777202587267193*^9, {
   3.777202773824875*^9, 3.777202785092458*^9}, {3.777203054512124*^9, 
   3.777203194268839*^9}, {3.77720323600662*^9, 3.777203264285142*^9}, {
   3.777203298926938*^9, 3.777203309568652*^9}, 3.777203391733837*^9, {
   3.777203550679158*^9, 3.7772035625034657`*^9}, 3.7772037591874943`*^9, 
   3.777203877734586*^9, {3.777203942085187*^9, 3.777203993915225*^9}, {
   3.777204033123383*^9, 3.7772040608133183`*^9}, {3.777204160429085*^9, 
   3.777204163323791*^9}, {3.7772042764940777`*^9, 3.777204328393935*^9}, {
   3.777204375179188*^9, 3.777204419607378*^9}, {3.777204677694272*^9, 
   3.77720470453329*^9}, {3.777204779583888*^9, 3.777204805872669*^9}, {
   3.777205081294611*^9, 3.777205093698765*^9}, {3.777205748533635*^9, 
   3.7772057487982492`*^9}, {3.777205791133944*^9, 3.77720580912246*^9}, 
   3.777205882196479*^9, {3.777337373484276*^9, 3.777337406871092*^9}, 
   3.777337457093985*^9, {3.777337577040579*^9, 3.7773375921035013`*^9}, {
   3.777337810284005*^9, 3.777337863353664*^9}, {3.777337896094151*^9, 
   3.7773379447183647`*^9}, {3.777337978920733*^9, 3.7773380271779003`*^9}, {
   3.7773380750040083`*^9, 3.777338094159894*^9}, {3.777376026740171*^9, 
   3.777376212010378*^9}, 3.777376243179214*^9, {3.777376360865407*^9, 
   3.777376364775722*^9}, {3.777376621053227*^9, 3.7773766278529863`*^9}, 
   3.777376802319796*^9, {3.777377296884919*^9, 3.7773773072147093`*^9}, {
   3.7773773548476152`*^9, 3.7773773750954103`*^9}, {3.777377983125379*^9, 
   3.777378050516939*^9}, 3.777378317730064*^9, {3.777378453136273*^9, 
   3.777378481741498*^9}, {3.777378838335648*^9, 3.777378858925192*^9}, {
   3.7779194376298113`*^9, 3.777919462294487*^9}, 3.7779195092886553`*^9, 
   3.777919563148247*^9, {3.777919688401195*^9, 3.777919712937598*^9}, {
   3.7779197459282913`*^9, 3.777919795815201*^9}, {3.7779198842916393`*^9, 
   3.777919910057685*^9}, {3.7779203719088593`*^9, 3.7779203749555483`*^9}, {
   3.7779222628823433`*^9, 3.777922278512329*^9}, 3.777979202639451*^9, 
   3.777980570098295*^9, {3.777998669053709*^9, 3.777998673171689*^9}, 
   3.777998708846861*^9, {3.777999047757468*^9, 3.777999072595841*^9}, {
   3.777999136031116*^9, 3.777999151539747*^9}, 3.7779992301319237`*^9, {
   3.777999465194914*^9, 
   3.77799949164638*^9}},ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-\
e8947acb2d3e"],

Cell[BoxData["\<\"data/h2o2/\"\>"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, {3.777999214936088*^9, 3.777999244628015*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"6.146431192650619`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5249526126915332`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.562385800342559`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.6806325798894224`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"6.014696302740776`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.2986445267482552`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{RowBox[{\\\"-\\\", \\\"6.146168525650117`*^-16\\\"}], \
\\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\
\", RowBox[{\\\"2.177120375823306`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"2.1557026927636236`*^-16\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5668516658042383`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"9.606836972768348`*^-18\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1604\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1604\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain significant numerical \
errors.\"",2,40,1,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999256190572*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1.5792011895868414`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"8.178771836284908`*^-17\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.683693761390964`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"5.83127571424801`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.336547157159226`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"2.1389795480881101`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"1.6272132967668222`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.1948363128199665`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.8081217598149095`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.149369412645336`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.0029741873701589`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain \
significant numerical errors.\"",2,40,2,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999322912217*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994499606037`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHaic3r/jx/769vIhe58w2rQMvS3wq
PwL58zTOVKzI1jzwSuDs8cdAvqxtVsb2AI0DRuedlU8D+bMDOSKOmaofMNkl
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pv8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzap7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXgvJ
dL8Hc7/UAZutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/hAwJ6X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NJ9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ypafXl3D57KTD/4X7xDUVlx/dttGeAgrYdG5Z0di61BwDSWc2j
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9i9P4vvy/769vIhe58w2rQPbJJyD
nwP58zTOVKzI1jzw58n13+eAfFnbrIztARoHPrzrNloM5M8O5Ig4Zqp+gEf6
4awwIF8qbZn7VSm1A4rH14dc/HfffmaVi/mT/yoHVBO/FT3/e99evP+R2ucn
ygfmclsEev+5bz9tcYMY0ymlA4e2Xsiu/HnfXnSHHJvgesUDhyZ9/Dzhy337
yWf2fJWfonBAiztdn/vNfXuVQ1tPxX6SOxBk7yDidPe+vdLrjyur98gcSBIR
7ll8GOZ+qQPf1hl9Dp9+314a7F6JAxvec0Zwe8PcJ3bgLdvhyooT96DuET4g
Fa1i0vb6rr0I2H7BAw7aC+Oe1dyxVwXbx3dg4YWr+scMbkHN5zoQy7Xi8vJt
1+wlweaxHdC9u2j9uU8X7cXA+hkPZNcVPdp37YS9HFj9r/2fkrIbwtn32QuB
5T/uf+GQ/aDo30Z7KTD/4X57329JLdUr7BmgQKJ+QndxzwJ7AOCdzWM=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9H5u7//5/7y9vIhe58w2rQOJbcVW
n4H8eRpnKlZkax5oD5/25BmQL2ublbE9QOOAzhK17+eB/NmBHBHHTNUP/Kg3
TlgG5EulLXO/KqV2QOTHmWnRQP7MKhfzJ/9VDpxb8PrRtX/n7cX7H6l9fqJ8
YOebX7vf/T1vP21xgxjTKaUDciJ+XNF/ztuL7pBjE1yveOBUtMCWuT/P208+
s+er/BSFAysmL59y+8t5e5VDW0/FfpI78D900Y4Zb87bK73+uLJ6j8yBG2uW
dzjfg7lf6sCtl9ERuUfP20uD3StxYCfXrZlVs2DuEzsgasydXh0Ac4/wgbwN
Z2pOXzxnLwK2X/DA5tAtwS6/z9qrgu3jO7DYj3/F1WlnoOZzHZAN3nLtSOQp
e0mweWwHPKNeT/z76Zi9GFg/44EzGo+LlBwP2cuB1f/a38RRsMmvYqe9EFj+
4/4bLYvZ359bZy8F5j/cz5uQ/OPwvoX2DFDQpvSMr7Vzqj0ACfvSEg==
              "]]}, {
            
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHluh/mPD1/3l7eRG9zpltWgf+Fu02
fQXkz9M4U7EiW/PAItETdy8D+bK2WRnbAzQOHJfsy1sF5M8O5Ig4Zqp+YDHv
Yd54IF8qbZn7VSm1A83cnzqv/ztvP7PKxfzJf5UDzh7TWl78PW8v3v9I7fMT
5QPBd6pFPP6ct5+2uEGM6ZTSAbdW/7aSn+ftRXfIsQmuVzzgVJR1pfvLefvJ
Z/Z8lZ+icKBgQi8/25vz9iqHtp6K/SR34KvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCkj8KDoOnn7aXB7pU4IGhZHcDmDXOf2IEPzS9bi0+cg7pH+MBW
tWWJja/P2ouA7Rc88Eei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgYmHCtae/nTQXgysn/HAvbV7+3Zd22EvB1b/a/+EV3+eBrKvsxcC
y3/cH8Pqb5X/b6G9FJj/cP+awwKG9dUz7BmgQFc17nd+zwR7AKyMzCs=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeCY82L1wZpe9vIhe58w2rQO5Psd5
rnyZYT9P40zFimzNA6c/OCT8mLPMXtY2K2N7gMaBJcnxa/6KbbafHcgRccxU
/YC9rEf4wr699lJpy9yvSqkdSOR7+KX+zhH7mVUu5k/+qxzYEsS212XuKXvx
/kdqn58oH9AQ1J7C2HrOftriBjGmU0oH1O+cyLjKeMFedIccm+B6xQNnJuZw
+8pcsJ98Zs9X+SkKByInyBqFS12wVzm09VTsJ7kDSw22Pq0QvWCv9Prjyuo9
MgequxVes/JegLpf6sC2s3eNj/w5by8Ndq/EgdvnpzWonDoPdZ/YAcauyFUf
i85D3SN8gHuDkvLOu+fsRcD2Cx74yVXy1PbhWXtVsH18Bzjq71yJsjsDNZ/r
AHP1Ap5F807aS4LNYzswZdep5jfLjtqLgfUzHujesVuiweqAvRxY/a/94ml1
Jce/b7YXAst/3H+Bud1kYuAieykw/+H+NfNzf7XndNozQMEF/zbZFL4SewDi
88E+
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHXk0Mv1p9Y4q9vIhe58w2rQOncooj
0xSX2M/TOFOxIlvzwIFbd1+cl9tkL2ublbE9QONAfP4Fh7CivfazAzkijpmq
H+CL7bl/qPGovVTaMverUmoHrslzRn6oP2M/s8rF/Ml/lQPWO9ZrHg66aC/e
/0jt8xPlA9lXmyqWxV62n7a4QYzplNKBmWteN72Vv2IvukOOTXC94oF8nu+T
c8yv2E8+s+er/BSFA0pSxQceG16xVzm09VTsJ7kDmkdmnmZQv2Kv9Prjyuo9
MgfEr2u0KItcgbpf6oCqxJdzbZ8v20uD3StxIMj4snbs7stQ94kdOHZlY7dn
9GWoe4QP6D/pW3FpxyV7EbD9ggdEfhV39q++aK8Kto/vgLvjw2zJn+eh5nMd
KOXSVF/z9JS9JNg8tgP6a1h7Hvw7bC8G1s94QEZcPy7Rboe9HFj9r/0n92xt
qFi51F4ILP9xf//spQlN3L32UmD+w/2xNbP/vTxebs8ABZE5f8sOb822BwCs
jcSD
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHrr3Z8t3cbIudvIhe58w2rQMOzUE/
t/04YjdP40zFimzNA9fMWA8qTbtqJ2ublbE9QOPAGXGBCzvPPLWbHcgRccxU
/YDQj3t2t+Z9tZNKW+Z+VUrtwEzri0szdVjtZ1a5mD/5r3KAR4pfJ6dOxF68
/5Ha5yfKB4yuzPFfWqtsP21xgxjTKaUDIveX/FITMrIX3SHHJrhe8QDHzQuB
x0Md7Cef2fNVforCAS2Zheq6bL72Koe2nor9JHeAjVPrO0N7pL3S648rq/fI
HJjYfSRie2CaPcT9UgcucLO9DSkotpcGu1figEHKonUbHjTYQ9wndmCB9t0Q
RrNeqHuEDxx+qXnskOZMexGw/YIHLrl/UHRuXWqvCraP70CgyiLjNfqboOZz
Hdjstj1YSWGfvSTYPLYDR5sLeKyUTtiLgfUzHihcMcNyafAlezmw+l/7g2sF
l61ff9NeCCz/cX+Hdt3Ui0YP7KXA/If7Z5w0sjRKeGTPAAWXZKd03ut8bA8A
LPm4wA==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHijmdte9/PmAnL6LXObNN64DTb+k4
4wmX7OZpnKlYka15YNEqNZ7AW4/tZG2zMrYHaBw4csi3TnDaF7vZgRwRx0zV
Dyid/X2i8BiLvVTaMverUmoHfrzn/i2ZJmI/s8rF/Ml/lQMSoiceqzYo24v3
P1L7/ET5gH5+5NkNhkb20xY3iDGdUjqwqj2cU2+6g73oDjk2wfWKB/YcZJ3w
fY2v/eQze77KT1E40LanY/084yh7lUNbT8V+kjvwlvHKsqCvafZKrz+urN4j
c6BtvfO9dywl9hD3Sx14+8pCvjql0V4a7F6JA0KM15z5ZPqg7hM74HtlffqO
9zOh7hE+ILxPUGqnzjJ7EbD9ggdkSjW7j+3cZK8Kto/vQJs065opv/ZBzec6
8OVK03yuwyfsJcHmsR1I4F5xjXfPJXsxsH7GA84adf8TpG/Zy4HV/9o/b4nH
eZGQB/ZCYPmP+9tmuz+bEvrIXgrMf7hfc+UMLU7vx/YMULDJOdrG+8tjewC2
QLvC
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHotiAnILpDvIiep0z27QOMHJD+PM0
zlSsyNY8wCcM4cvaZmVsD9A4wKgI4c8O5Ig4Zqp+QNcSwpdKW+Z+VUrtgHoy
hD+zysX8yX+VA0xrIHzx/kdqn58oH2jUYgTzpy1uEGM6pXTAmo0JzBfdIccm
uF7xwNNmZjB/8pk9X+WnKBw4JsUG5qsc2noq9pPcgfkzucB8pdcfV1bvkTng
miaE5H6pA7yv5MF8abB7JQ4UepgjuU/swLyueCT3CB+wKFkC5ouA7Rc8UCEj
yQjiq4Lt4ztQd/kWI8J8rgNXfwgyg/iSYPPYDux495IFxBcD62c8cM+xmB3E
lwOr/7X/HWsWF4gvBJb/uH8bhygv2D1g/sP9Jfn7+EB8BigoXJ7GD+IDAN7a
l0M=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHgnr///+fP91BXkSvc2ab1oFFFhD+
PI0zFSuyNQ9kL/0H5svaZmVsD9A4sGDpXzB/diBHxDFT9QPZL3+D+VJpy9yv
SqkdmPvsB5g/s8rF/Ml/lQOl6z6D+eL9j9Q+P1E+ELPoFZg/bXGDGNMppQOi
H26B+aI75NgE1yseWLB+P5g/+cyer/JTFA48TpgA5qsc2noq9pPcgYcBdmC+
0uuPK6v3yBzYpr7hH8L9Uge0S3b9BfGlwe6VOBDfJPwH4T6xA797HH4i3CN8
YOXB6i8gvgjYfsEDj9fPfAPiq4Lt4zvwyov7AcJ8rgPhu/zOgviSYPPYDqy7
nrUFxBcD62c8cL7nzEwQXw6s/tf+fevCO0B8IbD8x/1N/9V7we4B8x/un6Ii
uBHEZ4CC/w6dLAwF0x0ArDraJQ==
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Temperature\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHwliAHIYP9vIiep0z27QOtLJD+PM0
zlSsyNY8wMwL4cvaZmVsD9A40CEG4c8O5Ig4Zqp+gEMdwpdKW+Z+VUrtwAZn
CH9mlYv5k/8qB3JKIXzx/kdqn58oHzh5GsKftrhBjOmU0oETiYxgvugOOTbB
9YoHQtKYwPzJZ/Z8lZ+icOC2FguYr3Jo66nYT3IHmmzYwXyl1x9XVu+ROdDT
z4PkfqkDuSdFwXxpsHslDqTtVUVyn9gBUUtHJPcIH8h2KQDzRcD2Cx7Y+3w/
mK8Kto/vwGNVF0aE+VwHJvRJMIH4kmDz2A4s2R/FDOKLgfUzHohjFWMF8eXA
6n/tD2SUYQfxhcDyH/fLub3jALsHzH+4P2WdABeIzwAFe1uawXwAMy+UNg==

              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHspP/A8F7e3kRvc6ZbVoHzr7/B+bP
0zhTsSJb88AZNQhf1jYrY3uAxoHJJ/+A+bMDOSKOmaofEMj+BeZLpS1zvyql
dmCN3zcwf2aVi/mT/yoHovXeg/ni/Y/UPj9RPiB/5RGYP21xgxjTKaUDV1LP
gvmiO+TYBNcrHlhusALMn3xmz1f5KQoHimamg/kqh7aeiv0kd6Cp7/s/EF/p
9ceV1XtkDmwuNf2HcL/Ugcf/nv4B8aXB7pU4wNm55BfCfWIHdpac/IZwj/AB
k1VuH0B8EbD9ggcuBjc/BfFVwfbxHeicHXcFYT7XgSWbTu4C8SXB5rEdcP58
dgaILwbWz3ggV7usBMSXA6v/tZ9n7YIYEF8ILP9xf4eRcTLYPWD+w/0dz62m
gPgMUHBlvwQzA8MHewDRmO48
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Pressure\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994508146973`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/o2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "o2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2otransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2odats", "]"}], "]"}], ",", "\"\<Real64\>\""}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "radicaldats", "]"}], "]"}], ",", 
    "\"\<Real64\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.77737719579126*^9, 3.777377203789566*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"filebase", "=", 
     RowBox[{"\"\<data/h2o2/\>\"", "<>", 
      RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dat", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
       "level"}], "}"}], " ", "=", " ", 
     RowBox[{"dat", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spatoms", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiindices", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DisplayForm", "[", 
        RowBox[{"RowBox", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"spatoms", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"elements", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"spatoms", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
             "\"\<\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"multiindices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ind", "=", 
     RowBox[{"First", "@", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", "multiindices"}], 
        ",", "0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"initials", ",", 
      RowBox[{"multiforms", "[", 
       RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.777378504069335*^9, 3.777378511832087*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/transient.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7773764217499638`*^9, 3.777376551135895*^9}, {
   3.777376646046295*^9, 3.777376649152425*^9}, {3.777376876353582*^9, 
   3.7773769577868843`*^9}, 3.777377089434372*^9, {3.777377126378562*^9, 
   3.777377143488243*^9}, {3.7773783744819927`*^9, 3.777378375675869*^9}, 
   3.7773784473213673`*^9, {3.777378498912328*^9, 3.777378500646846*^9}, {
   3.777378689105578*^9, 3.777378726734768*^9}, {3.777378765672946*^9, 
   3.7773787747723007`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHAqTTrv77f99eXkSvc2ab1oE9LyI/
/AXy52mcqViRrXngivHd2D9AvqxtVsb2AI0DC9e0TfkJ5M8O5Ig4Zqp+wPXx
rWlfgHyptGXuV6XUDthyr+x6DeTPrHIxf/Jf5QDjuRt/bgH54v2P1D4/UT4g
etF+9x4gf9riBjGmU0oHbm/pcG8D8kV3yLEJrlc80FaXF6AG5E8+s+er/BSF
A3rr2tXq/923Vzm09VTsJ7kDAW/3Lov5e99e6fXHldV7ZA4csz7wKvk3zP1S
B/J9uUW+f79vLw12r8SBO/oceiyfYO4TO8DJ2Ba44TnMPcIHROx4Dh69et9e
BGy/4AGr7xuUd2+7b68Kto/vQK0uQ6FgI8x8rgMnN/ptX65y314SbB7bgbOv
UiIntd2zFwPrZzyw+xWPpVv1XXs5sPpf+/mv+p4IOXDbXggs/3G/2Yy8pvbf
N+ylwPyH+3tPL8u9cf6KPQMUJNytkljpe84eAHou0RQ=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHZNWqeP78v28vL6LXObNN68CUTLee
H0D+PI0zFSuyNQ+8a3/n9gnIl7XNytgeoHHgrHOJ63Mgf3YgR8QxU/UDKg8T
XK8A+VJpy9yvSqkdMHorO20zkD+zysX8yX+VA/+ONG+oAvLF+x+pfX6ifID9
1st/okD+tMUNYkynlA7si7hVkfzvvr3oDjk2wfWKB5iYf5/U+nvffvKZPV/l
pygcqFqyjJn79317lUNbT8V+kjvw/gJ7ZtT3+/ZKrz+urN4jc0ByqT/vpw8w
90sdkGSI/X3p6X17abB7JQ5EB6xk77oEc5/YAX77jUfUNsLcI3zg7MZFPxrL
79uLgO0XPPD01YLVZSL37VXB9vEd0IrcfWFT9j2o+VwHGvaVpDkF3LWXBJvH
dqCirEvqR/1tezGwfsYDQsFedbnLb9jLgdX/2v/gwsI0gcYr9kJg+Y/7Y7fd
+evld85eCsx/uN9ILeeH9J9D9gxQsHMfY63lr832ABNYzgY=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHuiY3r/jx/769vIhe58w2rQMvSnwq
PwL58zTOVKzI1jzwTODs8cdAvqxtVsb2AI0D2uedlU8D+bMDOSKOmaofMN4l
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pn8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzaq7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXAvJ
dL8Hc7/UAeutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/iA/56X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NR9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ipafXl3D57KTD/4X6xDUVlx/dttGeAgrYdG5Z0di61BwDPac2b
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6pWT+b78v28vL6LXObNN60CLqXPw
cyB/nsaZihXZmgecX1z/fQ7Il7XNytgeoHGA8X230WIgf3YgR8QxU/UD3NIP
Z4UB+VJpy9yvSqkdUDi+PuTiv/v2M6tczJ/8VzmgnPit6Pnf+/bi/Y/UPj9R
PjCH2yLQ+899+2mLG8SYTikdOLj1Qnblz/v2ojvk2ATXKx44MOnj5wlf7ttP
PrPnq/wUhQOa3On63G/u26sc2noq9pPcgUB7BxGnu/ftlV5/XFm9R+ZAoohw
z+LDMPdLHfi6zuhz+PT79tJg90ocWP+eM4LbG+Y+sQOv2Q5XVpy4B3WP8AGp
aBWTttd37UXA9gsesNdeGPes5o69Ktg+vgMLLlzVP2ZwC2o+14E4rhWXl2+7
Zi8JNo/tgO7dRevPfbpoLwbWz3ggp67o0b5rJ+zlwOp/7f+QlN0Qzr7PXggs
/3H/C4fsB0X/NtpLgfkP99v5fktqqV5hzwAFEvUTuot7FtgDACGYytY=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHph3WFnv3/769vIhe58w2rQMvkn5c
ugnkz9M4U7EiW/PAKT+FnM1AvqxtVsb2AI0DDbcm9eQB+bMDOSKOmaofEJ2y
qOfrv/v2UmnL3K9KqR3Y5XZUWQnIn1nlYv7kv8oB4UgJofV/7tuL9z9S+/xE
+YDv9Z5a5V/37actbhBjOqV0wPaHtfnGr/ftRXfIsQmuVzyw8vXOv1/f3ref
fGbPV/kpCgdurXvo0/3gvr3Koa2nYj/JHZiyp83M6+R9e6XXH1dW75E5wP9p
jrPAQpj7pQ5c9Fau3hZ9314a7F6JA1lHTV/cfHIP6j6xA5ls3QFG0veg7hE+
UNI1yULw9B17EbD9ggc+MN/9sGT1LXtVsH18B+bOOeSjnnUdaj7XAZ+uHQq/
b16ylwSbx3Zg6bHvnKw7TtmLgfUzHjCIOfcjKeuAvRxY/a/9V/jKd89o2mwv
BJb/uJ9v76adGmKr7aXA/If7DV+F5CSHLLFngAJHRfeEFfdn2wMA1p/L6g==

              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHWC1Fc/79P28vL6LXObNN60Dp1c/O
f4H8eRpnKlZkax5w0At1/A3ky9pmZWwP0DjgLcF6+DuQPzuQI+KYqfoBpUUP
NnwE8qXSlrlflVI7wLVXXOU5kD+zysX8yX+VA7NdNp27AuSL9z9S+/xE+YC8
8KxPW4D8aYsbxJhOKR3ImmUxtRbIF90hxya4XvHAvKXT4mWB/Mln9nyVn6Jw
oHDXfYOyf+ftVQ5tPRX7Se7AIYHIjcF/z9srvf64snqPzIHJW198jfoNc7/U
gRdBmgrvvp+3lwa7V+JA5JoL1r8/wtwndsDirlHS8ucw9wgfCGvYe23P1fP2
ImD7BQ9I9gk7bdp23l4VbB/fgWNnM+dxNMLM5zrAFjDz3zyV8/aSYPPYDtgl
fDnT2XbOXgysn/EA57Ky77bVZ+3lwOp/7bfffJDJ98BpeyGw/Mf9XXvimxt+
n7CXAvMf7l8uMXXmpfNH7BmgQN7tyewFvvvsAd1yzmc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHKswjyv/8P28vL6LXObNN64BEypuK
n0D+PI0zFSuyNQ/c5nx39TOQL2ublbE9QOPA6kfBpS+B/NmBHBHHTNUPzLpq
d/EakC+Vtsz9qpTagTe1Emu3Avkzq1zMn/xXOaCq0vazCsgX73+k9vmJ8oEI
f6nDwkD+tMUNYkynlA5c0nXZEf/vvL3oDjk2wfWKB+znXtmt9ve8/eQze77K
T1E40P1u2ie23+ftVQ5tPRX7Se5A94zwiLDv5+2VXn9cWb1H5sCiy55/336A
uV/qgNX3ujfnnp63lwa7V+JAhfOZX62XYO4TO6AywWe30kaYe4QPuDXbfK0t
P28vArZf8IBcf+emIpHz9qpg+/gOHOCwfrku+xzUfK4D5gyT59gFnLWXBJvH
dmBaZHrjl/rT9mJg/YwH2Jy9jLKWn7CXA6v/tZ/B6EUPb+MReyGw/Mf9R1kz
q9z89tlLgfkP95f8+n5a4s8mewYo6H8jMc3012J7AHq6zT8=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDv3c3v/z/3l7eRG9zpltWgdWtRVb
fQby52mcqViRrXlgWvi0J8+AfFnbrIztARoH5JeofT8P5M8O5Ig4Zqp+4Fu9
ccIyIF8qbZn7VSm1A8I/zkyLBvJnVrmYP/mvcuDsgtePrv07by/e/0jt8xPl
Azvf/Nr97u95+2mLG8SYTikdkBXx44r+c95edIccm+B6xQMnowW2zP153n7y
mT1f5acoHFgxefmU21/O26sc2noq9pPcgf+hi3bMeHPeXun1x5XVe2QOXF+z
vMP5Hsz9UgduvoyOyD163l4a7F6JAzu5bs2smgVzn9gBUWPu9OoAmHuED+Rt
OFNz+uI5exGw/YIHNoduCXb5fdZeFWwf34HFfvwrrk47AzWf64Bs8JZrRyJP
2UuCzWM74Bn1euLfT8fsxcD6GQ+c1nhcpOR4yF4OrP7X/maOgk1+FTvthcDy
H/dfa1nM/v7cOnspMP/hft6E5B+H9y20Z4CCNqVnfK2dU+0BYCLS5w==
              "]]}, {
            
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHbKw/Tvj6/7y9vIhe58w2rQMfZ+w2
fQXkz9M4U7EiW/PATskTdy8D+bK2WRnbAzQO3JTsy1sF5M8O5Ig4Zqp+YBHv
Yd54IF8qbZn7VSm1A03cnzqv/ztvP7PKxfzJf5UDjh7TWl78PW8v3v9I7fMT
5QNBd6pFPP6ct5+2uEGM6ZTSAddW/7aSn+ftRXfIsQmuVzzgUJR1pfvLefvJ
Z/Z8lZ+icCB/Qi8/25vz9iqHtp6K/SR34IvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCEj8KDoOnn7aXB7pU4IGBZHcDmDXOf2IF3zS9bi0+cg7pH+MAW
tWWJja/P2ouA7Rc88Fei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgQmHCtae/nTQXgysn/HA/bV7+3Zd22EvB1b/a3//qz9PA9nX2QuB
5T/uj2H1t8r/t9BeCsx/uH/NYQHD+uoZ9gxQoKsa9zu/Z4I9AHWszAg=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeJY0R374f95eXkSvc2ab1oEswySm
e0D+PI0zFSuyNQ+Ylp+22QXky9pmZWwP0Dhw5b4gewWQPzuQI+KYqfqBg0k7
pv//d95eKm2Z+1UptQORO9f5awD5M6tczJ/8VzmQdSnhybo/5+3F+x+pfX6i
fKDfPLFb7td5+2mLG8SYTikd8FNkrF319by96A45NsH1igcOvYxgf//2vP3k
M3u+yk9ROPD27tnwlgfn7VUObT0V+0nuwK59nW7OJ8/bK73+uLJ6j8yB28/z
YjgXwtwvdcDzgsri9dHn7aXB7pU44GBjp3X5yTmo+8QOHCrZvU9b+hzUPcIH
Uh7FfOA6fcZeBGy/4IGba5bIz199yl4VbB/fgcnhnEZKWceh5nMdsNi9n/X7
zUP2kmDz2A4Ef6ux/r99l70YWD/jgSPhytnxWRvs5cDqf+2Xco5rn9K02F4I
LP9xv1nnqkdKYrPtpcD8h/sN6jSZ40Om2DNAgaz6d89F97vtAZNNxp4=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5Kdot3XrZNjLi+h1zmzTOmC2dM00
Oc8S+3kaZypWZGse4L36VPLh1wZ7WdusjO0BGgck7+QxVnzrtp8dyBFxzFT9
QG2y8/aglGn2UmnL3K9KqR0wE9MWu8uz0H5mlYv5k/8qB17umcag9He5vXj/
I7XPT5QPvHg5UeWn7Tr7aYsbxJhOKR042ObKvvrZBnvRHXJsgusVD5T+/jxr
acJG+8ln9nyVn6JwoP/WyufcWRvtVQ5tPRX7Se7Av4lnT3dmbrRXev1xZfUe
mQO3dswUK8/YCHW/1IGEHUzXZqZttJcGu1fiABcL08eY5I1Q94kd8Fu99/Xe
2I1Q9wgfMLd90/Q3eKO9CNh+wQNXt552kXDeaK8Kto/vgPASEebHqjDzuQ44
9K3JmPZ5g70k2Dy2A22+6wq6526wFwPrZzywuKzvHh/PBns5sPpf+6+c/FP9
wXSdvRBY/uP+zJavDNFGq+2lwPyH+x8/lmOQWrHMngEKxN9uKdxbt8AeALFD
wKc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH+u65HrolV2cvL6LXObNN68CMmOc7
n9/tsp+ncaZiRbbmgV0/g149XTrdXtY2K2N7gMYBv+oFMnm2S+xnB3JEHDNV
P/Df5sA5kZ4N9lJpy9yvSqkdYBTJUNroudN+ZpWL+ZP/Kgd0Ks47rOg8aC/e
/0jt8xPlA0euRL7fUHDUftriBjGmU0oHfqh+fq+jf9xedIccm+B6xQNdB60X
fq4+bj/5zJ6v8lMUDgiJfDqgXHvcXuXQ1lOxn+QOfJ3eOvNf5XF7pdcfV1bv
kTmgU5As0VJyHOp+qQPfv8b+Y8w+bi8Ndq/EAdHtppNao45D3Sd2QP1yn+Qf
2+NQ9wgfSGjsEd3Nc9xeBGy/4IE0p53LVHccs1cF28d34LrrZmYNjWNQ87kO
nPyUP2+n2VF7SbB5bAc478ZJZq85bC8G1s944MCTkFe8rgft5cDqf+1X3bHv
P8es3fZCYPmP+yfEVerev77JXgrMf7i/YdpmASe2JfYMUCAh0v1epbHPHgCm
J8LN
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH3Jsyjiyc2WUvL6LXObNN64BTyzO+
K19m2M/TOFOxIlvzwHKOioQfc5bZy9pmZWwP0Digr+W95q/YZvvZgRwRx0zV
DzCouocv7NtrL5W2zP2qlNqBV7wPv9TfOWI/s8rF/Ml/lQNbgtj2usw9ZS/e
/0jt8xPlAxqC2lMYW8/ZT1vcIMZ0SumA+p0TGVcZL9iL7pBjE1yveODMxBxu
X5kL9pPP7PkqP0XhQOQEWaNwqQv2Koe2nor9JHdgqcHWpxWiF+yVXn9cWb1H
5kB1t8JrVt4LUPdLHdh29q7xkT/n7aXB7pU4cPv8tAaVU+eh7hM7wNgVuepj
0Xmoe4QPcG9QUt5595y9CNh+wQM/uUqe2j48a68Kto/vAEf9nStRdmeg5nMd
YK5ewLNo3kl7SbB5bAem7DrV/GbZUXsxsH7GA907dks0WB2wlwOr/7VfPK2u
5Pj3zfZCYPmP+y8wt5tMDFxkLwXmP9y/Zn7ur/acTnsGKDjv3yabwldiDwDc
GL/j
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6ht5l3fdmGIvL6LXObNN68DDsJCi
dMUl9vM0zlSsyNY8MOXT4e/n5TbZy9pmZWwP0DhQ9V3cMaxor/3sQI6IY6bq
B6Sieu4fajxqL5W2zP2qlNqBa/KckR/qz9jPrHIxf/Jf5YDVjvWah4Mu2ov3
P1L7/ET5QNbVpoplsZftpy1uEGM6pXRgxprXTW/lr9iL7pBjE1yveCCf5/vk
HPMr9pPP7PkqP0XhgJJU8YHHhlfsVQ5tPRX7Se6A+pGZpxnUr9grvf64snqP
zAGx6xotyiJXoO6XOqAi8eVc2+fL9tJg90ocCDK+rB27+zLUfWIHjlzZ2O0Z
fRnqHuEDek/6VlzaccleBGy/4AHhX8Wd/asv2quC7eM74Or4MFvy53mo+VwH
Srk01dc8PWUvCTaP7YDeGtaeB/8O24uB9TMekBbXj0u022EvB1b/a/+JPVsb
KlYutRcCy3/c3z97aUITd6+9FJj/cH9szex/L4+X2zNAQWTO37LDW7PtAfKn
w2A=
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH7AJi9dk+zbOXF9HrnNmmdcAjSsx3
Re1a+3kaZypWZGseeHVT7/ufUzvtZW2zMrYHaBwINHoUyfXlsP3sQI6IY6bq
B3jyGiyFZpy2l0pb5n5VSu3AIbsmrtsVF+1nVrmYP/mvcsBnqt6db5uu2Iv3
P1L7/ET5wOYA77Sr96/ZT1vcIMZ0SunAUdO+dx9XX7cX3SHHJrhe8cCUuWkX
cg5et598Zs9X+SkKBxaryMnP33bdXuXQ1lOxn+QOpN3puT170XV7pdcfV1bv
kTnQNE9n5d/661D3Sx2oiVu2JdDlur002L0SB5Y4XloqfO8a1H1iBzqC1nJv
NbgGdY/wgWYX65q//FftRcD2Cx5QsHz78o/tZXtVsH18B1T/3gjOLL0ANZ/r
wOl1tgF8miftJcHmsR0w8F697/b9/fZiYP2MB65UvJ77V2GdvRxY/a/9JbYr
ubRip9gLgeU/7q+Pf8+Y/KLWXgrMf7i/tMKxetaXQnsGKJitt0mF/3+aPQBt
7sQK
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHOJ7xsKw72WYnL6LXObNN68BittyF
JtFT7eZpnKlYka15wHTKTaP99xbbydpmZWwP0DigZjE5eN26TXazAzkijpmq
H9BZnTyN8ddBO6m0Ze5XpdQOuM3sCys4c9FuZpWL+ZP/KgfCetOMnzA+shPv
f6T2+YnygauuNnMzLT7ZTVvcIMZ0SunAl6nfA/Q/MNqL7pBjE1yveKCirXHW
g3cC9pPP7PkqP0XhwI5i49+Jd+TsVQ5tPRX7Se5A/sorL+92aNsrvf64snqP
zAHhDquIOA8Le4j7pQ7UT7lxN9/N1V4a7F6JAy+YxXsOTwyyh7hP7ADLtx/P
yrUT7CHuET7QI5P+w0g2x14EbL/ggdkLpH1q0yvsVcH28R249nxbTYJqK9R8
rgOpelsf6LpNspcEm8d2QHdDZ8Syovn2YmD9jAfYtHRtW+6sspcDq/+1vyJS
Imjxim32QmD5j/vDsuPTK7YdspcC8x/u/8Nnumrp1bP2DFCg2Pc793bZNXsA
8Z279A==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHpN/6qrx9tcROXkSvc2ab1gEX16m3
k+ZssZuncaZiRbbmAdeZYZFx9w7bydpmZWwP0DgQJ7qeVeLRJbvZgRwRx0zV
D9T7LpjrfeuhnVTaMverUmoHPM6X3vrO/NFuZpWL+ZP/KgcKJs3n21XFYC/e
/0jt8xPlA3ZbrYMW8ArYT1vcIMZ0SulA+enzebHr5OxFd8ixCa5XPKD0cSOv
TKSO/eQze77KT1E4sOXg8qXLGyztVQ5tPRX7Se6Ae7dMX+h0N3ul1x9XVu+R
OfD9zNHdd68F20PcL3XgxtPgX22hifbSYPdKHHiz+bv2S4M8e4j7xA4cmbBM
aa5lFdQ9wgcYjm1YHLqjzV4EbL/ggcJ1azM05062VwXbx3fg484XgSevLYCa
z3WgM7AiymzZGntJsHlsB85or7mc+H+7vRhYP+MBn6kuai3TDtvLgdX/2t8h
+lSyb/k5eyGw/Mf9U59oH0wou2YvBeY/3D/33vSQbqZ79gxQoJ63589nhkf2
AHotwko=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDmUw/jA322InL6LXObNN68D1xsif
234csZuncaZiRbbmgfLAXweUpl21k7XNytgeoHFg4hu2CzvPPLWbHcgRccxU
/UBT7j27W/O+2kmlLXO/KqV2QInx4tJMHVb7mVUu5k/+qxxoe86nk1MnYi/e
/0jt8xPlA2mH5vgvrVW2n7a4QYzplNIBnitLfqkJGdmL7pBjE1yveGD7pQuB
x0Md7Cef2fNVforCgWViC9V12XztVQ5tPRX7Se7AXVat7wztkfZKrz+urN4j
c+BU55GI7YFp9hD3Sx2I4WZ7G1JQbC8Ndq/EAYWURes2PGiwh7hP7ECG9t0Q
RrNeqHuEDyx9qXnskOZMexGw/YIHDrt/UHRuXWqvCraP74CnyiLjNfqboOZz
HVjjtj1YSWGfvSTYPLYDh5oLeKyUTtiLgfUzHshbMcNyafAlezmw+l/7A2sF
l61ff9NeCCz/cX+7dt3Ui0YP7KXA/If7p500sjRKeGTPAAUXZKd03ut8bA8A
0km6/g==
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5hTUHXz6+YCdvIhe58w2rQOb51zd
bTzhkt08jTMVK7I1D9xUVBcMvPXYTtY2K2N7gMYBp7yoOsFpX+xmB3JEHDNV
PxD64PeJwmMs9lJpy9yvSqkd8GLj+S2ZJmI/s8rF/Ml/lQMabCceqzYo24v3
P1L7/ET5wLO8yLMbDI3spy1uEGM6pXRgW0c4p950B3vRHXJsgusVD6w6wjrh
+xpf+8ln9nyVn6JwgGdvx/p5xlH2Koe2nor9JHdAn+nKsqCvafZKrz+urN4j
c2DNeud771hK7CHulzrw8pWFfHVKo7002L0SB/gYrznzyfRB3Sd2wOfK+vQd
72dC3SN8QGKfoNROnWX2ImD7BQ/Ilmp2H9u5yV4VbB/fgTZp1jVTfu2Dms91
4MuVpvlch0/YS4LNYzsQx73iGu+eS/ZiYP2MB5w06v4nSN+ylwOr/7V/3hKP
8yIhD+yFwPIf97fOdn82JfSRvRSY/3C/xsoZWpzej+0ZoGCjc7SN95fH9gBP
FLuJ
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHUt5Z7/WbdcpOXkSvc2ab1gGt4745
R7/etZuncaZiRbbmga7u7Q7fMz7YydpmZWwP0DgweY/+8yW2jPazAzkijpmq
H5glIHdFMl/QXiptmftVKbUDOif08hq/K9jPrHIxf/Jf5cDaGytn3vyhby/e
/0jt8xPlAy0Ocw1fZdjaT1vcIMZ0SumAyJM1n851eNmL7pBjE1yveKDPP+cQ
y+Rw+8ln9nyVn6JwIFTfQihrd4q9yqGtp2I/yR3gfnvwpbZckb3S648rq/fI
HPhx4XDk/7Z6e4j7pQ4wqeQFzg3qtpcGu1fiwO8yxidqE6dD3Sd24INrRsRq
/SVQ9wgf+LT7+/q5EhvtRcD2Cx5Yl8oiz5q9x14VbB/fgQkHnd44PzkGNZ/r
wNX15tHH2i/aS4LNYzuQ8iRSqP7WDXsxsH7GAw2FG3Yz7LxvLwdW/2v/IT7b
6scij+yFwPIf91vMUXKrFn5sLwXmP9zP1mrPsXDxY3sGKLjgJ/uZUeeJPQD3
Bb3b
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        TagBox[
         RowBox[{"", "", 
           SubscriptBox["\"Ar\"", "1"]}], DisplayForm], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        TagBox[
         RowBox[{
           SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm]}], 
      RowBox[{
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
        "]"}]& ), Editable -> True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379156663431*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],

Cell[BoxData["\<\"plots/transient.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379158209385*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Runtimes", "Section",
 CellChangeTimes->{{3.766592582520748*^9, 
  3.7665926070101557`*^9}},ExpressionUUID->"be75ae60-b525-445a-a2f8-\
07a7bd6d9534"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dat", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimesout.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat2", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes2out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat3", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes3out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Runtime(s)\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Dimension\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive calls\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive levels\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Python\>\"", ",", "\"\<C++\>\"", ",", "\"\<Parallel C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
      "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/runtimes.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.767467469483581*^9, 3.767467519058926*^9}, {
   3.767467556456477*^9, 3.7674675579975157`*^9}, {3.767530949583584*^9, 
   3.7675309707708282`*^9}, {3.767531004631811*^9, 3.767531101524459*^9}, {
   3.7675311405548067`*^9, 3.767531141762246*^9}, 3.76753130045408*^9, {
   3.767902448613002*^9, 3.767902458418908*^9}, {3.767904719279963*^9, 
   3.767904767322049*^9}, 3.7679050738828983`*^9, {3.7679176371929083`*^9, 
   3.7679176384770203`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.011509319999999934`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0813438649999999`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.5962182649999999`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "4.287848875`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "24.673300776`", ",", "22616", ",", "21"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "133.293162891`", ",", "50049", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "644.16902838`", ",", "102480", ",", "27"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631484823*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.0016663130081724375`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0026924300036625937`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.01155992699204944`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "177", ",", "0.02193124999757856`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "21", ",", "298", ",", "0.06308137100131717`", ",", "22616", ",", "21"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "0.1508594839979196`", ",", "50049", ",", "24"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "0.3248912150011165`", ",", "102480", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", "1277", ",", "0.7218115940049756`", ",", "200145", ",", "30"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "33", ",", "1888", ",", "1.3522880889941007`", ",", "370476", ",", "33"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "36", ",", "2803", ",", "2.493587140997988`", ",", "661388", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "39", ",", "3965", ",", "4.547302400009357`", ",", "1135106", ",", "39"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "42", ",", "5612", ",", "7.907720365998102`", ",", "1893255", ",", "42"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "45", ",", "7663", ",", "12.99118743200961`", ",", "3063616", ",", "45"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "48", ",", "10450", ",", "21.246270654010004`", ",", "4844184", ",", 
     "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "51", ",", "13862", ",", "32.91214892799326`", ",", "7477740", ",", 
     "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "54", ",", "18348", ",", "51.23924410699692`", ",", "11324874", ",", 
     "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "57", ",", "23760", ",", "78.78004793499713`", ",", "16818920", ",", 
     "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "30688", ",", "113.30796434900549`", ",", "24581466", ",", 
     "60"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631488085*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "19", ",", "0", ",", "83", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48", ",", "0", ",", "245", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "89", ",", "0", ",", "598", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "1", ",", "1369", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "2", ",", "2827", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "516", ",", "1", ",", "5561", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "807", ",", "2", ",", "10248", ",", "9"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"30", ",", "1277", ",", "3", ",", "18195", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1888", ",", "4", ",", "30873", ",", "11"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "2803", ",", "3", ",", "50876", ",", "12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "3965", ",", "5", ",", "81079", ",", "13"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "5612", ",", "6", ",", "126217", ",", "14"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "7663", ",", "6", ",", "191476", ",", "15"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "10450", ",", "7", ",", "284952", ",", "16"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "13862", ",", "8", ",", "415430", ",", "17"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "18348", ",", "9", ",", "596046", ",", "18"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "23760", ",", "10", ",", "840946", ",", "19"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "30688", ",", "10", ",", "1170546", ",", "20"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "38940", ",", "12", ",", "1606694", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "49274", ",", "13", ",", "2180000", ",", "22"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "61446", ",", "14", ",", "2923048", ",", "23"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "76411", ",", "15", ",", "3880353", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "93864", ",", "17", ",", "5099087", ",", "25"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", "114989", ",", "18", ",", "6642312", ",", "26"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "139411", ",", "20", ",", "8576593", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "168576", ",", "21", ",", "10989255", ",", "28"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "202029", ",", "23", ",", "13972160", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "241515", ",", "26", ",", "17643841", ",", "30"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "286488", ",", "28", ",", "22128615", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "339030", ",", "30", ",", "27584561", ",", "32"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "398493", ",", "32", ",", "34177030", ",", "33"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "467337", ",", "35", ",", "42113553", ",", "34"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", "544800", ",", "38", ",", "51610691", ",", "35"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "633763", ",", "41", ",", "62937086", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"111", ",", "733337", ",", "45", ",", "76372469", ",", "37"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114", ",", "846870", ",", "49", ",", "92260201", ",", "38"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "973333", ",", "54", ",", "110957124", ",", "39"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "1116588", ",", "59", ",", "132897080", ",", "40"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816314924383`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, -4.464598137055273}, {11.5, -2.509069863034937}, {
             14.5, -0.5171484625147089}, {17.5, 1.4557851794440688`}, {20.5, 
             3.205721718753769}, {23.5, 4.892550934728942}, {26.5, 
             6.467961158094638}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., -6.397141872829248}, {12., -5.917311146054348}, {
             15., -4.460210731324506}, {18., -3.819842718743159}, {
             21., -2.763329782796962}, {24., -1.8914064449660575`}, {
             27., -1.124264875758159}, {30., -0.3259911242743334}, {33., 
             0.30179803849721}, {36., 0.9137222926554756}, {39., 
             1.514534178021714}, {42., 2.067839543782565}, {45., 
             2.56427123774491}, {48., 3.056181381333915}, {51., 
             3.4938418579366193`}, {54., 3.9365057249095132`}, {57., 
             4.366659766009154}, {60., 4.730109459905931}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQYNRg4MyKDB1OG95a9/TnrP7CF8CzR5azR5Owdu
5rVVryZ/hPAPOEDlv0H4Dk5o8s4Oxr1vvzse+AmVd3VgUtD6xb36D1TeDZXv
4OEQHmW0rkjpP1Te06F4tbX9pkUMEHc5eEPNZ4TwD/g4iIVu3b0xmwkq74fK
P+DvUDvv8h6xh8wQ/oIAh8AeQ22WVhYIPyHQYfnu62KnZFghfIUgB3kPX0ux
VVD+gyCHqvpfB7NXsUH1Bzu0Tcy2qpZnh+oPcZj4uLja6TuUrxDqsHFd/hS9
aA6o/lCHD5sv/q0V5YTqD3M4K/Xh1RQBLqj+cAdlr2nXolZA+QoRDrOvcf9c
ZsoN1R/hkH1ix77LO6H8BZEORz/zB0cV8kD1RzmscDx89JgkL1R/tIPfmj7X
1K1Q/oNohyUnF5dxl/BB9cdAw5cfqj/WgUf4UHnBSyhfIc6hUvP4z1R/AQcA
c+GaRA==
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -7.403909194843006}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Runtime(s)\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {-7.403909194843006, 6.467961158094638}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 2.9444389791664403`}, {11.5, 3.871201010907891}, {
             14.5, 4.48863636973214}, {17.5, 5.176149732573829}, {20.5, 
             5.697093486505405}, {23.5, 6.246106765481563}, {26.5, 
             6.693323668269949}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 2.9444389791664403`}, {12., 3.871201010907891}, {
             15., 4.48863636973214}, {18., 5.176149732573829}, {21., 
             5.697093486505405}, {24., 6.246106765481563}, {27., 
             6.693323668269949}, {30., 7.152268856032539}, {33., 
             7.543273346705446}, {36., 7.938445551164788}, {39., 
             8.285261134068948}, {42., 8.632662441222351}, {45., 
             8.944158830970403}, {48., 9.254357257392957}, {51., 
             9.53690656247793}, {54., 9.817275855717062}, {57., 
             10.075758773476581`}, {60., 10.331626977683165`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDjqbWdjM+tgdIHxNh9LdATYWP/igfH2Hb13r
xGO/CEL4DUYO1llFMxK2iED5pg7Zer/vXzopBuVbOLi7lmQy/5GA8q0dqngO
L/52VArKt3PYmv859s1sGQj/gIPDul7lm/46chC+g5NDXODde98PyEPlnR0O
egXv552kAJV3dXB4dSfkjbMiVN7NYWud18mMx1C+g4dDF6OPrHWTElTe06F4
896sp0LKUHlvh99WCr8LF0H5B3wcJN/PuXVSTQUq7+ewxfY+0+mVUP4Bf4er
v7/e2KmsCuEvCHDYpzX1js0cKD8h0MHkqtEsF141CF8hyKH4sqTEvRoo/0GQ
ww/HeU5Gz6D8BcEOCs9bGhX81KH6QxxiXMKW794A5SuEOrRVbVL4J6gB1R/q
UJCtmrg2D8pfEOYwv6giVeQUlJ8Q7nD/asCrJkVNqP4Ih5bPDUm7yqH8BxEO
r88VnS4/BeUviHSoY/jZwi+jBdUf5TDPruzk1CwoXyHaoey0nCP7Dij/QbSD
Gc+jBfuYtKH6YxzOnnsQX+gD5SfEOswJDLq1eTKUrxDncKSE7QXDLW0HAK8M
rAk=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 2.0850860858989155`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Dimension\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {2.0850860858989155`, 
           13.925788164890385`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}]}, {
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 5.805134968916488}, {11.5, 7.110696122978827}, {
             14.5, 8.185350223178686}, {17.5, 9.167745974343763}, {20.5, 
             10.026412899373426`}, {23.5, 10.820757804523783`}, {26.5, 
             11.537422936570616`}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 5.805134968916488}, {12., 7.110696122978827}, {15.,
              8.185350223178686}, {18., 9.167745974343763}, {21., 
             10.026412899373426`}, {24., 10.820757804523783`}, {27., 
             11.537422936570616`}, {30., 12.20679738284463}, {33., 
             12.822543944292201`}, {36., 13.402095936032913`}, {39., 
             13.942236596607357`}, {42., 14.453808127933891`}, {45., 
             14.935106475617856`}, {48., 15.393289368069954`}, {51., 
             15.827441165260032`}, {54., 16.242512103443666`}, {57., 
             16.6380150011729}, {60., 17.017503302309006`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDk1PknqfrBF0gPA1HSoniFz1ZBSD8vUd4p4n
lHBOloTwG4wc9h63eqfxWAbKN3XYrs13Z9NJeSjfwuF6let+e3tFKN/aYQJP
ySqbCiUo387h/IIbWRrzlCH8Aw4OaXMWn763RgXCd3BysLvxsXLeGlWovLPD
VRnJAKvZalB5VwfZz0t+X65Vh8q7ORT3PW8zDdaAyns4+F++43FIThMq7+lQ
mb21//h9KN/B22GFTiLX3BlaUHkfh6iL0h43PbSh8n4OJ/mcerQ+QfkH/B3y
GB+rBE3RgfAXBDhYLFZ17TPQhfATAh0e3zH4svMYlK8Q5NCwdFnPsXA9CP9B
kENiB9vneY+h/AXBDpHW04z/ZelD9Yc48DQwqN58C+UrhDpoR2ZvTzQzgOoH
8lN3Sd8phvIXhDn8PbLo+7T1UH5CuMOiM3/vT3wJ5StEOJzqkmX8q2gI1R/h
wJmbaHozAspfEOnAb7tJ068Pyk+IcvisldIcewjKV4h2aEwN9NH4CtMf7bBC
yHrJBjUjqP4Yh4IL/4KFwqH8hFgH3pr8A/5tUL5CnEP8/Vk1DVuMHABNvKsC

             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 3.3008608660431737`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive calls\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {3.3008608660431737`, 
           18.705085552035026`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 9.}, {11.5, 12.}, {14.5, 15.}, {17.5, 18.}, {20.5,
              21.}, {23.5, 24.}, {26.5, 27.}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 9.}, {12., 12.}, {15., 15.}, {18., 18.}, {21., 
             21.}, {24., 24.}, {27., 27.}, {30., 30.}, {33., 33.}, {36., 
             36.}, {39., 39.}, {42., 42.}, {45., 45.}, {48., 48.}, {51., 
             51.}, {54., 54.}, {57., 57.}, {60., 60.}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJw10clKw2AYBdDQlUsXXbhw8TtQVMQ61lqrxg6iKA51aOtEKLj2FfIoeZQ+
Sh5Fy38aCJfD5S7yZWXyO/ipJElS+39nGZ+1NOaC3JSLsi6rMfN9XuIjXuYm
Bz7lVT7n9ZjTlGsx0w5v6Lu8pe/ztv6Kd/TXvKu/4T39LfuO6R0f6O/5UP/A
vrN45EbM7ImPY4YBu0M594n9M7fsX9idwiu37ec+s39jd8yGfGE/YnctOedi
rL+0f9dz+NB37Dnn4lPvv2Rfeg7f+l76B9xNOq8=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive levels\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 120.5}, {0, 60.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{"\"Python\"", "\"C++\"", "\"Parallel C++\""}, "PointLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631713992*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],

Cell[BoxData["\<\"plots/runtimes.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816332767353`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temperature - pressure sweep", "Section",
 CellChangeTimes->{{3.766592615367303*^9, 
  3.766592626251006*^9}},ExpressionUUID->"c2959b04-1b75-4321-a41f-\
acca99c56f61"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"press0", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"press1", "=", "10.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp0", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp1", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntemp", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npres", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sweep", "=", 
   RowBox[{"Import", "[", "\"\<data/sweep1out.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Median", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
            "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/sweep.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.76797441972853*^9, 3.767974432723997*^9}, {
   3.7679745105405893`*^9, 3.76797455934306*^9}, {3.767974773725747*^9, 
   3.767975020078126*^9}, {3.767975052455942*^9, 3.767975204700876*^9}, {
   3.767975249793244*^9, 3.767975265357834*^9}, {3.767975501386704*^9, 
   3.7679755024689083`*^9}, {3.767976308001234*^9, 3.767976342670101*^9}, {
   3.767976424351769*^9, 3.767976427222715*^9}, {3.768735103503188*^9, 
   3.768735130752122*^9}, {3.768735177807578*^9, 3.768735240765869*^9}, 
   3.768735887133437*^9, 3.7687369854116898`*^9, {3.768739517138527*^9, 
   3.7687395177520933`*^9}, {3.768739819874299*^9, 3.7687398338631353`*^9}, 
   3.768756048051762*^9, {3.76875610678244*^9, 3.76875610811451*^9}, {
   3.768756149752689*^9, 3.76875616713223*^9}, 3.7687563512518272`*^9, {
   3.76875638245875*^9, 3.768756398025935*^9}, {3.768761363033943*^9, 
   3.768761369263657*^9}, {3.769187041101717*^9, 3.769187044627632*^9}, {
   3.769190357182425*^9, 3.769190384467431*^9}, {3.769190775863057*^9, 
   3.7691907769403667`*^9}, {3.769190979483322*^9, 3.769191093948797*^9}, {
   3.769191192278215*^9, 3.769191204420977*^9}, {3.769192172115891*^9, 
   3.769192173115179*^9}, 3.769192844668851*^9, {3.769192909982746*^9, 
   3.7691929197983723`*^9}, 3.769192988228796*^9, {3.769194123012789*^9, 
   3.769194124818673*^9}, 3.7691941754909286`*^9, {3.769194355125226*^9, 
   3.76919435686584*^9}, {3.769194708421194*^9, 3.769194711390852*^9}, 
   3.769194892749398*^9, 3.769195161669457*^9, {3.769195213740037*^9, 
   3.769195231962879*^9}, {3.769252452905332*^9, 3.7692524547796183`*^9}, {
   3.769261394229494*^9, 3.7692614190987177`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
RUH3k1f7cst+jG1+HJUkOoRHSWcXeH2lsGbTNv7miwNIu6HtasXPhLrotscD
PRQ6/m3/cTNmEHtyHJfKdTFxx45hfH2SwpXCe+36GUOgqo2Knr0dxr7GOxdc
FtEQU/z28XcxE42pakeUIljoXmmYaapJI+bX3sSsrmE0nVwxM+MEG6fjfg0o
76KhVlt80/UHC8Ujy5M1tnHw9M4LKSE3Gh/Pn/+S9YUNPuvYxRakL7hHW9nK
BdAQ6IjW5p7nID9DcEm8Hxe8+ojGwHAaXc9LUxTUueAfDl/CEebBcl39jn7i
hdPii2TsmVxEvl0tu+ERD7Nd5n82fE2jwissLPYhD6sesWSvqlEY2Gutk0Tm
7eBWY4tb0hQYS/J9Z0dQoLoUb72+RqNvs04jh/SUk42yPpPlJN/cByxPz6Sx
M23vflOSd4+9H3rT02kMJDnIqFyhUHgmvj3pHwVD5havfl0aHyyCe4emkb5v
rGw3YyeNRV3zPVu8aGh3GiQ/CeTh4lwbb7crNGxnyz4ZeUjjcK2G78JyLhL3
Ve/oi6bxdtfiM0rEnV8s56ilEl845h6WP0hyZHemot5hktf1kykDm66zkSaw
4lfNOxqXE7cJPSDvs+qfQ0y1Ewtb78pVGRNHyUsFtDeQvIo9amDoaDiMxapL
thW2kuMYKbldSvIt1SNsrd1cJh5MxI3ak9zba/rd1I302nkhsSpzVw/Cp+T3
w3/EadLDzdNFiQ8jXqyRyt7dj6OFKqaPKmisTLb+kPWUxr8/b77befbi+FP5
MT3SQ7dNd/DeR/ZNQMQmVwm1HpgnlMV3k95v87lgzW9y/Y45VKe5nOvA18Je
3fJQGud9WwaZ7RS29e6IdLrbhiPF7w5hL+nPD5+uqZKksHrk5LrdrS0oOOfk
ni1FY4b41QNZ+4iDfx28pSPVjBDZP+eVyH5pHn128G4UF2GazjdXWDei/FCy
Z3wShdFPAgp+9RzEXcgSEHlQj1PCuqeCD1EoMsnZPfSK9Pmhk5ohn+sQ7JM4
JCpAwYm7RKn3FAtzfv00ObWlDmMfnVRi3vHwfnv2ug6VYbRfthW0+FCLd5JC
qouPkV7A267RODwE6XBVB02dWvw4zK1PWMCDld2PiorEQXyIm22qfKoGm49t
PiZVxsW7U57JpqRnLeyPu23sUY0s2uMsdYmLjBAn9buS/ci5dyDfOagK+9Kv
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
9U0pYn0AlwvhLeeLqyNpXD1546kZ6WfLYy7zxCs4CC+Ve2BE3NZhHud+7Tlx
Vtivx89S2Wid/vtM/n+uUizGR5I/xmuXW6y/wYKc5MJtml9p3EycKzKeS2OH
4ORUmfMwHszc52PURvrpbdOzAyT//I0K9//bysRyya/LB4nT3t48oHqD9NaH
Q2NmaU6DsK+QqLlSS+PZ2QVDKiRH20dbNa2C+/F3WPX8CrIHEhWdH9WQ45RW
3zSDL70Xb/ZPV/hCnPZms+IBjwc0fIqunbFK6EFcd2DNEdKLnczWiC2KoBG9
piUsbbgDBu6v/RPI+20vfrBz8huFkNDLa0Ir23Cfv+XeQmsasynODcZaCjMx
kOUt3Aru2ydpIWRfsPUPPCk+yUPDsuEhB/NmZA9UpPMxKXxTKwlLe87Fs+7J
zO23G9GVOhnvlU4h4lKE7m0WB/NPutCatfXY08mu2OBEfL6lTnVnKxuP53AX
yzfUYXTo3NqPEuR5JK5kGUezsGxJv9iM3XVQMXx3wOgTDxnXJSy27BlGw+s5
yUOVtZDcK6tVcYYHG/ZIwQZRJs75BhZ9Na2F+hytF7uX8jBirPBgbeUg/HP7
3S3DahCSFPniBbk/b0qXdm28PoC4gL05g7erMdm/+VRgMBf9VkVS19APQZEo
3oxHVbglb3fYiuSy49WTmdW/ejH5sMpbPqMS8h1h2xQnOJiqavCZl8lA4buc
czofKnA7N7Z0IpPMy3SBlke13XBnRdeaV5ZD+uCqo7Ykx6ljQxaY6IDy07Op
fW1l2BQv9O2xEgfXvOKlxBe2Iv1huy+n9ytu5t173DvMRmdFbkuORiOWrt5q
wWKVYua0No2HB9ox0fphWdkfBqbd6626akGh8frzH6NLO2EZ5dj8+1MvZjq+
DJ7tQJHHV5d4rO7GU5ERH+/4PtwUn+M1zYOCb8tagRNbGGifEWCuEN6PVV86
/rmTfTP65rearGsvlL+LrmgMHEBi8subvQmkJ5V83V8b2Yffvk8ngjwGEVFx
eYFFLpkvkQf+QR/6UXpCp0bdaQjuhgceF9ZSOGKxL6+xdwDHivHu+y4m6B6b
7VdYFFYdTXocOjEIhaEV1j7KZE+dEwlwIv3rUvC/q4biTJgvEZ+amsGC3c/C
18byNMKfHXWbUhyG2YtZ8YE9LPgneQ6v2kyj6XLb7uwtLLiGztkyi/Ry1rDS
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
2Vw3/t3Efl3TJzC3H8JfWynjk+PwuK1/36AsBsQLPIrtlwYhQO/+QwuPSRCP
ejJmq4q4cWTup5jMMHzk8dtsd2MKwrT8ckZ0MXD9/v7ddZT/7Kz43qXANPjz
o1KyRrn26K3gjvdj0FLy8Uotywz8XePkmnDBwHydqZr51wT0PHxnwoXPQLno
N8PeG4iHisYsFU+mQJxNX+Lz1Cxsk84ZOH0bgzMv98i5dUwDPXrit3fPHCSH
eF0qf4Fy9r6f5gLLMyDCEdQl8m0erh3VpIvVYXBKuiuodd8ciJL4i9oqiVDp
x389YwiD03Uc43tgHtj7Lg725pDgos1oYvcPDAJqPL/2WxNh1cks2NafDAMx
t2rLduBQNDb8LNWHBALrRsLjxhRgET7z87YsDrmPzqdqx5FBXsq25tIBKrxN
+S19TQeH9ws/r64/pIBbRKADcTMNTviV21s5oTqRt79Wm0wFOb9gWVINDUy2
eb4pC0Y5AAqJy5po/V3hkjtqSgf+5FeSG/uu+le5zimu0GD2wTe5yCk6CCYv
PLiG6saY402bxxs6JJ3PO9jpxwCQPrlrAPlQaE/SqUIXBtDmX8kLM6M+MZiU
fPwzDpOMPuHSzRjKD5SbJ5C3/4yMTBZC9Uq4wZu33RRD+TY6VKEKzetErfmA
PPKkI2n7Pe9jkGNtGLIfjQtfadbu268w+J1i97QZedEXD9Mb/HI45DPPjBnL
IV9Vui0rhfJZXkNB8DbEa43LIY/ZixlQqv5YaAl5c2+QTOsblFuMMw+Yp0gw
oNbb5rsX8qy23jM5pAIcrmy7x7yXmQ4WJtqNs49xOKoc4LYPcWx7tk95GcoR
z3JCH5xHPmn269vRcxv78EOj7bW+UGDlxS5/wjfkX+/VmG8jLl1NtGQafIRy
tOlBA70BHBzVKIRWdP5yxrP3r9wkQaLhWaFaxLE57pNqtoh7k7q8rpQ6lMcI
Ng0XNjj2yWHxDxqXmMMVB7PmUf8U4v1vHXHsSR3pdR7y3agqxf5T7DMwOeQt
9BBxjK7z2PUM6itevwosKQdRPzfX/6aGjkc8y0CEhDhmuxc/Kf14DFR7F/c2
PkIcHGyZzdiNQ/DW7+z7xEdguiD54ElXlPNkNuOBqJ+ss6nv2eYyBA3j0rKl
aHxnyO+a7DIZYJ5++NPPwgFoD2bdJYnmQ+JB3wUNAh1CLtbXjc33AduBydl7
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
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", 
                 RowBox[{"-", "1"}]]}], ")"}], TraditionalForm]}}, FrameStyle -> 
        Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999998, -174.99999999999997`}, {
                    7.499999999999998, 174.99999999999997`}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999998, -105.56844547563803`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -105.56844547563803`}]}, {{
                    7.499999999999998, -24.361948955916468`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -24.361948955916468`}]}, {{
                    7.499999999999998, 56.844547563805094`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    56.844547563805094`}]}, {{7.499999999999998, 
                    138.05104408352665`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    138.05104408352665`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999998, -166.4733178654292}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -166.4733178654292}]}, {{
                    7.499999999999998, -146.17169373549882`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -146.17169373549882`}]}, {{
                    7.499999999999998, -125.87006960556843`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -125.87006960556843`}]}, {{
                    7.499999999999998, -85.26682134570764}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -85.26682134570764}]}, {{
                    7.499999999999998, -64.96519721577725}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -64.96519721577725}]}, {{
                    7.499999999999998, -44.66357308584686}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -44.66357308584686}]}, {{
                    7.499999999999998, -4.060324825986078}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -4.060324825986078}]}, {{
                    7.499999999999998, 16.241299303944313`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    16.241299303944313`}]}, {{7.499999999999998, 
                    36.542923433874705`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    36.542923433874705`}]}, {{7.499999999999998, 
                    77.14617169373548}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    77.14617169373548}]}, {{7.499999999999998, 
                    97.44779582366587}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    97.44779582366587}]}, {{7.499999999999998, 
                    117.74941995359627`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    117.74941995359627`}]}, {{7.499999999999998, 
                    158.35266821345706`}, 
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    158.35266821345706`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -105.56844547563803`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -24.361948955916468`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    56.844547563805094`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["24", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    138.05104408352665`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"16.28599877318526`", ",", "24.91024755009402`"}],
                     "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
2peXLxm+bIRriMqsD+BA8ERUsjbhm33ezhoHdDnYZ75iv8ASLrJTNCM6n9Lg
HxTK/zTNgWzngcsdGVwsKdR3CCE8cvhgualyERfW3259fLOP5FhFuYEC6c8X
gYxwVzUKzhtHNeLIev1XtuO3vT3J25hftw9cpGCm9jcxuYdCdM6B0ULCZ393
/nqpRdYpSy5XOp/k3fcikfplhLfns84WyqyiIR9mHN9I8jrUpSY1mHCAtoT3
AK8vjblDm5cySX8vviAX1LmJCwezWTGh12lkOQWGRJD7vml7apPSQg7kW7Jt
QY5vp+jsMiKcNqfXM6KY7Et/6/7Nf7JpaHg0LuQnnKZ22/Kq9fNRKO6dkMgp
ozFzvKu3OJdGoke02g8PJk7K3WEsaqdxv+6JfUAB4TrV2QdZKuQ5+UsdsSOc
dmP3LJczJA9bKZs7c1WHMGWlV55OOE3dW8HRieTo8NYjzmpqA2idzdo4Qzht
U0SehTW5L7EHrw6aqPdD/kf2/X2lNEL4PsHsLg3mgviQdrseiO2NrS0i6/3Z
2sBUxpFG+PqbjbnNHXjuZhopQvL9242P21m3KeRuvvpE7WcbtumOXjclc29i
5TNGzhcupNNkxB4vacWleVOp8X8p8IvWup//zkF9+m4nYe1mvA/ffLfrM4W1
eQ+Y21ZyUGxX6njySCMOFF67yPGloB8k1n6W9LeXyJ73m8fqcXu7y8oL8iT3
tnxc21o2Csefc9WjHerRxZbtF6vgInOBFP+6U0x074qxbWqtQ/TQ1oB7Z7lw
5n9ywWPhCM57/dy3ZE8d2u+f3ycnxUWk4/DyO++GcLDbIOleUC3m3Rudn1vG
gUoKq0TYchBWQ0033njUwDhuTZYS2a8LzVM/9P5mIHRuelqDWzWSxo/fj1Eh
5y9acMz3P9Kvhyv+lbtU4Xp+06k+su/fp9f1ftzUh/O7FOlLjl+h4N7iLnWT
jdnLPjmopHWjpdbBkmtbCd6jVftTdrEx59qc+5hoR3DVwI56iwq8LzBtSuVl
42pvvPve/GZoHlYSz9tbjuRjd/ilP7KwSKz3ke2leuikFAw7bS2D4qVTR7M9
WVg370jlRzOSmyIZ9xetLUV/WJhG08JWiIi+j+Ss6sWlXN7KJi0Kxz3AWDPV
hpHV+ulnnfpQHad5396IgmXLpVuBAx2oaTwhw91McqzZ3X2ccJqxXeCO2q9d
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
5Ax7ddWy7FFMx6yINyTr+HTQRuJPFrmOW8qOv74xgqdltv6LyDoMGFqsXJJz
QS4j53R1GRBSFpO/0UZyxP2f3PYCkjObkx7uYQ+jSL0grorw2/t5krLKxMNX
cpVvPkcN4usNBq8E8U11wdhl68jfda7aNezP6Yd3lqLTBXL8gCc+fyVIPk1u
HBNPHqPhZ3ZR1Ycvs89t4jQIRpHzeiG69OpAN97+1fAWIDzJmnD9I3uIg7hF
Z3awYzpQmTUUdJT0K9cXCbHfr1FwFAtNPZHbhkNDMRkJKhw0r7ytmZvGRnHj
op1lHS0oWaKV3v+Tws4RpZkbHSx8shXvWD/dhL0r6+TWfaDw2KohQ3MRCwEf
pcq9JBphT2Xa/HOgiHfAUPLXKIoGT/Wn9NbD/1h/w13CI8/CHHsux4/ghM+r
TZRJPRzeRgesyGfjhtCprFwtBr72Pera/LUO7qupxUnWbIzk+EoyhodR/vPL
Y3uNOqRLqNxfuZSNE6rf3/93ZwjmN9u4N5vXgjvzj9V4HgulpQs3pCkMIiq+
NFXAoAaWiwXsLZ1ZCNnovMq8uh/5IzXSyw9VgzdLvyh7NQuOi5NKCh36sP6B
wjrm/irw2tpFFtR+Q4v8K2GWUDMWVwlFthKO3L7o99K8ndW4xbJg1fS24Ivd
+M/DhP/rdrfs7TatQ/gCyS9vMtrw6V7T4Tpukifa5XMs+RrAm/pfQrhHB9LO
v8/SW0qhbl9HfkdRI0xYY1fd9nWhd22M4DcJCpkuW+ok0prxnH+Thxe7G0f0
WZ+PyFP4PbTT5+KDVtx2tzByDe+F2x3xu0PbKdzkilYuudaOKzUM4ewEGm6e
PXDy8kEK6z5b9Ymd7YTi9QZvZZc+OKZ6Kc89Tu7HtsfiT053I/lUmvKnQ/3I
vbYi948dhYPWrts30XqxcVhlgmUwgI6DV35LBVCIntmjeFypD78PaX6WMiH5
VNmlrpVA+lmNzO5HTv3Ypj7hZ2Q2hDheM/ez7ynkFIsd7s8cQPrD+wf9jg1j
q/HAh8BaClbzkqPs6IPg/9X02ciUjpJnO2uERgmvPw7+z1p4GP1XHz1J02Tg
jsqRdb95OVi7/5vZWdDBxYe78zaQumpLv9ErS+qzTfbjSXsG7JL0rlkJj4L1
0aj1izbxkMOxMpZRI3BoD7mQ85dw2mIr5YzTHMRnzGlMCh8F957SV39KmSiV
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
ehtw6Xk36i9FyJuRutBU5T7/XKgDtln3T26414PTmlNXGV4U/Dt3lq0w6sIf
1Rg1h/u9aOHszue/ReHDAu+2Q0HdeNQ2NB4R2wfJVUkzKinEJ0yV2MlFPRgV
z/38LYGG205c2POZwvjUw3+0BX2w6pIIGHvYjwwDr8unia8H1w7fl9hKg0Tb
1ZfMyAHE7yihLIcpnP9uN7zCuR8af/dHGlyhQ/xgiqGmIAf/FVtZiEQMYMt1
54sPXQdxlfEkUUKFAw+XPS+X5tGR+mWR06Q1A0mHW8fmmXLAVpwSEGAMos3r
u7m1LhMa8/6zYMzef+j5Mv9qCQNur37/+8Vh4kWp44qXZN3XD5cZU6FMsl72
bSy6xULOuhVje0hekWpqb7Ldw8JEY4dznBwbhS0qtb9TOFhSKeH+czkbz1xv
JnkUshEgU5gVS+r1qq0St2YTG3HnHnbqHyHX6cl02Oz3n3zbdz5LI/16UNB3
1YWnJD/vdXDNtybe6BX4OTSEeLGE070wGoVExnPL1YRfDK9tjafbKESWrBF4
TLzTUYhP2U+XAvdul8kDZNxbL2+4+/4IBwnWIn+b3xC+Fjc87Sf1/HZSweXp
7D49V98a3Cb1IHHvgl8y8ZWdeb0bXAgfjgZ/iZIh4/4738/GjozDKuvEH5nn
HHBtPPUg7wMDoi6b1UTJOILdLX70EZ45c5sY7rtG+ob7KdGanxxk/DGLfkxy
4o7zXd4cEzrOpGy1uE04Zli96vh+4mNuM8UFBiP9yPf+md9C8ubCWhln83cc
vBB8VOBC+pYdJakiX0ny6Zr1tjvJcflT1o8F/e6BesJQ1FkyTyGnD+7cSnir
6Hyv+slYF4Ryg8a+E36aFYqtVo0mPrlym4Y/px0+D763lpDcm6IfmRRnxsER
g0LVqIctYLdmCC714iCz5r9G50ukHrKd/3ETj1jCOOq1X53433VjfdUMNs5d
trb17mpAQRkr98FvUmcFxtxjxHdCXArM6+fUo/pUVGI36cMLbe4veM/PQl3d
dUPlNbUIcfS7xeNBweqH3NltfxnQz9ilaNFdjRsDnv2xJK/2S7TkRicN4vaf
Y+PxNtWoqvxRKfuFjRoeS6ceAzp0pGsTun9UoShnPZXhwsaDdovlIsx++LmV
ciS2VWHHgtEryoJsOMzVb1C8Q8P0pQCtBLtK6IpK3O/PY8H45cFbfzb2Ydd3
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
e/DfM3Wti/w0PLtv7WOdSaHt/bsvija9yLO4O/1CoB9X3e6+9SH1emf+Svbq
e33Y2NEY7Lt0AEqSW4afd1PgveS3c+UXGmJdg92rpgZwxOz57ogZClz+Mgmi
zH5sava2UBigQ/SBTPI5CVLPeUqjy0TpEKI9UQuoHoTAnvSJw9tIPSzNMhXc
MQj9Li2Rjk8MiDtqWRocIOs+e+fp7EMMaJ79wFSLZcLlg1O2mQ/JVw5iI+vW
MPFOnya8UIMFwfzVEb9IXlFPSjl9t4+J+9ue6LVWsZB2lHEyKo6DM/R1v/+l
sdD+T9Y9k/Divnr5bq0MDtxUes+6u7GxYjAt5joPhYHgCpn22ftyHg9tEiTX
OW7ztbDzJJfEabnJsGf3Y3Y4pDlmR6Eht2citJAC9y11eRMRDtasmtra9pLU
21k5p0dzODjb/1sh/RYF38fKel/Jz0LxMVXZhNe/3JcoLOSi8O2w166nVhw0
K0TplpK8GnXmicwxXzYcHRQUN5Fx6MQtshUlHAt4slBkJJ4Fm1VbRymS04wC
HCUbCDeKjY8Khx5j4pfh4bz0FxxE5qn0zT4fKfpF41y5DSSXb6GCncg47Fzu
pFsTjnVb5Dflk35S0GS3T7KGg8tzP3guJRx7Mfk8/ODXAdTIKRWfJRxb+M3q
KI1wjMk/faJVsB8BBiM7igjHHpVq+rYSjvH9p1nItbQPvlvS85aXc+Bxuy6o
mpyP9lKzNLllPfhfR/cdT9X/xwFcRiqKQilla0gkI2W8KbNSGVmFyPgmZbTs
lVVZkRQloiEziSg0yN57dq97XVz3nlspJOX39vu37sPjfs457+fn9XpwzhHv
ndt/Dh27XO55r+7h8v0baT+OCZKgrP1i4St0DBY2Z1aiY7mCzKkx2WHok2nI
v5qE37PTJNj1OwEnnppU728agPMnRalVp9DZxQXfgxIEJJ8SlCyf7gN6myaF
W5gFXPOuFbwmTNj/idynxtsLvHu+PDg5iPtN/hzXaAgDfKHQulSuGyxzvn67
/xD3p6MP+QqKpmHvGvbZvcadYJtWdtoD80KdvvegkiMdVM3NaIpZHRDzrtaT
5xsTal5HPa/gngIFj9Rf8Rs74I7Ooumz+0y4qrSxRCN/ArY+Et7EuNkOE8fm
MgE9fSo9G/rWlAY7k87a315oA0VwcPWjM+BISkjo4BwVRn+dVCwca4VwtTsy
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
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
0Homltnptizd9AW6i9+eleQrx/8A4XvFVA==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -175.}, {7.5, 175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -89.48362720403023}, 
                    Offset[{4., 0}, {7.5, -89.48362720403023}]}, {{
                    7.5, -1.3224181360201512`}, 
                    Offset[{4., 0}, {7.5, -1.3224181360201512`}]}, {{7.5, 
                    86.83879093198992}, 
                    Offset[{4., 0}, {7.5, 86.83879093198992}]}, {{7.5, 175.}, 
                    
                    Offset[{4., 0}, {7.5, 175.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -155.60453400503778`}, 
                    Offset[{2.5, 0.}, {7.5, -155.60453400503778`}]}, {{
                    7.5, -133.56423173803526`}, 
                    Offset[{2.5, 0.}, {7.5, -133.56423173803526`}]}, {{
                    7.5, -111.52392947103274`}, 
                    Offset[{2.5, 0.}, {7.5, -111.52392947103274`}]}, {{
                    7.5, -67.44332493702771}, 
                    Offset[{2.5, 0.}, {7.5, -67.44332493702771}]}, {{
                    7.5, -45.40302267002519}, 
                    Offset[{2.5, 0.}, {7.5, -45.40302267002519}]}, {{
                    7.5, -23.36272040302267}, 
                    Offset[{2.5, 0.}, {7.5, -23.36272040302267}]}, {{7.5, 
                    20.71788413098237}, 
                    Offset[{2.5, 0.}, {7.5, 20.71788413098237}]}, {{7.5, 
                    42.758186397984886`}, 
                    Offset[{2.5, 0.}, {7.5, 42.758186397984886`}]}, {{7.5, 
                    64.7984886649874}, 
                    Offset[{2.5, 0.}, {7.5, 64.7984886649874}]}, {{7.5, 
                    108.87909319899245`}, 
                    Offset[{2.5, 0.}, {7.5, 108.87909319899245`}]}, {{7.5, 
                    130.91939546599497`}, 
                    Offset[{2.5, 0.}, {7.5, 130.91939546599497`}]}, {{7.5, 
                    152.95969773299748`}, 
                    Offset[{2.5, 0.}, {7.5, 152.95969773299748`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -89.48362720403023}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -1.3224181360201512`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 86.83879093198992}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 175.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1:eJwsm3c4Vv3/wCVCQlbKViijJauUt6wkhBJCJKRhVGZWRkZpoDJKRoOEFBLh
MRpIsve4b/dwz3PISFa/z/e6fn88l6fznOvc5z7n83m9X6/n8Si4+9l6rufg
4Djw/3/97+9N3P52Tzh3wauF0/F7m4agU2Pl5+mNGOwN3D+yYakXblqriP09
PQZv3ig/rVHCgOcc08NJoRe8vIJnLTNH4aoq7tcji8HJqIcMgnY30CSOX7Et
GIaH4m7spM0YyOyXXsuz6YVXbhsdZZtHIbv1yG4XeQws771U+FDdCbn7cquL
twxBRZr76XfcGPB+6T05qNULHVu/9216OwotDjVJN+UwWOB9XnJmpQd4mnd9
OBI6Co/5PWNfyWBQsfPLhjPJvUC7uJWwMD8KDh+eLOhtR58retzefnoQrF43
lDedJ4Dz3kEvflMMBA7e6WOKDICGZTHnOuUJ2GjSc6dPGwOurSox8k/7QcH/
Tax+/Ti0uJdGch3AgFzxWY3/4BA0Hc7ggmgCWIy0uzibYfBpr3YecXUAxJ6F
1cXOTMDROleSjT4GH7T+NgTlDsGlv4Fs3lICaM2RxwpOYLDx2k/eZ6HDMCEa
AaKbiFBg8ZaRaovBx/ovV/LnhuGsDLn47FEi5Js7W0eeQc/nTdOLvD2DcPaC
+OtxAQIcdWVGTgAGmyxI0g09I3DyaDJ9KY8IOI0tmOWCAfGXpjDt/hCEHz/h
4fuaAA+UuN9uRZ/76Vr4k4OPhyB2QZeq+oYADJGMAxboeO6A0gV+ygiEr2cZ
hLwhgkLpitTOcxhcusl93bpkGNzOTmQFbyfCp9WAHN3TGOjvTHvjUj4CRJv2
+Lk0Iow8z2WnOGPgzlS7+FVxCGqG6wKDQwgQkPmLu+oYBvWOBlLFO8dBm9N8
QObZJBj0zGi3XMfgqtfYeIz7KFR/4fbsmCDCRd5/V5TdMVCtK5uP+jYOnXdc
0p+MToLWMY03vKEYPDqouqRpOwCGF0/ldjlPQPUxqYohXQwO8QQ09jYRgb84
N3OolQwOkne9xgoxmJDt666NmYDm2bNJ/3aRIPpkZNC1WxhczDgyH+I2DgfS
+yzUyych6VZlClcgBrFHpac2po3DicpWx/Lvk/Czcp8SZzAGPjw7s9SciXDm
21636CAyfH5beqMlFwObrzaKdCsiCJ97kll3hQwGP+FQXQ4GGYoUv3p0XFF2
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
wXrvp78MzMUMpU/oDGBKcxXzkmwNhFU2BgeUM5DUGZTBsO7HohQJlw3u1ZCV
+vXVI5z03aCN10vPPmzrZVsKUasQ6h02TrVmoDL687XFxPul3hI52VyFuLhT
bT47GTA69GvLnu896G1a3JbvXYk7LtojSYsYeKagedm4vxv8EVrOCX0VuOf1
bp96PR1mXkMPnbm7YaPqVcR5oAKfkvJ8DsXTsSbj0IXdZzrBp/Duen9MOTT2
nFk6f/13x6rLi76S8RvEXvI90GcE/5XQbyt+YcO1M7c9hHiUC+fnLt99I2A2
HBV5Td6fZyPfFTmR//esJcL3/sQwfEo0eyTJ+/x0mu83LcIl8/px1vWkYVxQ
EmCGzJ8P8GNHyzriP793q0nZWAzji+EBfT4yrnfuXLRylvyeFufhpBMiw/gR
UCf1kHBjdavbnTriUYoPXPh3Vg5h1aPY76cIxzZGsORohGM128bHTDsG8aum
1OsP4dKawyonckmH+tWFVy65PADJNeIafwiX1i3LjL1KuEotcZtTC+3H7gTT
hk6yfcneFwsECIdtkjgbXVf3gy92l20B4dI7Sf9zycSXnppPiKXE9kFKjevA
AcKlJQ/KnI1Jl8lSF989/awXjOUC0jJk/zl4NI6PEv68lmzOObyK+PLuHT8W
Ei7FakSkPCJdNjdWdUfsZQ/KBOLX9hP+XLorf0maeJHryJu7FbI98FHVEy0i
/JkdijiVQ7rsSsIStlFSNxa3XwuII8ft2KzuzhPEi1TM+te/3doNi5Vq5+8T
/tiOrE4dJF1GiU/RsLPrwnDmGlML4kX2i/lNbhIvcurqKy9z6YT1VJ+KOuFS
e0pQ/FLiRRobHjiq3erAxonfb8XI67UrrKYngnjRganZg67323H5iKP6T+JF
n98mys2fb/624UKMqE8b1ISl1MXI6/okjzdkzoH0ZvKHF21DrRAKoMWlES6f
SV04uEiVTThy5tTmy60IXfkyXpjw0SxQ5voZ4i8qyskTfVMtEFDVDNn5iI3F
eher66pZ0G1N83x2qwXPy16pcxJf+mKhcGMT8aWfHn+vpRBfCpYy2XrelrxP
2ndVrrRg4YpWvqfHf83YS/+op0a4tO1i4mk1wqWImoGV6tNNkDy3/pnDYcJz
4WZuBRoTVoufKo04NOGo2VbZOmU23hz5FeFExv1TFes31u2NUPy6uuaUOBs3
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
vjWWGMRrQ6fukKoa+M9WLpGcYUB6YO5V4bYBGDHflcvz16A876MfjXT4kmti
R3Yd6oeM0J4bcWerwcjQ12b6M+D07t8C2VN9SFYNlJdMr4Luqb0um83I48ZB
EWsde+HxL2PHmUVVcBFqjkncwMCdiL4Bdc8eGHMljbqcqoTxCNcLhwk6TCz2
BgdHduPT3Bcdp3cVuPc+Qv/GNzoY5u4Lr1p3wbV6c+a5hRV4MulaVO9PxyKl
lGW+kR3g5H8wYWJaDqEdL9+Zn6NjyrnAWFy/DUHOc/e/vi/DMTcztr8yeR98
bb5o8rIZAjwXvq1dVIaIJ04aKxcTb359teDVeAMyTSz/FZ4uxeZkzurxFhrE
Vvg67zpWh2CNum05aSWQ1bVbcZtw6YlFZ1Ia4RLPVo3w+yCc5mRFnSVcynOb
ntQlXEqSOqWXXdyDielq6f2ES9MJWqpDhEtBR7Vv0nR7cPzpdLzU/P1GNe66
3Cdc+m14LU6ithsLtJjrFhIuPUq+Gi1JuAQN9kadU91YW50Z3E+4ZJk5/OkT
4ZKXxPZLtNwu9ORX/ikmXLrS9SDXkHBpn9Eyp91lnVjg0nXqDeFSaYdMLCuU
jONvE57uDR3Egp/G+BAu1Ua5Wsyv//yGeu9XYk87Di3bVGtHuCRivYsuQ/jB
6+U2+oPZhootGs/z8thYxagWtif8iM2/Ze0t0QZblyUf/xHvTDKIuZZygo3o
k5/aJt62IrH4M/c+wqXAPKrbAOFE48X1ucd2taKq/NMnd7Jdp5BHuwRZLKTG
Wp7xLWyBqvWVN6lku9ytq+iKuSzwX2pfFqvfAr2lM+c6rxKvFQlM3uXLgsuo
5I1HHc341Ogyx2VNPJjxdrnMKRZcJ++1Kdk346/wU04ZEzZufr6SS5cjPvZZ
caHPVBNSejNY30gnJu2i6giSTuwc1BLIWdCEgX3Toq9I9x2+f3XJjg2kHwtv
rG1MboDR3XZ/8wkWophTUTlk3qY8O9e+croek6Pjj+MGiHfJG7QIvGFghHNA
IMOrHlbGS3xHGlmwmHbJsbzGgMhSXh9NwXrEnC0vScpmQYl1mefvUjKePl9U
9lxbhzRla1PdGMKrHTbC3gV08KYy8f5KLRIqNy2WCmRh/JTErO19OnZ+CHHZ
IlYLAa54asxNFh6fUIxU3EJH8e2rTiGTVIyF8tfMr9cc5BRatamJhr9J594m
11JRy/fU6/dxwiWf2q2yHjRsZqfXn3pPhfKY8McPhO+cPV7XajfQ8HnKKOru
YypoPV6xi6RZWJ8jZ9tWNYLjOVpn56ypkMz6olHFy8JTSmp/zZUR/Io/zflS
g4oZ2x8RzJ/z60u92bVRaAQrSi42bZegojIs2lK9lYn+c0dStdKH8anOgf/G
OAXvK1eY+RcwsWOrdoer7jAiO3fslC2noNLxo0BqAhO1d5SqB7qHELpLZG1/
NAVr/m2RrnNlQtg+g1tdYginF4bZJR6ngE/QXFGXdPthv2HdtUmDwJ9Xfvnr
KNjf+udziwQTKyhz8q55A3DqtqVsuV8D8ZTNXUd7GVAy5zr0qbaf8PHcC8uS
aqyT7lzPlUr8Kus03XCgD1J3PCr7xapRIN9R/fMGA/ErBcd6ZnrxbwFbWuwS
4VXxyd3imgyo3Yrbfn15L+zv3dyzLK8S5b/smHcFGfh05/UZOZkeDPr+06Ss
qIQTfU+SfBcdfv53exapdWP53108V60r8O+K5rFVKXRoNF7MPxnfidC+xuIl
ueWwk9pWa3yDjnZNszGzpnbktEeteS5YjtRr4s2zunRw6Zq9k13fCpW3Yql3
rcrw7aJyLd9aOuzkLu0LdG3CsaSgUcfPpRD6Q1937SfxLmeWG7O4Hl/YggFh
fKXQFJYcV/pBQ1r2xzf/Sdai76dRwDKrEmi+aRXUJFwK+eXBGCdcci7o/Hb5
eA/cpUOjNxAutRQrqwUQLrUriv5JqO9G5nXxDTyESy6shfc2zd8f/plRa4tp
NzY7nU+mzX+O9Lwwrzhqfh2znfWi37ugNyy+qZJw6VlH7KgF4VIl14I9btXE
l+48jnlHuGSsxxT8TbhU92DBZUor6ThHZ/6A+evpesvXhREuHSje7S011I54
n/LLlwmXnki0CCkTfng8qxu3GW/DLK8SS4z40k/mw4JIL+I/97dvOLSmDQv/
RBqdJb4kbrEilm7Axp5rfxbWJ7firLKydizh0qMNX17tJr60wOnly1PElxST
Nxj3k+0qe+9TvU18Sfa68J1q4ksPDFjDMmS7HDRp1xziSxpMm5VKRi1YszNn
j8W1ef4EfmSQvgmNC3S42dMMH9n24+GES4talyUImLIgHvC7INapGTs1btSX
Ey4Ndto3S8mzwGueN/pyrgmh+XNiU9psvNUwfiY+xUTJ0nuFF32aELmPd1BU
jfy81vlz44VMPJ39yd0t3ITggL9mWzaT539/yePYp0wENZs7zr1qRMfA2/QX
gmw857hRXLqPCQGrk/HrexsQnT3WemuQhXbjzfdpiQwMDSZmHiA+PpmmTi0p
Y+F610iL6BEGpspHVZBShwahc5HLv5DxXnuF216UgU06n4RrVetwIlj+z4kU
FuZEt9/JHqDD6flxAdOSWhT+l0vtCWBhl4DoRad7dGyO0MwtEa2FW+67nGW2
LFTqJxve76PBTN9lVWoTFfXNP5OiDVg429hGf+xPg6n5r2SlD1TcVX9fukCd
dGuxZXOXCg3LmQr3LgVRcer64/HNG1ioj37Fp9M7gmUOTjc0nan4oVoQwrOC
heSoG1U+voQ/x/f2v9GlIvxuIc17lgnXk6/yjiiNYFX21EmnDVTwcJ9T9yXd
t6y3aHJ94zA4RWudL5Puy92xesdEBRM+AS/k492H8f1Fa96tdgqe+XmYvMxk
YrPJ+koFsWF4vuCcMfxAetAtV9qC+FXyUJGxcNYQDu6cEswkflVZNKm72IOJ
arWWk1G6Q2i55WKqe4EC4XOKWx3MyHzzUnPqds4gVtKPPry4gYL04NCO1zuZ
6JJpP5knO4isIaadSkMNrn2unn3JxQQfs2DnSesB2PoKWSeo1YAuMZX5uJp0
Yu1Q06Ib/ShynNK7+qAaa+7f0t8WyUDy3ndbtR73wf6UUktmYxXkbTN8uK0Z
KLFO7HSN7sXkkEDcS/kq/Mws+C6mzEB3kHNndEYPgkQNzTVvVUIwyOeR1V86
5GPP17SXdCPby0Axu7oCvrNXAsbL6dDnTOP1Jp7hP2b4g1OmAtuk9ZNLwuio
viM0Xk3vwCatTbq73MuhHZwZ2GNNx1DAG8v0wjY0KTyJ8q0sg+v+g+99Vel4
NnUXGbwteMyvGdC1pgx9lwv4PJbREVm74ZSWcSMKC5aGn3IphSXjndCPLho2
eITuyHpdh3Sx7Y8Wl5QgcerquEUmDf0fsx6q/qbArezNvV+rSyCi1tGwlnBp
O0OEy4xwKe607ac7F7vx3CXtAmcpG7J8a0/Or//saS/VYNvQhQznaEYv4dKF
osnop4RLl7nlCqk9nWhoKXIpmj/fgP2xW4F0nH+O5c3drA6U/GKPJxAuBVtS
REsJl/Y82z4ZPtuOA8EvnB4SLnEv4tawJPzQzFlPn1jcDnfHglHtAjaER8vx
3If8u4qi8p0NbehY/ikoMJ1wVks/ccKYjPsjn23WfmhFQFimaxPh7/ElrQ91
5NgY39fyLedAK44cUzGRJL/P8rAV/4txFmz43tgfp7Rgsf5h9nnSh+n6tSr0
byzESAkvaj7TgkG+1vr464QbFe/ebicesSWl0dGI3gx3hZR7AzbE9+x/RVw9
y4JT0ePgfPdmLPywTlPm9Pz3lKdzkxXIduwpMsKLm7HhU+neMzps2N3v4mkk
4ynakFtO91kT7nF9Vgvaw4aAv0oQm/SHgkr2A7N1TXh6uOJzgQLxxShDpfFQ
JsJX+TmpvmuEW5Vj3qAk8V4r3t2tF5l4cmbYrUG1EeKforI4+dnoTZoajVJm
QjM8I0LiRwN4dU0O8XGw8bQ/VnQLBxNFN7e1jJ1owOZ1uv7z92U22ttQKPmN
gU67LakZBfW4aJmerUae/95+mgcUGFj03jqv2q4OpuWbEpeS7jtV9SFVj3Sf
R9118zmbWojX1yQ3ke4TSyvdrnebjv+0pp0lRGpRTVE4O3ODhSsr+cr8N9Hh
kKWY5zVBhYV85eP/CMdlTkho5b6jAca1d1u/UfEbK69Wb2ahaNs92aSJETh3
W7d8uU6Ffyj/AU0RFn6foa09+nIEnMPhZ1YaURF59mSJDwcLw6k3WsWPjGDW
66H0KiUq9IoPs7xpTCy/JundOjYM21u9PanLqeCKcyzcUs/EGoYrx/6IYfjd
u7X60wgFq8aas62+MnGgsqiXuW8YJk+XjPAVU3BdxnRkxWsmeO89T7zSO4Sz
390qvV4SLv0Mfcbvz8Tq08vuaHgOod+fVdfjTkHpaj72zmtMTFDpGV/WDYFr
U+q5fn0KAl5285kQXslbb9ixifBqnQinzwHCq5ryh1oH9zOhNFO/gHJ8ENZq
DQrnpmvAkpDS/8nPRMsBQ0WNgAH4LXH70mFWg90UX4mgUeJRXl83tgsOYPe6
2nW9U9WY/lMvX/+FAYkLhwOXyPbDpEk7dE6zGj46ti0XHzLwbd95F/ZO4mPB
zjEzYVW4LUZT2mDIAE+RdfUn7V7UqG2xixqpxOYAduratQwY/C5Z6G7eA+0l
UkM/91RiBU90vwGdeNe3yXaNK93o6gyw5AuoQJHdpHdxNh3MRzz2JnxduLxE
4Omf3nJYV9y3/8+LdGJp+mTo3g7EeXf4U3aXo+yDxpT7STomM1qfCX5qxc+j
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
GW3cRs1lDOxwjPRkmfNhrbZKo9JnEK1F4a/bRAnXRRSERpB52mw0JHRNdhCj
shfuSVQ2oHBINYEEDNpb487FfxjAhkHHqzIXG7C3IPtC6FcyTz9LpqbLD+D5
5w7ViV/1eMGSC2AUUbhsrf/z5fp+3Dx8JyTeoR7Rux4sLE6nsNneVUW1n4Nc
hln9VMV6uP5dtfLoIwqjVoZxzjc5WBW0WexiSx2WOluGM89TaHa9lOwnxsH1
wyLcaYFk3cTEtcWaguBHfY6Udh9sHrPNbjTWYtUBi4T+tRQi1pkUf6ntRY/a
PMn427VY9qlmqe0CCn52OQL6cC8eP/hcEL2FrB/42/5HnPBhcWt01PReKP9e
pSj7pwZi0/IV+8d44M3sVs163IPwqWYKk69rcDHxniOrgYc9fX51RcPdUEiJ
1tmkVwPO6u7BL3k8TP4zkxZf0A3JvF1GG7jV8AoNzlgVy8PJw4/OtIl1YWRX
R2vc5Wo4iDbf6j7Gg62Knept4w6sMgqNXMyrQsKRprgo8HAzXcg50LMNf82+
WE6uroK1vOtGr9k86GX8s3OIbMZIg22ZbXAl3pTL3jvYS7hLxzQ3tZANWfeZ
CsZ1FSiXXVwW+ZaLhPZOQYuAgce6skUcpQqcnaZx6vtlLraGXM2KJZ//8yB/
gZNnOY5kJQ3d383FDqv0eY3vyvFgvp5dXnYZ5Cop7bOLuZB1NmXLLCuGqVT2
UcXpZfgfXt48Yg==
         "], {{0, 0}, {51, 51}}, {0, 1}], Frame -> Automatic,
         FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999999, -175.}, {7.499999999999999, 
                    175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -143.8427299703264}, 
                    Offset[{4., 0}, {
                    7.499999999999999, -143.8427299703264}]}, {{
                    7.499999999999999, -39.98516320474777}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -39.98516320474777}]}, {{
                    7.499999999999999, 63.872403560830854`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    63.872403560830854`}]}, {{7.499999999999999, 
                    167.72997032640947`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    167.72997032640947`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999999, -164.6142433234421}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -164.6142433234421}]}, {{
                    7.499999999999999, -123.07121661721067`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -123.07121661721067`}]}, {{
                    7.499999999999999, -102.29970326409494`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -102.29970326409494`}]}, {{
                    7.499999999999999, -81.52818991097922}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -81.52818991097922}]}, {{
                    7.499999999999999, -60.7566765578635}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -60.7566765578635}]}, {{
                    7.499999999999999, -19.213649851632045`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -19.213649851632045`}]}, {{
                    7.499999999999999, 1.5578635014836795`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    1.5578635014836795`}]}, {{7.499999999999999, 
                    22.329376854599406`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    22.329376854599406`}]}, {{7.499999999999999, 
                    43.10089020771513}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    43.10089020771513}]}, {{7.499999999999999, 
                    84.64391691394658}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    84.64391691394658}]}, {{7.499999999999999, 
                    105.4154302670623}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    105.4154302670623}]}, {{7.499999999999999, 
                    126.18694362017803`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    126.18694362017803`}]}, {{7.499999999999999, 
                    146.95845697329375`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    146.95845697329375`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -143.8427299703264}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -39.98516320474777}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    63.872403560830854`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    167.72997032640947`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "22.999043443834854`"}], ",", 
                    "10.735320819945859`"}], "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422153275*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],

Cell[BoxData["\<\"plots/sweep.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422416079*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Import", "[", "\"\<data/sweepout.dat\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.769252501113154*^9, 3.7692525252988234`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],

Cell[BoxData["1365"], "Output",
 CellChangeTimes->{{3.769252504152606*^9, 3.769252528136264*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
       "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"Median", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], "&"}], 
       "/@", "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.769261460062886*^9, 3.769261496895557*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
kbz6XvEi8nrqgjm310lWPfPzJiXG6upD70ImTpUL5Q4Vmtm4iOx9UC91ui33
BdJk48WbXZ43VO9PkzzjLqW3Ol3ApFvLjY49W/vMKiFdY1Z3nOhRQr9+pnON
el1e2GquGvfzXxVsymj+u93Xuj1zOGvWv5/9hEUj8hWTzen+KfNKu0KPlQt5
95xafLWEhD+pkXD4PueoGWWC99YG6W+Km1ikWc2nU6r5FDP9/CK7+no2Lz3M
fG478laZ2fNPlJBTxztWOH6PdQ/Jkranqtuky+r7pciA8yEdLv+nvl+K9DPM
jqta2MSZn38T0k7aDggx+yTD4HbzbstScnL/g4n5HNW/Y1vZmW/lFuPQ/JrV
n+ucZDgbkmatX9/fLHjfsS/WMqJvgxz5j5bVr7t1HtjwhouTZp8+q513b3bB
9/OWg/3Grb23xEaGBXUY9G+ql9afH9pYe+NJb7w/WsbvPP2l3ttS8vrz3tuV
P3BOcIxsml6x9pfl6t+9QVIL/dHjeLTpczfz86ds+4/eM+wyv95lyJhlDqhL
zMw/4xtX7jvzjXp/kow99bxQ2hX1+1qIt2ebcuW+2Mrc/aFj7k76aPpcUp8T
VtLZ8fmxIqI+160lvkB5v48j1OeMrVxd+u+d2EbKdw4ye/eQD3keKHYRz5t3
77zeqNhbvG56HpnVUXGkzH7SKe7Mu9Ky6UTHvTeqcO5+lKy3qtTvRm/1/gR5
feh5yOq7pSVn442t2kyLz/r+zM8Xr9A1OStPVu9PlOdtLx2Zlar+Pp4bPULv
OW6MUnkoTHqVsruecrislLY/OLXJNd67FC5vAivGZLio90dI76c1L5f9xdwH
vaj/wml/x5WVS21nGGfGoS868/OywasqX4vtMfkw8/NxxfU5S9YnmvcpHGuv
LTnhdllZsqlVwpoe3OdLk26pEWktD5r+/MzPg/lje54uO0P5OkSaz6na2H+x
s7zZWfxQ4TG8hzBUGoy7+q3A3+o5VeTaueRrj8RZFsxMqmtZRPD+OImsu32X
30/mc6x9cz5tq3nHWbqn/5L77WOeA6fI3IpFgnwj1OdKqlR5d6XdkAnq6wOk
Tc5qte2uu8rE5R1yn7Ypb3pd5fFAufnf3kaOGepzJ0gKhvr/XO22+nmCpduy
tCpO6YpjpantPz4bnrrKA+dblav9xzmMRrm4uMWw1Fzq+4m06LWyfA879fXJ
YvxUwftTG1fp9rel5JvHOqlkCe1QcP35Ber9LjJ9U0bk0Vvu8uCPo3/fj1K/
p4f+usrWVUOGLHTXr8/4tuf9ofqKPaVtqQQLVxvF3hJUwq9Z0BX182bm15DG
3daOVOwv9Z++nLfCRXGMLDvd+2WfJ+7S5eLDHr8+4RxjgzRcFnHl3mNzHfGI
JYsed37nLr3/+rNCXD/UFWd+Hiz94+nkGyVMP0/m58GayQNDP4SYn6vuPyrb
cuDLctLnt5ZG28+fjer3+B4tpcHUJUOGrSxnYitp03zonysaK7aWaq2bFFpW
UrGtNCte8nDng+rPd5C/n5Tr+dMAxU4yunl3m8GBiqOlUtWUQYu+ekilXMvn
OpbAXPNMf48a4Opd+L9ykmtPaceR6ejDyfT7wv8mtb7xTH2/58aGDa5Ud4hV
eqSEnLxyJ0S8pGK/Io4fG/IejigJiyj2NtZGvT9BymzI+c3um6dYDu62peSo
eLw/XLa1aXd2+0of2RLbt9m3zbwnKkJCrxmHGnqY+7RnNdh0pk2Sj1iMWbB8
yjrOOYiXK+VHe4wvZd438RiVePBrtI8crr2wpf1M7jumSfHksSNeVjLfG7q/
9nxjzW9+cnLtiVoVv/Ke3RCZ8Vd6ZO2p6rk4VL4UPrVgbznFYdI9dfmIu+vN
c0pG9X5Z+fdDfuLzenmDvx9K1u+X+fn3KOxwtfiB5nODKoVkZNckP1kypW5f
jxU8d0uVLQ9GOxQKU+/3leoeR3od/VBeLDuvr/7xmo/pdfP98zZ39/QqMb28
ft3ul99+ahqqOFCiXOd0/vuU+R7hNiWHdFjd3jyHqPKuhIM7XMtLXJcTNacH
CL5/inyuM3qtzaTy8nBM0gPns6w7SZH266IaVmmhvr+LbFze7IPz+wAZ+GZj
w+er1eeB+T7xqDITkhIOqe/vIX1HBbarMVmxp4zyHnLKtYVibxmZXmriyPLm
uWJvXybItZQA2WRdtkWMJebyZX4+vWh45lSOnwKkYrxhsL0V68isJEdhm8d2
XwJlQ9Fx94xji+q/l+/RWkYP6/r0v8Pm+9M9F61ut36y+f50uwdJ+3o0M9+f
PvXEcy8HX/MczX/3pa/973Sg/PKtV43YQ5xDa5SPbwtWGprXXAd68emXImkn
AqVgVOH9xxqzjjpZXAtO2L7PxnwffJ0Cjdcd6WC+z7dSoNeGTQvM912Xbznp
5KNg89zbXR9PeDsvC5JWC4822DWdc6OTJNl/WUrDCUGSkDCoWq9t6HPI/Hz9
umhTnnyjgqV7/+k3pnXHXPbMz9MJIwyPXzQNlsKr+m11dUZfRObnxZ+7V+Rc
+zBETsTkbd59K+8JiZazhTs+nN3K3HfkmntFg07RIfJRjjZtNgl9e5mfJ1PS
+17xORcqu/Osqn+zJe97ixCbhm1tl40030MyckuPmr9Gm/v+giMb5YxwD5W0
s39d/lYEfYCZv/f1pEWbRr8Kk4fJ24d9Oc37tULkRp9Gtzv/Yb5/bsSiYV5l
25h/jnv2szuGlDH34X70urfjb8cwubZrWlD+SfFZv1/m59OjyrlG/rI+TDqd
cysRVYv7rgHSzL1V6cZHwiW890rfIf1531GgPMhbtZTzEPN9YO0Ppw5tGW3u
k58TaWmx0itcKlyc0m6VYzy+Pk16u9f9OHJuuFTZ5ZvT/jjPET2l+cLLr889
jZCLLyd0dB6h8pb5vhnr5z6PWy8238+0rvX5mSd03vCXxnNKVM5Z3DzXIq55
mfG9UyIk7U7K7Ej9+W4+d5kzqcSrfbMjJHfujOHPq/Ic00X+PGBdffrZSLky
0vliywvqOcp8/8esbvGhnsPN9+U8WTt049Io89yZtt67Dt/rEyn5Cm/pXboC
5zalyreJg7fkWxMpKy7VrTriCutybMX22qVZW/ZEZT7nF35S7QzvY3AQH/cH
U4p2M99X0ulO2f+aOZvnQtk8bNLr4L4oKRXaLvD4A8n69Zmfp1/677gQfzFK
3A+krbjTmXVAVlLP/h/5Y0m01A1Y/bxKa7VeM8+7rzJk7Od7dtHiG5k75tEY
0Xrubr1OJuU310VUnX3W8dsita9hntsWUWTLrDfuMbJ6zJyOi5wlq56ZD+b/
GdlprW2MRAfu7Ga1gnWultLl4NyTT4MNMijs+pN67dQ+lHluYp3udVbMq2qQ
UgN/GrurPOaQZn5+N96/ec2CXgY5+fvZ1KHVWDdrISsDuj/bkNs8j3bsvv8m
fm5mnvvrVu79SZvpsfKi8ej8Pe0479QojTv33zChjLkOt0n9kFvlXsdKmTsf
jjt9Zt9HtCz2+/fF10dG+S33x11jj3N+ZIz8s7jArKEDzPNVx9fx6324oFHy
n67ss3MV+0Yixebzu+OFW4ic3n7UvlEXzt+Lks7163UK9DXXyed7U+5piUoi
Tt0XzN3QnH0n4fLaaW5YgRMidnVWDDhajPPLIqTd78nNLk0TKVqn6fKzpdmn
EiKNz746Vbh75nPM5xrPT+7m/KdQ+XNQDme7aPO8pw2nfTb8m8vc12I3NOho
oeA42bNmdpPzF9lXGSxvf7q91rgiTg68LnRlRBPz/Jxv/uu6dZrOvstAWVi7
iUVQ13jZs3Tc+InXOF8kSGbN/vn6sxATZ+afOTvP53odHC9el95M/bmRuQ+t
U9dZuSP3mect1Pg3eutaV3Nf2qHZFmttu7K/PFEKek5odb1Wgqyb6N//zX/s
h/aX5MruVYteSZC1h6seaHmO/bgB4tr18d6/ZyVIyIUN6wN3sD/UW4o1Llb+
VcNEqeK2ecWw2+q53dyvePxXY8UvpRNlU+H4L56j2S/nIT41zvoPvJG5jnE9
3bp6EbVuMver/Do2PHbjHHO/XfvtM952m5cofWrebhlqZD+Ri/h4NEj50i5J
dq/5VqFnLdPz2v/qj1m35f7aNDdzv4X3+ymdH8YlyfWwMYt2novH+x2kjnuP
YyvfJMk//7jdr9JB7YOY66VX72691GKNuZ/jwQWPOQMfJUnk/tVflrWMx/tt
xWuL4WiR2GR5OHLXyn+asD47Xjp/Sm0wqFKyXBpw6n6pbaz3TZNP7++FNs2b
LJVnzXccX4fnblbyweOv+gtPJ0tzQ/6eby3Vvqq5Xm9ywfi/Hv9qrh+2spg4
yy7zcy/Ytnb+6Lzm+sg/X34LX+LHczwLyd0jrd3d9inSLGLZLwtafUL9oKVM
Kv5bnFMZc31Z0rq9xrGNU8Rm9ova/vWy15v9VOnJjT65U+RJvbHjf86Xvd7q
eqdt7923psiOgdvPOgay/iZNfkq7fv7KzBRZ0vX+xLA7rE8R8ely5t2nBqlS
6zffvfmmmOsVqtneGP/vfp7PG8Wxwp25qzakymG/cSPiV5vPb8PG9Z80YIn5
zx0+5nzI77+bz6uKvJPdyWPM5zH/XAmLtO9pIeu3dOoe9ui5cY/R4LnVzlq+
fX09/0ab58YNe7q2uD7LQY7l3D9yQJeXxla78+QP8nISt1d+qePTXhiXFHr8
plNrFwlpXW9NF59XxmkHamycnsNHtrpNXXiw0Huj9+9bot4tjc/UX9e5//W1
sXHeP5a9tk+UBUfnl5wy8JWx7PPuLTwGJcq1XE2qHHN7bsxRbcmFxWEpUs7i
yLnt594aQ+ZuORl9oKh8j/nEcnEZY3xlNyk7Of2zZWgOcXR7cLthlJ/0HT9/
XJeHuWWIc9i1Od/ixNu2xe2rH/JJgZYt05f2jZf5AWFteq3IJ60LPzg67Vq8
VLuQsbv/wzzyxWtijU+BCXJ2novXprK5ZN+MhM1DdyaI3ezIVhUP55LO5Tus
u1YmUe6+XWjz+GoOmRWacsG/opWEdxy7qvFUS+lhf3x7txUl5V7YzJ63axWU
hs/Kh9Tzc5VOu/481WxTIZlfpX31Ofcy/z08mmxzvn0RaTI92adipTi5Mqz9
xvUHCkm5S5W3J6yNk/TBVxdF5y4oBdaEVRraMVWWPe+wP3FrEZnV2Lg+95lU
Wf/PG9eKToWly0XXXXUj0uR9uuFMv2EFZeWgXjtW5yyu46PLfQt12VXKFEvI
OoffEt1L2JtiCWl77/d+BWs7mmJxeViu+PJtvzjJ6apuNXp8sxK3g+3Xndjn
IqmjzraYM6yYOI2uH9b0q5sYbTb8tPtzMYk3SuuG7w1i+cViSqebJeTRgguX
B+2MlWXDG3TM97K4FPiwfmTHqUbxvnPUY3X94lLo2/CSF0qLtHhvXLX2gpW8
MaT/W/k3kcXP1t3u3MFKctc/tMXqU5KUPRy0e9ilEjKnzZDffFoky4MQ+58a
FSshnvvyTfE6kizxxWKXVapeXMbWr9qndlCKdDvW98jKicXk3NKnSxfOSpHf
Y3saS161kkFH+tevmydVcte6d3S7t5W0u9U2YN/7vBLyIti2ef9S4uNysVhq
45I6Nulefmb3LbamaC0VvraPXL+5rCmWkmPnmhVv3sVZpi/f67bvmo3YPzno
7OTtKmGXMpNELRv5+963sulbPGXi8W/GJ51LSp3pRQ72/xol9ZpHWb/6UEqW
jtjS+dS2aJntcm173H0bubCpxYw6g2KkzsVRrRvksZFS1cbUM8QYpLEEtnjz
3Fqmlgn/mNE+UdY82Xo6X6VS8nafYVnx44myqtTTuCntbOSXahneOQKT5POQ
nLXyjygpu+aWWjp2SpLcf7Mzoucqa3my+dFir7xfjTv+6Nt+1CB7+dzD3btj
XC75uq34lE3z7eRC0fFLyz0sboqlZbJ9/n5LS5cyRXvp2tH1ZvggOx0dWoSP
KdK1jCnaide5vvcCmrpIzWVvjjXfbSuOIU8dfQ55S3S7fw11xtjJhJ3FtjY8
HSFJL5NvdE6yl+6JjVs/GhUpfxfrOWW5T2lZ6m4YcCYhSmZPff06raidvNv6
8fisu/Gy+a/zXa752kupEX5z5yUlyA756cVn39Jyb/t/cbZLEiTwYqei+wLs
ZKf9gTXX8ibKzatOA9+E2cqLuLG/9xjwxth//O0HjZqWkVa/FhxY7U2oTLTz
fx93vqxUrp/wouaaMAlqXfhg1V2OUmZErh3NmoVLulORJ4MHlZGqyyo+aGMT
IdEL/BfMqu8g1T8sabC+c5wMPRJ+fmLPshJVrVXJDUfj5PQgl5XTGzvKy5wb
Nxz0jJexpebP8UsuI6sTZ15P+jVeurqf+ewf5CCxhZeNjhqQKi/aS+NzD8vK
le3H5jneTJWLF1p/fW1ZVprPHldtXVKa5L7df+goP0f5533XrX43g2Xdi5td
G+5zlu7v7Mf6jg+Ru0/DHeo7OYuVVZ7id5JCxcmpgNvh0U5iKHPhbHQTkdc/
16v6rLezfDto2Xr+VpEvpVwnD7rlJH1zvd/sViJOHhS+cWViJSe5+mnHzgsf
k6XHs2cvGzx2luJLLA71bpAiadNz2t5u7yy2bf/127A9RZrO7rbl2CMnmfht
wfUx9qmS9nX4wODOTnLc892u3ffLm6KrhFQ5tX3TjgBpN3t+z469XKXsob8m
n/s9UIxjxnktT3GVbc4hfV82D5LuCe1e39nvIi47qh6fWy5YktLnzTRUdZHJ
Y8PTbD4apFyZLhN9X7uKW7OT1QzLYyV1z9wFfWu4yojdQ5ZY1jeK1YB8lYut
d5Gie37d1TS3SKyF/duBxTL/3Y0s79//TpJUdN+99fkEV3EYv/K/JZIs3WT1
5lk5XeXGh9dtas5JlkH3z86q3NNFmp8I2e78wNkU3WVDw2HHKq52NUV3cbwx
Ib9TZ3O8N/3vSD+vcqboLjG739nWe+dpim7S+u/d9Vrt9TZFN7FYVKZxiV6+
pugmXSvlLBLj6G+KblK8l7P3kA/R4vY0vlbeV+7idf+fw2d+j5HqJzZMWJzi
Lj6Ll/mermKQOhWq1184x03en47vMWxg5r/vlILHS350l04r/vAskPl8v2H5
5oWejdzFanP3kc/LJ4nx0hH3fX+6yeEqt1rFjUwSl+iRk/K4u8nOVY0fVF/4
zThtU0FDhdfl5LWxbe165/LKl5P1S9psKidR5RzSuh4qLCfypxSf3a2cFPfJ
+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
uzqHRYq/R/qrQ09SpFGlJ/d++ydSnN40X7nWK1Xk0f46zWtGyoa8uZ4+jS0l
f+zN2LHjZJSUrd4s+HnF0pJqfanQ54lRMrFeUsD9emXErU6xY5F1ouSQZf2h
D4KcpOVQ3/if7aKkfaLVhaMvRc6McFo17W6U7Jh8qG9R7zjp5fXbG8daUfLx
9rSpa9JT5PVf5f2a/hclN89/qtV0XYrsXflu+e4WUTL/j97jSjUpIhtLPnux
72i0VKuz7/7cc8Vk8pTn28r1jBbn0h8Kpoday4jkr4MbF46Wr8sGVvy0M/P5
tPqXqW/7RMvuAYMrbDWkSP9Puad07RctX2bYVDnXx1Lk7L6RUUVj5M2u/1If
VhN53O/KhDMLYiTRWHr06uEiIweG2DTO1P2KTc+YdyJZGrgE5DDOiZFPPdfU
TsuTIm8fN1k5sUCMrCuYuD26YF5JH5Taq+1eg1yeMXTKiGOWEj1pbfEJdgbx
//Nx+5zrjaZokGk1u3fMUUzEf+mdCzldDPIlyHnJ+5bJ8qF1fKUXfxmkWlnf
T8umJ8uC2Hpvqwca5GOoR98FP782Nmu5sFSFlFhZ+aZa/FJ7C9nkWOHBz7li
xfMXp25HtxpMMVYqTcr1x+C25th11Prme0oYTTFWHLyiHy/9kiQRNdIvVP0U
K/UbeW/tEZAs67bW6nq/WaxM/zWmZNiLKFM0yqxHNTbfWRRtikZZ4PXWObFu
jCkaZVSu87Z2lgZTNMqj4V8XjDmWJOeKfkmwm2GUzu73J246HyFbJvb4+3IH
ka4b204IzlyfRVzecNguScSv+kCrt4YomeZptPzkKHK8hX27Sz8lmaJIx9/G
XHOZnfQ9OmRysQyLFdvCZLOlWJz/V2TwiP8+7u4ULnEH0gdc3yzS5/HRQV2c
I2TXm7t7towX6VvhyrmzsUnf426RAwlvnvZ+Eiy3FvTtFZMeJ9XbHkmaPy9E
lgffdTlVNU6GHBlWf3aNUIm/u8+3ilecLNhx9mrLPGFy6urDp+tyxkmOJ5Pe
T76b+D22jpOe5SddG18syRTjpOjM9KZFRwaJZeUda4YfiJO1Od9unhwVLPVy
9GtYYU6czF7jVnbt9kRTjJM+1ScsbPUoQHYuS60e1DNe9kX8Mrv5jMDMdZvx
xNrMz7Gh5xYlNUkNkvgOZ1zKu8VLiVfVX+1pm2iK8fJtfWC+GeMTv8fMz5Wl
82u0v74pQGpWW77x2eXMz73De8JzSOL3uCdeAg/7Trh5LEBsW0093LVNggyd
6r008ZUp9kiQvh090u3sEk0xQdZZxVW0muMnvomniifeT5Avh8/tPP7KX4xB
oV1e7UyQV3uPlvNxD5APN+5OmjIxQW7XetJr3QlzbLOppUf1+V7S4L/padbt
EuXX2y9v5HjtLTe3xvS2MCTK0jfBt6em+EqHL8e23i2WKM0enSmYY2XC9+iT
KHOjR5zx+cNdHhRZ+LrC40TZ9uRD4OIvHuLfb2Cl9n8myqs7r74VreIphg+f
vw2ZlCh7R3UfN7FFwvd4K1FatXWdEDUiwRQTZeBPxRfZHXAWp1m52+fNfO64
WzpqSVqxzHXkr2Pb10hMkrIupT92a+ImI0b8OnB2qSTZHuKU6Psg/ntslySz
x5we7uKSYIpJMmrtydb7jthLsbfbKtX7kCRnH6ZNHtbEUaIMI9efOpokt/d2
rObUx0n6PC9tnTo3SXpMWD/jWo/47/FVknS3efm5+9Z4U0ySbRcMzYassZGL
2/P99Lx2skz2/np8WYyd1Dz4p92Ucskyq+rPCxtkrgf+f2yRLL/mHvZphk+8
KSbL2Nm1A3I3TzPFZKlSb1SfcT5FZNji6e+23kqWJa83BTWbXUym7K6Td8yG
ZNnTvuOTNy7WEtHpt11NhiZLRqM7idcqx32Px5Ol/pvxpZtOjzPFzHX9gGYl
+8elfY97k+XS83NLLid9NQ5fGnbev3uKDLt+paeja255v6vx/cD4FNm/sebi
Sq75pVJ07SMhxVOkxtP8u4Z2FFNMkROrq26sv0W+x/AUed7v9vY5mT77HlNk
3o2Bra1c00wxRaKONd5+tu5rY4unZ+bsXpgi7cL3v3njJ9/jHylSNeThJ5dH
qaaYItWMgcbTedK+x2EpYtNrU9q5c0YZveOyW4cOqTJuTY0SJ4PEFFOl7pbO
T6+dNMWqqXLgZZPTcxfHSos+a9qdPJMqx5169MxjMErb8du2D56bKrcL+NsW
2WKOZVpcXGvcFitF1nW8NK9RmgybvWXGuXmp32PZNPkfJQriWg==
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1k8tOlFEQhP9hBiT9Dw/hE0hkLsSEBQu8AHFBosFENiSEAQ1uJXjdKigs
5WJMfBVx5TAkBJaA8QUI6Fq/SpeLStfp/5z+63T1uT7/bGalryiK+6AKKqAJ
GuBtFEWdxGviIusdsA0WWH8mnpac4XsPfqiz8C7xAPwp8+wb9jbBGLkRYn89
86rdZc84+VH4MvgK/0XuNziGPyH3t8y6z+E1zg7CX8FfRvJNYpX8APwFfAg+
An8Pv+TsEXU68FFiDfSD1Ujd68R2pIZp73mq/7oHSzoLfpSpX/do+C5TxMfW
fML3b2AQfjPyP6rVdq2211XzFrgFBsA18N19kJY19QhtF2X2RflWpAfqm/ra
sC55sm9t0jVlbdJ7J/IuE8Qbkf+7HXmnpjV07LPWk3xbId4lDkfeRXeatgZ5
1TKXXvldq2Qf30V6JK80E5qNB5HeS/MW8cxeLEbOwZi1S8OuZ0va9rx+xJ4v
xIfET5Geyts591y9Py9zj/ZqbpTX9wPPqWpuROqs1NNv6S3gH9znvnrOkGZJ
87VlzZrTQ2uRpp7raf0xct40d13PvR7Ojj3p2OeqZ27X7+N/jZ7fyFWZ/9Us
bzunevfsxSzxp9/CUmSdjvv0D+jaZF0=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkskuBFEUhm/1pHOrXsLW0HTEEEszS3PYSQytpC2N8QAET0CEJ2mWEjqh
7cTwAsa1+P6cu/iS/69z6t4z3OalzclqxjlXghwceee6IgT8xc59Qh6dg11i
X/hCZN/28Lf4HtJ7YQDfBlln32rEnuEMfQ7LxFqh2453LegS9KHzcE3uLP4C
vQGj3r4pVoB2/BhU0f1QRg9CJdynWhbwl85yJrz1oMsiOMQPQRrqeSQ24u0s
5Y+j58L9D/BC/Aaa0EXo9NajetUZOmvKW3+qQbVoRppVHb+CjhLzmtcJPpOY
1gxP8fvetO775q4PuEPfw5Y3pLPk7KDXvOWqxldyp73NSl61qyf1pppU24w3
r3obxA7wRc5q4H/xqTetmb3HVnM9/K/dzYd5K76IHg73aWfaXSX8rzN/YstR
rr69xXZnGvapWl1ivWgmx/jV0I9moLdVC+9Jb0RvpRz2ox1oF09wFerRrre9
7VYz0+zUg2LKWff2ZgrhvXSg/wFZmVVV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.44697442364361184`, 0.5615685129975149, 0.9497017929239753], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmGuQl2UZxt93LY3n/0dYOYioKGZ2MEkN8MBhz7vsEqibJsVMNc0kBCwL
LIcF1g1wNa1JZ6ovsSBCuJxKWaAsppP6oSlUDiIuhq6QgH3qOFN9qa6f9/UO
fLjmOb33c7jv+7nu+3nHf629dXFFlmW/y7PsEpXfULlZ2CQk4YT63hRKeZQD
wj9KWXacb1OWDVX/SdXfEv6m/mMq56n/8jz6/ii8r/6DKr+i/lMqdwq7hBeE
R4Qe4W337RZ+KqwXNlh+h2V+5j5kfiE8KjwmXKG13lE5KFTmMVfR3iP8WHjX
5U+E94S9Qr9wTtgn7BfOuo/2iDzkkTttueeEPwnPW35YHvvjTGc8ztjwPPqK
fez2Ph7S+Y+qXKPy5z43ZzggrPOZ2cc33T5qWzwtHLFNaB9z3xbhuPCMsFV4
3X20Dwu9ljkp/T+h+WZr3VF5nIf9VpazrEXt76v/TZU/ErYLa4RGoUm4Mo8z
o7PVqjd47DVho9cYmV/Q06uq/9Bj6GKt0GV9UT5sPa3xGLru9plPSGab99Hv
bxk7aDt/S3jDZ91m/+qzf+CDz7qNj253+7TOvlXlXJ1xUPUtqj+o+p/tZ/gU
e31ImCectw2wySUVoUd0j03rhbo8fLtWqMnDL0/ZTxdZ99hgoUvstMAltvu7
9nCZyi7t4S+qV6jemeKecd+GCKtT9K9KF+4eY+yXfb8v/LMU33anWHuY9zXf
Nu+1nbAldlsp7BZ2CStc7hSWu9whLBWetQ8scYktFlvfW21bbPyK9dHJPq2/
jR6nvcfrzfNeGGv3fMzV5vmesR3Z+1DfG3TNeQ74rOftr6PzC/47yn6HniYL
kyyPTarzuHfwQqV1N12YZj9FjvvNfb9K5RjhU+hc7ZtT+Dt+z3ofroh7yJ3j
Dozxnfiv9D9R5XdS2KfKawzxOlPzsPMU4e48OOAdc8J+n+mceWHQY/vcd/Yi
zho095x2+3lzUME3Zzw2aM7izKxRmV/QY539da/vMfL9Xuc96/iA70OvbTbf
tllkWxU+TbuB+dGv0OhyhFCP7TxWi03xS6HOJWNzhY8LnxCaLDdSmI7/4+vC
i6WwxafVUa1SNJUNFeh8xf5XUREcxP3MK6KPdpXnQOb3qnySuVPw7H1CK+uX
wz93pODFB4QvZMG5nxNmmXdahJlZcNNMj8FBnxfuF6okP0FldQp+avUYvH6v
13vc37IGcesej633OrOziGmzPTbD+hjl9Ufji57jemE8+tR6C1hL5fFS1OtV
bxLaOEsKn1mdBc/iS51uw4tLhKXMr+/aVX4phX+uFFZlwZuML8vCP1dZvs99
HVnw3nJhRRb82+H2BM11l8oGla+Xwt7TUujiWmEc6wk32Q/Q13U+24PCR4Ub
rS/OeoNtc4PHmq2b0db3OMuj02u8Bnq82m30OtZt9H2V29hyjNszrWPaD3uN
Fp8Vv8Sn0NMUYapwW4r6jBS8Wus7ts1c2W7+nGouWGZuqDLHTnO7w33V5sVC
jvku992t9z2uvIiXmaPBfVeY84Zaps5yyCz33DWee4r3tNicRLvTazSYj9s8
vskcQD5YxDDu/2b30V7l9ZBf4XVq/d0dwp2e7y6vhxw8PdlzT3R7gfvuML/c
aRl0BHeXrMO+POIT+hviMfgYDjtrH4WDGuz3cFOT/b7B7Q9VRDyH09/ynMS+
AeuX+bt8D5vt+3We96THkVnrufnuD6XggZoUd6jWMh32nWr8rxyxuFfffKQc
ceeRFPkXcYaYMiOP2ERsa3bJGHnYCI8hx1mJE422P2NFXMcfi7i+wmfrcHuP
bdbpeYkdxILdllvl8y29SN/LLP+fUuQebSnaOzy+yxzAues8B3P1pcg7xuqs
m31O8s1NKc42vBz5DfGbPAj/W+29fS+FXS/TN486V2P9DSni5r9U70kRt/6t
+sYUuhum77+dwq+Iz0tS5I68P9pTvBnOq74vhb4+pu+/7pz8bfXfYu56SfWd
KeyF3WYKtxN71PdkCv/My5HHI/tXfb/YOf051ReleNucVf2pFL5coe/Xpngf
8U46ksIX69S/N4XNbixHnkQcI57BV+uziEvwJLHnMXNTt7kKriOuFDFkg2Xg
W2Jej30YHt9tn0auy5zZY/kiznWbG9e53eo1mYsY9Lj38YZz6QdS5NPU70+R
Z29VfU4KDn/CMrX2C3yS2EKM2W6O7XN7pfeITxFLiDE77F+73O5wX5/vNXGO
+DaQwkbY6lbz88ul0CP5QeZcnpy+yB0oc/MBtmAMHuYtxFsEPuS9wRtrm/to
bzZ/FG8ySuYmN2Gd/5lLBjxXn7mm4I+THrtX+/yiRI6WIgYTY06ofo/qc1Q/
UooYT3wnzpOD8cYjF/2qcxfedpPLMX+/+mr9/SH135ci1h5TvTVFLCYmfzmF
TQZ4r6t+qfbcUI5877jXmJUiHh/WNwdScAd50/4UfHGT6r9OoY/bVH8thT5r
VF/g98wZyf4yxZy3lsM/tth3jqbIrevVfziF7mtV/00KPd+u+m/9Lv2s6i+m
0NlE1V9NYbfqcuReE8zBNzuHJ3/EPsyPXdEXZ6T9tPXH+NQU+SF54ndTxB8S
x0Mp7Fil+sspdIuOX0phu0nl0Bdz/ioFd8ADvO9/kIKj4fgR5m54Gk6BW8iP
iry5IZb7ID4QJ8iJsBc+MdLxoMkczxxwJHGSeEksne77w336jLnrFp9job/j
DnAXyFmIYZ3mA/LuJu/jkHPIOnPbIss3+I4hU+n9Mket7yr3sohV7LXOczN2
tbkJTrrUNsCvqh2LiCHkIuQz5CbVvvMdvuu8YU75rvO+5Y14vTkILpxiOXIV
8si51l2v7yL3+26PFzlIm882zrwGR053jCPmDff5OEeNuYq9lmyfD3JB7x0Z
9EceQK5RvHPQzTTPx9mqfCbsRMxtsb6u9fpw8HU+E3sq/pUU/04oi/8lz5nv
4GviC/8u4PJ+yxD3yKt4v13jubEBPM6bk/flJPsO31Xap8jfmv12aPRbiVhJ
PHvX//rmp7jP3OuFKfiafy7FvxZK/lVs8L54S/Z4jhfsQ/A0cWi9x3lzdntf
nGGd+9gruT78Q+7Pe2iG/bXe/AbPkYvzloE3yd2JW8Qx3g9zLE9+P8tjY+2P
tIt3BTGK+HbQZ+Zt0ez1eGO0uN1oG3AfrvQ6jI33HPhln/30pOW7bMP/Ay8L
fkg=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlElsT1EUxu/7qzbuey07w06UsDJ1olU1tuYhQWuOhJqqJCTmWcyzjSki
ES02pphinhOqA6osDEHLTsw7fl/OW3z///ned++559xzzm0/o3zsgoRzbg5I
0r937gX/x8GH0LluETxw7iW4iVYEctHKwVDsQaAXdhkoxM5k/WvWvgH34Bnw
hsC+3YVngTTW9gc52I85ozN2F5AH78n6V4HtuQN/i16HVgtmwh/CU535kK/6
0GJZCCbD+7E/QULNQDV8GriGthm8Yu14b7EqvxLsdSCVswpAc/YWgCBhPp6h
5cP/oTn4E3hH+Cn4aXABXuotvmPgHf4HojdnbTKoQ+sb2V75rII/Yk0Jn4pB
b3g6emVgPs/Dt+vOsEtBKlod6yeydhIYi/YA3gIb0/XkpytrngdWo+vwTpHF
dgZchHeAVwR2xln4SLCVvePBM3x1j6y29eAWWv/I7i4J1HiLQbHMAge93bHu
+gSYgr1XOaKFYC12H2+xqqaqbQr726C1BQfQekR2lmp8G74SpGD3Bs3Q9qi/
Avu2Cvuct15SDsrlHz4zA7ujbWgbvPlu5LzfaGvgr53VVLV17MnGzgI74PdZ
k+esh7t5O0Nnqed/oA2O+0M93dVbTsqtAf4rNB/ylQDLsJd6sxWTYqvwdvdL
lbN6CeQEFsNOtMNgOXYhSEObpx7Gdwv4z9B6VL26BUxFawjNVs2me4tBsShH
5fpRe5z5mAv/FtqsqCdXwJvgV53NwEJ4I/yKs2/l8NnxvOsOvqN9Apfgl8F8
bzEq1iJwCN4KPgR7KDgKbxmZpm9H4Pu9aa1BMtrn0HzpzAVotXH/q6fHwFd7
yz0PJLG+2NtsqgZDsJ+yflE838PgVfAl2IvBcPgNb7OmGdAslMT7ldP70Gqg
WiwDJ+VPPZiwmdZsl8G/OstZuWd46w/NmGatJrRZVcyj0arhE+L5HeVthjRL
+jbC20yq7fJBJkY2KHD2Zunt0p3objQT+3z85gQ2Q5olzZRmSzVVbXUnuhvN
hGbjL9++OIt5k3oPvVdgPbYL/ge9ydmajfBx3t4m9YPeUs2IZkVr1usuvOWq
nDUbmkHNonzu9vZG663Wnevu9WYp93TNiLcaqBbKUbkqZ+Wumql2w+L3Qv51
t7l6o+L71FvYLrLaaCYq0QZE9vboDa2F/wf5jcoV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7728642530128351, 0.8224866955302859, 0.9779955439793904], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vvXu7PUPWn/s95DvBH1qroGuz/4POAv2Pg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlsVlUUhc9/Eduee1QUTRDkwQRwSIxDS6kGZRIThaI0olFwoLaFB6UM
QgItPqgUUNDEAXDA4QVkMo5AIjgyOTImUFqBFym0wANTUQH9VtbDSvb3r33P
sM85+7++ur5qUhZCmIkuQVemEF4ohDAbLY0h3AAfJD6AvoIvooouIXRF9XiD
UX8GKEO/4w2ByzP/9gc8DK4gHoB2wEOTY+Vsh99EIwqeU3Nfh+YQN6EVeEdQ
K7kr0GN4I9H9xA+gZrxByXOXol/hK+BGvm1A78KVybkjUAvcF/4TrxV9AT+F
vmHfJ9CRPIR78e/MvOadeOXw5cSXoZ/g8+ScJbcTzYf7JI/Vgj6DZ8Kl1KYM
FZH7DzpN7hnUhD8afxZjNaADcCd+L77tiV6Eq5K9RnQIvg0uJi5CG+BiuJLc
kegt+Ge+f4Kxx6GBcBl+IjdHP6i2cB1xLdoH/5t7LdrDPHg4/l2Z97wLHoVe
wduImsntl3z2qtmXeD3hNcSr0TK4f3JtNOePcC/404JzPoFLk9cS0ffwL4xZ
zdjj0WB4efRYumO6a0fxN+FtRlPwDqI1mWum2rXiL8F7B9XgTeS3lsx3pBOe
A9dQ+1rUPfeZ6myPo8n4V+E/zFxj0AdwtWqItwjtJ3cC/v7MY57Fq4H3qnbo
JHw7XJL5TL6Fc7if1o6WwJPhS3X26D94SnJcjALj70Mbgu/ck9E1Vq3129Pw
1Oi7pRqoFiV834ex+6K38YqSz15v5o3oN6i3qDkvwHVwc+Y9nIHbcu/9GKqH
V6L1Bb8xvbWr0SPEj6KP8dbqzRF/jW7E+xCeW3DNVLv23GezBU3DWxT9rdao
tbbgLw4+o2fwapNrpzWdjq6xaq2c8XD35LPQGj6C/8LvwGtHz8JNyWdZh67B
mxtda70pva3DufembybhHYO3Em9D0+GO3GvVb8/Dx3N7OvMZcEyurc5wMdyg
fsZc5SiSO1v9qot7XoKn6fzloQyugNsKrtkWvv+b33qrtqoxPAD/cME5m6Jr
qtquVY3h7eS/GvzmKvW+c+9VPUS95D7Ug9pdi3bjb46ONabG3kH+guAxHsTr
ndw7dWar4Jeie4t6hnrH1OS7qD0U+PZc7rWqB71M7p7oXqk5Nfd70b1Ub1pv
e2N0L1LPUO+4KXkv6yS8m5Nj3bH18E7GXxi8xod0/tG9TT1cvVw9Xb19JWrD
+y26l6tnqXeNRauIV6N2vMeTc/XbUfiO5N6iN/kdPC45Vz2jA97N/K8z92uo
Cp6V3Jt1xiV4n0f3bvV49Xr1JPWmW9Ag4nu0p+Aeq147BL41uIepl90d3Xs1
h+balXsu7Xk03qnou6Ieol7SmHy3dKdycp+Lvuu6M7o73ZL/e/Uf9j7e/+30
+wQ=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9605916799651181, 0.9701299199599625, 0.9515921858697814], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
ZksK+/8fTJtjPw==
           "]], 
          PolygonBox[CompressedData["
1:eJwllklsV1UYxd9/aNR3r2IsRcNMBGIpLARNpC0kCjhEWhMGRRCMLcigUTvg
QgXcSAu6cCrFCYHCQoGiRhCKurFVisaooEaZwURpKwsZBKHq7+QsTvL93rnz
/e69b1jVk9OeyCZJshrlUUeaJP35UIHuiklyKCTJN3z/GlXj9cCXiP9B9fBQ
yryWSZLXUSt8PVxNPB9tElP+o1ySrECNeP/ybTzx42g5fBEeRNxFf0vgg8F9
7UOP4N0Q3dYCtBluQDcRz0ERL0/5+6g/EC2F38ffjdeDSuBa+AJtlcC9lB0W
PdYmtB3vT75dTjynpfAB/L0FSdKJqvFOo97EZZ7GX4NfyEL1RSPwhsCvZrwG
W/G7+HYxcZ81Ko9m4b2Iiih7Df7zjLVCawK/i9+ItwcNhpuj2y5CIyk7L3gs
a9C3eE3ourzHcCPey/AJ2jqJBsMz0HzK3oza8bqD90pjqqOvnegUfQ1kvcer
L7QaXoXW41WlXnvNWXOfhZoL3GZn9Bg0Fn2bGzwnzU1tbKDuK9Fj+Q0NxS+M
bltzXIffD67KOEc2wj+hBxjLcHQ33pDguWtOmltL6r1SHdUdhNoy3uP38GbC
jdRdhU7CM+CGrL8dh6fDHxBvR8fg2+ABWed4O7wNdWS8h9rLadFlW9GR1Guk
tVKdL+EzKDC2iage7yX0Yc453l+5CN+f9ZwOUfZzOMta5VAlfhl8lr7OoU78
UvhMxt++gt+Cb2f+d6Biyn8GZwrcRgW8Dp6MNwWNgT+FkwKXuRd+O7ruJFQC
vxMdq85o+AB9TGVsK1BltBQvRwfxjqae+3E0F+8hdIz4KOpKnaPKVe3BFvgE
ast6zbX2qqO6qtONtxeNzHqOmmsx6so4B3fgVUT3vQz9Ao9SzmZc5pPUZ1hn
Wd92wXOix3IEnYJnR8eH0e/wQp0x9uJqdC71Haa7THPeD/+Ruuy1+Ivxfk3d
t3JEudIGn6evL9Bo+HDq3NKeam8XoJhzDvyFtwjuk3Of53WfoG7K7kLz8B6N
HovqnMUrj9579bEvdR/qq105DY+JjpWTe1KfYZ3lsWg6+zc5OJe+Yz8/xpsK
jytwDigXdMfprhulM039y8Fxsc4gvJkyddStR7fitcA1xLVoLLwpOlaZW+Ar
0ULG/iZqwCuD9+OtR1vgS8Ft605eSfvj1Ebebapt3dG6q2ejtanrqO4GVKqx
BY9FOa/c152ou7FSe4i3NbrsRlQOb4uOW9AEuDU6Vp8T4RDd14Oomf7S6Fh3
cBM8IPhu0pnV2dWbpLdJd3I/vOHBZ0t3rO5a7aH2cjfqof4L8FrKNqO+lH0W
Xky8CF0FPxMda82ugHfCP+S9ZnfCO+Dv8/42BV4GP0bZJcop+B54RNZn5mf6
ey7aUx8pfkd0LmjPZwbfmbo7VefH1HeS7qYJKItfFx2XowxcGx2XoURvUfRa
6w3tE5xTyi2NcRK8En4j5zkXBueAckHfioLfXL29esNzwW+63nbNKQa/6Xrb
dSYuML6a6L5L0X/wU9Gx/gl64Yej11p3yunUZ1RnVWfsb/h/vjYflQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.994470734889809, 0.9905817859607862, 0.6395517993036217], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
75X4ELRo5rp+5o/dccFCxBO5vxMzyuKelOEj6ujX1OMyWlYx7TmnnMuNbMNy
tit58yLzlrvMXfZz7eOLJO64pF8m4Vc2s/6C/+DDfdKYt8zjh1m/nlUIP7a5
++edMn6m9WkWMxhcqLy7D7Eeesy6Ej2KTkCfn+7z4Zw4kxluH2Te4s44xfqD
MfQjToZ+R5dzv+1WqLzvdreeneN2bAL3bPQ4ep07f3+vY7bXBa5pbu/v+a72
mK2+T8GPxBGIJ3QVfTaXx12D++BXTtFn8ChxR+KP/3Eduu2b8tBl6LCvXUf5
2/KQSeT+B88Dr+00jhWmb7npvToJXV0F+iRRT3mLcYPr+/LQEaybO1/e49/1
vSu7iyTGOcE0y+IWpFmcg7S3ebK5+etwYiO6m4wpBT+3cBv2n/vTd4D3xDrQ
PeggfI2t9tmXWi8R6yaOXJvYi3A+VAq/H////jTOcI7PvHoa9uK2UvD0Kebx
qtYvLcyvzaxzjiJGLZzj1L8WsW70RinW0db8vI9T+LuGU/yJlean7M1hgmnD
mYw133FPwkcZaj7tY76ZZJpRnmsepN9bxpHF5ya6L7pqH8+PztrX6yJ2j+wN
ScNfamOZwZ/6znegFV4La+UuTQyIM8b2gi/zs/a2zF3vNUFT7BD69OA09DWy
hxx/ko87+t5JzLeX8WT0Yn34T8gr8ohvgW5FX57mlLbT3b6Xy63dntEaXPgm
1Ty+hdfOHvBnftX8vyWx7709JtM78C5+1q4k+uFPVRhXc7eDq6Xx0YZu4J6A
LwbeRp6n6D1kayEFHzKD7DX1+FbGV/BamafM7U08T0u3Zb4sa6zidvwRbCk2
dT/vr+Ee+2jgMbz9IBf9/f5Q32vOGUcjl3ck0U5az3tr4vnK3DfnciPvmTJ3
hQqvF5sND8K/+PLVvFfsXmrafGh7STl790I+iBHsloE0zvl0n/Ea21pw4Vdh
A9C12EJsAHyG/Zvu8kduR8axedPchi1EF2fvKlPdhu81y3gznuP8sJPE1qfa
3k53GX+MNzJi4fg5xOuJl3d33Tj7PMTcid+38/lwTuiJfV3u6XZwdfO47P2Q
lPchzooz2bWHrc1sLynxFHypA4y/r9fLOwBxZ/r3TsPHnOl99vZ6J9qfnOI9
tPT9mPggNhA9gG46TeXrHE+8z3f9pXvE47L43Ou+249xzCCL4f3d/XiPJEax
vBhxvzfc73TsNfY4qYzBETsgprrMcbPJausjuFowxSmxyofdDq6bVH5asFBw
i2CR4JkkYtTLjWu42xcIWsOHnps9pi4TOy26PCkJG/l2EvSpCq97DdhCbCYx
1YLbdjqeksVa6jlORKw1cb/JHgfeicb9VhIxCnBXSyKWW83rOMO0QX+2cYo+
nZaEDcb2TnXKmm72vqHFMtG8o9ILHNs7P4nyaNOYs3wiCX/oI++3t2lN31qC
Q5LKeHELj6fu0CTeBYmxrylGnKrLHnGsqxyjIv5CHObsNPirpfc6yPgoE9Pq
6vGPmh6rkqAfsWLibcgDb3dvWj6Wu8ybK2+vV6URF+tmXHU9jvJ5aj9IcHAS
cS7iX/UdF2ONWZzsCsfSkAfe9Xi/m5OEzYNGyMq/3DY3CbtIW/Y+/ZZla7XL
nG8v0xS5fMfj0SPvusw7K7HHz0XD29Tv3CTWO8JpB8FIp5wJeug9j6cPsdPn
kpAt1k4M/VaVn7UM3OZ2yr84FgmdtjlGmcUXT/S5nS97PUowUnCY4ELBBYKO
gtvddojL9K3ldXUwX3R0+WDXsYfz1G+E4DZBB+OmfK7rbhUcLrjI85HeJbjT
c9/huc9x31sE7Z3enA+aEosmXnyhxzHmbLfflK98Iyfmf5DXBa0PdHpOEn7m
kepbJ+93X79N4gMTV6eNN2HqeJskzr673vH1Ou7Dtyq8o/A+g09Ofe188EWZ
3yzx2w83jfdHPgTtBAcI2ru8n+vaJpXvzWV+W67iN9GaXjtjuBccYVriwzMn
ZfQl3+Twbc1JpkEXv7d2N124Z3Df4G5cxzEYYjGPJWHj8QevT4Lv51hXtUoq
9WJLy3Omv2ibmYT9xheY4RRc+L07PR/xcfgRXhymtqcE8wWzrZPwF2Yl4UOs
MV2hb6ZPW1g3Pe6+9Jvu9aIf6/ndhn3yPQHfFZyQhn5H76Pv25lHhufjbbqX
3yjbuu7GfLxH93Zbp3y8xcCj9d2XORKvhTVm+jrT36TYOt6szhKcmYS9ae11
VHc7ZfgFfrrYfEPayWfZyfJR9NqhdQ3jY759zS/MgU+xwroS32Sly/gcq1x+
2b4/dwDiDY/Z15ngN1XeVolJzXAbfgi2BRuDH7LQ5S9dl9ldyl9Yvr7Qer/M
R1/G4LM8KRgq+JPPm3SYx2LDbjEvUHdjEj4oNvOfHr8gqbTltGe2nTTzBW4y
Lr6x2P0eV4w70ZOe81XHw36wPfzRZfySbY7z41tsd/lvfgf4yX7Nzy7/1fFC
xo83zXiD5i42b4+9Punyeu+NtX/mtVDmDQx9flka99qtPpulXiNlYoQzfR7E
D9Dr6Hfes3nXXlAMX+wnr2mRaYlN4G0PP+APadwXsJvY2Y0+N3DxBo89eKkY
eLEfIyy/+AHY7ZlOB3vt7AG6cjfAn1ltvNwRmAd7nvOdYbnfoHb4nf8Xv5E9
ZbqAa5nbaWMc48E7y3MOcblKoRLvKs+z0u9a2PnH3Zd3cPTYAO+BM7jBZ7LA
/MTc6Lbr3bbY+x7p/pzlJz7DdS4/a7pCI3TidR6Pb/SV+P0/to+blG7Oh17q
73Xgv/VzGVu5MR/9eK/l3bZ1Gr7ZtcY72/ugjJ0FH3PgWzHP145NoLN+lwb/
I3/IG77LE14jsoJuaGv5wL5ga7Ah2BLkFb+JGCbfO9COHdrfY/Z1Gb9sgvud
7XZsF9+ocU/4tBjrRT9l3yOQousu8/0h+yaFNPtegxT/tL3x1fR69/Hc6IMz
XcfZtvIc6I82buvmtY+1L8TesPHcGbCB2fcOpNjoDj6DWj4P6tDh+Ig97YM+
av8OvTnA7c2TSh/iIM9dw2vF/+V+wl0H+WvvdVzue9Gf7W+OcXm46Qu9r/S4
MfZlx/o+dLPPClzZdyfM8Yl5d555+gzTAl7EnmBXkA1864leK/oYnsM2faz0
3/mg9ef50NfYo4/y0Yad+jAf5beNY5L5Hx2U6Q/SL31uG/KBC1rwrcY6x4GI
B1FG96AbuNtiK5mfNs6Yvp/lw0bzDeeH9pHW5wMv/Ec75Ru8P/aMb4Gco6uw
/9NdxlfhW1m+AeWOxP2NO9Nq7yO7k012GzKCXkAnXWeebe0xfc07md1CH+Dz
gHuN7TIp68ZfQVeit/BN0EeZX0OKTK51O23cJeb4LDOfifHZHS+7803z3mra
J8YXPnQPP/1A+9a0oUteEPzF+miJ4Hnri+fdhh5Z7La+ngs68G0K36g0Syvv
3tldfHJSeV+cZJ5YZJ8cH/1Zp/j3/b3eaeaFeYInfcbzBU/l45400Ty6zu20
XWNaQZ9rTbPZPpc5Lq8oxbjOaeU7Pe84fEvAN0B8i4Q9PN5vOvDlQsHT5nXS
Z+yjkC4yPbijjLScLPKeLvJ7F+9e/bwn6DXEa+Qs0c3PGUdmLznLAeZHaDHQ
dZQHexz9njPNRvg8mH+U14iPyn2GWCL8Ci/Xtp/O++mRfofFd0dW+Q7zCcs2
3+fPzVfeLbFZH7udtjdMp20VcX/DT8D2ZW/t4N0kqKW+B+fjDbGz27I7Knh5
Z7zUbcf6Le0y0/0Kl49xHf3W+/wX5OO7ZN6p82l8FwCteZP+xGuf53Mbblpc
4Ddc3nSfMW1uMU9zX7zDfE96p/l9lNuOMM2yOe40LtZxo+fgWyv8/Hpaz0H5
uMfuvrOW4u1gL3/DBe67zK98nzzMexpmXPDyULdt8F7ZxybzFGeOr3acaUZc
g29Zs2+WSfnmlTeYrX6T4c2Iezjnge5D76MLodENnq+J9RWy28Y6i35L/T4E
Lu4DfCfL97LP+z2Jt6aVvuPS9rLn5H683H1Z34t+c8rei7b4beol96WNdxL4
BfphH4d5HXzrs9zf5sEHvBXyDouNxGZjM7GHw62PzzXP0tbe7djDxt4fOuls
1+HXnG56YAOzbxTuNV/e77dXvh1a4XU87G+PkIM/up0xj3iNtJ3ltbCHdp6H
9bX2POgk3u/QxZwNb1ro6CPSuB9O8HdfyCtv63dbVu91uZPr0C/wMvGL9taj
5+Qr4yXnmhezOMg5lod2HsM9Afk8ym876AXu9NxtkD1klPsQugM54G5BHWP4
BhrZ2+5vnBlHP+4hR1nHcM851nLcxd9qQT/ewzjvQ/zt5GbrDOQP20RsZon5
Czohhx3d9oJ5B/7r5m/kxvrePt7lrq5jPuSzrfeM7HEnzu7lpNyZs/dU1jHC
NOtgec3iTOiD870O/tPADl2cht7t4Da+m+Q+flxqGbONzuLv+NjYDvwqfMFR
1jVL9tBBL1inLLT83+665y3/m60PWOdi1400jsU+a2zQM3vol/nWedQ9bd54
zjrlJtctNA5sP3ae7/KxC43S+EcL+TnP/1XMt67KvqEndjLUdfO8XvyJzHf4
2ngze7/Iuoe+c13HnjZaDy7wutFndf0tP+343QfbbnK3oYy+o514FfYJG/ax
ceNDYBPgI+Jnh3qf2PUN+Upbjm3HD8OPxC/Dj8SXpYx9xMelDG58UHxh/ET8
RWJamT9Xzb7NRuPF16OOftBmndfEfJw/fjR92RM8MdfrzfbAPMxNrPA761b0
xWbz6wLvY71x4xPjR6PrN5mf0akbLV+LfbbQD58K/5gx0IO14I/Pd9s6n8F6
l/mnjnjamWnMSd/M1yYFF/LyovkYvV/PsUNsA/EyeAVbQYyMMnKGvmeNyBjx
SGJX8B105xyeMC0+Mg9xj+XenMW8iIFlMa/axvG1dQTlLbYvxGL5h4S5oQ/y
itwSl/3eNg5c39omoTsP3GN99D3P83xjG8b31tjHw9KIsfJtcyPHbZu4jP44
zOtC/9Y03t0x8XycJ//mwU8t09Bxh3oMZ8Ve4fXDzMfsrYPXxPiOxsGYzE/9
3OWvrEP/B1UkexM=
           "]], 
          PolygonBox[CompressedData["
1:eJwllllsVlUUhS/9h5b/3IJjKcpYBwQEEymQSFETpYATqBQBBxShJAJWEymg
iVqaoAJFEWnByGCBAgZbElBBBH2xkw9OFDRiIkqbyCCgD6UMid/KeljJXXft
s+/Z5+zhDpxV9tiLWVEUbQBJkJ8bRU05UdQMdoQoWhBH0QUMusDlTBS1g2ae
14In0NaBiSycAG7FfjN8Cs8lYDj8MPxyKoougdnwVngFz0vBdPgZ/J3GV/9E
FM1Dmwaq4TWgAy2JzWS0SlCB9iXvOrtF0RD0sfBDYBS+RoKHsZ0P78zyni9i
25d351l7CKxCGwiaWd8E6hULGITtDPAAWr5iQqsBW9EOxvZdCB7EVxW8A1/t
4AZ4NXw8sRaDm+A/wPdguxfMhPcHeUmfkc4qw/kWcrYjwYdoNbHPTj5ugf8n
m+woCqAS3h37ETlesw7eK/beqkEt+yuAt3RzTA3wAbFjawS74P/Cu2fbZwXr
31eMfKsXGAAfDu/C9gI4gH0X6Edsj4JytD/hBzibf8Cz8KOgndg6wFzWH4Gf
SPndHPhy+ErWVoF8eIr9J9h7EqyF/46/5fg6CKZiexb8ko6iX8Hr6Enss3K8
Zo3OD97F80WwO3gP2ssZ7QlfR8A0nleAyWgN2AztTjzY92NtBH4k9p/Au2iN
2Mxlr6WgBL469lnojvrBZ8b2rZw8je/evPs64ZgU2z5wEttTujO0d+B70faA
PNnCR6eck4/Ae+e6llrAJ/AeoCLhNVo7LPbZK6f3Z7xn7V0x1wfXmGpNNXEC
vVuuY/kZrEa/OTj3loBN2K4HBcpFMAjt29ixzgGPw0/Ct3PWO8Cr8Ev4HJJw
zah2vgffYdsKnkb/FH4EX22gCL4y+NubwWW0ZfAynotAJ/xteG2233XB3wu+
e92B7qJeOZS0z7FoDbr/pN/dDR8Dvy3LNdnE3orgg7P8rgW+MzgX1KPUq55D
b5QtOIs+K/azetR5+P36fsp3orv5BvThuS+YhPYmfGnCd5ILfyY49iugLXbP
Ue+RTU+0e4Pvfh/YjbYr9tkcBnehLQ0+C9Wcak81pFpSD0sE9yD1IuVUn+Aa
UC18Bf5iv6Wq8bRrSrW1BpxLuIcNVP3A89K2WQB/I7hXqIZUSy/BF/M8DvwB
XxJcW3Xgb/ip2He/E7yGVhL726rx46ol3q1LOQeUC1qjtcqZxWgLg9eWg3a0
D4J7mWpWtTuRd9OzXJNt+NsSnPvV4Fr0Y+jXpx3DfLSN6oFos0EP9PXw0hz3
PPW+37C/Lu01L6DNA+PTfidNPVu9W988yvcmBN+talS1OiU49xVTi3IreDap
RlQrG8FinheB24NnkGaReuAF/C1S/iVcIyn0q4N72wzlBNrnII3vFBiH9pHu
HF8LwWB4B3xR2ndSDv8stq1y8j74htjf1pqh8Er4k/h+ClwTnIPKRc3Q51WP
Gfd29Wz17nMZz2bVgGohHbxWe9beewX3Js0szS6dsc56DtiAdmPwLNNM0Gz4
AmSnHFMxWs9c2+pONsELgnuLclK5qZ6j3qMzHIa2JePZpJmk2aQz0lkppquC
c0a5ozN5JbiHqJd8DFbA65Sf+NoORqrfB88azVTN1qnB/w6TQFPsHFeuF4My
tNFgP2uXyQfa8diacuZltDvAW0n/o+hf5aHg2a6ZoNmgHFWuKidr0WYEz3L9
s+jfZVvsvdWBwuB/EP2LqEe1Evvk4L2px6jXjAnuDTpTne0I+Lake55635XY
satnVqFtje1bNncG9xj1GsV0T/CM06zTDD2m3h2cazoznZ1iVuyKcRTa/4ox
U74=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9523141239636311, 0.848648422431656, 0.28048902869100883`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
pms99+XazXl/cM+s05wlupg4LPYW9hTxWUpsE+KylNggbZvzLqE/MV10NvYR
cVxK+n+jvbWNNtT22p7YUjtoz2IDbqmd+qW2F3gvzw/nqZ/+zHhtsq21ebHb
oA1+TTVt/s2KtPU6aZN+q20HH2V8v4z3P6Bf/WE1dd+QIuX9sbGFMgdT5mQo
y3zLI64fuS5sO+JVM+xHLAK9TzyInMmJlrSjzyLHgMZi8en2Wyhf+PbzG2sx
oMWNtRgQ+HfVjCVdUOQcaDvP+b1v/yl+e8+9Au0yRvKB7bh7fimvF7n3odvd
fcbexMY9LqBfwPxqyu70Iu11vnG3X2uJHuqhjNjjhyg78AOkx97s5Xkqc1lj
bUfcHdsLO+A66aHn8KlOCPhtJXPCZ8sfOcIx4gc7JvgNtuV+Pdn12dVvxOx2
tm5n53+945wg7Gg7cgidjB8/p02NzdytOc8P5wZdSnyROCP6mRgs8VnshLes
486aax26lNgnMVDyWuS3vlUPv2u7e6RBf3yN721X5tvIv+F78s5jdWOZxDSJ
S+F7rrQdcRW+NbTU3oLQ5wVpQJdYKTHTZuOjtK33vQm0eVeC/UPMmPjw/ZbE
cnsWeVaxnY8qUo9zT55S5B6aG3/3K1KHo8t/V2R+l5z8H4rM774Rf59c5P4g
/3xqkWv8bvw9rEh7D7tvZJEx80/i7xOLjHG9HX8PLvL8co7PKPKcL4i/zyry
DHwUf59W5L5l/06Rd9bg7CJjy5/H9xFFxiyXVGvvacr3NZS8uyFW8KPyxX6j
HfXXWfeSe+llcezAf9iO2NarlVqsixJ5Ezv4p+vJPv+r/W+QNjhxataHNe7v
fuxkPmP7VXD264rVM5exwpwX+nM7293qmIxHfJwYOmu/U6tsS57sZnn5h+f6
pUrNj6dk73DnPuBe4G6fKn6H+wl+73QM8Ls8H+Dc0dPswzz/o0yZ50/i5xaZ
11hereX5kN0wx2QNx8sL52OwZ6y0j+6t1GxGSs7iEM8Y7cbZj/M3VHqljTPZ
dmOLzJt8GTzcWeSbqLXDTry9yPdaa8TfZzXnuxjexwyx5I3Kmc35PoV3KoP9
Bk4ulXcxvIc52ZL3MYNsy9uXMyx5H0MedoJ9Tvcbb4nKNWbN8Z2Ii+FLYdNN
VN4DXQPW5DT78a7pJMfk3c+pzfmGiDEGWg9OnvScgDEBB1meHXCg5Wh54i1B
+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
XUfeOX+7K0dk/H+1HKwi
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlslkUUhseW/+9Pz/dHMBpbVGobUdECegN4oag3Qr0QiBFUBKlRQKXg
zupCsQhoiwIK7oAmbAFBS1KESE3cwBuNu6DBhRItYdOApajPm/fiSeb9znxn
Zs45c6a6ftrohpKUUhP0gK1ZSh8x+Biui5S+Rx/LpXQcJqNPo78uS+krWIzO
wx2lKS2B+dh2ovf3TGkT1BZTysGQQkqDYSm238tT+owFu+Eu5n/At7PL/c8g
5v7Lt2/KvMZz2NrRo1h7JNyEbkNXMe4LN6D3oLcxboVb0dX4OBdfFbAFfQrf
l7O38TAj8x611xY4S2szfw972w2r0Y2Zbc3QC/0lehe+22Ei+gi6yN4yeBy9
Fv0+sdoOg9HfofvkU6qESegz8b8S3yvgNXQD9gH4roVu9vZt5rkVcDf2LehD
+OqEYehe/P9ywT7eQE/N/K/O1MX/H6L7s7fLYBT2c5j/HnNb4S30pXALvhbC
KuYe4Z+uEu9BezkO13CWq+Ep5v6FHlbmb43KL/6GFpzD5eje6HmMG+FN9Drm
L8X3MhiK3o4+wfgkjEDvRY/gbMPh3nAOlAvVTA79K3oMtrHwILqm6NxVwrvo
fdjr8vZxP/on9I15f5uK7s/8OcydC23oF6CKvXWy/9Kia1C1uBl2YBsN43KO
mWKnmCg2z8BAbGOgJec5n2JbiZ5UcA6Ui/rwXVBNqDbO49sBbB2wAdsT4dpQ
DBXLceHaaYbP0VeGYzURVqOvD8dKd053ry6cS8VQsbw2XAuqedX+OtU0aw3k
PBey9mZ0LeMJ0E+1onj2cM4vwfYH+kdi9QPMQP+J3pv3t1no18O1qTugu7Am
fBdOQx/038yv5iw1MB/bndCRc42r1meGfetO6G5MR89Eb4QO9H3h3M+GXzLv
UXsdD63YHoJFedeAaqEhXAv94Gf0I+j1jPdBZ2af8r0BHsV2IPNYcx4Oz9Fc
nXG2Yq01icVFUI2+J3zXVEOqpUr2011wTNdiuyrc+1TTqu3bwr3lIHyROeaK
/QB4R3dLPSPnHqReNCW8d/VM9U7FULHUGuuxjQz3Mv3zCfbh4V6mHqdeNxZ2
l7hH/sZdXRbunVMg8NWEnk6s18A/zF2AXsD4ZjiZeY/aq3I0QbWsO85dOwbn
o1+CUfjqC2X4aw7flTb4j7mLwuMm6EI/Gc79Yc50FP10eC3VhGrjMfTOvHN4
MLNP+dYdfBHbGeg84xy0oOuZc6rEPehwud8AvQX6dhQ9KHwX1VPVW2vCuVNN
q7YvCJ9FOVVuS/BfVvAaz2OrhF2lPrPO3jvcy9thMXpu+Cw74BB6P8zKu2an
qX+Fe4V6inrLs+G3TmtorQxGFhzDV7AtCZ9NPVK9UjlSriarZ+gs4VzpTdPb
pjW1tmI2B9u8cO9VTk9gKy/6X/WcFdiGhN8WvQl6G9Qz1Dvq4Qpsq8K9Xj1Z
vVk9Rr1GPez28Jl1dsWkAr0V6nr6jdRbWVV0LauHbML2ari364w668ZwL1aP
U6/bFu618nFx0TWiWlENLsT2drgX6g3SW6Q7r7uvGD+A7X8rNCfd
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8653181407433735, 0.48132295751061743`, 0.2093304940928569], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwlkz9IlWEUxg961avHuwQqZIKpeFEza8uxtrKGrmSIKeRki4ENLRUNSv4J
kaAcbCjIhErIDDVvSf6BXJraWoJy0CFJSMka8vdwhh98z/ec9/3e87znO9p9
PdObY2bNkIDSlNlW0mwTnrnZRrHZ/XyzEehDX4GVPLNd+IK3B20FZpegH28b
vUPtL7iFzkAntWOwjpdi/wH27ocJvHPQgNcFq/jX0LWsbYdv6Msea1fhMzrN
+o5CzgHzeN3wGy9N/Vf8RvwfeN/hPd5HSBdRgz6BdwTKeT4ML/GS6FbOkoFH
6LtQXRA9qbfbHr3o3Q56wKPXQfiDvoleyo+e1bsyUTY601W8aajjW3vsX5GK
HtWrMrmI9wK9TvCf4BS6npoZ6l/DO/Q9j29l4R+1ZdqDvdbguUfP6l2Z9Xhk
pKx0Rx3oKY9va43WLnlksQzH0aPon+xdiZ+LvuFx1+ppk70+eGRZQoZN+G89
sldPNehXHllegGr0G3QLz3egFr2AHi2MO9Pd9XrcrWZKs3US/TARGSiLLBzL
i5k4i9fskc1fmMV7ip5LxoxqVs+g9xOxRmtVo1q9O413iJr5ZKx5gn7sMXt6
J0+ZKttFGNLeHmfXHegu1JN6Ow+zeFWpeFaPM+hFj7vSzGn2sh7ZqucG9LjH
bGnmNfsPPLLWzGn2Jj3+Nc2kZnPY4yy6k/+c7QAWRYPo
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.817319, 0.134127, 0.164218], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3367, 2447, 3000}, {3376, 2600, 3008}, {2550, 2498, 
           2499}, {2499, 2447, 2448}, {3374, 2549, 3006}, {3351, 2295, 
           2983}, {2498, 2550, 2549}, {3357, 2346, 2989}, {2999, 2447, 
           3367}, {3371, 2498, 3003}, {3364, 2397, 2996}, {2447, 2499, 
           2498}, {2549, 2601, 2600}, {2601, 2549, 2550}, {2982, 2295, 
           3351}}], 
          
          PolygonBox[{{3003, 2498, 2549, 3374}, {3368, 2448, 2447, 2999}, {
           2996, 2397, 2448, 3368}, {2989, 2346, 2397, 3364}, {3000, 2447, 
           2498, 3371}, {2983, 2295, 2346, 3357}, {3006, 2549, 2600, 
           3376}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2982, 3351, 2983, 3357, 2989, 3364, 2996, 3368, 2999, 3367,
            3000, 3371, 3003, 3374, 3006, 3376, 3008}]}, "10"], 
        Annotation[#, 10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxS0sBAAYANDPLrC5C2wUyrHZGEMj0lxzRaA4hXI2gsImMCMIAoGAEfwU
d5vNYTaKQCFRBILCJjAj8MLbS+fGs/myiBihozJiOxnR6X13ec/dLrrHBff6
1H0uOeMr9/vSWV97wLce9I2HfO9h3znnR4/6wWN+ct4vnvCzJ/3qKb972m+e
8Ydn/eU5f3re317wrxf94yX/edmJVMSKK7zqcq855XUnveFqb7rKW671jmu8
63ofuM6HbnTRDT5y2gU3+dgtPnGzS27zmVt97nZf+B/HLznh
           "]]}, "5"], 
        Annotation[#, 5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTlIFmAAANBPSUHtsGzwD88gbNItx9pqUxoqXfIgA2+h1BSMNET8PQoN
Uuge0gbTIdDNpsCWWkwoQ8ODLFBLEE2lNzxedlnd5dqYEMIoK4khXDscwpKv
etnl3nSZ113qDdd6zzXedbX/udlxSSE0Od73fcIdTna7jzvqVHc74n6nuc/p
HnS2B3zaw87xkM/6hXP93Hke8Tm/dr4nfN7jvuApX/SkL/m9CzztQn/wFX90
kWdc7M++7k8u8Zxv+otveNYV/u4az7va31zpr67yDzd40XVecL1X3egV3/Ky
b/u3W/3LLV5zs3/6jjfc5nXf9ZY7/Nf3/Mft3nand9zlA/d631HvucexR0J4
6Bj3O/iB4/3IcR7wIQ86ycNO9GMneMjJfuZjfuKjfuqTfukUv/Ipv3HEI071
qLM87kyPOcNvfcbv/B+1oWCM
           "]]}, "0"], 
        Annotation[#, 0, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTtIFGAAAOA/asqs7U4U9MwSyrNBa7k7XSyxUpO6kxbPsCYDm2pVN4UC
S3pAWZCei/dYfGAvl/LRUItnSw3ZWs26+Q0fX/3Qvesjh0II0+SOhlB1LIQ5
R/3WEc/6pEuud9Ex513ngs/5vZu96rjfuc1fnfKWk95wwpu+4h++7LK7vOM+
//Q1/3K//zjj305717f834P+66z/+a73POx9P/DhihDu+4jHfcJjrvSoj3vS
EU846keu9kPX+IljfuxaT7nOL9zo5z7tZ27wU5/yGzf7teOecZNf+Yxf+qzn
fcE5n/ecWzzrVpfc7qLbXHDKeSe84KRX3OllX/KSO7zoi15zrz+5xx991R/c
7XVn/MU3/Nlpb/mmv3vA35x12be97Ts+AD+JTNY=
           "]]}, 
         RowBox[{"-", "5"}]], Annotation[#, -5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0Tky5HEABeCfSdDdkSUzqmSMA+ACJKgaIlug7Ym2NFXMkkyN5QCWiJkQ
seUAxgVIaIWMbktgrULPzPcPXn3By96rSqbaRgtCCD+kPxbCaTyEPmbYyxMm
ecdp3nKKN0zzmpPMcZxZTjDPRb5zgW+c4yvnmUiEsMo4VxjjEou5zHL+Zhl/
sZRrLOE6K7nFj9xgBTdZyz1+4i5ruM1q7rCBB6znPuv4h008ZCOP2MoMW3jM
Zp6wnRds4xk/85w9vGY3c+xilp28ZAevOMIXDvOZQ3ziIB85wHv284Fpfog2
ZkG0LUO0Nf/px5hnin/5nQn9N8b5lTF+YTFnWcgZFkVfsDz6hqX8yTL+B3DH
Spc=
           "]]}, 
         RowBox[{"-", "10"}]], Annotation[#, -10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 2618, 3015, 2619}], 
          LineBox[CompressedData["
1:eJwNxbcyA2AAAODfgsMpI6YcYdRNRLTJaXkAnM0diWdQXgCTsopRG3ULhzSD
2LUnUDbf8N0XmU8lkiUhhAViFSHcV4bQ5zv3+9kJFzztvKec86SzHnfGE371
nIue8Ytn/eVlfzrlDyf97kW/ecl/Xvev1/zjFX971eVVIWy5zBsu9abrvOda
77rG2672jht94Abvu95pt/rULT5x1Mdu9qGbfORe37rHN+72tbt85U5fusMX
bveZ23zuURc84ryHnfOQsx50xnE/ecAPjvnRYy76H9mDO+s=
           "]], 
          LineBox[{2623, 2624, 3018, 2625}]}, 
         RowBox[{"-", "15"}]], Annotation[#, -15, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2602, 2603, 3009, 2604}], 
          
          LineBox[{2610, 3012, 2608, 3011, 2609, 2632, 2634, 2650, 3030, 2652,
            2653, 3043, 2666, 3042, 2667, 3060, 2686, 3076, 2704, 2685, 3059, 
           2665, 3041, 2651, 2648, 2633, 2630, 2607, 2605, 3010, 2606, 2629, 
           2631, 2646, 2649, 3040, 2664, 3058, 2684, 3075, 2703, 3074, 2702, 
           3073, 2701, 3072, 2700, 2681, 2679, 3055, 2680, 3071, 2698, 3070, 
           2699, 3085, 2713}], 
          LineBox[{3013, 2612, 2635, 3020, 2613, 2611, 3013}], 
          LineBox[{3014, 2615, 2636, 3021, 2616, 2614, 3014}], 
          LineBox[{3019, 2627, 2643, 3028, 2628, 2626, 3019}], 
          
          LineBox[{3029, 2645, 3038, 2661, 3037, 2662, 2682, 3056, 2683, 3057,
            2663, 3039, 2647, 2644, 3029}], 
          LineBox[{3061, 2688, 2705, 3077, 2689, 2687, 3061}]}, 
         RowBox[{"-", "20"}]], Annotation[#, -20, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.44697442364361184`, 0.5615685129975149, 
              0.9497017929239753}}, {{0.7728642530128351, 0.8224866955302859, 
              0.9779955439793905}}, {{0.9605916799651181, 0.9701299199599626, 
              0.9515921858697814}}, {{0.9944707348898091, 0.9905817859607862, 
              0.6395517993036217}}, {{0.9523141239636311, 0.8486484224316561, 
              0.28048902869100917`}}, {{0.8653181407433735, 
              0.4813229575106175, 0.20933049409285692`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -131.24999999999997`}, {
                    Rational[
                    15, 2], -131.24999999999997`}}, {{-7.5, \
-131.24999999999997`}, {7.5, -131.24999999999997`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.49999999999997}, {
                    Rational[
                    15, 2], -87.49999999999997}}, {{-7.5, \
-87.49999999999997}, {7.5, -87.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -43.749999999999986`}, {
                    Rational[
                    15, 2], -43.749999999999986`}}, {{-7.5, \
-43.749999999999986`}, {7.5, -43.749999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 43.75000000000001}, {
                    Rational[15, 2], 43.75000000000001}}, {{-7.5, 
                  43.75000000000001}, {7.5, 43.75000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.50000000000001}, {
                    Rational[15, 2], 87.50000000000001}}, {{-7.5, 
                  87.50000000000001}, {7.5, 87.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 131.25}, {
                    Rational[15, 2], 131.25}}, {{-7.5, 131.25}, {7.5, 
                  131.25}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000003`}, {7.5, 
                175.00000000000003`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -131.25}, 
                    Offset[{4., 0}, {7.5, -131.25}]}, {{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{
                    7.5, -43.75000000000001}, 
                    Offset[{4., 0}, {7.5, -43.75000000000001}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 43.75000000000001}, 
                    Offset[{4., 0}, {7.5, 43.75000000000001}]}, {{7.5, 
                    87.50000000000001}, 
                    Offset[{4., 0}, {7.5, 87.50000000000001}]}, {{7.5, 
                    131.24999999999997`}, 
                    Offset[{4., 0}, {7.5, 131.24999999999997`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -131.25}], {-1, 0.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "15"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "5"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 131.24999999999997`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "22.999043443834854`"}], ",", 
                   "10.735320819945859`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "20.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "15.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"10.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.769261497286374*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
+oSjjR9Phg7W8wv8otkR7AR2BruAXcFuYHewB9gT7AXmO4R8Z43vSPGdHL4D
wncOmOPOnGrm8DJnlDmKzIljDhZzfphjwpwG9qGzz5Z9hJKR2QfCOnfW8er5
BX5hXQnvzXkvyHsPnuvy3Ir7cu47uK7ivEFf2LIY9fwCv2hdzS/KRw4Zf5+e
XxQ7gZ3BLmBXsBvYHewB9gR7gflOJ98h5DtrfEeK7+TwHRC+c8Acd+ZUM4eX
OaPMUWROHHOwmPPDHBPmNLAPnX22kpHZJ8U+ENa56/mFdYiss2IdCe/JeQ/I
ew6e4/Kcivtw7jO4juI8QR8k/9+jjR9X8wv8otkR7AR2BruAXcFuYHewB9gT
7AXmO7Z8p5PvEPKdNb4jxXdy+A4I3zlgjjtzqpnDy5xR5igyJ445WMz5YY4J
cxrYhy4ZmX2E7JNiH4ieX7Ko42WdIuuwWGfCe3TeE/IehOe8PMfiPp37EK6z
OI/QJ/9rrHP6w5Gdt8vYf52aZ1xl8PcvW6QefmaZ8KLGyeElytl1B7k+JO5J
k27GO7EDcwzyNo+sqnXz2zeDvfoYuf8NJ6XMn/PZeCdj8MJnY8uvz5zjVHFT
amih0v9afhzs4jfGbOQ6nXfaG9z/TeY+nfXZuhR97/vC8vPZKT6TzbH614e3
Hv3m3HTjXuntuRVnZv1l3MOOdNw9p2ll4+fE3raVHvfqyHnVTWZNLrnkYpM8
MsQhas/t4mo+VPOsnxxsfPPds7U5JK6spdK1SXwXN0TedJl+xCO3g+xZ02vW
oxHGOwcvq+R6cHW/kVPVOH/tyOQfY/H7E2T7k5Rvo6fnlDJf/Td7iyvP9ZPl
n8Mb90bfyC63Tj1OO7Lipf3fRc37zywVKl6feHxdfil29q+5xZ6qv7+T1Bs6
J6lg52qam18uV8D2nO8uRMvQqodrz59eQH7e1zemjR9ygdL9Ue712KNOZRzl
Yraa5axbYrU+6H3x6RfrGvcOG8tW6t1owXv7389ZOo3q3+3OqQqi+MvoL2W/
f5WyYUtRWZ+76aenFfkuaqiUuLdxc8xIJ1m6qeHUf9oYOffLRh3LdXu+kVO0
uF2T280fx2b8/el+Cm9erO5/kcWk66u41LBxvDd0kIa5+6QlhpYUl7zlx51b
rr4P1DrJXQ7O2vbv5qfO0qXy6AJPf3HXeo1Xt4e9mmi823qySWWHpyeYu2+R
Wg7dsjdeVVI2T0ya8Kcjc2HipM3+rVWSOxaXk0FNVi5wN+qWG76MjXHea9zT
RPUssaPA6hx2dpWUBcETP3WoqLlRkSY7fnjKd2PDpMjWId1HeJWWDRs8FnX3
NXLNJ9z6uKd8ZyOXZn/3o+3y1DfqpF+Ur164z0PjXijp3awb1y7ktrP6vvKQ
B0u+eprTqbyU2LCxc+9qHtADJCH3h2dll7vKsTfF221paLzL6f77oGwrpxi5
6tFxHf/odBq5OOk/b/dVH/59u5TyMnNP0wqXRqBuO/3n4/jfHObVWFtWWpdq
W35EWZ7DO8qQdtXHnC1QQXK4xC3bVDCv/ePu0vNetRXf7PbQ3HTmVdcN84x3
Qis4Fdi35hJz3kV27w/9r1eHCtI/oMTp8/lE6zXy+rwy/2rUkfdsdrXo+3jj
XLNtne93jfgqv/53a/r8zIUW9SpprvFT7ysr7/Bd0nD5+fy3AdWcKkrfI655
lrobudkNZg1o/3s10Xy06IBxT04Zdesrk3xfFOhinKPef97hl0F/FbSzpwxz
LHyq2bNKmr+MgbJtxrS02b96yNcenU5VMRnvPN7pNG9hxd5GTnepAd+OHN5E
NPskNRuw5DXr5BMlunf/dnNdK8m+fj0nDJ3Cew8nKf3Tgbq/NqssP1+t07bf
CPVzyEv/ul8b3T1Zq3L6n7+pakPTb55aTxo9YFLJeca7k/UutWtV5BJyw9PX
A9eGDKr028zKssSvfb0fxgo+f7xcOXA2qlAnT2nQJnTKHC+j7vJepYkzuh0y
zpmjkntEn8pe1M7eMiPHw8ZtB1bW/OSd7fKa93z3MkICFm/Zce2Cl+S9Pu7Y
r6FGLnP/Xjnr1t4pmieNfNF1eVOjzjPhq0mtu702zrWHffrKY1bNYnZW87CX
zAx5EHV8no+UDpn52urmBT1I9nx/om/+Ct6Ssu3z63K1jHcFHz/4PaToWCMX
WvL+eaX9Lcn4+9PXMyUWX0hr8cpHto8+cfwB607T1x8jf4vvsmmWt+TKNSL2
uQvPEZ3lVerHLr3u+Erb+p1eP/tb/dz1k82z2l7ufd9Ls1e2Ee1MG4x3DhOz
Lxnl9YQ51TFS6WTUiW0eVSV7jumNvi1u9IU/TXNxf7zRqIMdePRa6x3VjXOZ
s5/bb0m4XdzO/nK13eX/ynaronnyP+aH+V/yXcVI2ZmvwZ0NY/1kpE+1Z7n8
jdzfFVtHp/ULMfrQL+U9PnxJqlF3e9J/wxO3XsY50PtSndfdSShpZ+M94Yin
taoMv+AvxX6/O6x7Wb4vHCzDO6b2+aaSv6QM3bJ/Uw3j3TpLYGqNtaON3GGv
Gy2/OtGOuRFWKTlv2ufk9/7yefys8E+sa0xfL+acf7OOT2N/GVBlj1vcfJ7r
usiIn7zPRQ4LkMaNzGn7NhrvxzYoO7tkiz+M912D5lcfu3KZ8Y7e82+O5V96
CznI6evvU04bOrVfEiBHG8ROTJhs9OmXLx1b5Ts/o26s0evPD9YfN87Jgo+1
qzP5aSk7B8n+ER3SDvTy0Txodq9xV1/z3T6zWOf2qru0RaAsWBH24a9AI1e2
fcTsDbe3GbkA2+++qxHY2KhT8467kKPtS+Ncbn4x22vr9tL6/8uYI/XXlr3o
o/nLaJKWMb+MXhcUJFv6336b38t4B+1DF/eBeb42cmzL52+x58NZI4cgftiQ
mTV6sI40WZKbF5zQ3RYkBa503v1TAWPf9qLgjMI/X1Xrd+M9t87XT066nJT+
+Rts3ZDU2XjfbUfpaw0X9TLeX4tL+Xn/vLVGju7FVaM37n/NHASrXCqSFru2
b7DU6LPm5NNpRp3ebysj7rn685zFVUxnNuTZ4WeS/SFDa02aYbzPdaXo4noH
DhnvZyXdbFCl1QLjfauelfLsbfo3c3xjZYtv0uNlvU0y8XGvCwsLxGr9zHf1
9qeuNOoEn+69Ojsi0di3Zt/1075excvaOVQWzOozYVPOqppvH2l5pvFe472g
qA6Nfq730cgN9r/495X5rrGaCyXtrHthp1GH2Kno3U/JTYx9ce+8K8duKK32
S2HiWzOld4OfqmpWf69Dib1b9v4UKtnWLT2wLNN7K1Fyo8qnM90LhUpypf/G
LIoycljb/hlxzhoVq3l6tzm2wZeNOshtl/49/Lq/sS9fMeTgqE3T1N8nXHJc
Xtw69WBVzcN/yvf+bjnj/Yr4znneXGth5LymvfpxUquasZoP975t7fSQdZbJ
8mJu1f6tZqb//Xq92j1+t/rzIiTP1SMH912qqrnAZr92LasY+f/e00LX1+lo
5MhOMfVsOKxerOY7b3/6JttTo46zc492TcvEl7ezkcfepXqZ941mREhozrp1
HF2NfPbRI9PyZqth5Ke3v396y/ufjJzaTr+Vavttu1h8vgR5vLjhjcB3EbJu
qOXO6P9VB5f6vt6PbW+r7ycj37r/hCWtT3tFyoDAvAk+3apCD5Ed48a/a5EW
KXGBeyoUfWnkVRcpcaNwXn8jJzfl5QOvbiGx+P0J0qZk80Mlc0RK9sNOS5JT
WbeaLIk58nqcmx8pvTv+u2zkt8a5yp2z+SIvrTHyjPOv3n7w7lkjbzi2XsV6
PZcyDzhKnEu0ndc9xSxJ6f+7u9w08nuL//P8zPLCsZqbTVv+5tQao272zZK3
IZ2qG+c4W/d2+znkhJEP+12dqDszrhn5rVf+m7byyGojX7Xcgf3V9j0w8k/b
9ir8rGaxWM2TUzfWS95g1OV2ChwsFWsa50SzgsoOsNQ18jXbhtTpW3qxkX9Z
OHh913wTjXzKSyd/65j7hJEf2XVmwrGPOWI1uxx/UbDxYqPu99jlf14ctvDc
1lU+nEm9W2m4Raq3K3J47ib181ik16xynkcbGHmC382I73ajo5H3F3I/3+ir
vzCPL1a+/qq5f7Xg9D9vXqNn3Z4ZOS9VW3mXuD3RqDt2cdiyu2xV4xxs9vIF
aXUP2een/5XPdtHy54dFzUT8C1+uUPFvH63n2VJjSyEfI0+tb6PiDfN1MvLO
Xg3fN2nweebKWOVOriItW1pEfpz8s9fZnkbd844xfttcChnncId3fuPYP1zN
lzFSooxf9NaZPprTBt9p3NTRyKfqccr7+4ZWIz/q3PpHNT32Gzk2v3+V/MjW
mn0IybJ4zsedIY9EGgz3uxvzybhX6iU163faqP49YsRaau9Dvz98NM99UeTY
dE8j72dVzym7prQ38ngWma8+s6r5OZ2ffuO/Z/u37HtIlkovug4ZVCL989Xv
POmamp//v378YL11E9TXHytVC3bqeH6fj+YcI6/171jWyE+ZfPXn9+2aG/km
n0LnvVx9wsgfeT/Z8W6xLkbd+LQi1YvczmOcY5q/uua9pIj6emPlRNcLJ04O
89H85deZ5MiLaaubfR8rz2dHT2n/n5FPMav5zhatI428iEPxLaZ5/WbkORz+
UGj+4Obs60iWkUH/DbwRHSvX981NvvDWuKdrt7JWxT4bjXOOYL9rjYP/MPIE
1i6aOn6WXi8a/cSpb/+7OvlirETfe3Rz+i2jP/98g9OvkvR6MU6euVysd1iv
F+OkcImkpMhTvEd3kcDB/U9EfB8nTSa+2eH4xr7+tsWJpcxp1899jX7tKoXm
Xx7U3+inLuk+Y8H3m9HvnP7/9UyJyOABTeOkTae55h0DjH7ky4NS/CqXNOr0
W7x9cMN7i3EvOXnR+XvbWqn1f7y0nTVnU+MqRv9r7wM9lq2oZ/Sntv+xUMel
E43+0XtDPxc+87XRz9lq69sj5pxGH4B3vmV7ohcb956dvv6c1PSa+nrj5arH
i7vLOhv9gynNuxw/28vo74t81fziqbVG/13ue73a3u5n9MMNvmlxae5s9Bls
SfTdMWsj6xBcpGa3C6GD5sbL4Td/nq4y2Oj3qme5uXLSdqMfK+lmcX/rHKNf
6ojXr41jL6KfKf3fu8eThcnT98eL6+5Z/6WMMfqNrkxcYC7pZfQ5jHFxbNzx
sHGvu6h9q6cjNxn9M3+Vr7Fz9x9Gf8u6TyeD/1bff+ncfuTlhL9uGf0h42vt
8u+ivt/SOfvC4Wuuq++3dP71XEL7Sur7LZ0rt27xT7P/jP6Dx+2t2yv/a/QH
3J2fGjBlh1G//yH1SfDEN8a6o+OMnl0PzTHq3c+EDC8UHmbUn+87ZcnV46Jx
Lz10X6388yra90O2BBm/OkfC0fw+mrdsadr7xgGj/rn968cJVz8b9clTXDoe
7ppi1AtHr5n8zWWzUb+7ZcqqNf+kGffe5vLrz3w7Xe2/EuWdcwuvwHgfzVv8
S3UocY31o2ZZnZTDcU76769x+mJkMVejvvOko632qNVG/eXQvwa1eFPdqIdc
nHvcjXwPjHv2zX//eyD7R/X1JkroL1XcP/b30ezTZGHbD++MerwRVfJHvTMZ
9XEVbza4OmCHUb+W8ndc2wdNjHqytHKmTtneGPf4KdfmHAvQ+80kiTlYZ8U0
vd9M5z8aVDvy2qhneng6b8tDen+ZJNkW5at0Xe8vk2Tg09oOzfX+MkmWjt7r
t/OVUSfQbkbfslOuq68vSXZcKV4/rouP5ue1muco/8KoB5FdFzxdqxn1GQV+
jknLv9Wonyi9yPHk8IZGPcN3rwvnOvfCqD9IObvlxtKH6utLlmJFgzbV6uGj
uZ850H/JK2Mf6uf0b+iiAON++9Hbkh9rbTPmwQZFYt4eaGTcB1fa/6nje71/
TpZLK3NOmFVYzU/p+4YNljGHh/poXt822/zrn4z7yMSPZbdciTDWuUO+eznq
n13G/d2yLbeTO+j5KFlq1y+RsuWdcf8VW7NRr9zPfKVIu5Vjg2xvLWEVPvuV
/WySH4q9eHr++WeL1/KPV+6ttkruO9P3fvj5tWX+qRK7KtdKllmb/mr3dsm/
lthrR482HhIlhd4nJGx9kUPO3KlYfdiQWHnRMnqxx/08UnzRxFm5PN2k0YiI
ViVmO0rqpb0P0v71k/rtPy/rei+/HG++M9v5uyFS7+L5gpNDCourXwtTXf8E
2XNjY6McufJL1ZszWs784Y1l3IBKs5amFJETV7MlVV9eQWbuzjF5eu1iknNR
QY+q9aOl8IiQyZuTiojXg5n7LlyNlZjkbTnXvikqrT7GTtgX5S/fPc9vyv7W
WTqY3kwbsyxUJl64VMdzbgkJ3n7bdHZqgqTsr7Ru6ExnST00qmfHgtmkS7u4
sE2jXCQx9eS2KnkqysQVc3o0KFRa5rg+v/nDHX9p3/vQuEczysi28gEmn0IW
+XvIodTVYS5yL2mPw7OQOIlIfJHLtq2UbLeN6NDkWvrPpVweHrvel5aQUqFP
bxbNLfPGz+vfK2952b/Gb+ng5DDJvW3n9DeVysqZ3/uVebnGIhEl/+x+cls5
qXj3tuuyGA/76CYt4gbHm/oFyJZR70d3eegmFb/pfmrGsTCxnk6b6zOtgrTp
vLTl0VFxYls6o3eFMm7iPPla++3eiVJfhky6sdJNLuZ+UbbuwLyyZeigPKmt
3KXXx+UH2uarZB8ryqWcceFv0wJkfd5RvZ9sqShDEpzT0v+3yNtS9TpdNrtL
wbSgvcd3xImp05mP3vfc5WKKe6nktonSdODYDh4jK8p39fqFjr1RQFo1vDKh
XVgleWma37PWA2PMd6NdP0tguDgf+P3hkA4ecm5ilUZJVpHYyGUNKxSvJPvq
+KV+eJa+jrDsqPv0YCU5dnTEwkZNA2XqlLwxq9Z7ys1xrt2W7Q6XQyXDL9Uc
WFn6PNr8W/H5iXJ8zR8vGvf1lEu3jjxq94eT/PP8Vr8Nnb2k+gw/rxa+le1j
Fdn4uXa1YW8Dpf3n+a1yPq0iXmP7Xdo5WWSh18W2j2K9pPDYtKK5Y9Lnea8u
NVxyVhHTwhvh154kygXbqHuDdlWRYefmf93ybVHZf/904NqBPjKwqPl28foR
8tpjwFGfJd7Se/zWm5cviBwJSBvbo4mPxC/duvVTsJd99JXn03Y8XDgkSG5W
7nMh5pOv/BC2fMjmmxHyqmftT51+rypXukw9/ePQ9HXOquSIz7l8JfZmvdA9
XkmSe0zilXfp+zTXZkv+6F6luEz0Pf9g63Q/OXRq7slHYVXsYzVJHBV8cdKT
IJlQoPPq8leqybVHZ57dco2RgessByf18ZO8b46sCPg9Xjwvlf/lsHM1OeOW
2vFVlySJGF533rlV1aTTiubjL9wuIaVXlmhv2uEvAy/G1+ifHGkf/SXyROkN
9RrEyHczTe1+WeYvHy4HnFla1Vs+PZ5973yJAMmz4VH37v2C7WOA9DwVWipn
aqR9DJBVt04eHp3NKo2PzJlQJEeAhF9Pett6TZL03jflyd7mATKg0Oc8F7KX
kpSDn2O2SKC8L7mmer5AH/k0rnGlXHMC5VL+U5sbPg+2j4Hyzebd302dFSOn
Og187FEtUO5apw5pH2eVU+M8Ph0eFShPJtZ6POZxklwuOy+t2OVAWTS64Y9t
OpUWL/cL5V3mBkmtmuU23DvhI56eky69vBMkfovWrbRYzPYxSDznlU4e+XuM
1AwxTc03LkiKbB+wKayrVdx7Pu/Y62KQzL7Q+VnFc2WkY7/SH5PS54FCu2p1
CQoz2cdg6XZvYOcjE8z2MVgariswfuHzGPm1VSmXmFvB8mx0H+d6RZLlepF7
Xovdg+WHZSHzqtl8JarBvFMlxSQFl5RxbDbWGPOem117VqrZPppkpym1SNJs
q/TpuqLiZH+TnFkye8yeiGRZkBxQbHA/k9Su8zrx3kpXSW3w6dwO7xCZV968
6uJ1XzldOKVR154h4rYj14+uW032MUT+XNS33IkPZvsYIm9vx9T7tlCsPD02
fPHfriGyrJTL+ZfrrVIryH/JvbYh0q7Tmo196yXLwbPNv36wOEQO9Lu1Y0Df
stLzygC/cl+Fyu+H733331dVpf2tPpGf14ZKzqn/OHf1jJW8Hn9VuVgzVLYW
amb7eNoqXctudPh3fqiUC9seYuqXLOaePbt3eRgqqR2mPbrRrpyY/rr9w/bZ
YdKpd3a/Q7uqSnB4tpI3r4RJ7eZhZXY7hNjHMLkdXt3lljXKPobJxNwt935n
jZWyBbcPeTw2TO6XrFVpwj2rnKs2t3rpM2GyrpR14Jl15aRbwrmrL1eFy93L
b1Y7/1lVXnYf2Hjso3Ap8Lb//VC3EPsYLpW35nY/0jrKPobL180G555UJ1aO
b3xfoNyCcGnRpPXa5k+ssnXtnpZb/g6XQiujpqytXF6Gd6mz5NGxCKl/ve7A
lGoh9jFCyj5p2/d0vyj7GCFnnvYc9+Sr2PR11Y0SV3ZFyJCcuU42+bacuMVk
ezljXqREPOh3882UqjL/VUSvD0cjJbH14ClXnP3kl3V7jn6bL1IK1fdq2eaN
yT5GSrXHPW7/ERpiHyNlf/bSKaavo+xjpEw7NH1UdHKseI6pUnDw1EhxuRva
w3bNKgEne1x12BspH3uF/fp1+jr63a2e9U84RKZ/n+18WqxPsty52Pda5buR
8lX2rXVX9Skrs2xVUx+2NMuTQz8W/bZkVel/05J32zizLJt15M6wnSb7aBav
cYPH1nxgjCmt93r97RFlH83S9scFHoerxMrB/6KTxzcwi3PJoUvP77NKFb/s
NZYONUv/y4/HtGicLE+2Xi62bbVZVm5YWPf9Rlfp4us1fY9vlPx56cWZIn/6
Stdu/94b3TVKhvk/W1N/pck+RkmZFW/cXdL/3C9jlOQ+ertIWadYyT/5WMUI
tyjZ+qvsK7ou/fuxwVBbpVZRUn39xPIJNZJlRpuylvEzo6R2+KJa3be4SoPa
nRq0qBotBdsMHT7/iK/kXr9v/+n20eJ5sefzmLkm+xgtS7p3PbfprNk+Rst3
u+YMjSoSK/98F5RjoHu02EZ9GuyVvr5yKPjhQ92m0XJh8NJhC63JsvJD9Vwx
46Llp4hNE3bvLiOLT3dr3+OpRV4M/+3iHKurfHRb169jEYtc8R01b/Z4X+lR
4mCtmgkWKeNmKxY40GQfLbJmxr8/lFxvto8WqfR0zJzBL2KkxtViQR9uW6Tu
q2G2fjliZeH9XNke5bbIr3t2zTg73yoNBvf3WRRpkXqP7zXYGposv6SdWd6t
h0Vc2tz8xdWhjOSoOWh6jjYi0bmCPJ/c9JE6+8eP2TVAxGFAx8EP4nzFIaVZ
6/dOIism/Tm9QwOTpB7pWn1jFZFfHw7+6Y8RZmn0es/BzrEi013v9it7OebL
2EKk2OWUbJv6WO2jSMnmtxcUHG/9MhYQCTr/blqoR7J9FJlqcvfb3aO0bEw4
tPTtqfTPNzJqVdIvPvJ12zPe5++LVDqxY/zDSiaZeqdlwuupItl8p8eltDBL
thLHK5xZI/Js9TyXpUdj7GP6r3/3pHab9tYv4y2RgEqF2k3/lGQfRbrdX1F2
SIHkL+N4Sd/vPCm7a2Rp6XRpd/ttdWPk/p/3Wvud8pH3r/+dVaNPjKSduNf3
u7wmeXynT8SunDFScdSqC/Nrm6XowQsPa1eOEb9dawOvH7OPyTHSNajxoQ7d
rPYxRuJzH24xdG5pObZvgE/dP2Lk2/LTG2c/6COX8yydse9ZjLxZuP9CdPrX
N/Ds9S4LpsbIRYecBcu3MUtXh2GjCq+PkbXbJycNPvW/xrjOd//sYv0yPoyR
p6v7NWyb/vX8zzg+Rpb8/n10ocTSsjnszJEbSbHyrM+cvxtM9pGPLT3fOneI
le3FGlWY/F+w/D1mpVPSj7FS6MBAc3hpk+S5EZXiWjBWqrQNnJZS1ywz/Ock
1/GKlZdzp7gPORjzZYyLlfXenZ5NbGW1j7ES2WrAsN/S9yP/Mw6IlXHvvl/g
kCfZPsZK1LOPHu3GlhLHlAXxNTfEyomFj6JzuflI0P2ddbIdjZXUa93Xddsd
LA+fbm2yNX3dv67JyE0XH0bKpVUHmnV9HSsrH1woHeJrlguvuhQsMzNWhlT/
cdep9P30lzFWIm4eytU/fb3wP+PBWEkIbPHNv38l2cdYqVPdzTTjbUmpnnfJ
shdD4qRB9KXd22a6yPE8u95eLBonwwb8k9p2o7e4lYvsN9s3Tpb8Wj5t0/hg
OZ9a+HGzhDip8qBzh5B9kTLjVXBgmTZxUlF6HU/7PsY+xkmXP1yO7ZsQ82Us
GCd51x9aPrCy1T7GybGHx5L+3Zf0ZZQ4WXH/t58G9ikpxee/7dnjSZz08/nB
6enX3nJlbLlDA+fEybUSBzeV7hQsPcbdaFZwc5y8L/qiQ9T8SBmc9/uNKafj
ZPKg/6r7dY75Mj6Ikzd1azn4Olu/jNPjpGP74t/UW5tkH+MkcfKH5svTSkre
3q0fNRwYL8HLr7xPqOYtpzpv23Muf7wkHOp+qP1XwVLxZsjNDX7xcj/u2JKK
v0TKq0Udzk+pFy9bW4SN79k3xj7GS6HR5Sv8ldNqH+Pl6oR+RxOWJ30ZK8fL
wvG70u4O8havW2u3hi+Ilxm93/00YVSw1Aj/eDDhYLzcnva53fLTkfLi2I8b
GtyLl/4vplR1crF+GWfHi4dLr+Z/70qyj/Gy3vKugt8IF3mTx3JopJNVvt9y
rN/9A97Sqnvvsjv9reI2eNetvxcFy+Q9V3o9qZvOET3irDcjxWn+tkXuvayy
xzUlX5WxMV/GfFb5Ze3sw428jXF4tHPHuseTvozVrbJ9917HNftdZNvbkotM
6euyMs7z8/W47S15rMsPlNlhlaudh/6WY3OwPN0sV7OlWaXCLLe5Z15HypQa
TqfuvbdKkcG3u26ZEmMfrXJta/FtUwLt40arnD3WfEzVP5Lso1UW5DIlv8pT
SjYv9Bzzn1uC/Bne4fKk7D7yXaG/3vwiCfJ2TsvtU/cFy8eafi2T2yTIVEuO
bFc+R8qxBUNtT35MkIiUqrG758Z8GUsnSPv4640aRVjtY4IcSlhXc0q6H/5n
bJYgaT+cPrM1sZS0OPPvX29WJIhjsWZpz3x95ED8zBDziQTplCOXc47LwbJ5
aPaxQx+n//6fHdz9F8fYxwTJPuDp3Q7x1i/joQR5uCx1ZuDdJPuY/vkfFr73
fH/65/90wxwdligX95Xcu6aTj5ie/d7Dp3mizBp7JCjgXfr3w++35rgMShSf
tk/ymsubZab/25wphRNlVxVHxzEbYr6MAYlyYEn9Zh0bWO1jopR/fTrixquk
L2PfRHkws2bVXa9LyZWpv369bU+i7K7bulnjPj5SLbXJzAt/J8pfZU7/dO91
sPxT8N7Bl+8TZW+PP8bVMpnl+rYHvy+bmyjTIpZtObg9xj4mSoERA7Nfbmz9
Ml5MlCfHP7W+lP7nfRkTZXUJa+ew+6XkwmKvgnmikuRokX/8Wnfzkd45d50o
2SJJBs5qUrDei2DZfWLVKK/vk2TVhpZ1Cwaa5WJTvxW5SyXJtUk3Z5TYFvNl
DE2SE8VmuVdoZLWPSeJTuHD57C/tY58kOf/0fb2md0rJ+68s+Vb9liRhEt3x
SncfKTR5UrP+l5NkS433CT+l71vSKg3+Je59kjR7O9lxerX09cLApJzHZyVJ
mVsfqs3YGmMf07/Pd57o1DT9z/uf8UKSdF5ded2Vl8a4r/bzcjk+lZJLVa62
X2hJlvvdu5YsONhHfricZo1rnSwPandPOPkpWPouD6l4d0iyRP/R/PCgILMs
6Fy1/Z5S6euMPmWc2+yI+TKGJ4vzpmqeH5pa7WOyVA0f2P3b9Pnif8YByfL/
AJ0gqJI=
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
l/En9X9N9FMmBjTx+SG+Lh7/D7c0/v8=
           "]], 
          PolygonBox[CompressedData["
1:eJwlkjFI21EQxi/RpMl7AQdxcHBwsoODWm0nK3TRScSpiEPRWBVpFSeLU8FB
oSA4WG0UQdBBEAriYOkigmAwilCn0kEH0SmbdjDo7+OGD97v/927d3f/axya
7P+cNLNWVI2motnIC7M2tJkz+w0PZ81a0C38P5iNE/hagrfgAgnGUISnkaXN
Eugtd9eDex0ohbcAJzifJcwq+O/RKbGr6Bv+gHy8Emn6OJ/qvSruo0POT2it
2mvoJP4ATuKdk7MWHo1e+5Nywh+in/XGElwDJ1PEc78HPoKXs95jGe6CX6W9
B/WyAuczzAcdw5nod1XDO3gpeG/qSb1t4xeJ/Y7+4F/Aj+Q+QRX4EzGj9NeO
ynjd6GPa35zFb4DHqK8D9cNvos/yDJ6AN6LnVk0l+GvwWRbQA145+L9JohvO
l5pXlc+wkfi66Lk1g96cz1iz/oGu8V6iQsprGMRvif62vuVznlO5z8nXDO/i
VzLe8194MfqsKvyDec7/gseqhqacf5NXRL/gYvTZ6B/cq57ou6CZzMFf1C+x
ebQD70ffRb15BY8En6V25g5vJvgsNGPNWnd0Vzs9E32HtEvamXrNL3otemMP
/hl8l7TT2u1nmgFq1w==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.48194262517586367`, 0.590301760242435, 0.952359435349301], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmUtspEcRx8cz33wz/r4WHHgJiYfChSByILv2PL0BwYHkgkLEAVAiAcra
Mx6PvSAOIYhDIpCIBEIEUNb2PL0ikRAgxEvidQhBIGVtz8OPCw+JIEHCJcCB
hEPW1N/1++Q91PRUd1d1dXV1Pfq74zNbD2zmc7ncvv0UrN2IcrmaQd2gZH1H
C7ncsUFs/+cLjhft/2zB8bFB12DTYGjQMdgQbnMaBk2DvuFtg3WDAa3m9Qxa
jG0xd8VgUDLeBjODA4OFsglmcGj/82XH121exaBqsGFQM6gb9GzO1GBiEAfn
953EZICfxrrMlXz7Jed9pv7E5XnE2j32tGUwWTTdWF8+8b6GQZN918G15xq4
9lYFPzDaBaPLGewventm7eGi89PYCHrxi0ym6YLr978m//M27/k0l3vK2puL
jv8ndbm2jPaq4dsG1w1WDXbA1wx2wTW2D33boG/QM2jRat7NkuvglsEvg7df
tXU66Fj6LefdFk5kEzbnpuntaZvTtrZv0DOo6GzK3teib9fgVup0j5vMB0Z7
3fqG1le1tgPNVYPtso/t6LwNDsD3y75enjWWDQplpxceGdTALxusGawyL5Nl
G377rDdAbtlFER6rrL0Nj11w6UZ8L0nuvOtFdjfIuy0K7xu0wb+nPRrNF2yP
29ixbG0EnWxQNlpgT7vYrGx8h1Y0q+Di0Sq5fWvuGq3GdJ8q2JzsO0I3soMD
zr5d8jsg+o7BsOT3bJ1WY9eRUbbwk+DtY6nbjWz2FvZ0CF/ZzQS8wPoV7sMm
9nzV+OwVc7n36PytHRcdz3yBfEMeumVo5FOyOzHCr4jfHmMvpT73qtnSsa6v
/S/JH9n/WP6Ju7fBXazDd4N5TWSMaTX+UOJ8HrQ2gr4Krzr4K7buxNrHEvdd
uqcT1hiyn1ps9AZFg6pBAbxlsvUMdg2mOV9DOmvb/z5jFZuXh6YOj9hg3cYG
zBvgd+UfZjmXT7yOcr63GL8g/7Ap/ZiuR+i9jb577K2DLz6ysSHzZgZ9g4HB
nFZjTXyhzmFqeI95C9yxpbKfSRufXoG38Fu6N2Yjdy/6nc7LJy76PczJtkSL
b5JP0j1Xn+j+GpzuZ6nfxQl+oZB33esM5GOmjJVNphXJW3S8sOjryc9NsdfX
jOdr1s5S96eya+EP4yvla18O3j6XOu9o0XnJf0h2yV0xWM98qvwIcvwxuOw/
SH0flxd9/6+mbsOPJu5HR9jzHNuRDR3RauyLxmfNzv/D+M4xd6DE/hoGJxan
F4u+7xnnO8j0Ai65q8ibp13mDNQusR+1kvXl1M9Q8fDF4Hr5dep7UIy5ylle
RWdLnNsa9GvMy2EX8pu/D+7fr6fe18K/ftn6d2yP91t/1xKQukGj4PvejX2s
ZdADHxocGcwNNvElsu0Odip77dvYzGAae98Rttxlrux8AA/N22TNpsE1gxWD
Kwbrsc8Tv7cF73su8TvZ4I5uWF8NudvMlawdZBW91pTvy+7iMTJld0x3Ljb6
ufItxQfmne9Hchh0tAZ72IC+hH8o2tgs7/TiXY597HUm8w3re8ZkLhWc97FB
ZP+neaeRfg8NDgwetvkTo39f6ndbcumuL9r8E5t7Ktls3oi9vTF4348T37P0
PTEoF3wd0ezSpzW+Fnydj6e+7xgft4Xupfcea0oO+UOdgfQ6I74q3kr2Hvgy
47KRKrFNMa2iGCOfZ/DdxOf/yNptk+Gy4qfJULN2A5oleMjuHghO93bJWfAz
GBZcVp25fPzM8D5jR4yPlECLV8nXODV8z+CG9GcwBj9mrnD5e+1T+6ggu2J1
0aBechmXiP2K+RF92mvV6AsFP88Fw5eZmy85L+EF4pDWqHJPpJcCPDRPeteZ
6ZzlS67gQ9+S+v83y28Fz0WupR7PavC9jFwaq2GbWuNzwXX6/tTvh2SUnS6z
P+1HZ15ibd2/GLyBXcuGZUNjg728n0mf2HNP6vy1ziOp5y7KuRRnlwyWDboG
dYOG6hqDGniFnEPxV7G1YlA16NBqXhse52PMzfKCiLxAucfIYJzz+DsEj8lF
1PfP1PMK5RdN8g/h70C3HwsXuUiJXKMILlmL4odMEbhkLICrjlE9FpOjR+DK
2QvgqpPy4E8k/v/JxOutEnn9JXJf+egG/EroXrmq6rk2OZr0pzxmLef6HqFf
6fsvtq9Na1cS110eWf+Wup7uTVxPHWj66DrLcdYZG8Nvk9yoxbwHg5//nanr
eIDeJ+RWmiu/HnOHhvhO+ekng9/PT6Xuj3RPdG/kk9RqbD2LIUX3Z7pvuivP
aj/GYz9xf6z/VXy2fNIQ3612hK+Uzd7A547Q5buCx5jDxO9PBx+nWL6Jf5eP
6cbua2u0mqeYv8W8Duvrbsm/Frj3imdF/ESRHHFOvqm8U7hseUIeqntwiP7u
T/z/J62913TUNF5fCj6vx1mVyDVl+3vYhWp33ZUFzrvOXdd9li+PyGnl0wvk
uIotRXLjWZbb5txXbhGHR5xbF7+5ydiYPuGd4PyqyCufofh3Z3Bep8nF3ZZt
tcl5lANNidWK2S3yGI1NyDV6xK0d8JeC51E/Tz2/uUS+k+VDl27LgZZuq7Hb
1E2rjCsfm5ArHhFLR+QjA/AZcglfR94qNdcafLdZe5W89WHwomK3OYd55LlH
F5tRvFLcmhY8rsU2Xow8fpUixxWbytEFPie+RZHTiX7P/p9Gnnt+SHqWI0rd
n29xLmPGjw2qBoXIeWi9GetLvoHBMHJ5++CKm4ny2sjz1UNye+GKo6fIe1S4
kPeYGCvQPPW9mDiff1h7zdoVgyuR570H1BFnvCuoFrkVvEa4mbodV4gBBXxu
BZ9bAy8ST4Rnd1V39/PBbbCWuu9uMG8BfopPXeY2sK018o9DbGWXGnsbfJ8z
3uYd5ynwAf5D/uFfwW3lN6nbbiu+yEnbzNM71oRaqEMMl9x6izqkPupjs+L1
QvDa54fG8+vB7fSjqdv4GfWb7P4Wuqxi3xEwpS76U/D2mfSi9sjfVnss3Faf
iF6yL8UX+d1yfJEPVpBbdPu86WTva9LZEH3oTPS+pj7tLfP1utNfCX4G96Xu
4+Q7PqB3NTvgJraygh2d2xP5qWxcNq16S3WY6gHVBb9NPH+6wjy9n3Yjf08V
P/HdjDy/aZLv1BjvGFR0dta+mvgdqfMO24BOvO4Obs+ya9GNuDsN7lyXu7DC
miXaBne5AV+NX0OmRe6E+gpFzxGVO0dFz+eEy5/UwTfh00TuKnLeG5z+9an7
/27mu1lTNDX6Otz9GN5V+hRX5QeKrD+NvBXfiHW0Xoz+tE4VOaS7jwSX/U3U
kmNiyFuDx2vF8IiYWSVG1cGPIj9PyVRgXDSZHqXXu4L7sb8nHo9O8Td3BPet
J+QGA2oD6Uq+csw5dTjvAfJ24CWeL1t7T/Bz+Z9sKrg/PEt8Hyf4umPOfXzb
uZY4Q52l7GOF+ClffIoM8tHV4PP+nbhvHjN2hHwjzqoI39ptPnsLHnvY4pj5
Orchex7Ca87YMfgG56B5Hwx+ruXU40CRNQbQ6fwl9w1i/pTYIx31GRf9u4OP
/TnxtefEpnV49dHvEHyE7iX7Jryl1xvs7Rp76kYX57bJ2JAYOGcfx+Bn+GL5
HeUdTfy53pOeZ6zK2/A6dX2Nu1Sh7/y9mDt3fteC9/UTr6Oq2b3jvSfLAZvU
aKofrlCrxXzTqPPNQ98+vp14Ht9krMw3FuFdZBHfInRZDVGjhngt9XpBdUOf
elry6v2qTI1Q401b+9T7VYn6YcDc7G2mQ32od6zzbwgLXpNUqVFGjHe5hw3k
22P/2vdDwdt3ph6P16kL9IYWU/ssUS+oPqllubDBSfA3/5HRfit47vWJ1ONS
n+8BO9RBa+Qcu3zD2KY20phqC+Vqop8ynn3/aPG9oUguPie32yCnP2SNXWAN
miXqD8WoVvaeyvhl8ArfCvS2XyHfz+r4AvvcCS7fp1N/P5AcMW8BC9D8Ifi3
km+m/u2lyreTVb5vaL1ng38TeSL1MX1TKLK35fLFd54K9Jm/Ps/jmKdxvUNG
1J56nyxiXwPqkhn12xF4n74p9ZzqkkPqjyn4iPpDNH3ewrXOMrags68TW2RH
2buqbKRJ3C5jXzH4Cn16/3gh9TVVD20Ef7u7O/U7rnc3vbGpvlVt2ky8thhS
vzSoWbtZXkjtUadvAxhB06XWFa6cUby13oQ67fydgtopq6XUZvWT2uwtTa3k
a1CXdXkjL1D/14ir0oveBFWbPp14DRsTD8e822U16zF1rfqU3ygPEl6ivpP+
5vj5PereE97oFGsVS0fcdZ3BG4L3/SJxf9PFd+h9T+uLpklNqT3obI6ii5xL
bfbmrVbxLQ3+vqd3vjbvgj14j9nHFrV4VrPuMbZO/d7Hfw3BN6ATfl/wdRZT
14d0oP1nNX/2BjDPX7xTztBBNctfiu5fdCc65Kzb+IJ9vr1t8xZZ5Y1vh3e1
Nd7Mlnmvkw845Hth9i2wxVtmjXfDOd/19J1PvkNv8Qv4DtHpO6HwA741/jT4
3EdT/x7ah16+QN8+Ra/vwfou/I3U+27yvbDFu+Ny9vbKHrLvi9qT/Ipoz5Cp
g7wH7Ft77cGrzZ4uw7dPn3h9PzjdZ9OL/feQbx9+y+z13FeWvJ5XrS//NUM3
VXQhv3YjuM5axvNXwccfT11HPdaXb51Sl4tGY+I1oVZTrf9K8Nrpd0Z7V+K+
4L2J+1zVHOfv4OxVck+h61PHXMcmDoPbyLbx+T/Dat0E
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh6/3+trXe16QGBKJIWxMXaihNRUhoTZCbQyVIKXGtsLCtGnD
ghBjoq3W0CYsDDEnioUhJGiN7caQYGHYFAtqoXy/nMUvud//nHvuuefee/5D
V1aWVCRCCKtRFjpjITxJh9CN3mRC6AcXpEJYi0rgQebjBlQKjzAfP0Nl8H34
WG4Ij9Ev+CA8llir0EO4WvFziI9a4OtwPr5l6Au8Da7NcZ+r8AXzXOTzAa41
j1WLWuFecDLlOc6Di2MIp9lHBXqP7TMc2VhHEmbciNay4QZk+B+BCxL+LQUf
hacyTqO9jL+jQuavQwXYu6KPG1ER3K6YxH6OhsNp1nye5TkVw/+i++rbTPhd
dN8knAdXwJU9QpiCVjPeybfJ2TAqJtZl+ZNLkjl9sJXCaXxfs78FjG9GtxWg
AdhblV/ScxoK34OLGOeiFsZnUDPxKtEJxpvxmcBa49E01qvm2zPiJ7D/hWfD
x1mrDX2Et8ENPdznN9wfFbHXXNSb8VLsCWwT0FedVfTxGtQJX0RZnOULzu8t
a982P3vdmU74cPS1dSY6m0vRz0o1UC3moPLgOSm3U8w/Qaz1qI35E+E0e2kn
nw3wYvgVfArth68wpyPhNeiZ8RqoFjrzbHhJ9L1qD9qLaqbaaU7fjNdctdcd
+2R+R3RX2vHvhmuij5tQl/mZ6mx1Zt/gFSg7x3M6QrxN8AZ4EmqGD5i/Db0Z
vZ0a9BI+ia5hfwA3Uqt16Dt81ryWqkE7fMfcVoi+wmvMY2vNevgQPBHfFLoL
zzC/a6rZFni7+VrK6TxcZ15bzXmk/ZvXciPaDe8xj6Ucb8FzzW26w7rLj817
wV8J3hr9LugO6S7lm59VE1qFfT5cz9xWtA9eZD4OxD8Mz4HLs91nFzyaGJMx
y2UU4+nmd1k+O7C/VH/QG2L9bni5eaxxqA4eY967Evivh6dE7x2Kmae3b27T
G9FbqdKZai46B98wr7Xu9Ee43Dy2fJpUz+h3QW/8p3qfeS46w9/YO/QeuV9V
aBi8EE1N+ZsajO8QVJnyb7LpjemtddA/5sJ/mF+lXoQK4VxzWzOalfGep96n
NUZkPGflrh67VbUw91WMadjaoueinjEQHml+NsphGfw0eq9Rj1Gv+RF9bfXY
fOyd0XubeqZ650nzXq1/ymvs/wEjedNu
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7566896881992415, 0.809851002566661, 0.9763834145186735], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmkmIpVcVx19Nb/jufVXVoOLCKbrRaBbJxlRX1RuqepFkI0lAUDRgwKCm
u+qNFUjERUTBOIAaBIOku6veVO0EjuAEhgQFJSHdXW+oV90RA0rixsSFySZ6
/nV+H1WL0+ed79577rnnnnum6lse3L5vazaTybxo/8wZXjOoGWwbPBkzmWk2
k/lkyGQWc5nMYdbpov2eZJ0uLtjvefttEOz3yPBYtPHrGfQN4oJ/07x6ksns
zNgehmuGOwZ7BsF4jozf2CDmHGuPxQXnPTW4x+S5aTgxeYIJOzLeY4MzNufG
PGO2dph1XlXJJx4GG+AlwYLzOzJYXnCs9e3o4yvGf9/43zA4MigaTGb9TH37
PTU4NHjF5j9cyGR+b/M7pq+xwcggsW8lg3WDNYOawbbBWYMtgwsGPZt3aDAx
2GPd0KDLN/Ha5dtBxnnV4aV1i6azosHUfi/NON1DronBCvucN7gTLFlXkUVy
iHdi6wozvn+YcVp7xxmnu/AbG3TAozmXUftr3gA9SS9xzu9E+qroLrmDgt3L
QdbvZnPB70C6lw2sGawb1MElgwa4bLCx4HagNedYpzt/KPG1W4a7tl/doGHw
sejjZ+xeSjm3CdlXGSz7qoBlyyWTKTEIBpUFt1fZdQ9+TYOW7VMxqBo0kUv0
mq3P5/x8VdZJ1nW+ae826zZk78arhqxPJ/67Z3hdOkKOMrJId7LpKwY/NGiY
bksG5Tl/Tx2DLu9KuMc7FO7zZoQHBotzbr/TWbf1ffgeMS76XPR9Zk1vLwe3
u3tNtk1bu2SwbPB2m3PDePzcvld5G+Jd4e5FN5GxgrzJnL/XMljzfpP492cS
53s063y1j2QULb1ez7rdbLCPxvsZt3u9g4HBEfT9if++L3FdSqdr6LQE/aLZ
/YKNzxsM7XeiuQat6HMrwfVeOXUPZdYX8SmVUz5FdNbWXzVe1wxseaZsUNIb
MqhAS/eL6CeX+NzrBvnE8YF+439XDQp689AJ/EQXDarwTden/IRTWYR1zrei
n/Vq8PPVDLaz7gP2DHYL7jMW7d6LBs2M61f+qYV+RZeMR1syGK7n3L71tsRj
VHBdftH22jLedwfnO+Rcl8HX8UmiL3EPuo+r+Cd9u2jQYH/5Qvm7DrJuIa/W
3wzuH+9K3O8szfsZ5J+iYtG8+y2dSXQdfh3iWwe/uw0Wr4fZ/+mC21Of88s+
Dk6dR7T0Psy7ry/oe95x3qBlOhgY9A2u5/1brnDi42r4j+YpP9dgbM/mj/LO
W/6lxbyrRmelM4Oj6PgnpoNreeetsb+ZTDftzC8ZvjLnvxXDZK+SqWnwFVt7
2fC9tvbf0c/6bHA7bjNPtt4wqGf9TGkc+2B033/T+Hds3zGyfjP6O/1EcB+n
+J76vDZnkN11DPbg24XWOVaIUduM72bdjoQl69+jj/8q+HsdYnPr8KrxRpvI
nSXWiu//os/9a/AYuYFcOWLhWe5sDbrJvfWyfrZQ8DtOuKd1Yl6FOwxgjb0a
PB4pLjXgoXMWWLdGzK6yXjGyS560RCw/9mXkTQONWyypGzQW3I8NlWMtuF8S
Hhts2Ts8a7BqsJtzejt3Yuuy/anx7ytWz7h/seFjf7Mhv6T9DWZNV8uGv2Hy
P2S/9433rcF9j3xQ4A2JXwN/VGBsDX6iO4rryL0Jb/G9bJteQL4jGxss+B4P
2F47hm+xDaaG+4yl71NnuDVxmT9suGc/GgZN8eFM++RAh8SCbfSh+CxeLYO2
wQ+i57IP2l4fsN+PmD2/kLivq+Bblc+0DNpz/o525nzePt9ETxb8bnrKT8GS
u4dujv2o0U32/nF0eRu2b5e3rjf/ZnDZHzMZXgruY+Vr97jDmkE35z5XZx7L
jm3ObYnv2WCPDnM170J0/d4RPBdoyK8rL2DPJrbQ5G227W6qs24LyndKBmWD
Ebm5cnTlK+uMNfD9yqeazK0oRwKL1w78dP+6W+VwyvsmM35+yTKGt+hO9Jzs
C8HjZSB+ar/EILCPcESWAmNV4uIidxihm8govh+Pnju+0xg/kfjaJxPX2Rrx
rM+9pXFPWPch+9X7ka0p7uu+p+i+ZFDmDoSVPypPmGAX0kWRN9bB9+vu/xPc
T6oe2sdPij5EN7qfFvyUVw7Su5rxMw9n/H7ajEu/ql0kl+5e+4mX5JaP6GCv
8hl70JJrwp7Sqe5DdODuRSsX0voJb1X76T5z0e/2e4nrv42+VC/U5zxX7ZML
tqgNROttLc97vaDY9Ij93lTuqfrLoGqwwfiANyf7LRmU533NPu9SfvWAGkl5
qn5/SvUlPDaxe62rGLTAVaBIzlAmX4isUS6xDI9F6I8k7jdXE/dJq/g85U49
znYG+RR3I3WU6iTxOJw7yVOm1EuKKZJdtVeRfEXzxuQn8rX7s/4+d4gHLegJ
42kd2SNfUQ6tNVfIoQfQqsk6xJul6OP7iceZJnz/ETz+KI+WLQdqoWXFXcPv
CB77lQP8M3GdjeZOcq4xtWKgntQ55CuVu29iB6oJVDfIN+eonUbkYB3uchda
bytBjh42JXuqcFfS2R3R9f5K4jE4ORWTA7E6rV1lm31s4tgWGE9jcpEY8m75
Cpv7XOJ+X7KLHrCuTb1Vx7c2yJnSHKRMjVCj/lCe0iCHL+NjyviqOnG0RJxb
g66zrkROVsme5GhVao8vRWoQu5d/Bc8hHkg8x9E5RH8rei56X/DeTZ/ctEvu
lOYpDWTfoz6oMbfJ/rdFt2vlmNLTBLtLc7Vt+LaQ8avR8T3B87wa+53jbenO
2tiC7OPO6GOvJ16LSsc71KjC8hOHyCq5JpxBtHKrAnd/QM4oucbkmJo34myi
h4yLnmAXsq8SsVt3UiHOyEdeonZRjfXL6PnHY3aucc7jruKzau0lav9RzuO3
xlSPLy6c9MmKvKkhuZrm3R3dzvXOJvDTHhv42jawT16kvFR1gnLwKmOKFarb
Vb/PBK87LhlcznuNcBFadcUu61vw69O3C7y3g5znapJvn96Y+gRpnFPce0/w
HO9+k/2sahPVIQbPGB0NP6E4rvw57/Qq4/m89y4i73oA7yl62iCeXbe9LyFH
ILaWiIct5IjQGpOMZ+gNFeGhsbTHt4TcPeJgM83XyFO7xMRPR4+PH+J8HeLl
ZnQdFYLrvWZQR5dbBtvo+gL0Ht9q6P08Y2mPJu3ZCEsf343uDz9j/P8Uff73
g/d4NK69V+BxHn1us9cauZ/yxbN807y0B6T99O0s6zS2At2gXyRZStH3U/LV
pHeksaF97+p8wX2e5nZ4kz/kjY6xR81L3236jvfnT3znAL7byLKGjoTXDf4c
3W6+Y3s1DJfyTtcZLwEJtrXOe5Xv7DKvwdwC89awO9GS6yY2/dHo53kz8fyi
gU9/NXr/9tfhJL+fYC9T6BE9CfUmuoyPeU9HzKtRV6p+fl/w/FN56IQcMWZP
armEnswqa8rEKcm0RZ26eqqfm/Z3Vxh7I7oszwW32fGpXE9YdeMK/YMsvuwi
PZfbo5//NWrrXc72efr+qpmu0he5yH5ZehrX4ZH2eC6zXnXziB6B5l7FD302
uiy3G+8b0ccHwXlpPO2XCKunornSzXFvtOD+a5Q/6bkMT9mQbOp89Ll3Bs9P
yuSO8lN6z++173cFj1nqV8k3nKM2OeAN601fRr9pz0lY91PnPmUfL0c/50+N
3++i++4vB7cz+VD5+BJ+Rz5G/u9azn2b7FFY85bYX75PNq34odgi2xUP0fKh
+jah5yZZauj+PLLqbh6GXianVj4rW5CtHfeUyYGllzV6H9Lla9HP9ofguXGb
97rKPec5d4F+SJEcukJ+vEm+PKUOOe6PErvbjD8C3UH2OnpMsBe9K607/psN
/NI9WrwH9Zny5I4vRH/rTwXvWajH8PXEa7k6PrFE3VxP61XoKb3mRXrPy/SW
V/GjaQ9ljzh4gVh0iV7LFt/2ouN68H5O8dTfQCL97rdF73Wr553W3qrxlskr
lV/qb1mBXvkWe14+9bcKyf6j6Ps/Gk7+nqHzRfJq9dcTvkkHac9dPfhF6vEq
/ZhN6D5/EzikVjiCLjJXeVAdvy7/rnzr8FT+NSHPUk42ZUx5s871bOK1xw34
1sltlBctkvcp/6vxTbou8k3naZAHac0SetKadfy83vxidN39LPE+2uHsSV9t
Qt3TpD5TjneJ93eNdxWIETn6RbrbFrqQbt4VvZ59PvE6qT978nehHvvk6SGs
IuuE91vgHjT2VHTenwveg+nNnPSBuvRB/hu9H/6X4L5WPvdF3vU16A68JXuF
mlv1xBF1td5iWmMol309eA/n0cRr0zPk33vwGGJnB+hFNaFqw0Hi/ZbmqZ6Q
sPpAOWJ3mvedJZ9Ie0Bak/o4za1Ss2psiF9LfWSB2LxBjat5upscvLPR/0am
v5XtIq/WtalrB6y7Av3H6LJ8O7isXereX0Tn+7h9/2103l8L3kfSPO0xxs/K
Jt4fvWYcJr5ediQ7q1MvdHhXDfodu8SiA9aXyVMuEdPSHFz4KnHmgLENeopt
+PXY463gfSr1q56P5PDB65IK/bAWfRLZt96e4rX+pql6Rz4iQd8lciK91yJ+
ZY+6SPVQmdpa++eJqavc0zr0LnPTGktY/rhN/1U9qjb9meMeKt/k7w6in7sf
fF2B2n9IP0vn7NGLSntQZexO3xbxSepnLdFPUz9uGX/2RnBejyd+1gY+YiuN
5+QHe9Bjel7ap4MPky5q+DnNkxxF6sAdek46m3SQ8L67yCt+FXocx/6G3tsh
59M5ZGsD+ohTeqvqs6W9PMmS0Ccc8+08NqS736QPLVnS/yehO77A+TSvih1J
jv8D5gYCUg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh2+1fa/v3r+2EtPCbGNO2Gipp7QLtRENC4KEBDW1r6WVEBaE
BCExJkhMLZ45MS4MiaqQkAqlJaoSTYwbrYVhge/kt/gl57vn3vPO/9xzzxu6
pKq8sodzrgJloaveuTYWfKZzvSPnJsOTWa9CRdhNqBRfPrqNPQ5Nw5eLXgfn
NsLnMpyrQz/gP/B6ApeiAuKNhuNOMcdgd3v5eqEJ+N/DHcQ+j9qwP1k+2AH/
Z+wF6BVnE8RfiL0I5WG3s/aR3xuK6rKdK0FziTcBbsc+h5bBJ+HTOc7VoGfw
TjjCfkNSd+BRQXstxiJ4CZyL723MuQPwPnhqjs40wluDzp5BN+AaeC12MWqA
N6EqzlaiGfi2km97hmr0OyhHy7UUDYGv4X9H/c+jPHwbg2JbzEvwIfwl+PJR
D7gMTvPtteg9ew/CU/ClUAx/2itWHTrudWd2d/YbffDP5EwtuU1Hm+H5Qd+a
RnvgM16xGtBZrxgWy3KIR7oTu5skGh9pj+21HsqFd3nlat9s334kqPZWw8f4
HdzA2TZUAnu4A/uC9QzcavEy1QMj4Eq4iFgpVIVd7nX3VgOrxWzOnyT3l2g3
++cF2XHqtx+ewZ5TTj3Uia8fSlL7ajQH/2A4hV2PFsIjg+xWtBQ+inrG1RMr
8B1Gq/mW46gZX8qr96ej5dgbUD12K/oVlLPlbmvdcBq9zlFPtnJ+L1yYo5iP
4BNBsV+gV3AiqFaefMrgLXALucTw34Yr4EnwGlQPb4BPxLXnOrw4qBa250ik
N2RvyWr6Fd/ZoN/KTlBX/DfhAuxV6Au8I+i3LMf78OWgvbbnA/wEfo6dRdy/
8N2gs8fQd7gpyLY9P+EpXr1rM8RmSVnQW7E73BbpTuxu7E4G4SsP6k3r2e34
MoJ6xWaMzZpGr9mVRA+wm1F1pnpoWKQ189naAIsdVCur0UX4t+3PUk8m4UL8
eTHNkDVw36DaW89Y73R59b6dmYj/i9cssxk2NlIPWC/YjPrG/l6mbPX4TPz9
g96+rc2KNPNs9q1Hw+GH9j6oVTXqgu8F2Un0FS6Gi2KaMTZrCuBETGvr4FtB
ewPqhMcH9bLtWW3949WbCd7oX3xXgvZaT77DPy1oNlgNauGn1n8J5fQr0n+C
/TfYm+rA98wrd/uPGIj/gFdsm0k2m1qsfl4x/uFfGTQr7U3Z2/oPb6nWLQ==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9422895062908184, 0.9564801888007287, 0.982572991928977], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmUlspFcRx3vc7unx972x3d1ue0ACETixBSm5ECQ046UXew6gQIQEUoSC
RAiIgMZjuzebQwJIRIDEdiBCEERmbPdiTxCLRAISSwQSKEgIMpu720tAJBdI
OBAuof6p3yf7UK6u771Xr15VvXpV5Tse+Ny9D4+kUqm/2p+04YVTqVTNYM2g
dzqVOjDYNzi08R2DXYMj8DWDyeB4O7J1Nq9j0NYa+9Y16BkUjV40qBqsGmwb
bIk34+K7xjqNddlzCD/hAWN9gz3WC982KBnUT/v+Xwv+7aNxKtU47WcQv6bB
DnQbfn3WddmnfNrX1JG1xboFeEvGnVHThcGBQQ+8b7BksGGwbvBmk+GiKfNZ
08k1o18wODLoGAwNBgZd1oku6JvNHxosBB+PTP4No5fSzmvdYBF6Ou26k00q
yCi5N4Lrd8nWziOv6Jm0z5XdvhRcd/fanLx979u3gUEh7Xgoe6XdftpjKu3f
RE+hF+2ZR1/SvXxm0iBncJAx+U67zctG5w0KBhXwlEEVXDzlZ5N857RPxvco
nPazFjlrLtnHYBKs81XTLl/xhF7EaxHe0wb9rPmNQdtgAO4YbJ5JpS4brBi8
Mfj+z5i99mxsizVXbWyZeeUxO4tBweBFm3/J8C9Nhzmtsd99g13sLP9YCS7j
rM0p6Qxp13cv4zraN+hk/MwDg1baz6NzNw0q0P2M61o62Ms4lg4+GxzfI/7o
XrresTmH7PGLyPf9reGG4TJ8Pxmc112xyyFbSe8aK6DTMvKKrqf9DPomWQvY
fzvj8u3xrYJPdDmfztbmfJpXlM/Ld9N+b6b1LeP6msk4/S2TbcJ0/0Ds/tg2
6BhMWGyaN5hL+ZpFg6rBqtlm22DLIG/z+qaDgeKX0W3GZD/Z+yr23oJe5tuV
M773Enw3bf/LBisGhybrjsEucvegdY4utGS/yPoPmPwlw+dM/mvc2w3WyK6y
8xSyVzLOt8U83f8OfJ8LLtcTxqdmuMN5JgzmDeYMxsGzBn+z+Td0Lps/rbtr
OjiUX9i3ksGCwa9tzgXD37A5Z1knujziuisYlAxyJ2jpcqj7OuJ4X7o1X28b
bBssG1w1uGJQHPFx7S0ee6fcHjUb67DmEnOfNLhssMn6RyKf/5jhVXhvGayA
NW8L+8nmipdt9PV85L8Hkd+DPfORfsrvg/Ag5bFHeJjy2CO8b1AnFis2z4y6
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
V3D8cnTsNxp7Z+xn0Zlkf/mB/KXJ+XvpY9+q4Eca1z5l7mgd6HKfFSMLxNQu
cXpIT6tI3D0gLosuwk97JD2yAj3IPH20DjwUzyaCx7gfR/7W6pto6encif7T
zOhxj2eaezGkD6NezXuD+4P8a59v8uN3B9fdPyPXUQOfKYG1ZkDfRrweivyO
fCpyHTVZ82Bwm7wrdn8qYJM+/Z42/ZnFROfoOPG1KmNDbKD18pUi97yBDSu8
DUvYr4W/y36J3Jr3auzvj3qESX9Kfr9M/q0eQJt4UCO26vem4R8F7+VeotZZ
obdbot5UXtbl7dRbrRpcvQz19RUjFCs+b/g14xMb/kvsNbvGVcfPkQevkN/V
qGfVgzlLXaS+yzi1TdJ/EV2m3pUce8Hn7sTH7/30ifde9Dy8td8S43oPVGtO
UhOp9lUNHNM/UB9BPYMkRicxe51cKonXGpsgX58jX1+AVn1TJY8NwdcpT8yT
n5aoeSrQN+hTSA7VltL7p8mr89QFHWwlvauvIV0mfQ7h8ei45yVZethHsia1
rmJtOrgOvkqNXKAGUx06hVw5ZNR5DsgNlHuoPs9REwb6QOehF6g9xukDJbXp
LPMOg8/9Wexxo8072uftFT0BD60fMq4cIkeNoz3U25ukRvp38P7D74zn74P/
f+K79vu12HM55XQlatkavUb51g1y/Bo1wRw14wp5/xq0ai/VYMvUYCvQffo+
kmuXeK+4f55+mPpi28zbO9HTFK1zrhHzd3g3tH6LufLNHm+Exjb5dgseqru1
9yHrtf+FE/25Lm+K1l9l3U36AKsnenUrrMlTO0q/HeTS+nnqyVXG6mPHfc0a
Y6r/Jc9u7DG/i6+skTsoH1DvosidUO2n/0upFlwnP186US+JvkKfTnfiX7HH
W8XdpI7SvMKJ2uUqPT+t2SKurFKrF84c1+55+mwr9E7UQ1FcXqOv/iR7Kh78
Nzj+Y+yxpkvfZJOeovZTD3IPOulFim6S7ygvkBzb7PeT4PX7I7HHpDZjNfRU
wg+qJ/KIRXKyBrlT5UTeIHqLvoX6FXVqGtU2t+lrqJ+xybj6Bg3GpcerfJNM
Neo5rT+gj6I8vcv/BFTDPB28p/eV2PN+5b6VE3m/aPXrBuhimpxYYy+Qy+t/
G5I3R52t/x/r/8hPR16riJ9yjVv0YtTz6AaXtRn7O6TziFbtqLWqSZKenWop
nWec/mMefqoVSsH31/9YatgzsUEfPe7DQ+fv0MuRH3XwEeki+b+41vwfK785
vg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllF1olmUcxu+9H+71uR/ZVKYWKKlHfSxCT1pQ2T5M3x0oUwoKFkzQZTTL
j23mfD1IElwqaCpoQYlTN1db9uWBGlhGQaIHUTN63WqzUE9MPUg8sN/FdXDB
fT3X/7nv//fctnUtHZkQQjvIgbUxhBcqQ9gIjqYhfJGEcBWDqdkQauBD6Onk
EJ4H4/A/0a+hnQKPwofRp6ONFkLo5/wl+gT/fw6q0c/AZ2X9TdpUbKblQ2gC
y9A3wt/h7RdBH/wCNk3Yd4PZ8EPoG7j7GLgEfxu9qyKEAXAH7TEwwF1lsBr9
AHojb3WBSng7vIjtDPAa57nYd+X9Tyv6dvgYb38KvoZ/jE2Jf4vgIOeBxLHo
W4reDz+ZcY6q4K3wau5uADe5ax4ocXczeBl9fXRuj+sNxQfvI18j4D/4CvjQ
pBB6wA74G/Al2NaAj+Cros9/oe9PHYNiGad2/6CdAFcKrlFZOtiatw+PS0+c
C/ks33tVr4JjPovtq9F3y4c9qWNW7DNBFr4l2vffwVfwnuhcqWafwVuw78eX
MlihWkfXthu8hH4EPsh7m8FleB28mrcawCb44WhtMfgJfl/5pzGbQR38oehc
zgLL4W8lzrV6QL1wW/2CbTd4Gv1DUF/pnn5dvRb97zXdqXpgv7XCPXEL7Zvo
3l4PbqA/i15PLJ3gOc5PgSWca8AVzUq0752ghP1F+Cj/DoJ78EuJe/ckmA+/
Dp+Ws48L4BXRvg6CjN5G7wl+Q2/t5duignv+x9QzpdlSDn+D74RPKdjmPLyW
f6qCfR5B2xedS9X4u9QxKBbVaBTtFfAHvleRnw/Qv1X+8X0xuAk/F50L9ei/
8B+iY5PNbfgY941mHVMtfCTxLiiBy5xXJu7NIVDkvCXxrJbBPe7KglM511i1
bov2RTVT7d7Xjsh4hjPwT6JnXz3+q/xBb856pzycuufUe5rBv7F9AgznPQOa
hebo2VoKtqX2Sb4p52NoP0fPYuT7A/Qb6uGcd9yT8ET5z3lnFdXv8P5JzuHu
1D2uXtdOeSR6h2mXaYY3wBeC8bx9WpO65qq97myE9ybOjWJW7PXRvs5Qj2ne
+DZc4Z69i1aM7j358B76M9G2eqMD/ot6PnFPhikhnI6urXb0BPqdxLOlGBfC
v0+867VztXt3JZ79Cd57oNgT97JqrtpvT6zJJ/n2bvRuUE+e4b4F0btYM/5m
6p5Qb6hmc+AxehbVA03w/wFuK9sP
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9911581770317097, 0.9906116932251957, 0.7961954186963089], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vemE4w==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlWto1mUYxp8d3m3+n/8g2phtzo3KL9ph1PySfbCjYu9b7WAa6ActwZWi
oKawnPO0FXiEUoIOdICCZLWTO4CHQFAKjPZBUomYtjnc3g+ZflEC+11cfbjg
vt7r/t/PfT/3/dzvw29tbtlUGEJoA8VgfxJCX0EIk6ALe38M4VppCJVlIZxO
Q5jht3oc80UhNMAXoc8uCeEVsB3+GXwPvq+BX+CH8H+IA7KgCP4R+lK0dvAz
/F/0buK1gkXw79Gn0AbBZfhBeA32FDmcga/Bv47cpsl1BXa/9Fn+5k/08/yW
I7dOUAe/nNgeAFewW/HvJde/wBH0Xvg431YSow97q2omfjO4BW8EExnXuAn/
U+iT1FJNvNPYV8EodjeYh94VnesgGIY/j76PXJvAH2gpyFPrKFiCfj3xXSrG
AngWvaPEOX4A/yb6LnSnY/BV0blXEf8YPAffB28Cu+EXiNdCrHowB/6JOPnW
gcPYNfi3UE89aEZ/Ibp3OrMTvhifZeTaAZ7DLkYfINcb4GX0x+F9Gd/JenhF
dCzVlIMvhw+VOKcP4WcS55Ln/Cp4NXoO/06wEv6V+oPWD1L1F/RnfMZj+N5W
P4ndCZ5BW81vN0t8xlH4rui73gN+TF2jap2hfyH1DGuWNYP38f04ejY1U5qt
a+g3yK+a+E/i/2n0bPaA3+DvwfcS+3XwHbw7cewRcA9tIZgh1xHQht6AXhV8
h1fQdvDbXHKtAy/CHwTVGd9BE9rX+HcVukdlqWdUs6qc5us+4b3EmgBvYMfo
XihGFn0b/H1y+0FI3TP1Tt+Mo42CV2f5jUyib4Avw3cn+Ba+M/pbvfEhvR94
D77j4C78BPFGCp1jeeoclMts6p/C95Lq0R3iX1DuHqgXurMOtKcTz34teAr7
y8S7QD1X7y9Gn1WBHfj+3cRvT288j9aW+KwseAe7KHoWNJOazUdBV8Yz/Wb6
f02lvpOtaCcTz55qUC0XNM+ctxvcxveJ6N4pxlr4S9FvST1T70a0r/BtBzPw
LcTYVeAdeUdvNfEsaGdodxyI3pXacefwfyR61jXTmu0sPsPBO0G74dno2dAM
bUbPRO8G7cTF8J+ic1UP8/B18NpSv4HjqXegdqFiTqCNJd5F2gHaBb9G90Y1
38P/bHQt6vE/8OnEs6831ph6p2m3aYfWaD6j34J25O/az4nfqnbgA6l3pnan
7mgidY/UK93R32h3Eu92/Wfov2Nj9FtSDV/g/3b0LtNMfg7/DyYX4FI=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9881038583972336, 0.9715336624063002, 0.4082861655814366], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmVtopVcVx8/k5HLyfbsPIig0M8m5JFNQVJTWByto8fZgO01yrjMoaFVQ
UStoFR9q7UxybsmIglTxCiooVhG1MyfnkmQEoVWhUkXwLoi1M5Ock8tUH1oF
1z/r95E8rOyzv7332muv+1rJPfDg8sfGUqnU0/YnbeObQyp1eTyV+l+USl2Z
TqUeNbhokDuVSpUNSgaNyVSqaFAyGE6kUl2DnsG+nZ+39YLBgf1eOOXzkf3O
n3Iceylf1zwLvqLBG+zeht3738jXKifua+pOg2WDusGqwbbdt2awbnAQ+7dP
2Nmr0HvJ4H2R0/BA5HdWwSuaasznuF+4d2MfP2z7d1NOn9YXjK7zBjWDvt6g
Nxn0GIcGXcZdgxdiH+uGZ020GmwZbKQc745B06BkUDb4Z+zfKpG/rwe+rn0b
cka0ClebN2hsnfL1HLws863J+9ZPnNH9m6wNTvk7Gow9zm2y1ku5zIS7yD7R
9UBwfi8YvfMm+33x3qBgv/cmfJ6336MJny+YTp03qBlsGq6WQVs6Yucv2PoF
wzfPetXga5Hv/6qNOXRLuM4a3w9NOW+lnV8t+Jex83Xb/23JedJpOZxwXGsG
bYOPB/92l92Zs3nZoGSwZPtXDVYmXQ7C15AMoFF3FKCrYpBn1PkN060Vg9Vp
v3PTYIv3D5iPsIm+wYeC6+urY9cj2df6uPOoz5lDcGhfE9sqT7pMDgz2keEh
c9FaRIdqdmZe/DY4z3jWoIMdiNYBOKS7WcO7O+H8LRvkJDeDkkGWeVVyBW+F
dc0filyvPhm5beygn5LRBezkIO02M6832u+CjXmD60bHE9PuV0Zp/5YzGKZ9
zCJn4dL5od1xh427kctev7XWF16DkcF+2u/RHa8Ijusfos1gx+7ZNZi37z37
/if7NmPw3LTTcjry8YbBmcjHm9O+V/QJ17bhvSW6DGYjXxde6X/NoCrg/nl8
xDz0b6adF/uMmm8ZrI37Ge1tG1SYtwzKzLXvkHN6g3SuO+0+Uu/vjTst8neS
8zb2oTNZ9Ec++s7gfBMvL8C/O5DTwgl+Cm/T4DXB5bBj+/tpl594cQO56T7Z
eAX9vC92Ply0cwNw6B2bjG1+H0hW425bsrFqyu2jbtCYcF2WTtcNlhlXDW4z
vF2zuccjt8ky5xVf5FO2Uh53Bsw3WUu+aVTM6XNPUzbHN/m4v8ZOy+sj96G7
+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
sYbPeCy4fbw/dr/S4vz/AVV8nP8=
           "]], 
          PolygonBox[CompressedData["
1:eJwllF9o1lUYx8+r2+t2zm8XUhg0ZOp8FYwK1G5SUCztws3cnG4OgxwFan/s
okQv/K+biqJCWYkWpKCoF/7d3KxtgaAoJBqE9k8oNbH3NXXahSb0+fK9+MLz
Oc8553nOOc9zRrYtbfxwUAhhESpDE1MIxfIQavIhLM1CmJRsN6Ll8LPwGPwD
TK6HX4L74K2oDc7D/fi2oalwIdk3X4JXxhA25kLoRquwV6M+7K3oEXNfRw3E
2oDWMP9p9F6taBK8FjXja0H1zK1KzkUx38C3Dz5VEcJtdBWuhduJ3Y0Wwp/C
1fjeRJ9hb0OjsP8ZQh74n4FHMHcOaoD/I34He/egKXB5sl1CM+BH+JvKPOdV
eC/+Tew3F12E98NnKjx2Bd6V7FPMs/D05LMU0Ap4Frwl7zPqrHPh7/Ie2wy/
Bd/Le2wn/HH03bWg97CX4d/MWeahg/jfhWuHeM3n8OTkWA8430dwNdxa7jfV
2z6ffHbdWQv+V5Ln6o0Xw0uI0ZjzG97H90FyLMX4Gn978l1+i07Dn8DrsTvR
Ufht1v9NndWwfiF2M7oP96KbyWfQWQqoBP+A/qokL8ZzVbwjPAtei4rsdw4+
Wek5j+FVen9i3UZd8MZkW2/em/nN9fbr0AV4JvtuIPZpVIc9Hg3HbkATsKeh
LdjN6DfWrk4+m+74GOuz5FpQzdRlPqPOqhxW4juueqt0zjfx7UmOrRq9DB9K
rlXN+R3uTz6bzjQAdxD/Qc498iT5znR3eoMi3AuPGMyboWrmPxSXuSZVm/9G
985YNDFzD6uX1WOvsf5P/AOs7Ucv4PtC+/MhzEFfYr/DnOGcZTb6Cv9P6g/G
S+Q3iPeoS+7VLrQJ//vJc/XmB+CmZN8dtANekGxrz13w5ejcO9AV7B/V79it
qAb/i8m9qz9pEXwpOXYPegL/Ep271hTgU3A3uZdQJ/Y+9Qf2fFSJv0vnxe5H
Q+E+eMxgjz0Hn4+OrTH5zifH6kAP1Q/RtVCrvxJ7d/TeBbQ9+s50d+2ogvnf
RNvKqQo+Eh1bOSm3tuhaVw+oF5SzctebDmN+fXRvqAZVi6pR1ap66Ib+NriY
85uFzH+q/laNPVbuqIncR6Jbme9Yd92DRsM/R9slNC5zzav21RO/Jv/Z+rv1
R4yGD6O7Ff7TruErRteWaki1dCI5luZcx/998t0phxL8R3Qs1ejLme9Md6ca
z8H/AzIC5xM=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9242676864480319, 0.7374536436035741, 0.25792220673145727`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmV1opGcVxyfJbLJ937cXiqDghbabZGYyyepFqxdW8KPqVRWE7WY+k60f
oGKrIC1604pguzuZz12siB+ICopF0QpW2yTzkUlqKyhWBCuiolUv7DabzEwm
2Sqef87vJbk4eXLe83yc55zzPM/5n7ntvgc+fP9kIpF4zv5MWbs/nUhsGrWN
qkY5o7z4WxKJNaOq0TBKJGrWdsNEosM38etGl42uGG0aVRizwTfxe/CS32CM
+F2jZ+BfMXoavphMJBpGdaP0jPFGBaOMUQk+xbe80TxtzuhbpudFaz9tes7x
bdloaHN1jLpGZaOWUdNoFrnG7KOj9v19m+eKfXvQ5imaLdJGGaMBctkgZzRn
NG+0bDQLX7d+hWkfVzA+ZZQ2ytM3hW3uNbqI/S7AN21Myag87ba7yNwdfFMz
+lfk8/0sdL9VjNaMVoyyRouMX4Avobv4L0Quf6eNfTXyffwqdLs/hi5t5tN6
tweJxHX8UyMuClAKu3zH+lQtlp6wtmttzahuVMLG8qX0aU37/mSXxrTb6bLp
sGHthdDXbBOLJfqqn+IzhZ/3pr2Vb1u2RtloxWgw7bGiftK7w1wV5ttA5zo2
TFvgD2zccNL5LmO+GPmYD5o+mSmXj4wWprw9MMpOeTuedHvUTp2bKrZbnHL5
oVFTtkDX4bTHsXS9iu6rRkHk7dcDj8XKjMefYnMNXrFche8zr2zQw94Noy1a
yQ7kf+u7YNSZdB/JN9uM0/paY8NofcZtXcT2Wm8TmdZrw+uc1dBD568OrzPZ
gNf6RfYsvQrwWjsPrzFd6cWYHnyVb1rvJ5Hr9XDod8oyZ65FfCvevxR5+37r
kz9rsWGUOuu2miNmisanjTJGBeTic0ZzjLlodM5o1miZdg66objDF7PMG987
8T2Umjm5q9LcVW3TbWTto6HfWxl8UeBuqxl9O3IffTx0/YYzPkbr78742tJ1
MOMy6b4/47z0ll7ifxG5DR+xea7Y93vZ008j98tD9v0HkevxQOjzruPfPdpN
5trE/hXuxTgGl4nBfuS61kI/d23OTo/zpTiqsL5sWWWcbNblvKjfEF93iaE8
tuwQBzXiok5sxf3q2KiLfIOzEsdsBX3rzBfHptoSe1tjjQG81nwqcpt/OfR7
9xx3uu7N0Rk7T0ZNey/7RlsJv//27dvgjN+Daodn/K5VqzEv2Vx71veineuc
0aH9v2ztpt7dhMvaRgP4T5oO2zbuLTaubHwr4Wuu0U/jakZdo07C3+Ecb0uN
Vm/O9cjbp0O/o+a5r88Ffpfv8t7czj6rzKc1GuyvZ1Sn7bJv6T9GrvYAudoR
/dQOjT5rOhzaXt5mOiwkfD8lowxt0SjPfrR+gfXE640an/Hxf7bxFfv2HtN9
GVuIzzFOfCrw91vvs948+Urj5wPPPyQrsrc66zfh7w7czu8N3AZD/DEbuJ2U
s6TQT/qm0V381K2+5m9Nx3nk0muOVvrOBT7HHrlBj/fmtWafHbsLfxw4P5r2
96FmeneNOkZLRpeMVo0WaVeMsrRlo4bRllHPaMfulJtGRyJ7g7aNdowOjfrw
28gPjXKmQ9XGzZn+V022YrRqdI32klHdqGBUNFpgzZLRfTa2be15G9tAXlJf
+1Y/4/uQjleNWkZvjny+5wOfQ9+aIsaVp3wfY87aWDx6l+irvfaJC/UbJV2n
jMYk3S4LzL1N3w7n8vh8Jr1vGnsdcE5brK/9D5IuT+GHEePvifzb6+TryG30
e9vLJyK/B+4M3R5aR/wHIp/r1tBzT60tvole2qvy0RGyLaNx0vfRoz2W2Tod
o65yENqechBa2UjjFokLxdEC7438fJ44kr+XiKP4ztKdsJD0eTXfuyLXdTr0
N6pHzhzfaxqT1j6mXK+/B/7/fwK30wK5Zga9Na9skeIOkr2z5KLy3yI56qr1
v2Z0NemyMnmI8nTFaz/p/Vbit5++kmfoq9zlPHF/k5hNTXmup1hWTrY05e9u
FzzQwO7ap3yfpV+RcRnsq/huYu86vNbfQT/5pIZMZ0zxpPOkOCqeOTkTPWJq
B/k14rvJmD7nUv6sErtt5mgwx+cjzzXfZz7KJt1vY86Q9FWuuhn43p8NPK4X
2NtnIvfDXaH7skhevJj0OXRPLCW9lR1TyOM3JE+e28Qnst0bbM4ju8eesrWy
yjsnbC6jNXv720abZ/1bz2jLqGp8B9mrpse2fXsk8JxBfTeMRvaty5gx4/oT
LttTTsYcQ+VGRofINVfN+C7ygfFto86E464Cb6TmrRs1JhyT5U/huRy55u28
kRfIA5bBY3+JXPak6f7KWX8/43f0ImPa6LXPnvbRex3dd6U7emmfyqEG0ydY
XO0euEXtDcW8rTdW/IfOz5GPPh55+7HQ35YD3pIO74nm3Zr2sZIdgQH09vwz
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
           "]], 
          PolygonBox[CompressedData["
1:eJwllGtoFlQYx8+u73bOu0C/GCTkZXtnzqwPTQQVksg+LSHYdM7rNEUxNaiJ
ftlIyE1zzTZU7PrBwGgFldDK27zfgkQDyYoSvPShzXQXs63w9+f/4Q/P7zzP
Oc85z3nOmdi48ZUN+SGENagQNacQjmZC+Bv1ZEPojiHsIuAE+gK7Bu0k7jh6
Gfs14hcQuwMdJP4DxpYT+zQqhC/CKwpg1Ivdih7mhXAWjTL3fXhRvnOUEn+e
scOlIfSjEXgXPLkkhDp0Gn47eW8aOw4vQu1FxKFyfDNYb2HwHn+DP0d3iZ3E
er8T24S/k9zL0HrsBsaWM3cFyhH7JWPn2EsnOoDdg/7N99jYrOdo7jTUT3wz
3Is9gEbgE6i11GcYJH57tC/H/Dx4JZyD61Ffcg7lUs0i/lcZK8+4ph/DHdG1
VM1Uuzd1H3nOOURsS3QtdaZh+ILORK3b0ZNZ35Hu6j66hf8F+D3spWimaqX7
wD6D5kdLtmJuEL8/eu+6I91VU/Jdq0e+yron1BuDaAz8bbRdSf5x8KroWinH
n8xtjN6LaqBa7CBmdzH5UB3+zaiDtZegz/A9UP/QmNNRNTwdfy93NYDWwv/j
7yp0zGy4Fv8x1rqHdsNL4X+wT6MF2NdQpfbI/RSUhfBNcm/UotvEf59s6w77
4Au6U+x2NAQvSV5bd7QX/lX9wlm7UA4+hH+KYum5P+CTyXMb1NPw5eTcWnM0
6zeht6Eee1z9H1073aHusjt5rZPounodfgp7mPy9cB8xUzh7A3oO/kX3wdxB
VAXfhEcKvEfttRqVB78RvRX1gHqhCl1n7U+Tc72Lrqp/4J3FrmkbXKx6kGsQ
vQTvhReXeE9n4OHovbSjWfBHyWsp5gf4v2if1ngePpxcG9XsDvxTdC31Z0yA
H8M/Quw5lMHuj+4FnelZ/H9Fn1U1UC1mE5Njr/Voi95fcq1Ooe/glmRbPfY1
/GPyXzORufllzqFc6qm5+F9MXusd9BZcndx7yrEJLkuuRSVjNfAB+EiJ/5yf
4dVwVcY9uA8er/MW+c/S31WR/HeppxvhOfA0Yh/Cr2edU7l1BzX45qFlxY7Z
im9+8tvR2Db4EzQ145wb8L0R/dfoz9DfsTH5bSlGsZVwZ5H/QP2FeiN6K3qT
epvPwGeLHLMSfiL5rDqDzrIn+W9uQ5fwz0jeu+asgz9M9qkmV+Cr0X+TerQC
fgTzyeye
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8540959562791269, 0.4168108017263711, 0.19943565486652315`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVj1opFUUfZlZMzPf+7TYylKbVbOZ+WYWFAUtRLBdsFDBJJv5iYXILjYr
WC1soVho1sxPBBELLQSxEAvFZtlsdn6SQlARVgsFQat0m6yTmeg5OWdIijNv
3nv33XfvuT/ve7Rx5aXLuRDCL0AeaOCnC3SACTYGwBCYehwBnTn8BwZAA+jO
aa0J9Dyve63t+chnOB4BU885TjzWoLua0xnq7gPvpyFsz4fwSgxhP2rtWhLC
GazXIfsJ/pdhdx1YBXpYawItYI06gQvAXZy9hP2nIb9oWc5pfwXIgE3oXCyE
8DpkW5zbH9pHuzKgAjRyujvzXQ3b3fL8cO5ENgOPhzlzaV3cfwN3jR8I4Snc
1aUdQBMYAp2gtSZk+pDJovgs29Yd+glsAiPLcr4HuVXsvwkfN+wf/Sw7Htzr
mCveR27IEX3t2g/aP8Fe1ZyQL+p5AeN12LOBWFyM4mXH8ezbpzHwFmTKkHkO
MpOotfdwNsF6G7o/T8RdJ6f5OMgn2ngYdCfnbdtOW7/H2QPE5V3o+ydKtpXI
7qpj3HFM6EPF/tXNzxEwBe6VQngC5x5PxDPX6Cv5/M9yTftNvfkHJfurYzRy
fIa2n5wNrIO27zomH3vcDSex2vF5+k+/v8bY97mxY07d1Pcn7ruD8WKinOg5
xl3X3+z+oeuz5ft69rtrfZ+BtxXwdiUqH3gf9Z5NlZPfJeKIsjO+OW54HPhM
xXXOHBo4brP7p85txmBqDs/hvjby9jXccwP3bwO3C+KeMdgvyQ/6w3qljR8V
JFsN8od+Zx7p0yTV2R+huwAMzoTwEMYa9tZ85kvf93ZUzR85rrR/bK63oOND
YL0ku6t51ejDOFvBeDORj9w7NLjPvXcgs4rcfjHKh1sl6cucu8wD9k720GZe
/pOHx6JkeYY+MLcmzr9vUnFzLYrrGfdrp/Ko6hptus767o9Hrr8d99lVx4h5
wzi/mpz0WcrdKIawDKwU1SMofzVR75r14H3sLbBOSvKp7zwYO3c4n/j+oXt8
/dQ70LCdz6eKUcG9omkffie/4OYvjJO8/g+Bddx7G9gqKmY7rp/MZ6mXdi8A
54uKN3OlZh6Hp2p95PMT2869v2HPEnz6IaqXnLeum6nGD6LicL+g/ZZ7es19
u21ff2NuQd8ziezu+L2k3NQxeTnqzeLb9UgqmZ8T9dbMetdsO3U1Zm8FsJ0q
Rr2o96flHr3guHGPtcKauVQ4qRNysey4MX6Zc5C5yPqpWO5J6G8gLgeu/bL3
tl1/1P0sbYbMUSJ91Evu2B8WfYZ3MFcOiqqlJcv9lCqGX8D+u6lkvori+8D8
9lzXjOG/8+Lqzrz46bkvMBeYE8zZc6nyhLkzyznm2n33Fdq+aX3kdcn1zTpf
tg7qqvqbhj1rN9Xap1E+bDn/9lKduxX1zUHbVqLqp+vvAfYI9oNRotgOncdN
95LjnuLvgONvB+jMwOdeolh33T/vpeoLw6g8bbsXX46KL/s38/mC37gt801O
G+5Jx70pp3f20L2g528XvrtcX0/k05Z7Fuul5jfuj1Qx/hZ3/g8hZnUm
           "]], 
          PolygonBox[CompressedData["
1:eJwtkz1I21EUxa8mmvh/fxenjnWxKvEDQQVpB/FjFTqIghq/B4cEF4VOgoOD
0EZUVBDBwUGQFkoHxUXUxPgxCDrpoqDolE3FGEp/t9fhkHf+5773zj3vpnQw
/jWWLyJ1IAjuPJF0QCQH7llPgaM8kSzIOZFL+GLAasp8kU98WyigBgzBj+H7
RSJPIAevcaZlwRh8jv3VXDgAgvAWeJR750Er6wyowcggqPfNg3rRb7XwDc47
CIs8gyv4T/QFzkqDX6z70JOFIq8gyvrcmZdytECxyDa/b9RWc+YH9negz1Ob
ArPwL/Aq1v3gG3wdREOcC2JobexfwesIaGK95cxLBXfcUDvMtyqy6gcZtD/O
tB7wgD6pfvMs02e0v5onvaVBM/qLZ73rt8/wGWpeuLuSO/Z886hetcdOtC7q
U3jJgm7PoGv18Ii+BhJhy+yCvaPwSMh60t6W4L1hqznzLUPNUjMqgZ+qn4C9
+Uf4rrNefoAM/Lszb3pGEj4FPwyZ5x14g7O310zH4QnPZklnQGch7izbObCJ
vurZbOibevBGeERsRq6obXf2Nvpm077NjM6OZnCLNuFZ9pqxZr3vzOv/mfRt
JnQ2NINl+Ilns6A9aq+TzrxoD799e+OR9//HNdo/QSt3sg==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8173190000000001, 0.13412700000000113`, 0.16421800000000014`], 
        GraphicsGroupBox[{
          PolygonBox[{{2618, 102, 2629}, {3035, 102, 2618}}], 
          PolygonBox[{{2617, 51, 102, 3035}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 3035, 2618, 2629}]}, "22"], 
        Annotation[#, 22, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2615, 3034, 2616, 2627, 2628, 3041, 2639, 2648, 2649, 3048,
            2660, 3054, 2668, 2678, 2679, 3062, 2688, 3068, 2696, 2704, 2705, 
           3076, 2716, 3082, 2724, 2734, 2735, 3090, 2744, 3096, 2752, 2762, 
           2763, 3104, 2772, 3110, 2780, 2788, 2789, 3120, 2798, 3125, 2807, 
           3132, 2814, 3137, 2823, 2830}], 
          
          LineBox[{2854, 3163, 2855, 3171, 2863, 3178, 2870, 3185, 2877, 3194,
            2886, 3203, 2895, 3211, 2902, 3210, 2903, 2910, 2911, 3224, 2918, 
           3233, 2926, 3232, 2927, 3241, 2935, 3250, 2944, 3257, 2951, 3264, 
           2958, 3269, 2967, 3276, 2974, 3283, 2981, 3290, 2988, 3296, 2996, 
           3303, 3003, 3310, 3010, 3317, 3017, 3324, 3024, 3331, 3031}]}, 
         "21"], Annotation[#, 21, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0ohHEAx/H/GZSXG5QyUFJuUqY7C4OUTM8NVxJleWS45GVAmS4GMkgW
imRgUBhkIMulDCeDopQkg5jchuVSPoZvn37Try2ezk0lQgh5pWtDyKhLL3Uh
9DFSVu/2EGONqWxPcFZz+rYLrHCFifoQ1rmtHdXY+zzWiRrsczaxyJJu1Go/
MMVndvCNn/+fSts/7OYve1ntc4BJRmxks1o0YrdzmCnG7GSeGc6whwvs5xIj
LjLLVQ5yg6Pc4jj3OMlDzvOUBV5wmUWu8ZqbvOUu73nAJx7xlWf84CXLvOIX
S6zwjlXJEB75BzpuPHc=
           "]]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxHEYx/HvDUrcTcrAJCZ1yZ+JQSKL33LSZTA4GZDcILHcZSGDZECU
DAyKgRSyXDZlUKeUJIOY3CIsl8HL8O7VZ3rqaRjLDs7EQgiTaq0KoU3teq4O
oYcDivRmpzmqjEr2FD85y5zyKtvLDPEQ1ritHVXa+0zwmOe6UK1dYD1vWNS9
muwnNvOVLfzgt37Uaf+ymxVu9jPOiDVMsY7DbGSGSU6wg1l2cYG9nGcfFxlx
hUNc5wi3OM49TvOQczxljifM85JLLHCVG9rUrb3LIg/4yCO+8IzvvGKJ1/z6
/wfLvGMsEcID/wBapjy6
           "]]}, "19"], Annotation[#, 19, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxGEAx+FXbnKnZGNQbCLUTSykLG6RPxkMLgYudQqZriwng2SQDFJc
UWcQJRlcBqUM6gaFjVKKRVhk4PkNn56+y/u+vY0Ts4PZihBCRu1VITzGQ+hg
t3r0ZPdzWCN6tcc5rYw+7Dl+M8e8lvVnr7EyEcIWd7WnhH3IGp7yQiXV29ds
YJkP0VvUbD+zjW9M8oud/I3Od09MfXacKdZygHUcZRPTbInezlZOMcksu7jI
Xi4xxRUOcZ1j3OQkdzjDA85znws8Yo5nzLPEVV5xgzfcZpkF3rPIY53oxT7n
Oy/5Gf0Hf3jLUB3CHf8Ba3Y8MA==
           "]]}, "18"], 
        Annotation[#, 18, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzj8oxHEYx/Hv3aKOugzKolw2dYabGChlcYv6yQ0Gww10yt8yXVmuDMgg
GVBShjPIIBlOBrkyqBsUFlFKYcKChdcN7159pudJ5Wei6VgIoaB0IoT7xhC6
2Ks+PdqDjDSsF3uM75zgrOb0ZRf5wxJXtKp4UwibbOAuyzpQ0j5mCyu8VFVt
do0dvKvf15PS9isz/GQ3fxlzL64BO8EsmznEVubYzhGm6r+zk+PMcIo9XGA/
F5nlEiOucZQbzHOHBW5zkvuc5yGLPGGJZ1zmBdd5xS3WuMdblvnAIz7zlG88
5wer/OY1/3jDfwzyPNM=
           "]]}, "17"], Annotation[#, 17, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzT0oBHAAxuG/5eq4ZBCLiMnXchNFUpa78bAoN5wiSncp08VyZaAMwsBw
KeUWGSQDGXyUQd2gmHQDg48JC5bLM/x6eqe3fSo3mq0JIcypuzaEHvVqQIOq
1IWQ4AtTnFRaH/YMs8rp287zlwVWucYtbSsSC6HIA5VUbx+zkWe80rVa7DI7
+MhOVviqN8XtL/bxj0MMvkYYZZINbFKzxu1WjrGNaXZxmnHOs5+LHOYyE1xi
kitMcZ0T3GSGu5zlPhd4yDxPWOA5V3nJDd5yh2Xu8YElPvGIzzzlOy/4yRv+
8I5V3vMf2qk8hA==
           "]]}, "16"], Annotation[#, 16, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0oBAAcxuG/QckpgwwGw00MBhMTyuBMum6SM0gng3zEcpfpykApOguD
lGIgRTKQRcogNygmGRjEdCYsF4/h19M7vcnx2cxMTUTklKqPGNBrIiLNEWX1
YU+wwmnmVdC3XWSVKyxpQ7UNEdtMcI/HOlGTfc4WXvFOZSXtR7bxmR18+//T
p7rsH/bwl/2s8znIRg6xmRm2cpTtzLGTU+zmAns5zz4uMsUlprnKYZY4xi1O
cpdzPGSeByzwlEVecJlrWteNvckyd/jAfT7xiC884zsvWeE1v3jLKu/5Bwdy
PBQ=
           "]]}, "15"], Annotation[#, 15, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.4819426251758637, 0.590301760242435, 0.952359435349301}}, {{
              0.7566896881992417, 0.809851002566661, 0.9763834145186735}}, {{
              0.9422895062908183, 0.9564801888007287, 0.982572991928977}}, {{
              0.9911581770317097, 0.9906116932251957, 0.7961954186963089}}, {{
              0.9881038583972335, 0.9715336624063, 0.40828616558143643`}}, {{
              0.9242676864480319, 0.7374536436035743, 
              0.25792220673145727`}}, {{0.8540959562791269, 
              0.41681080172637125`, 0.19943565486652318`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -136.1111111111111}, {
                    Rational[
                    15, 2], -136.1111111111111}}, {{-7.5, \
-136.1111111111111}, {7.5, -136.1111111111111}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -97.22222222222217}, {
                    Rational[
                    15, 2], -97.22222222222217}}, {{-7.5, \
-97.22222222222217}, {7.5, -97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -58.33333333333326}, {
                    Rational[
                    15, 2], -58.33333333333326}}, {{-7.5, \
-58.33333333333326}, {7.5, -58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -19.444444444444343`}, {
                    Rational[
                    15, 2], -19.444444444444343`}}, {{-7.5, \
-19.444444444444343`}, {7.5, -19.444444444444343`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 19.444444444444457`}, {
                    Rational[15, 2], 19.444444444444457`}}, {{-7.5, 
                  19.444444444444457`}, {7.5, 19.444444444444457`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 58.33333333333326}, {
                    Rational[15, 2], 58.33333333333326}}, {{-7.5, 
                  58.33333333333326}, {7.5, 58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 97.22222222222217}, {
                    Rational[15, 2], 97.22222222222217}}, {{-7.5, 
                  97.22222222222217}, {7.5, 97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 136.1111111111111}, {
                    Rational[15, 2], 136.1111111111111}}, {{-7.5, 
                  136.1111111111111}, {7.5, 136.1111111111111}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000006`}, {7.5, 
                174.99999999999994`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -136.11111111111114`}, 
                    Offset[{4., 0}, {7.5, -136.11111111111114`}]}, {{
                    7.5, -97.2222222222222}, 
                    Offset[{4., 0}, {7.5, -97.2222222222222}]}, {{
                    7.5, -58.33333333333328}, 
                    Offset[{4., 0}, {7.5, -58.33333333333328}]}, {{
                    7.5, -19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, -19.444444444444464`}]}, {{7.5, 
                    19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, 19.444444444444464`}]}, {{7.5, 
                    58.33333333333328}, 
                    Offset[{4., 0}, {7.5, 58.33333333333328}]}, {{7.5, 
                    97.22222222222209}, 
                    Offset[{4., 0}, {7.5, 97.22222222222209}]}, {{7.5, 
                    136.11111111111103`}, 
                    Offset[{4., 0}, {7.5, 136.11111111111103`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -136.11111111111114`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -97.2222222222222}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["17", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["19", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["21", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 97.22222222222209}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 136.11111111111103`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"15.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"16.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"17.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"18.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"19.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"21.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"22.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.76926149739569*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 693},
WindowMargins->{{Automatic, 0}, {Automatic, 5}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2096, 49, 215, "Input",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7",
 InitializationCell->True],
Cell[2679, 73, 1347, 20, 34, "Output",ExpressionUUID->"be7392d1-8798-4a17-83b7-703b34c81b67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4063, 98, 18270, 501, 1018, "Input",ExpressionUUID->"a6921c4d-267c-499e-a24f-b6f885b72b58"],
Cell[22336, 601, 580, 9, 34, "Output",ExpressionUUID->"2d5c7a7e-4ff1-4d22-9124-62c5ff978667"],
Cell[22919, 612, 649, 12, 34, "Output",ExpressionUUID->"d68de117-44a1-4354-90e6-ee1ec5ec9aa8"],
Cell[23571, 626, 95454, 1652, 725, "Output",ExpressionUUID->"45cfd52e-0d03-42fc-9bdc-9e585f939559"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119062, 2283, 169, 3, 67, "Section",ExpressionUUID->"28eb6b29-ffe7-4933-a48f-f62c4f958e62"],
Cell[CellGroupData[{
Cell[119256, 2290, 32523, 755, 2278, "Input",ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-e8947acb2d3e"],
Cell[151782, 3047, 1089, 15, 35, "Output",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],
Cell[152874, 3064, 2558, 40, 104, "Message",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],
Cell[155435, 3106, 2558, 40, 104, "Message",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],
Cell[157996, 3148, 1079, 15, 35, "Output",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],
Cell[159078, 3165, 64953, 1313, 746, "Output",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],
Cell[224046, 4481, 2154, 59, 285, "Input",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],
Cell[226203, 4542, 6241, 171, 538, "Input",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],
Cell[CellGroupData[{
Cell[232469, 4717, 5364, 119, 400, "Input",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],
Cell[237836, 4838, 70110, 1436, 502, "Output",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],
Cell[307949, 6276, 452, 7, 35, "Output",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308450, 6289, 155, 3, 68, "Section",ExpressionUUID->"be75ae60-b525-445a-a2f8-07a7bd6d9534"],
Cell[CellGroupData[{
Cell[308630, 6296, 12575, 312, 745, "Input",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],
Cell[321208, 6610, 1511, 39, 82, "Output",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],
Cell[322722, 6651, 2964, 85, 174, "Output",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],
Cell[325689, 6738, 4652, 121, 289, "Output",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],
Cell[330344, 6861, 31000, 658, 700, "Output",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],
Cell[361347, 7521, 680, 11, 35, "Output",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362076, 7538, 173, 3, 68, "Section",ExpressionUUID->"c2959b04-1b75-4321-a41f-acca99c56f61"],
Cell[CellGroupData[{
Cell[362274, 7545, 12158, 288, 837, "Input",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],
Cell[374435, 7835, 297649, 5091, 379, "Output",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],
Cell[672087, 12928, 1783, 26, 34, "Output",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673907, 12959, 267, 5, 30, "Input",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],
Cell[674177, 12966, 180, 3, 34, "Output",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674394, 12974, 5530, 154, 262, "Input",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],
Cell[679927, 13130, 103163, 1895, 379, "Output",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],
Cell[783093, 15027, 103504, 1918, 379, "Output",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
}
]
*)

