(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1418841,      25846]
NotebookOptionsPosition[   1412878,      25751]
NotebookOutlinePosition[   1413213,      25766]
CellTagsIndexPosition[   1413170,      25763]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rasterizeBackground", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"res_:", " ", "100"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Rasterize", "[", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"g", ",", 
            RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
            RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameTicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"AxesStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"ImageResolution", "\[Rule]", "res"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", "g", "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"AbsoluteOptions", "[", 
      RowBox[{"g", ",", "PlotRange"}], "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", 
      RowBox[{"g", ",", "Epilog"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767992001084045*^9, 3.767992001258741*^9}, 
   3.768740627708583*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7"],

Cell[BoxData["\<\"/Users/zack/Documents/ignition/cantera/ratematrix\"\>"], \
"Output",
 CellChangeTimes->{
  3.7665850611448402`*^9, 3.766589115206512*^9, 3.766592477239758*^9, 
   3.766617124782028*^9, 3.766962704110284*^9, 3.766968142160677*^9, 
   3.767387558371922*^9, 3.767400037834375*^9, 3.767400673171481*^9, 
   3.767484943725606*^9, 3.76753868731644*^9, 3.7677047996747637`*^9, 
   3.767704838526515*^9, 3.767790543182493*^9, 3.767807429745779*^9, 
   3.767972371161368*^9, 3.767983235938697*^9, 3.767983414249508*^9, 
   3.768734085141776*^9, 3.768734141267956*^9, 3.768740180920973*^9, 
   3.76874063904241*^9, 3.768747290458273*^9, 3.768756050493822*^9, 
   3.768761372153511*^9, 3.769184191709097*^9, 3.769186503460576*^9, 
   3.769190175126215*^9, 3.7692524076845512`*^9, 3.7692735629594088`*^9, 
   3.7698618962607718`*^9, 3.777118804759316*^9, 3.777203687721294*^9, 
   3.777204841070319*^9, 3.777205799481782*^9, 3.777206201826849*^9, 
   3.777208471199668*^9, 3.7773019608664017`*^9, 3.7773151350529833`*^9, 
   3.777375814952393*^9, 3.777376262573162*^9, 3.777919197456595*^9, {
   3.777998713799151*^9, 3.777998725613471*^9}, {3.777999175589031*^9, 
   3.7779992004052753`*^9}, 3.778018679354946*^9, 3.778020995235167*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"057fbf97-d68c-46db-bd47-9dadf06de735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"filebase", "=", "\"\<data/h2o2/4\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
    "level"}], "}"}], " ", "=", " ", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "=", 
   RowBox[{"dat", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<ratematrix.npy\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "dim"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"rasterizeBackground", "[", 
  RowBox[{"MatrixPlot", "[", 
   RowBox[{"A", ",", 
    RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Round", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Round", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dim", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], "]"}]}],
       "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "\"\<Rate matrix\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"105", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.77802222393124*^9, 3.778022245002512*^9}, {
   3.7780223152835693`*^9, 3.778022322967094*^9}, 3.778022831962945*^9, {
   3.77802375508786*^9, 3.778023763391899*^9}, 3.778025618763707*^9, 
   3.778025714995895*^9, 3.7780260559098186`*^9, 3.778026141123353*^9},
 CellLabel->
  "In[225]:=",ExpressionUUID->"4108ebde-addb-4fed-8c32-11edc81daa9c"],

Cell[BoxData["\<\"data/h2o2/4\"\>"], "Output",
 CellChangeTimes->{{3.778022235933272*^9, 3.7780222452895613`*^9}, {
   3.778022317694193*^9, 3.778022323248476*^9}, 3.778022834203575*^9, {
   3.7780237566098413`*^9, 3.7780237883672028`*^9}, 3.778024224715796*^9, 
   3.7780242833179607`*^9, 3.778024560649654*^9, 3.778025619372108*^9, {
   3.778025699239401*^9, 3.77802571571944*^9}, 3.778025764452383*^9, 
   3.778026056543058*^9, 3.778026141530707*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"2aae6cf1-a410-4cab-9233-ddfc2c5b38d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "1654", ",", "7", ",", "31422", ",", "12"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.778022235933272*^9, 3.7780222452895613`*^9}, {
   3.778022317694193*^9, 3.778022323248476*^9}, 3.778022834203575*^9, {
   3.7780237566098413`*^9, 3.7780237883672028`*^9}, 3.778024224715796*^9, 
   3.7780242833179607`*^9, 3.778024560649654*^9, 3.778025619372108*^9, {
   3.778025699239401*^9, 3.77802571571944*^9}, 3.778025764452383*^9, 
   3.778026056543058*^9, 3.778026141567985*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"8143133b-0a5b-4e81-9dcd-59c338490fd3"],

Cell[BoxData[
 GraphicsBox[InsetBox[
   FormBox[
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 485}, {486, 0}}, {0, 
       255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{486, 485},
     PlotRange->{{0, 486}, {0, 485}}],
    TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
  Epilog->{},
  Frame->True,
  FrameLabel->{{
     FormBox["j", TraditionalForm], None}, {
     FormBox["i", TraditionalForm], 
     FormBox["\"Rate matrix\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[2]],
  FrameTicks->{{{{826.75, 
       FormBox["1", TraditionalForm]}, {661.25, 
       FormBox["332", TraditionalForm]}, {496.25, 
       FormBox["662", TraditionalForm]}, {330.75, 
       FormBox["993", TraditionalForm]}, {165.75, 
       FormBox["1323", TraditionalForm]}, {0.25, 
       FormBox["1654", TraditionalForm]}}, None}, {{{0.25, 
       FormBox["1", TraditionalForm]}, {165.75, 
       FormBox["332", TraditionalForm]}, {330.75, 
       FormBox["662", TraditionalForm]}, {496.25, 
       FormBox["993", TraditionalForm]}, {661.25, 
       FormBox["1323", TraditionalForm]}, {826.75, 
       FormBox["1654", TraditionalForm]}}, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{105, 25}, {65, 65}},
  ImageSize->350,
  LabelStyle->Directive[16, 
    GrayLevel[0]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRange->{{0., 827.}, {0., 827.}}]], "Output",
 CellChangeTimes->{{3.778022235933272*^9, 3.7780222452895613`*^9}, {
   3.778022317694193*^9, 3.778022323248476*^9}, 3.778022834203575*^9, {
   3.7780237566098413`*^9, 3.7780237883672028`*^9}, 3.778024224715796*^9, 
   3.7780242833179607`*^9, 3.778024560649654*^9, 3.778025619372108*^9, {
   3.778025699239401*^9, 3.77802571571944*^9}, 3.778025764452383*^9, 
   3.778026056543058*^9, 3.778026144755653*^9},
 CellLabel->"Out[230]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ZCJjpYEQMPVnZuTWX+VGHhOrsoyj1/DSZsZgstC9E8+apOErgFmmDmDf7BTw
55hilEjYNezb7du3A0Lcb9lELGX1NX4lep+IQVIp7NS8LjH+ZnFvyoyy2uBi
t3ONeLAyYM6d0J5CdhDVVA1vZp76rlgoG8bCOcNZzxeb2gn9edHJh0482Ulr
b2d4VEWhJ3YaIz0je8T0MB8CqJjGCrix46BbyXPtp6mTm1lxgavuEge5lrcx
l0Uw6nntN5i6aMyY9Tj12N6/OrohaoF9rawJhn9M+LLmjWXopIUqYGPpJNCq
xeO56Y4prDay6PtknGMvjHBwnE8sto2inpq1wLpB1ENmqzy8yqVXnLe/kR6A
0jZU7fsgP1gpDLrRnU9o583YgGKaJvCGHv+iG1n8fQoIO8W6TU0Uj6diOJR+
TOG3FmnLHDgGrLTzwbhBHfxYXxHGWhlcodk04tylzA5XHqWsr2g2C5F3OouX
tt6liUYXs9JTVfcDO4oDnhKS1tZYyCVsVg83F0dj7zMa0+LcdxGV7gf+cls0
WuZw8K+MrpjeoifEkfrTPqYGap6u7JJZeaHoki+7/JqrFP0S+baf4xJW6LsL
wzVfje47OM9Ojl0MrdLepxT2RLVydWTN1K7H7j+dGwjke6zirmoeqn+J27ny
1yokYF5bY3Ih05W5R5f/XFs75hafjZU/ps6bdB35QpsIDSTGsngwkZp1DXKB
XQIRhtWIno5A8G4m5K2JI5V3i/RuBAdazrqhldeqmVDY8hv13Bq+l5ayBBqO
7sOFTbe4vlvf5fJrr3MuUUSgIiv7YL3Qm7pgH21Si6coMrl6CBfWwBfktqoh
l9czMfsnMV4nXZ0jtZMVnUSo6SnufNAVhtfp4Rsgu0lLaFopUcUKCg4AAtU8
5V0PUx3dWRmyBQVtOpo6L/ysVUKEwvhZXnR8/Aq3hlNRgM+R3yFdB+KDw7Mm
sS4nmJHfm+eo6tf+EfldLpPtc/ndT2nPiNrIag8Xow7UwKYzNAg7uvjHLrP2
V27k6e+rsSdyE/MsidzmeQluM6SiKVRvYvo+baB9cj0PqHGO685p1pXBpXHj
7XZOvkG941zg3CbXu0nsDPnxCggEdYjVTu80d5H3dAJilYiFFjb/Ntk+2il5
nmFRU78I4pbAgYZXO6LmFGEdWtAA1aHPaYVjc/UIpEf1p8QC7n5u/tOZbrR/
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
9YL/DzOeCco=\
\>"],ExpressionUUID->"f6ee9279-a99e-48b3-aa89-c47fb91a16b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"filebase", "=", "\"\<data/h2o2/4\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
    "level"}], "}"}], " ", "=", " ", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elements", "=", 
   RowBox[{"dat", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<ratematrix.npy\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "dim"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evecs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
     "dim"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperatures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressures", "=", 
   RowBox[{
    RowBox[{"BinaryReadList", "[", 
     RowBox[{
      RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
      "\"\<Real64\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"17", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spatoms", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiindices", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DisplayForm", "[", 
      RowBox[{"RowBox", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"spatoms", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"elements", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"spatoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"multiindices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{"A", ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Rate matrix\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}]}], "}"}], "&"}], "/@",
           "evals"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "Eigenvalues"}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", "evecs", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Left eigenvectors\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"P", ",", "i"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "\"\<Steady distribution\>\""}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Round", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "dim", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
               "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
    "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/example.pdf\>\"", ",", "p"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiforms", "[", 
   RowBox[{"[", 
    RowBox[{"Reverse", "[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"evecs", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperatures", "[", 
   RowBox[{"[", 
    RowBox[{"Reverse", "[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"evecs", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressures", "[", 
   RowBox[{"[", 
    RowBox[{"Reverse", "[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"evecs", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.767983963086499*^9, 3.7679839711855497`*^9}, {
   3.7679915428574142`*^9, 3.767991544231037*^9}, {3.767991652563654*^9, 
   3.767991666410473*^9}, {3.7687349412142887`*^9, 3.768734943399901*^9}, {
   3.7687363799476957`*^9, 3.7687364040388536`*^9}, 3.768736546950611*^9, {
   3.768736576965598*^9, 3.768736578795924*^9}, 3.768736632069911*^9, {
   3.76873841487322*^9, 3.768738415446178*^9}, {3.768738900590805*^9, 
   3.7687389035536947`*^9}, {3.768739188860121*^9, 3.768739189329192*^9}, {
   3.7687394515572977`*^9, 3.768739463811227*^9}, {3.768740176864861*^9, 
   3.7687401785347967`*^9}, {3.768740362563137*^9, 3.768740362816533*^9}, {
   3.768745140444023*^9, 3.768745142856739*^9}, {3.768747288557872*^9, 
   3.768747289097526*^9}, {3.768756886359901*^9, 3.7687568876191673`*^9}, 
   3.769186508641801*^9, 3.7691920596435833`*^9, {3.769252413389468*^9, 
   3.7692524366486588`*^9}, 3.7692607027809353`*^9, 3.769260767132999*^9, {
   3.769273565269061*^9, 3.7692735655120573`*^9}, {3.7692768872674437`*^9, 
   3.7692768922967367`*^9}, {3.7692772127065077`*^9, 3.769277212994892*^9}, {
   3.769862341018383*^9, 3.769862362643961*^9}, {3.7698625386338997`*^9, 
   3.769862614952732*^9}, {3.769863787264539*^9, 3.7698637875263853`*^9}, {
   3.7698639445289392`*^9, 3.769863944689858*^9}, {3.769876896465506*^9, 
   3.769876898685561*^9}, {3.769879011658963*^9, 3.76987901168574*^9}, {
   3.769879059883026*^9, 3.769879060163843*^9}, 3.769879099814793*^9, {
   3.769880071014276*^9, 3.769880072650679*^9}, {3.769880534531417*^9, 
   3.7698805376256733`*^9}, {3.777118845943047*^9, 3.7771188470575943`*^9}, {
   3.777118963103314*^9, 3.777118964622539*^9}, {3.7771216638458567`*^9, 
   3.77712166439351*^9}, {3.7771374024148827`*^9, 3.7771374140060472`*^9}, {
   3.777137874334075*^9, 3.777137894789566*^9}, {3.777335606119269*^9, 
   3.777335606220304*^9}, 3.777375813767948*^9, {3.777381308682726*^9, 
   3.77738131485848*^9}, {3.777397983223678*^9, 3.7773979846611137`*^9}, 
   3.777399706742815*^9, {3.777400117668502*^9, 3.777400119121462*^9}, {
   3.777400189579817*^9, 3.777400268038776*^9}, 3.777400419437653*^9, {
   3.7779191903438683`*^9, 3.777919225851926*^9}, 3.777919256376733*^9, {
   3.777919322711776*^9, 3.777919329515314*^9}, {3.777980835431766*^9, 
   3.777980837236974*^9}, {3.777981226857106*^9, 3.777981252554758*^9}, {
   3.777983524343054*^9, 3.777983524618388*^9}, {3.777998760434973*^9, 
   3.7779987627674313`*^9}, 3.77801964551617*^9, {3.7780206201080103`*^9, 
   3.778020621673005*^9}, {3.778020988560555*^9, 3.778021036237925*^9}, 
   3.778021105977516*^9, 3.778025774562591*^9, 3.778026059712509*^9, 
   3.778026144059723*^9},ExpressionUUID->"db492a3f-2c1f-4d0a-9dd0-\
7761e1557795"],

Cell[BoxData["\<\"data/h2o2/3\"\>"], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026060041477*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"15a0d780-8596-43ab-a0cb-b2b637e0d9c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"18", ",", "523", ",", "1", ",", "6812", ",", "9"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026060094234*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"6e0ddf40-3543-411d-bcae-1dc0f517c3fd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJztnXecJVWZ9+3X4RVRQFEGhqBgzq66q66r665xTZjQNSAGwCyu4ppFRBAB
B3rydE/OAwxMDkxiAtMTOs305J576+acQ5P0/dRb957u09UVT9WtdO/9fT/a
n7p1q855hj9+/fRznnDtd376he/+n+c973m3nS/8+MK3f/WfP//5t3/zxZcI
H750620/+N6tt9z8iVt/ccv3bvn5e7/zfOFmrON5z4sL/69d8wAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0MU/9/f85vGM5ddDhHRXxz36J2yaM
Uwg86rYJAIDm4Gy6knji242vkx64g5v7cpYnvSDavmkvSPf93pxul5JPWm5P
IfiY5WsCAFqPzOCfn3ru/3Fdlzm5qRdEm+AdZ7sQXOu2CQCAJqCcPpKpPuv0
pq6Kdnbob+QiMP8qF82QANEGABjCSZ+zFH/Csb3kZAbvFH/0iLOdOzPPbRMA
AE3Afi6b2Htzg4ukB+4w9Hw5dajBHRvBN+0Fws903+/JR4+IdiG4zm0TAABe
J7Luww8NRkqpnsja/2wkrM1+BEloRtEuJQ/YaBNEGwDAQGbwLuHnyHP/EH46
fBbpKbzgbBeC6902AQDgacrp3nJ2ULhYdzyW2PMd0+sE5l9lNDziCrnTXZI7
NcvH/G1d4GkDAFynljoyeFfa8ewRV8idkYq2QGDeFOctUQSeNgCAkVDhqejG
TwoXvs7nm3g9vusGcsES1nYxbySx+5uBBa8gAW1KbNv1PEN4pBTfbaNldXJn
5tu9BQCgBUgd+dXIc+Nl7IJ82RrcLsVsVz810gN/0vjW9bB27ixEGwDARGLf
d02/2xTRbIrEzWaklOyx3BI5hRDCIwAAfe7ffbaU6omu/6i515tXtL1zBEko
hDY4sAsAoEkpZweEn6F7O7aeTgoX8e1fNrFIYP5VyZ5bLbbMUjJD95GLxO4b
awHtBzrIR8HyxN5bGBcpJfbaYtxE8r7lDuwCAGheous/Ivycvu+c4GkLF6FV
7zSxCDxtAACwm3K6l177Oic53zDKMdL9fxy9kJ1CeqpbFI+DSACAHpmjd5ML
UhEJ3KUY3uS2CQCA5sC+yTXF8GabVjZK6vAv5DddT/MTkz053W0TAADNwUC0
EN38GUOv0IKaZkFcVkMKanRxuA4I4REAAAuhlW9fcywaWv5mtw2xEfIrJjD/
KqLbrKLtbB1Q7uwCJ7cDADQdJOvPP7XDbUNsJN37G+FnYs9NfN3Z5uvSHamn
zehSjO6w1TYJuVNznNwOANCMpI78sh1OIdMDf3TbBH3gaQMAWMiMPBt++L2M
D0fWfdhWY+wjuuHjJKwdXvM+lueLka12mwQAAOawL3vEayT3fc9tEwAA7YtV
5SHFp/9uSfKbM90zBIc5uOhV5t7NHn+A91imHyF/bqnbJgAA7KWc6bNmnezA
oVCO8WGue4pv2nlq3zrQdDq45LX82JGiUTJD95NRNf7p52s8VoztNGlcAxSC
jzm/KQDAefyzLmp8kcFYkb1hVGzLdWNbXyj5yoGaPkG0x5JArjb6Lk3Vpq2i
FF3uYnhLYzaaIX9umfObAgCcR3AdG/Rv0/23Z0ees2T2gTMdoYloG42QZIf+
Zo851pA/hxZ/ALQ4loRHyGDfxN6b2V/huqe41Y41/MiELJfA/CsNvS7uy6rW
4q8U22XOtgbBVF8AWp5ypp9c5IcXm18kO7jueMwtpTKKVLTZItvyIey8+jzf
IkQbAGAPRLQbSSApp3t9nZOOJ0rWGeUojBGSzNB9Ho+N8AiPAACMsP1sKr7j
KyxP0lNI56FutrnUkdjj18sPIgEAwBX8sy7K+1eZe1cQw5X94VJsV/ihf9F9
2GuizZ5Dknzyh/zYHyaKou1K0ggFs8YAaAdoWJvrutTM62MNo3ojeZbnuW7l
OLAzjIu26PxR1+umk2tSB/9n7PWrFLv8uRtVzp1BX1YA2gjTiX/p/tuFn6nK
M1ZbZCNioWZP/MsM3W+POdaQ961w2wQAgDuYKLc5m67oPhNa+XZT5lgPcbmp
dDNGSGhMW7EvayGwxkILTZA7NdtdAwAAbmE0nyR1+DabLLEbQ1U26b7f2WxO
Q6CZNgDtjCHdrjZ5P232/lGpQz+32xjTZE90um0CAMAMIyMxh3eMl592eEfL
YRRtDzb3o7genwEAmMYq3WY8mswM3hUpPsXeeMSDtXuG+pB4WboBAG0LzQbU
fzLdu8eXsdUYB9DWbVrJblUHcstBa1YA2hxD6pQZeZZc6HqhuTPzzNtkDyzH
kZnBP9Nrb3raHvwPCwDwLGuORRWLBOO7bnDeGHME5ml1/CPV62KK4c12mmOY
QnCt2yYAAJqDyLqPLD4SLKV65F95WbRlbVq1srUF0Zb0YnVgXoMhPHhSAABg
ocFTSPZQNi8qY991Li3/luua3IgldiOItm49e2bovlTvr4WvAvOvkvwpUQg8
aruJRsDkGgDaFkP17Jmjd9tniZOYHvXrEeBpA9DUNJ71x17MfiScl/fuC614
a4MG2I2k6Z9aeISUrks6ROX9q+02zyhoGAVAU9O4aDO2kEr3/iZWavriGl7F
004P/Ml5S8wB0QagHWDXdu0MwGjxacVEOMVBXV5GsaQ9e3wqufBmsh8hf26J
2yYAALyC9ulkOTu44URcfIeb+zKbLbIFSfc/Qu70XF5zkq9HKARQXANA62M0
iqIW6N41nBaPG/NOF1ZD1PJJZDkkySd/RMLaib23mB7u4wD5c0vdNgEAYDtG
RVsx0J3uv53LjVhnlJvIwyMZz4/0JSDlD4D2wZB0Kwa3U9VnrTPHZeS6ne7/
g1vGsJM9NcttEwAArtFI8kkLpDE0Y852gXvEbRMAAM3BxpPxxN6b+Vo9+4fd
tsUC6pWS4znb6b7fezArW47XKjQBAN5BHNbODN59Mll20Rg7aEpPG9kjAAAZ
krAJjW8PZ/QH+zYdgnRnm+QUUiA/vNhtEwAATcNQvOS2CdbTXP42YtoAAHYk
YyLL6SMaD4fu6xB/DK9+ly02AQC8R7XM2b1FKbGfXnPzpti9XZNyOlVOHbot
PXAHN/flvKZop/7UkTu70EHTAAAeolqN2L3FSDVaSuwTLgKLrvVy6wkXyZ7o
PBTKie9oe9oAgLbFVtEuxXdXSz7xHXjaisglWlG0m7S2HQDQFJQzffWfveLR
e+XsAHRbDMkeSVeflfwNUoztkjzpn32x9ztsAwCcp1oOWLNONUouAgtG6yyK
0R3kgoRtwejvtezA1xcNkDtc9xTftPOEi1LygPhJrvuy0Iq3ZU9Mc95IAIDH
sSpgQtYRdKmc7uXrke1iZJsg4IJG+WdeaMkWrcThUD516Da+PsnXP/2FEk9b
EO3Unzoyg3e5ZB0AoGloUMOrlZD4Y/1Qcm9g/lW+zkmN2dUikNLI7InOg8Ec
13UZvS8PjwAAAAsNivZIdbQAUHIoiTQSXjQZQfhj5EP3nFJ7LLrpU05ZBABo
ehqPlgi6TdSpnOmlN8vZgQaXbWpoMTstYy8+/Xf6i0zcjR/njwAA05g+oySH
kqITyceFn4hsj3va2cGvLRzkZVPGAvOvFNxsj0/pAgB4FtNet/CiIFD0RFLQ
ojb3tDXI+1bSa65rMq1YR606AMAxRsbS//haVfte4ad/xgXumeM5dp9Lpw7d
JmmmLfxqS/2pQ+0VAABgwZyzLc4hqXna866wzqLmphTfnT3ReSCQddsQAEBr
Yk60SQ6JvKodkIPIyrP/kNz3z77YDXMAAC1II8eR9CyyHagVFtUTZliK97+2
qHYQSVuOBBe/xm7zAADtgwO9AVsA8l+JNDkUfltpZ8ucy1T9sy4k1evcnJdl
TzzokJUAgHYC6q1LPU191OUuRrbVqvhlhUXlTP9X6yl/pBAytPzNztsJAGg3
IOBq0P8ypIrf13me/JmTyTJpFcV1TU73/tZR+wAAbQykW4O6102i3P3i+4Kn
/ZUFg+Q6uuFjLlgGAGh7oN5yaJRb7VwyMO+KVM9PnTUKAABGaSvdNvSPLSX2
iXU7Wnoa88UAAMAtdAV8pBoTdJucSI6MxFKVZ9CLFQAAvIaGmFefk9bXAACA
9ylnekez46LbG12qqeZRPsnZXsleTh1kfDJ54Cd8LcA+xfdgEzQ/yZ2a7bYJ
ALQvkgqUYmynuXVIe5MmGkYZLz/jm36+6ddZ/qWSuZMaJHZ/k9TXR9Z/xLRJ
xfAW0+8aIjN0nzMbAQAk0CkJ5FSO9AYsRraZWEoQ7Sbq/iqY+sjRSGLvzSbe
FdQ1PXCHf5Z+c/Jy6hDLgqkjv6ote/+ojx2o/7ViwuUuORWlz52e48xGAAAJ
gmhnT3SSC9paypxo800VHskcvXuvP2P3Loyine79tfgjN/dS3pRoO0bu9Fy3
TQCgTSln+iZ+7FV7knXBJnG2yXgIj5A5dq/kTsDbv/sg2gC4hW/aCyR3aCPu
YnQH4yKB+VeKPzbFULOhRCm+4yvChe8Bww5tsudWcmFhAD/y6L/T4ZX8xMi2
nyHwXoxstcoSFrLHpzq5HQCA4p99cX54Cf1Yzh0VT08oxph0WyLa3j+LjO/4
6h5fhkSAfdPP57ous3yLUvJJQ88ndt/IdV9OPxoWbaeOIAnZ4w84uR0AgJcF
RsRURaPKjK3ZDLGRcna05ci8g1xi33dNrEAOIq2yJ3Psr6PL3j/B5w/Mm5LY
ewvjIo4dQRJyp7uc3A4AwItEO3tyxvjN9JFKbog3ottiN7uJRDu64WPT950T
tC66/qMmFuG6LYs504C2RLQFINoAAAoRbcmMLXo8Jw6SaNNcoi38A4mR/qkd
Cw8H3DZnlMTuG8UBbYLgabPnbCM8AkDLQ0Rb7GbzExP/zKzpedEmZI7+Rfj5
hC/ttiGCm61VpcLNealjlhgid6bbbRMAaFO4OZco3q8Uz7C8LvEPvX8EKSb/
1HN8/SDSxLtq/1Jz9aTR9R+Ve9oCwWVvIhfaZ5GFwBoTmzZCuu93Du8IANCG
MTyiKDXNQnzn142+QpP9LCe04q3Cf0xJ/mEjJe22gvAIAG7hn3FB3r9KcrOc
HWx50e4+yJViu8IPv9fQW/aJduTR9/OypHEW0XY4Q5sA0QbAYWjqiH/WRdKv
jIwGIKLdLKFsgmBt4P6OR4dq6THRzZ9hf1H4x8Z33WChJcknf0SvI49+QFhf
nEASmDclvPpduosUQustNImR9MCfnN8UgHZGnKTNdV8urkpuvJLd+6R7f+Of
2uFA7xFtkgd+PH6t5MOTJiQeBKINgBeg6X+Mp5ACgQVX22aO7XC5kci6D7M/
H9tynX3GUILL3igPbmtQCDxqqz2K4CASAC/AdU3m6wHtSuG027bYTnT9R/dz
2UJwrduGSIms+xBf//OHpo5oU+AesdkiBSDaALiIOFRiKDZSzvbbYI5D+Don
PRmwfXINO/HtXx69qOe0eLzLX+rwL9w2AQAwOnqmkjvG9PCia202x3aqz3p0
RiR7Tk7et8JWSwAA9sFeeK7NSDVaSuzXfYyb+/KmaMGqwblsleUxxQk1pfgT
8puBBVdLGh6aI7H3FpbOfrwbZTUC2VOznN8UgFalWvI3vsgIQ7corms8scHX
eV7jmzoPYzumZM+tct1WEe1X0Gtxn1Wj+B7oILbpSnch8JjpXUyDWWMAWEiD
/nbu7PxK4VTd2d6r/aRYtF10uQvBdeZefPxMspTqYeykbUK0G3S5GUXbFSDa
AFhItRox92I508vNfTk9iGTJSaA1Na60HCln+k3XY/o6J+0YTjUyir0Y3iS/
2Yh3zdcHsqfqwyLpKaQ3x0RiFDsAdlAtc0ZfEbdprZZHwyyF0EbFh7nucR/V
RU9b7PAbJVR4ilzoqrfc0y5wD8sfE3vao3cM+tuxrV8Q/yYiFZFq/nb+3FJD
i1uFhQMgAABWoRvWFot2k/LYUDS5//sWLhhc8lr5TaO/VgyU1biUZI6pvgDY
AXWVTVCbFNk8op0fXmzirdCqd8zYf66U6olu+LjaM0bbQymLtsGYCRVt3XNS
90QbY2sAsB72WQaSYZGkYZTugaYg2i72iSpnRut65A2v9N+tmx24v2NFf1jj
Ma57iom6dblEk+x3bVJHfin8jG76FO0ZxTK2Rt6e0Rkwih0AOzCURiIeyF4p
nOIbmO3rMOayR8g831UDWqJtFEU3uxEYPG0X8v14eNoA2ANjGongZnNdk+nQ
sXKml4i2/osecLMFv9ScaKf7/+ifan1ihoKbLTualJM68iv6c3wpr/b349FM
GwCbqRSYWvb5Z1xAr7Xj4Zy322IwciScj235rNq3kTXvN7Gm2NmW5I0wRrZp
fz/dTtr5c8uNG2gN6MsKgK0wnkhycy4hMdJydlDnSY+JNtd1qVF/O7b1czuH
U8XwZmst0RBtltw/8kuEyDuDaLuT78dDtAGwn0pxmPFJrmtyJX9S+xlL2mvY
gdHkukT5GZssoVAZZ/+PRkbYBJe8zjajAABNA8vxYjnTS+oii5Ftyg9kB/yz
X2KxZTJGRmKm36VBb202n0qY3sI0LFFufiyfxJsVkWgYBYBjVCtB3WdoeSPN
PylGd9BvuTmX8I70xGhEtBk5lSyr1UL6p7+Qt7rxqSDXgr/N6HIndn+TFw32
Ff8Hz51daKFVJsgcQxk7AF5hwkCEesK2pDRSEO3mGuOrRjk7uPBwQJ5Wx3VN
tnZ6L2U8VKKXuZ059lc64Tcwb4rESNd7aKNhFACOoRseEUQ7e6Jz7LpXsULH
y6JNAiMs55KZo39ZfyJuv0UKMEZIKF5L/4NoA+Aw1ZLOuaRv2gtGn5xYoeNk
N78GwyMkvqENGewlwVyyny7EzTZ6HEnS/8SlkbnhRTZYZ4zs0N/cNgGA9kI3
su2ffXF+eEmtA0nTirZuHuCWU4lSbFcjWxhCItq66h3ffSM/lv43QbTdDmjz
KGMHwHGqFeXybRrQ5romK074ZczKsARzoi0ultR4zNc5aetpF1JHaImNWoQk
+eQPyUXq4M9Gn/RYVjyP1qwAuIp2ixLJCBsPjhVrxCHvDecld/K+lY2ZYwaS
VaL2rWRepBc8bQCAF1ArnKTZI/5ZFys+0Lw8NhQjnaP4WjWi4YZ+VkGzShRL
3em8SIIXRDt3arbbJgAAFFxuOi+SfGxq0ZbHtwUlXDsUK6V6XLFHETV/23Oi
jewRADyAuCtgrfWfaF7k2E3nAtqMsMRG1EZJ+jonrT1ue/2OLmLvWhzoTh35
Jen758GYNoprAPACkpmSZF4kvcnNeakLNjHQSEx7KF6y0BJzSJqTiJ3t2LYv
Cr9udDtHOQ8OIgHwFOICHOpsl7Oec7NN4ME/FhQRu9yZY3/lPeZvo/cIAJ6C
ZnGTJiTVStg/88WuWmQGRQ9c3AbwcEiaOuIFBMdb0p8ksftGwd/OnpzpolUS
MsfuddsEAIAUei45Uo36pr/AXWPsYPe5tNsm6EAEnK8fRHrKuc2e8tBvEACc
QbdndatST/zeb+JFlvG4RjmTrujOYdQlPXAHe6FoOXXI3C7c1I7Ytut9nZOM
vmj5oAcA2hPGOYytRO7sfNJ+qpQ0I9qWj8vJHP1LsvIM13WZtcvaignRtgPh
P53bJgDgNO0m2uRAU7E0nnWF7IC1ul1OH5n6xFkLF9Tf0ZSbnXzyR+SC676M
9mt1F4g2AC0P1zVZ/LEY3mRmEaud7cqz/7B2QW1K8T0m3iLTEDxFsucnbpsA
gKNUCqfdNsEdaHGluJ8JO+J58ZZwIJBN7v++6ddJurKBgHbajKfNTR31rmPb
rueZIyTF8BYTezFCshABaB8qhTNum+Ao+eElws9KbqhqULQlZd3WDqaMbvj4
qoGw8NN0WNuwaJsKj5gVbRvPHyHaoN0Q5MttExyinOkjlZXldC2aTdMIC9wj
LK8T0aaDcqzq5k0W9NfFkEwZMAEtjffPupDxlVLyAPv60c2fiW76FM2Z4bpH
f7P4pzIZXAg8xr6XUdK9v7ZvcQA8SKXo6PmXuxA3WzK2zFx4xMKYduboPcH8
SG1NB7NHTOf7ifFCAgmKa0C70SbhEfGMYH5sTLDukEqKODZi7VRK4vb/dtNx
2pfVBIKnbV8LjnT/7cLP+F3jTrXgaZPwiBdAeAS0IZXcMbdNcAL/rIvkN0nj
7kJoo/a7ktZ81ga0CaHCU7EtnyXXvs7nG32dDG1nDNqYSB0JrXibpKQouPQN
5ELD3877HzK6kVGSPT+1ewsAvEabhLW57svz/lXiO+J/eFFPtycsZXW+X7rv
t8nKM/Sj8EvB1lBJKf6E0Vfiu76h9pW7QZLUwf9xcXcAgAfRnvBoFZtOJZIH
fuzARubgJp45soRHipGttpkzTmbofgd2AcA7VEvn3DbBISRutpGAtu2iHVz2
xnt3nTE3ucaZhtIeFu2/ObALAN6htbtF0fNHeS2M9hBhMUS0rT1/JNA1Q/d2
zD7gj+/8utEVBNuSPbdabdcoySd/wNei2W8NzLsi/NcJB5Es0xAKwbU2GSYm
3fsbB3YBwDtI8t9aFbGbTULZ3vG0o5s+Kfwkbnb44fcYfd0VT5sFZzzt7HF4
2qC9qBRa1tOmbjY355Lc6bmjN9O95dxR3oinzdvsZsd33iC42eb8Uq7briEy
ySd/KPyMbvwEP3FegwDj0LFC0MaaGgo8bdButHDqyLhoi+bVmmvuZ7lok/Rs
gq9zksMt/tiRJ43QckiPgOwR0Ia0Q5624tiCvH814+uW5/jJqY51+bMjCbwR
ohs/Kb/phVpIANqWFo6QKEIKanQJLLjabkvEHI0VY1s/z/48qaZxgODiVwu/
8khMmxbUaFPgHrbZqHHgaYM2pOWHIHBzLikE15PrcnaQ8ezVSdEOrX7Xw0cj
xfDm0Mq3M77imGiHlr+FHzuIZBRtBwohKamDP3NsLwCA3ZCwNp16QCLJlSJT
uxVBtO04f5RAu/yt7A+zv+VA6nhs82fIhfALhQSXuO7LBK+b5d28b4WNlk0k
sfdmx/YCwAu0vJvN1wPaxNP25qlruve3fL33iNuGNCWpQ/C0QXvRJpNraAJJ
JX+C5fnAomvtNEeByGMfZH1y3YftNERKcPFraUwbAOA6bSLagQVXl+K7y9lB
tw1RJiXqFuU1ohs+5rYJAIAJkGKTJqJajZh7kXQuLcZ2Mj7JgiXh5cLTz1mS
6ac92EtwmAPzzZyu0iHsnsr0Sx35pdsmAOAa3gz2asOYuaf87lg5ZDG6Q/6t
ufoRxX7d7ByNFeM7v87YSTu25bqxTaXzxTR0W/hzQz4yjIXww+8hERJaC6mo
3rnhRexrWkIKs8ZAu9KUom3Q3+a6Jo9O9WU7ezU6BbIRlzs98MdIsXYQ2Xgn
7WJ4k8a3VLQNudzJ/T+Q3/SC140BkQA0F9UyZ+ItMmtsRKVhlAk3WzLLzPDr
9Uj71CeGk/u/z/gK1z3FaHO/wMJrJqwwsZ2IGun+P0zcV3XQWN630pA9AADT
NO+YyGqFKbeZiGr25IzRj+leDWdb0CWj6dnlTD9fmxq82NBb469nB5P7vte5
91wptov9LW7uywztIhFtxbp+OWRA5IR957xUUbedF21MhwRtSzPGRgiMERJB
tGl9Dc/QM8pETY3p2Aip9/F1TvrrTnt/dQpiK/7IGB4hLbUnrOOZhlGIjYC2
pZxtsuwRMYwdVsWN/iiFwBrlhw1GswkNppGUn/k730C3KBOOLotuxx7/kuJ9
LwS0E3u+47YJALhDaw+vIfimn0+vDXXSNrZLA1IW33Uj45M0dYQdEhuRhERY
AizBpW8QV9YodtI2HRdqEHTSBm1L84o2e9aff9ZFZHhNrWGUkmhb0nyV7mKU
5X2hUmxX+JH3sTxsmWgzBDrCD72br59aEt1WFG3nM/0IEG3QtjRvP23d7BHx
8Bp+LICsKPWCaJPzRKOI32JMyZjwenbAP7VjyZEg4/ONjKrh5k4wT+MsMr7j
K+Qi8ti/0ydrDaOUuvzlznSbNqkRkj0/dWVfALxAJX/cbRPMUykyjX0huq32
fGD+lVbaZLzWZjhTiW74L2ttkENzSKgOs7wVXPZGjfYjuVNzrDLPKIk9N7m1
NQDANIwxatLrz7Ga/cD8q0rx3YwPpw7/b6z0tK32SCCizZhDEtv2RZvNAQAY
oAW6s1bLAZbHHB5GY4jqc/9wflPGbG0AgKeo5Jo4NkKoqpQ3Sigl9stvKmbZ
jYzEGrXJIPGyAU+7ENpgyaaMnrYXEvwkZAb/7LYJALgGY4vpFmCkGi0l9orv
cHMuUVQk50V7P5dV+yq+6wb/9BeK72g3GGFE+LuDJabNTe2Ibbvea7qdOXq3
2yYA4BrNm/JHYHGzc2fnk9GQEtHm7fS02WPamaP3GOoTZYlo80baRkG0AfAO
zS7avJ5uk8Q/tep1mwZBGkogvPNxLx4r0G5R3ildp0C0QTvj2Xku7Gh3jhI3
HimENkq+Vfa0q4162oaq2nMjz2kYYxO6MxEST3xL/NFTznbywE/cNgEAN2mB
oWPVimp9CmmjLenFaq7BiCHYqyOjG/9r0eFAKdUjXEi+iu+6wWq7JnT80/ai
SW62uK1f7uwCy+0xB7r8gXameRv9URRFu5zp88++eOyBCencgmibK4HUhSzL
WB1JgjP+qR3zDipUd4r/RrAQsWgrZv0l9/8guumTtABHXL2eO+1aKY0EjK0B
oKlRC2sLbjY5gnQYA6eQdY/xWLxopzmqmJsa6QXgaYO2pXl7j4ipls5pfTux
SwmjB+tk4l9fpBDb9gXxndCKt9qxkaSSnVeJkIRWvI2Urov7jdBBEgAAF2kR
0VY6i+S6L8/7V5kO/jQo2uyV7Om+3wXyI43sZQ6NYvbEbtZWsa6AblGgnXGs
HYfdKIa1ra3UNpFV0uBwBAdQ+08U2/wZhy1hJ77ja26bAIBrtIxo80oDyGiW
SDG6Xfjpn3mhhdsZcsU11DtWelox2S93Zp4ZswyinfvnqUw/Surw/7ptAgCu
0Upl7JIUkXKmj/TQJvl+NtXRsKCRqVLODs7cLz0qNTq31zSK8xFGbRibvZ47
NdsZY9hBcQ1oc1og5Y8icba5rsn54SX2dTI0GvdWDHSnB+44k65YZ5Rh5MHt
5H7pSF+vgZQ/0M409WxfOdKUbKWpvpbTYKgk99RzlppjBkmcJL79yy4aowsG
+wLQMshztv0zLnDeDEMyzuXGs0dyZxfaYI5hvBnNpqQH7nTbBADcoZVi2oRq
eTyNZKQa9c98sYvGMLL5VCK573uRdR920QZxwjbpyJo9Od1FewAAirSgaI95
2q7UQrIgCWtnjt5zNOZORaSYJqqOxEEkaGdaoMufnGo1bFPjDnY0wiPeTN6m
MW1Jfz8Pgi5/oJ1psVNIQrUacaCPn1HkMk7U25VySEWIbief/KHbhuiAPG3Q
zrRSvh+FcWqkRziVKrttwjhNESTBKSQAluAp/VdrymqIwPwreUeab8dKT/um
n2/6dV0LS6keA6vVkySDy95EPvoe7DBkTN6/2tDz5kjs+64DuwDQ2nhnmAIZ
MTZ6nT5CLoqRbUbXEUR7tOW1nTNlhC0e3DOc3P99E+8G5l+VHrhDf4v0IfY1
Y3ePqjQ399LI+o/UdvmbAd0uBNeyP2yadN9vHdgFgNamUjjjtgmjCKJN+4jS
6ZAmRJsfK37n5k2xyjY5mWN/7erhbE1NLKeYRFve3M8/6yIbzLGAdN/v3DYB
AGAZYk+bV5/qa2BBO/uWlNO931xmyxgdo6QO/8JtEwAADuG1qe6SKkhxZLsY
3aH7usNZeccTpfiuG30PGIseJ3tuJRfaMW1DAe3gktdx3ZcH7h+1hEa2eYbg
dp57iH2jRjAXSgIAiPGaaHNzLqHX5dzRBkXb1rPI+K5v7BxOCRe+6edzXVqT
djXQsLCUPMC+TnjN+3nRfz2xaPN6uu3MESQP0QbACjwyAUcSGOGVYiP5c8sM
LGh/TJt2+WgkgUSDUnyP7jOhlW8nF7Gtn6M3ubnS8cSGTiTtI77jK26bAEDT
oz2l0THkos2PJZCwJ287Fhsh5ah/evxU8sCPjb7LmDfCiDiaTbNHeFECiadI
9/3ebRMAaHo8Jdq503Mn3EwfqeSGTIi23XMTBNGObvr0rzcOlWK7ops/bfR1
rnuKVbqtcQTpn3WRrm4XgussMYORdN8fnNwOgFbFCw2aFEWbb8A2u3U7M3Sf
8HPOAb+tu7CgXRvun/FCxyxhId0P3QagUSr5426bMIpat6hK8Sy5KATWaLwe
WDBeyu1MDxM6BMFEWFvNQsF7N7pUcNmbtGdGqB1E5oYXGd2rQbw8dxgAYALF
wQeNlLTbyj5/xmhvPZrvZy2BhdeKU/4IkhwSOQXuETuMAQDYB3ViPYJ/9sWF
4HrxnXJ2kEW0xW62M4SWv3luj9+oY2yTaAeXvI6vp/yJdZtBtB3K0CYkn/yR
k9sB0JJUCu7naYtTR8R52jxNICnrh46JaDszup3sIsjjtL3nYls/z/5iYP5V
8V03WGVGdNP4GWhw6ev5es8ocQeS4OJXa6+Q962wyhgW4ju+5uR2ALQkleKw
2yZMQOpm52ptwz3oacfr7T5MxJ9tIvzI+8iFf9bF9Kaup533O+tpG8+QBABI
qBROuWuA2M0OzLsiP7xE9FWvobaxzrjZhHTf77p7OMe2kyNJNYxtuU7ygAd7
RsV3wtMGoFG8FtMmGB06Flh0rU2WaG2aH4lu/ITz+2oQWHiN/DhSjfzwYrvt
AQDYgXf6afM173q0b57RcEc563TDPV/npAWHAg5vqkuk3oQEANDa2DHb3ZI8
vZFqtJTYz/Ik13Wpf+aFje9oCF+2yvKYf5YBwwLzrjBrziiR9R/R7eyXO7uw
wV0Mker9tZPbAQAaoVpuKPY7Ui9jLyX2aj/GdY/22fN1ntfIdobY688k9/9A
97Fkz61y3dbtByVJpGEncH+HbgG7w7GRdC8G1gBgGXaHR6qVsLkX88NLKoVT
jKJNMeFvm2vBkdz/vS2nE4xdrxlFW9zzSrvIURtdZ9vhWkhMGQPAQjw12JdQ
zvRxXZPF3VkL3MM6r4yljhgqYC9n+k33BvR1TurqMd97pBjeLL8p9q7JeGJ2
Io/9e3zXN/ix1qweacdKwDxfACzEg542zQMsp2u6PaLZ6I8GRnjjWX/03NMo
gmGkQasuXDdrT+/AglfI3jXgbNOOf7p9WZ1vOQJPGwALcWAOQrUcMPS8JJxL
ouKF0EblhydOOjARHuG6pFMDWAgXniIXLN2iJOGRQuBR+TPU56dabUi0Q6ve
SZ+ntZCKQZLsqVnsywIAvIYzLbXt28XW8TQarD0eSx74ifYzhjqNyD1t3myN
jLannT+31MSapsHsAwAsx5lJkSxpJCQwIlEq3exBotsmKiJJeMSoMNLeI/ft
rpUmxXfdqGpY9xR5raIGRLclf2jo/iEwGsqWNB7RrGHPnelmt6pxMB0SAGvx
yPwaSt6/ilyQKnvd4TUNOtsmskdIw7plfSFDM9N1UXS2zaWR6DjbonYBDoCZ
NQA0HdVqRPcZ4mYLGkVG2NR6jzC3RjHtZgfmX2VCtNMDf/JP7Zj1pBNDf7TT
SOK7b5R3DvRa4xF42gBYiMPdWY12O9Hty2o0NU4N/3TDk7n6IoXY49erfWui
olzsaUscbN1am+CiV9HGI7pNWR0mvuOrbpsAQOvgsGizRLa5rsmkR2ttAoJT
os11XWrI5Y49/qXHzyQV061NIwmPiHVbN0gSWvlPPIO2u5I6gk7aAFiIwzMi
tU8VSYSE9N8QF9fYx3iLKoNVNr7OSd0H7e3OylJrE3ns38lFdP3HbDWmETAa
EgAL8VSXPwrRbYfbfZtL2HYAxrNIMr9Gg+yJB60wBwDgJna0+NNFNyGEIDjb
wv+KkW3K32YH/LNfovbuyEjMnG2MZZIsp5DF8CZzNiiiGwgiJ5Lc3Es9VcMO
ALAWV3qPVCtBlsf8sy/mRRGVYnQ7/Yr0GPGrVyOaFm1Gf/t0qqxWC0nPNGnu
YoME5l8lONu6/nbk0Q+QZ2iStrgiMntyuiXGGCKx7xbnNwWg5XErQqLrb2dP
ziAXgr9dLSl4tnaMGGP0tDPH7p22z+n8dm1nm7YfoXgh9w+NRwBoK/wzLqDX
4kNMoyPJDO/LkAG4cziVeOJbkpt2zI6RZpVopogEl7xOcegY/Q3oMEjSBsBa
nKlhV0M3TiIIFAkylHNHTYh2I0ES7QzAxO5vbjoZd2YguyDa7Ol/4TX/xtf/
u0kq2V0Jj/AQbQCsxoEufxpUq8qNW2l3ViJQ8vQ/011VtWHPAPR1TprtSEUk
QTf9L7rpU+QitvXz/FhXbS8Q3/EVt00AoKVwOE9bjm75jNypNtFsxJzLrX0o
GciPmFjTHDRCQn6LaTvbtfDIwmvEdzJH77HPNm2imz/t1tYAtCSupPwpojEu
oT7hd3zimH/WxZbMgjQdPJHjm1azJ+9fbdWC2pB8Eo0HJBPHsiem2W+UMqkj
v3JrawBaEq8V16jVuYvn13BzXuqUOaqsOx5LPvlD+tFQC9bGmdClROlckmW8
LwCgGfGcaMv8bfGEX4LDoi0/kUzu//6jx6LW9mU1hEZrKQoVbbeOIHnMYQfA
Htw9i1REPKGMeJIsnaZMwBghUQxun0yWrTbHAJIot5jQ6troMdrrLzN4l6OW
TQQHkQC0D+Lqm3Kmj+SQlLO25I2Y4IE9w26bIEWcWJI6/Asv5JAgpg2AtXjQ
zaaIs7hJSbt/1sXumSP1t3vDebcskUNyuSXp3MFlb3LXzRZI7EUlOwBW4nrK
Hwsk0D1SjYoLJF1nnz/jtgnK0MhJZP1HMkfvdteY1JFfumsAAC2Gd1L+WCgl
nzT3oh1D24vP/N3yNeWUU4caed33gMsd/5IHfuyuAQC0GF7LHtGmnrC93+hb
gflXajRxNU1y/w8aeT09cAfpVahNOW1etEP3dYTXvI9dtwvcw6b3UiPZ81PL
1wSgnWkW0c4PLyGN/kyINm+Dp83lRriuy6xdU5FGRJvgrrOdOvg/Lu4OQOvR
FKJNWpGQ7JFCcK2ZFSxt4lpOH7lpVZ+FC2ruZUa0Y9u+SC64OS+z1BwAgPtU
S073hW4EkgcormrXQNz3yfJDzJ5ALnngJ+beTQ/cwf5wOX3YxBah+2oOdnjN
+8hHbX+7EFhjYgsWUod+btPKALQt3hdtOgKmkhsyL9qWhrWjmz+9oj9cSvXE
Nl9nIk7CGNAmQLQBAM1COdNHe2uU0+MNWhmPzATRpoERdpHUMam+oH9qx727
zvCmIsbkV4l/1oWMzxuqlw+vfle9IrL2e4Sb87LgkteR+8H7tOzM+1awb2GI
+Pb/tmllANqTJnKzxRPHGD1tMRaeRWaG7hd+HosXrVpQG3OetgS3jiNTh25z
ZV8AWhUvizYdhTD6MX2EZ57kPuFFi08he8vZQeHixqVmlhXcbEMBbUPIUzUE
Z5tGSNSwLzbCIzwCgNV4XLTFjaDVxvsyLWV19ghxtr1G6uDP5Df9M1/kvCUU
eNoAWEul4OaMSF3kzaLppJtCaKPaW4EFV0vuWF5cEyo8FXv8enLt63w++4vx
XTeQC6ti7GKCi1/NdV8Wmhi+Diy6lncvPBJd/1FX9gWgVfG4aAfmXSH+WMkN
0WsN0ZZjbXFNuu8Pklljwi8Fy2ttSvE9Rl+JrNMafOB6STsAwBLEzau9RiG4
XvyxnB1kiWnLPW3LCS574z07z9RS/rZ+ztCL9gW0KWJPWzugXQg8ZrcxqcMI
jwBgMZXiWbdNkEKOIEk71vGb5CCyEtJ9nYq2taFs8YKheztu31rrtZV44lvs
rwfmX5XsudVak3hR/WNw0au47suSd46KtjjlT5G8b6XlxkiI7/iq3VsAADyC
xM0Wx0a0sdvTjm35rPDzvt1nSAZ15NEPsL8LTxsA0AiedbO5rsn54SXjN9O9
5dxRFjebHxNt+9xswbsWPO3fbzlhtBEK1219h1h6Hhpa9Y7aFrPHB2j6Z74I
njYALYZnDyIlR5CkW5QhLE/PFn/0dU5yrGeUNpG1/zF6ITuF9EK3qOj6j7lt
AgAthWdPISWxEe+QPf4AuTgYzLlrSVOA8AgA1uLZ1qyKcWla0u4drMoAL0Yf
b3CF8Op/tsQSAICXMV1jaDfi2hNaUKMNqSJxhmPxYnz7lxkfpgU1tiIvq1FD
fFgAAGguvCva3ZeX4rt5kptd8pZohx969+qBcDG8Obz6Xc7sqEtw8av5+ikk
i27nhxfbbxEAwC48q9tEtNkz/Rwj3fd74edQvOS2IROIrPuw2yYAABzCMWGs
ViMm3uK6JpOLYmynzpM2NPRQI//Uc40HtIuRLRrfCv/wwLwr2VejVTbuVqzH
Hv+Si7sD0A44dhxZrYSNvlLO9JF0uxHNAnau+7JydsA/k3WyQIMIe921nek/
Gtc9xTftPLVvNRqMBObX5Jr+wtIltu0L/FgvVu2RBwCAZqeSP+HkdtUyx/6w
f9ZFo2+NVdYUo9vlj9GWUP7p55tY3ATH4kXGGvbYluvGtpP+TilGtqq9JYg2
UWxuLlO6dXDp6yVnkXJ/O3dqNstSjYBRNQA4QCXvaImNoSAJ13153r+qUjgl
vlmM7lB93kiEJDD/KhI5N0p64M5zmWrjzf10wyN8rc6IKUIS2/p5+U3n4yQQ
bQAcwOFRCIyetnhyjfbYGuJmGyqBlIzFMQSZXMM+ip3rnmK0T5QkTV07eE4H
1pBWUWrTanJnFxiywRwYVQOAAzgt2myR7Ymi3UucbUXdNiXa/eTCRP6bINq/
2jhUiu1if4UxxEGRiLZ2ZFs+Zcw/80Vy3c6dnW/IBnNAtAFwAG+GRyaINkPv
EROiTQajG0L49eHrnPTtlY42HtGOkMS2fVESG3Gx6wjCIwC0KpXisO4zkmwQ
xS5/JMuiEQQRNvHWruF0Ys93GtxaEepms6eOBBZeIz6FlDf3y52ea5V5uqCz
HwB240qDVpbINjfnEto5qlYaaY9o+2ddZLSrSWTtfyztDZViuyKPfVD7SZo6
wo6iaGsHWIJLX8+LKiKVRHuOUTNMA9EGwG5cadCq0WCQBkaoapFUbcUmJIJo
0wA1O+JXuK5LDbxYD8L4p3b8ZYd+nra5BtpUtMXnj9ped3DZm+rb1VJZuDkv
k1f0Z09ON2EJAMCbeHAUAiEw7wriaUtS/izexWDiX2bwTuFnf6Rgm0WjiIVa
J6xtcFSlfcDNBsABXBFtlpg2X8/T1vjW2slihmptfNmq9gOhlW9vzJzRfx1j
ZFvwrtUa/WVPdDZoCQDAU7gT02aeHWau/sUE7C53uvc3dhsjhkW3tcdBAgBa
DIcr2QlqxTISSol97GuOjMTMmmOARPkZQ88Xw5sa2c5Q2yi3SD75Q7dNAKCN
cGWETbUSZHlspBotJfZKbprL07OKA4GshkbFd93gn/5Cq/aqNSFhqM0RPG15
0Xr25AyrzNDFaNUnAKARvDl3jKSRqFXWWD5vnZ+YVaL1WLr3W8sNp6w0iK6/
7fok32TPT901AID2oZI75sq+2tWRklPIQmiD+KNiR46RakPhEfYayfxTz2mY
ISY3vKgRk3i9mHZ0w8fFH11spo1BDAA4RrXElMthw776o8TEnbTZiwTtZu1Q
TLFnlIUTIcW5MRqZLSRjxAsHkWg8AoBjONwzanxf9bA2qVKs5Iaq3hPt2ObP
LDgcKKV65AWPNom2RlhbLtrZkzOtssEQEG0AHMOV7BFeJfGvnOnj5lzC00JI
0TOCaJuof9SFfU1aEfmnxxXqfaz9nSKINo29yFeObftiaNU7aRWkuHTdrcRs
dIsCwDFc87RVsv6Im+3k0GH2bPDM0P3Cz0OhnJ3mSGmKrD8AgGM43J1VjKIy
E0+bn9hXis4U06aRVG32oki5Vxla8VbT+2pAfWx5hCS4+DWkClLcbCRz7B47
zNAluv6jruwLQHviSs8oQrWqMBOBdB0xNya+EdFmLIo8m66Y3sIEanPHPKWT
njIGAOA81vYVMba1XuJf5dl/OGOJGMWAefihf3HeEgCA67heXCOfQUZOIUm+
HzfnpXaU0migfTRZzg7+fsuEo1ujA8XMIdft1MGf0qGQ2eMPOGCDGqiIBMBJ
3MoeESMOX9PYMhFzQzPWrUUtyr3Xn0k88W36sfGeftoIf3cQxZb8diAxbZI6
kjl6t602aBPf/mUXdweg3fCEaIuqI7nuy/P+Vba20WZEMcqdGfzziUTJYUvk
kW3JaEh3Qb4fAE5SyR9324Qa4iBJYN4Vtu7VYD/A0jN/t8oSQwjSLdZt3Xln
jhF+5F/dNgGANsIjoi2GdPbzz7jAme2Mani48BS9zjfcXcQQYtF2sdOIBLRm
BcBJXD+I5GUl7SPVqH/WxW4Zo0vyyR/xbrRIEifVhO7rCK95X+boXxy2AQDg
Op4Q7bHqyPzwEidrIVmQhLX7o7YPiFTDm6WRSB0BoD0hZ5HacyHtQyNCIsnc
Tleftd8cZWhMO7rhv9yyQQ6asgLgMJ6KaTOOIXMX3cG+duM1lzu5/wdumwBA
G+GF8AiFjKopRh83v0J2gLFRiWnuVOry5yThh9/L18uO3DWDIs5aBwDYjRfy
tCXQjqzF2E5DL5JQht31ONHS077p5xt9S9uqUqqHfanQ8rdwXZcGF7+afPRP
1U8jyQ8vYV/fKNENH7NvcQCABLdas2pQTh/hx0Ilxcg29hcF0ba75l1Y/5cb
hhQn16ghWJUeuMM/60KtZdOHGVeLbvwEvRac7fDqdwkXoXvdTP9L7L3Zxd0B
aDc8ItrlTF/u9Nyx617TOSR2h0cyQ/ffvtX6v00MiPamT4o/+mfUhr9DtAFo
H7wj2rI7yqPY9Zey09kmzaw8hXeC2wAAB6gUz7ptwij+2RMKasSzxorR7drv
Srq5+mdqxSIa4USilNjzHd54QaJGTNtQQDuw8Bqu69LwX8d31whu588tM2Kj
GcThGgCAA3hHtLmuyYXgenJdzh2VDJEsRndovCsRbZvOIhNPfHvbmWQptku4
9k0/n+u6zNDralYZPIV8M1/rQKhcMSrR7fy5pewrmwOiDYDDVMsBt01QiI3w
E48jDSxlW2yknB0kFz9aM5A6+DPGt8gppCUGJPd9j15n7hgXZ3ocKafAPWTJ
1tok93/fgV0AAARPibY4M00QbTJ0TFe3xW623aId2/LZm1b1Cc52bOvnGF/k
uqdYottqos3XjyMVdTsP0Qag5fBCeISItmQ4Cz3yk8RJ5Dgg2oIxZGX/1I6v
Lxo09K7uCDNGohtreSOh5W/mui6VfCU42zSyLcaB8AiPCAkAzuIpT3viTTOJ
f7amjpCpXr/d7E7hv9jTluPrPM8xSyTA0wbASbzgafMMgw8K3CPKLy66VvzR
gfFk2ZFazyhDRZGKVrEMf5cTXPwaxidp3jsAoJXwgqdN4OZcIr+pHxuZKNoO
wF5LYkfb0sCCV0hS/tTI+5ZbvjsAwHU8JNpdkyXOZzk76DXRnnPAX4rtiqz9
EMvDtoj2wmv4esqfrm5DtAFoSdwdOlDO9NNrSTPt0ZS/sl97BSLadrccIVsE
7u/4zaZaQJtl/nhg/lXxXTdYtTvp7MeP/XsFZ1uSQAIAaBO8I9p8PQ9kvL4m
00tS/rxDuv92/9SOP2496a4Z4TX/5q4BAAAv4KnG2pSRarSU2Kf9DNd9mX11
63IaGYJQSuyR3xT+xJBn8emiVlBDsPUUMvHEt+xbHADASLU0bOPiZc70uyN6
xTXitn4OZL7t82d0W7Mme27V7sUqhmbO+GddxG4GEW21Ztq5013sSwEAmhFb
2/1VK2ETb+X9qyqFU9Was71X4zGxaJtwuQvBdewPJw/8eOPJeCnVo9t4RC7a
av8KKtqG/G23RBuNWAHwCLaOsCFze9kpZ/q47stpd9YC97DO82MHkYbytMuZ
fqPlir7OSXdsO2licg1fG+iwVfsB3WR1gdCKt/KidqzOd9LGnBoA2gRDzra4
RlK794jYzTaaQyI5BtV/vlbMPvjVhTpl7Fy3+SkM7M62Rp8oW2Mj8LQB8AKV
vO0ZEYYSwsV9SGg8vBDaIH8yML+h0eQmTgAJus62JDyiGIQZD4zMHTdDw6Tg
0teLvw0sfKXiY9kTndq2NUL4oXfbtzgAgBFnSmzMpRdqe9oNirZR1p+Ia/dl
NVRQI2kDTiATxNQQ19Soetpn5rHbYBR0GgHACzgk2sZ3qU1DsFm088OLGZ8M
P/yezr3DpVRPbOvn1Z6xQLQ1c0jYRLub3QajQLQB8AgO6XZVP7JN62v4Wvb4
Kd5mZ5s9eyTZ81Ph56IjQUOzZrRR1G3GoI12qrZ9QLcB8ALOtPvTTiMpZ/oC
866goxBqRZF10dbGRA07PYIMzL+KXbQzg3/2T+34ndWtWeWutSSNhHTSjm74
+IS3NKMotoIG2gB4ASfr2StFnUIexYNIj9AfKcR3fEXxq8ia95tYkDrb4uNI
1YcXvlLbD8+emGbCBgBA0+GkaOuGYgRXk3T8o5MZlR9Tii2YQJBBRn9bkOst
pxPF8GZL9lWwRE+3g0tepzbVl2Br6ggAwDs4OQ1BLWd7PGpRV2NaXKOG0URr
tRXYS2xIcU2Dm2qgdgpJamoAAIDifMMo3Ym95Uwf0e1iZJvyA9kB/+yXqL0+
MhIzZE/jvwIIxfAWS9ZRJLrxv/h6ZY3ztZAAAE9haxm7IroDDugsG+qZF6Pb
x7+tx7396kUuRkWbJWfjTLqiVlbjnz56Mpj3m5+BHph3hbYZoeVvIQ/QSb60
/Ujm2L2m99Uluh7V6wB4C1u7/JlAXMlOBiJI2v0Jom3h7AMWN7ucHbz1sUF5
iz/BEgvnHfCi1iISEvu+K/yk4w8kley2HkEm9txk3+IAAHNUimdc2Vf7DNQ/
W/ncTdx1xEKow6zGrnNpuYKZyxuRQCL54rNItRB3YOE1ZFIk9bcFMkP3N26D
Bsj0A8BruDWZXTtOIvixpNxG8phNoq2dSZLY8531J+Kl2C47tpaLtlqoJLT8
zeRiomjfZ4dVFIg2AF7DgbZRiihW3NDwiFrDUpaAhtGwNq+XSeLrnHT7VnuD
/xpl7OGH30MuIo99kFePotgEWkUB4DXc8rR5hgoaST2O0T7YvEEB12q1lx8x
urUhWJLPg4tfI7Ew3X+7bRYBAIAC2g23RybOr3HYyRQzEC3Qa9+02nQz3RkN
5tDOJAmvfpd4bE3m6D122EDBXEgAvIZuabljqNVL6g6LdAZxH7/Yluvs20js
cstjJuG/djjZMArZIwB4De+k/Mk7AZJhkVS0Dc0UM43iceQjx6IWtvjTRiza
ii43FW1bM7QBAN7E+eIaNcTnkpJhkWM3rSldVENtdqSvc5LlLf40EHvX9DQ2
uvET0Q2jRZGOWYLKGgC8ifOV7LqIS91pPkk5a69oyxH/mvjVxiGHdxcjzqVJ
7PuuY9KNmDYAHsQ7zjZFkptdrYRpbbtbiA8inSSw4Gpu7qXiOIlwHVz86nTf
7x3YPbr+ow7sAgAwBMvEAXcZqUb9M1/srg0HAll3DeBF4e7w6nel+//gwI6J
3fC0AfAcHgyPyCklnzT0vOWFk7mnnrN2Qb7WXOWQ6Xe5vznR7i+27YsO7AIA
aD3qCdv7GB8OzL9Ko3erOU6nyvKeUdqkB+7QfqCcPmzOmOg9HaEVb9PQ7bxv
hbmVJcS3/7cl6wAArKJaOue2CTrk/atIa6lSYj/7W9Z62tmhv51KlS1ckGBa
tAkOONvx7coT1gAAbuFx0SapI7qzbBRezA5YqNukSazlmBDtyNoPkQu1LogA
gNbGrW5RjEjaRhVCG10xo/D0aEDb2qgLe8CHQptHEWx1tkMr3mLf4gAAc+gO
2/UCNG1b3IdEzoQC8BkXWGhATzCXOvgzxodJKJulftOEAx+9p6bSoRVvIx9t
FW1rRzwAAKzCxS5/GtSKIuuTxcrpWmyEZm5rt2maUANuRdk7mZLjn9rx83VH
hQvfA/oiScsq/bMu1H2YvTo+uOyNwaVvIP8o/+yLA4uuJfcjfx03KTe8iHE1
RsJr/s3aBQEAjeNZZ3t0CMLEATfazrYYq2La2eMP8nVnu7Zm12WWrGkhcLYB
aDc8KNriSZH8WBhBd4w7dbOtHCKZ7i1nB4WL6+ceY4yQCJ62brKfURJPfFty
R3C2aZCEkPevtHZTHqINAGBDKtqZXu2BkgorWKnbRwRn+8vzjlq1oAkSe74j
v+mb9gK794VoA+A1jIqhM3Ddl8tvkjE3hdAGlhUsL66hk2t8nc/XfpJF6Azl
nPO1kb6v5Oa+nJxCKpI7M8/QggCAJsWboh1YcHUpvlt8p5Ibb7LHkvhnbXGN
ZKqX8BuhweA2e2SeEH7oXxrZDgDQMihO120uaB6FfWw9nUwduo3lScuj2RQN
NzvvX23TpgAAr+FN0Za42dpHkHaLdmj5W/6y43Qp1RN//Eu6D0O0AQB240Hd
Fos2CYy4qNuxbdcLP+/ZeZrkVEfW/qfGw/aJNg/dBgDU8UjKHx0TE5h3BcnQ
5knGXa6WtiEZiyCBiLaFGSNiEntuCt3bcfPqvkJwrfaTXLeVgfTIutE2I8Gl
b+D1SnUsL6sBAHgWj5xFjou2qKrRUKsom0Sbr4+J/O/5Tqf8hVa9k1zgFBIA
IMZr4RFxbMT1XyjZE53kYvuZpLuWAACAHGfmRRr6NUFztouxHVqPGek0ojh1
XZvsyLNGX6EUI9s0vuXmvkw7rkKi6LaWq4cf+Vf7FgcA2Ee1NOzELtUw45Pl
TB9pGDVSjWpIXzk74J+p352Jrsn4pHh93WcE4fVNO0/xK42sbNJ7VtBttQcE
xSYV6+LGUJaDCTUANCmV4hlnNmI8/ZQPYS9Gt0vuBOZfSS78089nN8A/6yL2
h4fipcSem3RrIWNbrhtbfMJvkGL0cbVXBNEmiq1WwkkLIWmGDHW5syemMVkP
AGhdHGvTyhghEWeSUOS6TTAaIZFkg6uRGbzrRKLEN1AIqRse4VUyTyKP/Yfy
K5aGStB/FYDmxeH0P23pJnGM/PASvp77Vymc4pUStomnbSh1hGaq5IcX6z+c
HUz2/PSmVX2l2C72LRgRp8rwE+Mk8s5+fL1JFG3ulzs9xyoz0BgKgCbF4YEI
uqJNx43p5v6ZEG2W40gSUfd1TnKmy5/Y346s/ZDc07ZpNCScbQCaFOen2FQr
rIeSlAL3iPymuTk17GkkpWf+bmL9vP8h3Wc0TiFDK99uYlMAQPvgkepIgkSH
5UWRktiCCQQXmvHJ3efSib03azxATyEZocZriHZgwSsUO7JmT84wtBcAoFVx
OqatuR3XfTk9KyxnB+0Qbf+si/L+VbqPRdZ9eElvUPip8Ywtor3oVXUjL5To
dvbkdEN7AQBaFYcrEKuVoMa34wFtMtu3PgRhwgMLrqZHioagb3Fdl+o8OTbY
V/sxE11HqGj7Z75Y8lVo1TvIRXDxa3ilyE/2+FSj2wEAWhLHs0c0e/eNjUIg
eSN2wJL4lxm8ez+XsckAXruy5rEP2rcvAKA1qBROO7md7rheDRQLUkZGYg2Y
o0yy8gz7w8XIFkOLW9sbkJHYti84vykAwCacKWYf305Pt0nQRl4MbvkgSDWy
x6cOxoqMlTXapTRydEXbpq4jKF0HoGVwWLR5Pd1WS9K2rxerdKN075e6bczT
1tBtmxKzeYg2AC1EJX/SbRNGoWeRBMkodkvCI4yp2oWnn9PYlELqN9lRq2EP
P/yeCY/Z2eIPANDsOJ7459d+YKSBuLdVrD8eSx38meSmVdXf/hkXSO6QHD9a
sc5b3R4KdesAtBJOi7bKKDHSKqqSGxIHT7h5Fh/bseRpx7Z8bv4hjsyIFGNa
+iQZ5nLvXS7a1gLRBqCVcKxBK0Eu2uVMH9c1macZ2qIHBNE2l5st26K2CHue
9o8flcbPiYXmEERbnJ5Ns/4ia/8zuPQNJDHbP/ti2o41c/QvpvdSBM1GAGgl
HPa0FaMfxM22u9iHpTtr9viDttrAu5H1B08bANAI1ZI0rE2njIkLIdn7Oxk6
jtQdiDAYK8Z3fk18J7Tirezry9GoYQ8sfKWk30h64I5G9gIAtDauzNKV92gl
5ZCV3JADu2v/Lkj3//F4fQiCTUh0O/zQu+3bCwDQqlSKTqdq80qzI8kcBBI/
EfxPWxOzNULl5ezg9x6e8K1G7bkJJKuR8QfkFDIzeJeFGxGQoQ1A6+HwWSRF
MZxOem5z3WZGfZlAMVqyn8uKW7Na1ela+INCPiMysOhV0Xs6yClkuv92SzYS
g1NIAFoP10RbdChJBkTa1y1KDXkXKcHdHYwVbdpOY0akTUC0AWg9nB9hQxEH
SRrvmC2H5YxSHuWuPPsPyy0RI46QhFb+k617AQBaD+f9W4rY2SZNouQFg84T
LT5Nr/Pnllq+vtjTRtE6AKBJGalGuTmXuG1FjWTPrXx9hI0di9dqbcZi2tF7
OkIr3pbu/6MdG+EIEoCWxJXUEQIttMn7V7mSfEiQxLSPhPNuWWItEG0AWhJ3
u/yRnG1Jfz+bUItvS2LahafNjGJnh5v7MhIeCT/8Xls3Ci1/i63rAwDcwsWY
NqGRiTZ2EMyPOLCLAzkksa2ft3sLAIDzOD8HQUI506c2+0DrLduqb+QNo+yA
VMfrltU3QnTTp+1bHADgFm7laVNIDz3a368Y26H7Sr1QRTq43Coixad908/X
fkZtd3lPVzWCS17LzbkksPAa8jEgSiPJnV3AuIg2yCcEoCVxuNGfBFK9XrtI
H+HHQiW6sxdH26jaMDhSWPmmVX3yIQiUwPyr0gN3+GddqPx6/V+hi7jmRXC2
g8veJFxE/zKq23nfcgMWqxPb8jlL1gEAeAqviHaml+aQMIq25VMS+Hp31u8+
1Gf69XL6MMtjkTXvF3/0Tfu/vEi0AQCgWTAU3LYjrE1mMTiP5cFtuNkAtCTu
utm80lCY8eB2dLvkKzreheKfqRymMM2JZIl0i/I9oOz3ktIbXimsXU4dZNwl
sOAV3JxLYnfDtQYAGMN10Q7Mu0Jc3lLOHRV/K9FtuWhbexwpyPXmU4lSbJdw
7Zt+Ptel02xQsnuJWbSDS17L137jvEh8M3d2oQFbAQDtinwqgTMoNrUWH0fK
EYu25bGRcnaQXHxreX/q0G1qj5GDSNO7iMfiFH/7PPFXed9K08sCANoH10Wb
zIgcvZk+QkbYKOq2A6Id23b9N5YMCM52/PEvqT3JdU8xrdvxnV+n1xBtAIAJ
3IqQENGW1LDTc0D53HZeKTximTHpXjqN/fOzdAafsc+vlBN59AP8WJK25CuE
RwAALLjraYvdbH5i4p/Wu/aUQ2ZPdAo/b1plPuVPF7GnDQAAjWNH3z/5REhd
RjQbknDzplieN0I5l60aep50ApfAdU3W6DQbXPamwMRO2tmTMw1tKiG66VON
vA4AaF7si5YYWpmItqIe8rUAxZX02td5XmN2SdEoh0z23CqvhSwl98ufpIU/
/hkvkn9Lkv3Eup09NcuEqeMLIisbgHbFRtFmjsNUCqeqzKJt1OUuBNdpfLvu
eKyU6tFI9lMrYJdARVvR3yZ16xNFuyFPG6INQNtiX/8olhasko5/Be5h1SfH
wtrsqdrlTL/2GaKvc9IPHxnQ7RYlphh9XPsBrvtyeh1c+vrwI++jxY8W1q2j
NxQAbYutySSMzjbJIVHN1ha52YZOJBUzw8WblrODn52pmjpiugM2dbZpkjZt
EkVo0M3m4WkD0MY4kEzCPlxMVbdtGN1O2XgyrlhcQwvYddHw5xVL13OnZjOu
DAAAEpwQ7UpQ7StJSbtNop0fXqz2VfiR9z24Z7iU6pEX10C0AQAexIFaG/kW
JHAhDv9qN6YWRNtoqjaNjaj10yMLBu7v+M7KWp42aRtF4bqnxLZcx7gXEW1J
3khg4TXcnEskVZCE7IlpjCsDAIAEJzxtlS3EbjZNILEcjeyR1KGfCz/nHeTY
B9AoYrRkEp42AMA0TnjaE9V4tJ59wdW0OlK3q7ZpN1uQUw3Rzhy92z+14+bV
FlREUjeb1K2HH/nXxtcEAADPQnP/FKfYCKLdyKwx7TQSbXSn6lDE0R6+Hi3n
68EZSzL9UAIJABDjwLRfxZZQFDocoVoZLYGnvbVJ3YpfPZt6ZCRm2qqzmYpi
nrZ/+gvJRYF7RHcRwUJ5TY2kSRSprMkM3mnOTiRmAwDEONP6T0236eBIfuxE
UtyKRJBEmxpGlbOD317RLy9jj++6wdA6oweRohNPkqFNTiHFSdrZ41PNmYrE
bACABCdbtlbLfsX7In97XN4b6YwqhjrPEp7wpRN7bxHfkczhZUGxel0+ZSwz
eJfRlQEAQBFHRVvF5SbDyGoJ2zaINtd1qfxQUpDrx4ZiZOKYOYh5yi1HZFPG
MoN/Nr0RAACIYa9btJzxZI8FV8szSViOETXC2uJMEvm3vs5J33/E/DElRbG5
X2jVOxpfGQAA1LCjt7YaGj23R6pRcbs/a4f5yjkaK9Jr37Ra39dC4FGjiyie
RfJKnbQNgaQRAIDXUAzLaM9EsJZNJxP0mr0KUgJ14yUud+zuDnIKaS5vBOeP
AAA13JodKamXLATXVwqnqGhz3aqdrk0gj2mnDv5Pg+WQBCraCrl/EG0AgA04
kKqtCK2XLGf6AvOukMS0G6mLkayjGNO+5SFrBkRSB5uU2ITX/BspilTrfMII
0rMBAGpUS+fc2VfUA5DMaq+WudGPok7a7GgcSnJdl0ruDGcqJrZQXV/kZgcX
v5p+TB35Xwt3AQAAglvONkGSB1ithOUaaxXilcUHkY0j+POCVhO5JkWRgYXX
pA6bFG142gAADZzMHtFlpBptpN8IO4dDeTuWpW52cNmbUkd+aW6R6KZPWmeR
14ms/Q+3TQCgyfCUaPMqc8/F0HG6jZCuPmvo+XL6sNEtAvdbNh2yhYmu/4jb
JgDQZLiVQKJGPWF7n9q3Vs0gO50qy9uPENIDd8izxLXnNciJ39URXPoGotsa
M3QARBsAo3hHtAvB9aRCU0O0LXGzsyceHIgWDL1iVLQBAKC1IU3/WCYjNK7b
JhSY/ZXwQ/9CLjJ/VBg6BgAAjeBi7xEJkrhHIbRB7cnGRTszMhrQtuPQM7Ti
bZavCQAABAeGRRqCFt2I+5BI8M+4oMFdDgZzqUO3KX6l2PPEkGcev2v0/DF/
bpkJ2wAAQBvXY9qkKLJ2ka7FRmjmdoF7mD4TWHQtL5oaabqdFFnBP3V0Grvv
gfEEj/FGIrMuVHgxdVB38eCS1wYXv0Z8J3dmnjk7AQBADS8422REuyRWo+Fs
NxIhyZ7oFH7uHE7V1ulibXKCg0gAgEdwV7QlbUaINkomuRM3e/SBxmaQCc58
OTsoXHzygROSCIngaacH7jC9cuzxL/E/mnDyiPAIAMAOvCXamV7ds9GGdfuI
4Gx/etrxRhYBJqBDMwEAdmBrT5KqZutsEuIuRncofsse0NaYWZapPsuYOlKM
KZtRs2TOS2kXWZrph0JINVBHA0DzouHek4TtkWq0GNmm8G12wD9T4aBQbR3l
r7ID316h0P2V655CptiIUSurJ+1YBd3mxxTbP/PFwaVviN3dkT05g8VCAACw
CgdSSnS3oGkkxeh2ckFzuf3Tz2fcRa21dWLvLb7O56u/Nf57oRjbqfiMINpE
sWuGLXwlN+cSmuyXPf4Ao3kAAGAJToi2UoREkGWSSVIpnBLfp7pNMBQhIQuK
6a/XsPtnv4Qle0RNtMWEV7+L0R4AALADZ04nxaMQJMjTSIibzX4KqREe+cbS
AcXiGq57SrLnVpbFabS8ljRSp/Kr0dSR7MmZjBYCAICFOFN0I5bl2nQwUTG7
Wh8SI7pdC1yLjyNJ/Y6vc9JnGsse8XWOh77DD70bnrYakcfQLhsAF7C157bR
IeyKWR8a48YUSVaeMfS8BMnoYWSMqIGMEQBcgQ5wdJh6b+0JdZHcvCmCn9z4
yodCudQhaT/t+K4b/NNfSK4lUfQJNnRfLj6ppK2zM8fuadywFgOiDYAr2Bcq
0XCzx3prqxazMyI/iMyeePBIOK99Cqkh2rzM0wZqQLQBcAVb49tquq0Y0zZa
DimpuBy9me79VGejFZGCbtNTSAAA8BTV0jkbF5dlqmj01rYkoK29Gq/XNoSm
Z4dWonU2AMCL2JoBqBYwF3vgGgXpJthwIi5J+YvvukH3LbkNpJomM3SfhbYB
AEDj2CvaY5WPhNHimtyQdn8SFvL+VfKbsW3Xdx/kSqmeuCi4YU60CRBtAEC7
MVIdj28o9tY2h/wIkh/rp73tTLLx9YEi6OYHgEdwuO/fWK+/0SwOlj5RisFt
RQ8599Rz8oB2fnix9vq0rV/4oX8eXRwZ2jKQMQKAR7A1W1sSgSln+srpXhLW
FnTSdA9t5eyR7OA3l43f5+a+jGUpIv6CbpOkEdLTL93/R3OGAQCA3dhd2C5e
nzQ+rVbCfE0tr2xwZXmvv55gLrHvu+Q6tPLtLIsIok3yRsQ9/dK9v23QNgAA
sAnbRVsUISnFd0sa/TWCpNdf5ug9vZG86dXQaQQA0CzY2oSEn5jmR2oh/TMu
sHVHgbxvOctj4ipIhLLlIJQNQBsiTv8TBJzrutSOXXacTaUO/Vy4iKz7MOMr
gq9O+42QZiPpPgRGJgDRBsBrONY2qhBcb0nKnxgaHsmeePBQKGdiBfQb0QaZ
fgB4EFuz/ijVapTk+1kOTf/LP/WciddJyl949T9balSLEHnsg26bAACQYndM
m2C0w7YJ4qWnzb3YVv52cOkb+Fpy44tYHo48+gGbzQEAGMaZcTa1JG2VsTV8
vdEfN29Kg1t8a7lC/vbo+vVJZ0AguOhV3OyX5s50u20IAMAkzog2iY2IprHv
GP9q0bWWbBEuPuWbONKdDgsupw5askWzE1r1DnKhWygKAPAsDgz8pQN5xbN9
i5Ft5CYRbbWWqqxbZAe+sWS8xDIw/6r0wB00OQSeNiG06p1umwAAaBRHRTvT
S3NIqGiTevYGwyPZE53+mS9uZAUAAACKWDK/RsL7f23jTIemhpv7cvJXTHDJ
64L3dWRPTNN+HoePADQdViVva/jw9fG++8R3AvOvZGn6p8a5TFX8kQZGSskn
Ta/ZGpCWLwLJO2sln9mT0101BwDgdaqVoNpX4gm/dB6Zr/M8E7scCGTFk2uS
PbcS3S4lD5hYrcUILn51aOU/uW0FAMAuLM8nEbeNKmf6xPMiC9xD8udp1ocG
5Uy/uKu2r3PSN5f3S7JHCMXYTmPmthyxLZ+l1/C0AWg97DiapGuSbtjldC8/
UcypkjMGt8VdtYXVytnBj9130iprWwmuazLJ9PPPfFHiLtWmWAhlAwDkSOoi
acUNzSQZvZ8dYMkAlExDEA9BoNApOW0I13356BFkvaBGuEj33+62UQAA27Gv
+kbSjYQILAl6+JUCHfzE6WOShoHnMlVxeMQ//YXCz0LgUevsbTLIpAkSG3nq
f5/H17qO/8VlmwAA9mNhtETcppX6yaTyhTrhgmizREgkbnY5O/j1xaNvcV2T
WUaxtwnigDYAoB2wULTFI9oF1S0E1/MTK25Gv2IW7UJwHflIBrIDCo2N8GMZ
2oqPIZQNQAtja/52PXN7NAPQRNbf8USJXvum1V4vBNeaNbAVEE/hTN7ZgWg2
AG2ItVkl8vxtEiExN/N386kEzdOObbmuQdtaA9/080Or3okMbQDaFpvyt2sZ
1wuuFte2S+LVaohTtX2dk25Uyh5pc7iuybxK92wERgBoB+wYT0aPIKlul7Os
8iuW9xuXNtS9pMWotQWY/RKS7CeuFQUAtBV2pP9VK2F+vOF22NBUMnHW34lk
SePJNoT2iYJoA9C22DQImEbLa+PaGWrYFekN562zCAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAIAm4/8DAuQw3Q==
           "], {{0, 485}, {486, 0}}, {0, 
           255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Rate matrix\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{522.5, 
           FormBox["1", TraditionalForm]}, {418.5, 
           FormBox["105", TraditionalForm]}, {313.5, 
           FormBox["210", TraditionalForm]}, {209.5, 
           FormBox["314", TraditionalForm]}, {104.5, 
           FormBox["419", TraditionalForm]}, {0.5, 
           FormBox["523", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {104.5, 
           FormBox["105", TraditionalForm]}, {209.5, 
           FormBox["210", TraditionalForm]}, {313.5, 
           FormBox["314", TraditionalForm]}, {418.5, 
           FormBox["419", TraditionalForm]}, {522.5, 
           FormBox["523", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 523.}, {0., 523.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Im", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 2.54\"", "\[Times]", 
                 SuperscriptBox["10", "\"9\""]}], 2.5370804523875732`*^9, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], None}, {
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Re", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 2.54\"", "\[Times]", 
                 SuperscriptBox["10", "\"9\""]}], 2.5370804523875732`*^9, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], 
         FormBox["Eigenvalues", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {Automatic, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1., 2.563552498916379*^-18}, {-1., 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzsvQdwnFeS5ynORVzMxUZcXNzsTcTexsXd7Ozs7pjonZ2d6ZlpSW3VTq1W
y4syLdtqeaklSmp5L5GiRFL0pEiK3oIONKABQRK0IAEUvPflgEIVUAYFkITY
UffLl1UPrwwpttS7OxGLL8iKwlff90y+fJn/zJcv35899Owtv/6jq666atof
83HLg7/93vPPP/jKrf8Hf9z+zLTHH33mkV/99JkXHnn0kef/6aH/hZuBKVdd
FeS/fE9NXpPX5DV5TV6T1+Q1eU1ek9fkNXlNXpPX5DV5TV6T1+Q1eU1ek9fk
NXlNXpPX5DV5TV6T1+Q1eU1ek9fkNXlNXpPX5DV5TV6T1+Q1eU1ek9fkNXlN
XpPX/8TXSKz1K7wVDx6x3xMRz8hQQ+rJK9qqE+8/9hWq+xd1/cvpwuho4L/z
i5PX5DV5/Y+94v3HLzN/k/HO5Ehv/v3oa1eNJgPJpI/PodZlwx1rv/NUT345
iUit++dIrD1c99Hl2zMyVHfFbf9aF63NafDYF79z/0wMVrp/JuMd/Iv2Fed0
4VLUy3n98g9f/plLvRXvP+r+ORJt+dIC9Xt84OSXNuPrXJMaYfKavP4bXfH+
8rHx36mw4pN/5V1hK7s+P9OzwePlS/TcuDww/rtK3zBfej6e4vFHB0bOx89/
Medo+2enu7tmTeFPfTKcvKCvzzvWoWWe9Q7zubXO/9vd9W7tvtiY/c6LIxcu
Lq/odh8YzBT1B7+QKj1Do/o9du6LQPyc9tReH5W10uaeYXkmcf6LnQ2B+mCc
z5d2ZXWhJZRw/xweG+df6+DIrCNt+ZV2Z2q8zAWtcu50RZLN2bXoAEHM5IWL
fA+NnOfzSOdgwQKrfFG3AbHzX7xzoOlLm/F1rtpAzP2TQaR5kOW/aaV/wCtH
d09ek9e/nOvctKuG21cOd67D2E+Eq0DU8UCZgmdk2nDXpmjvdr6o82Q06ecZ
vnz3g5Z48OhItDkZ74o0zhlqWXL1G21DbctjgUPR3p2JwTO8khzpG2pelAhX
84WHpbTODYNVrxvc3pdM9FAOdwTrAtfjnTFvSSJSM9S6lF+1Ln6K9u7QdiaT
/j9sx4c71pjmVdGSmE+qjvbtUuBNe3gg0jAbOsRDp0z324a7NsYHTgx3bx6s
eg1DYCTaqkh1qGWxvpUcEYEf8+5NRDwx7x5eTzm4l+7Qr+H2VW4boJ5+SYRO
8ySflBOunZ62XzJIdahtJYOSLkdbaH4arH4zHjzMKMT8ByhfqjajQ1E02NaC
USDNS/qk1+2r4sEj4Zr37a903G0SdpB2f+LOcEM+9ejjRC8S3clklrKj79pC
5SIGkYbRvKwSTFOzqJHoMmQsYNPJ80O1Be9PPBCqyLlDyy/FNknDXZf6lYHI
Kifa/CVVO9T4atfXL2Hy+p/kYsK6/gG+ADAsJyfj7czHlGPn8ivfXy9pFIlq
5qO/+If+vTd895E+i0wUV6ccPtQ/kSSds6e4tRdypHjcm/lox7ZWP90HrKVg
25l/U//lv1uAMoMVbgvRWUgzhE/3J5frgv1TBUi+4+UyHgNtjw7BlbwVDxx2
7yOgXMrkFOt+x7DKIWNO+/MdKTnX5R/Ib7/thf3p8p6Ty7uG3EbmsO7lCynY
wgJdTubS5PL9zSGm+6fbvEs1Jv/XK3QrXaYlqUtTqWA5V3g/hw4Fi82v92sS
5Er8hJfqdUEmv0whl3kyp0n5nHwpchWcDl/5QgQ9sK761sV1n5a3b6v3n+yJ
vH+w+XTvUPz8F77Y2L2rPPyLnftif+sAFTUPJJZXdNOMrvn/27Pbaz4/01NU
6xeJvfv6q99ov39tNa88s71mRUVPb3QMA/z2pbVrq/rO9A3PKGsNxs/d/XlN
30dTrNik9oc2pIEW1b24q26Dx3v7Z7WudH10S3VON/Mltqspcj7zb1qJXReM
3bva0zs8erhj8Le76zfV+J4o8vDTyIWL0XPjfLl5YX1NIDb/eAfm/IHWgbtX
1rxQXEcXfNPTXegIJykT+mjJPMbn8zuly7/ZUXvTwvqcZnijY/etrS6ojxIX
vuB7ZFRcQHcur9Xy1cvEdd+a6ncPpGHeiHGDhM2TV7/Wzv1djcGXd9c3hxKM
Y+L8FynjvBodn+AKLbBrKMknDWB8r/uo2TZD/V32Gh2f0Gh2aPLZxr3pDoFe
U1fU6M1A/Byfv95cBUtAE5fPtbPupa80DsRThWaT61QpKIsGEudzmkEjR8cv
5jfe1tUVSeaXw+WPnctShRcuZs3QZG7bwskLX1NA5VDjCqVZwS9fIrHzGp+6
jKRK5okg5/WsurLv539ehiBXAgm+VKPl91rZ+HISO48Uv6/EthDr8u3Ml9hf
R2gjskaNH8BCIMHVhs/5M1j2y2DZfXxXWxW7FXufZ659t3Ww+o3h9tXR7qJb
l9QhmbtmTVHTWO1Nbap/90/1uyL5YOlUhIzbCwXw+qe6Yvx7rne7Yx/I768l
16VY1KWnyzD2J1u4tDnpjw8cdyvybfu2tDxcxefIUF2w9O5Bz9t04ZpXOtzH
RoazfMLi8En6QL++rdek8vAtD+cjXtspbaTSKquKaDOUzx873wxo7jfVlfHK
wPHHcrSVXonBM05rG5Pxju6lf5qj0XKaVLCR+Y9d6oHE4Fn3z2S8C1LHfPtc
XZD/VkGFe5ka81VzDt2ucF7k14icz6nuS1ueDwzcL1/amN8LhuWXmcNI+f3K
aeGl2v+l9/PJUvD+ZWq/TOOvpKJLvZLfa1eofmkVl6oov0f2jpU8BYnvvpgv
xi+vkS9/9UXHhjvWLjrRiaUcrp0ePDg1UPKLxMtXRXu2IZMD+2+747Na8d92
rI35SoZaP+NmLHDIu+UfX9pdP9S2YrhjXWDfLYGSG0Gk4Zr3kFeDnneCZfci
4pihSPvhzvWRhtmDVa9Fe7YDR/s2/Z1tNp+Dla/od8ROuP7jSNOCO5bVutJ1
sPpN9/ksvZnM09pJRzgnAzmyOuVI7FHjdg6dfQkJFguUDnre6j98P9KYZiTC
1TH/gWjPVtQQ+ijSND8ePMznPas8L+9p4LNv49+qjlP35sDxx9NdGOlFfoZr
PwzXfjBY/dYti+tSjh6XB+IdAyeezNLUyYALBtS3j5bMlJ/WBQMnn+o/8qC+
SAtpczx0amS44fvTmyONcxmacN3MePDIA+ur1VktxToe2uDBO0TpRJu5SQPC
9TN/9HGTpZuuGjhNmlC4mQe8+ZNLK7Jdy4ErwdK70j2Kd4zE2gerXh/uWAN7
uLo1XxcrNdSv7tIt83yP+6Q7mukmxTtzCqTlBSGlfRdKmsb7U9nTaiTWmkUB
s6YwUZGzxJCpusvlPQUtqULMmcpmyIkSsqmRMwQFkZtLdueOP386uIRyG5/f
tlwCOqVl7qQXLNyZmMrjB1Om3/3uzkp3/n5pH93XJ35N5nWhkGPKqSu3hFSh
pbF8myJz3+lLdvmpbDIWbOcfVmInhmrVAM+G2Z1pFGr82GOOM0E+xy8ih7V5
TIq7V9bEX7mqd81/VLdA4sJFq5IAqOkXja2N0FCMbdVf0Fiy+i927gvzSrVb
V3/ifMrxZrgtUYNXvQRKAf3uttO+a7/zDMayhscE4+e0MXLni9+pM8SKUKSi
W+NIrA3hdqwrfM2r7a76Vt+I/XPIEAEjV5csc/QvD1vVI//GM91JThRYH4zb
F7UlnZGk7Zo7djF/aSLTcv6EVokL4qxwISKva/CJvt4eHhEKBA/b0iKj47ZJ
MuLjExXppw5rDmRSitmuuROHP6t8UXekggnxjYRNxIj9FzI+n6wZl6GGdsES
Wb9owEl6pjgja2tXD4x7Rwc0R7bYYm1d4jwxZdo7GJ4uSFPOzBlilybCSM7r
+rzpxcRj6lpJXQKwyQR0rL+cFrr33V+TFy7aX/VT+SGf/ycaPzruFpKWOYba
OWJEOi5upSyWC49emGhSJsbMMok7L0YuXLQNnpiYGSpJ48cv5nQnp/Z80tkr
eeGi26+sf+O5BBwzsz6Hh1MmAMwlnUiz8QlhYpshTzpusbGM8Bl1QuwyZJxg
1/R9dVZkis0Zi692YcC+XtIIhgQVf3a6+3h35NU9DfHg0TEjRvqPPHD/2moY
eHVlL+052ROZfqiFBgDSQHfR7i1A8TuX13qL/tm7+R94kiF+aEOVBrbBhP7d
P/mwtGV3U/CpbTVNA3FALLDQbfM9K2u0a8zfB9ZVf1TWyiujDs3vWZleu3TH
Op978+dC/mM540jz0DWIVlTtg+ur5xxtv39dWlmoy9Rb9K39rQPP76xFYH5+
pgfoG655F7z6vQ9btDEacXfHZ2m3szcqkYr3rfG8e6D5l2s83s3fpFVDGe8r
DyCKedglfmQ0LcRgHsvANy+qzxlT7I6HN6Yd/iqXVE1EX7sKas871gHlj3YO
Dhx7VKMlQ8kLOl/0+smsRl6pNAGWNOChjVXdn0yxVWhR9hKxn5HG+kn3bWPs
l77oRFgm5HKr47rh0wYtvy4Yi577Ajq/vLv+l6s9Lv1z4hVTxhuM8DzcMehW
ZFvSOjiSynYM5kxAyGtf0ce6h0YvFR2aNDPuVO+QK9nsr1W+YbfwHiPA7QM5
neVq6I+7z49my6J0q8Zze+SW0DSQyBEUWQUW8vZkFT4hIgrczJF++dQoKECs
gHVvJrI1tf2edIq91LxzG5MqNMQF++iSLr/BlyFFwbrc76OFir0UKQr2KL8j
l+nFl9ZyhRfQEW6RMAPM8Fg7qHi4a+MGjxc8mQidZoJ/99HeSPPCcM37/Yfv
Cx6807/3hs45f3Tj/PrB6jcHTj45cPzxqStqAvtu9u38wcE2WZ1Eqke7N0t8
2kjfbUvrYv4DqINw3Yz+Y79G6P18XoOLsbfXTxgmNf7oUNty/56fWYvDPJDx
G2RQqBo4fNFoOrV8lQJqsmWe96vVkzbz098DxvHr1Z+21qVvxvwHh1qXpaPg
El0YxfGBk/RdbtZ/PHDqmf6jDwcP3R0682Lw0D03zG2w9givLzudtme1zYBw
egHFfNu+ncpYi1atoBOzbEkab+3oTC8+OdKWpkDGaltxpifSvMhOXt6SgLqR
3u4lfyIOq/bVtHOw8hUorJ4BKO/O8Tf3NaYyJtvSU93DHasZQduMkWiLNe6E
qome0UzYm95RF0GOSZiMTzjz870E6CyLW+gFdI72FYvR4biqRoYbLd0y1Oiz
VevgWqqa55smaje/pk3sjMEL5LCVWt7ON591OFzzXD0ScIV9RhcvHAq0W64z
xbbntm2oLs17pjpxkqhTKONOGXW8OvlOmFQmhHKCFI5fxT4zYSZkPFfWozVB
GYYvmUOldByj3pe+ZK/KpbIdX251Jm7T594UktploEy0mOlyx0QbtMZ0jK46
1npphnAXRM50Lb/xbkVJ83xmgHpzf83vuKWJaXDS6bWRFb35teiIZN0xS2ku
KTJN7bV9yUxYnx2jici67FHLaczE/cxYfLVr0PNuuPbD2UfbkbRDbStigbJw
zXuVvmFwBdjpvrXVg553mFzDHWuoNx44HGmYhcrrW/fXvDjctZn7yOF7V3lu
WVTXX/6rolof8i3SNA/ACUC9fWktz0d7dyJPEoOVIGpefP9gM9WVdQxCGVA3
MhmIgigbOP5YpHEOQv7Z7RJp8M6B5j3N/cHSu7SdT231WJGV6Xieq9Ahix3u
nE/7D0lL7VtqfbIV6MSTkaYFSLyKviFM+LJ2adtNC+pj3r2D1W8khmqH2leC
Y98oabzr85reNf/p8aLqXY3BV/cKkvTvuX5zja/WRJVgDvcffShcNxPb5Mb5
DVjlvKXgeUO19zc7av27r7caFrMCQK7fgcq/3ly1vKIHrOLbdg2GzIHWASCi
/oqWHDj17J6mfnAmz5zuHVpbJbGU336me+Dk00PNi6A8SgcjhebRftDseweb
1XLECu5e+qcaCQOdaQCvXP16uwVjAHhtku4VumeVBwkfO6/eFbl/57IJu0DJ
CMC+a0XNwEg6NgPbhAFVG1ljSHpX/8X0Q60wANAacQ2d4Rb4xBqnYG8GWr/r
riK+YJh8UNpCL1LOzimFeYzR7Y55or9qY6x/5pbF6QIt4sX6w7jTV6x7DSOF
L49uqV55pueRzVWUrIZJ2DFMUMpaFL/y59TlWRGwnZEsq4S3qNqdzrqan8p2
bGq9+jydYhDdQm5bIo1Xewey56jInCthSoBXrU63D9MXR7AX8Oi6FpNLz/yK
0honW7a0hUfcBxwV43Xvp3Llmz+fIPmNz6ndfT23bYX82Dkvur0uGHh/eT92
ltx2F8gu48e+RKxI/s2Cw3qFl2wGuXAxPHrBgli10LXN4fqZTMZUZuLA9mf6
hvkefnvKk1s9oOvvPN7L5A0evAOWU0YVp+V4WrSGTj+nL+rs/tWmKu+Wf9TA
DJWomMajGQiNkOfh0NnfovuMOhb1xAP6pLrTU8Y5qZJEy4TZkpkILt36p6ID
4akhczqj1bVIT4fGxvmnrsvmgXTtfuNqsJa+3sR84LNtUBy/IOfHtlSjmBCJ
3s3fVBClGEYIktl3wyfyB1HJW/3lj0iNw40T2DjRc6ZvyDWmRobq0x7+WCvw
WMfxaOdg0kF0XJXe4UD8XD4rBg7cri7i9vAIQyPRfYOVMoJDtVBvLOM629vc
b2qXNjPNKQpbKWEi34Q+Aydse0Zl4c/Du+o0ThNw4KS1EawxmBg8Y5sn6Dd7
ZWd/y4AFWjrKEBz2QH2kfXrjv1PPW8qxHA1S9Ws4jTezGVbNcIZYNudm2iCs
QlPNT+oe58lY4JBrq3KB6i3b2Jv6gFIbZKjU4xNZZ5+J+Uoy7RQHZiJUoZ4f
faBxIG5bop9UHTQCWdkMxZo0LzIoVklpdGUq40lOZMdMaqIe2wCZj9kLCi4/
pEu4cFEdcfyUXs0Z/11HJKkMr1xt5ks6cFTvNzoOHDtk3oyczxHmXZFkf3bM
ZH0wPtHI5AXrJIHhbbE6Iv7YOTv7GHr9Qml2UcASvOAajcav6k2rAe1jOmGt
XBrLxNaOZdY7omPCaUMZf50uTOR0kPmeUy8CxF0IsP+0Oktk7TuCSMGYjczU
cXFHTaGFts22H1IU9E1d4TXoeRuMPae8/Xi3YOy4wdjVvigMRgOAiCDDXIyN
cFv/DV4c7toElAI/8x2YAdIDyynGhholzf3gokjDbIOxX05j7PXfADx/fLit
tC2EhQX6AoOBuBaf7Bo4/qhi7Ke2eZhrb+5rAsfyANOHBgBrza7Dk4DeSMOc
ePBw6PRvon27QxXTwnUzQJgIvVDF8zwcaZzL7OYxOiIg2fN2tGf7YPWb0b5d
9FRay7/qt5ae6goenLrJ463yTWDsU70i0GgbfbxpocHYVQZjt33+0Maqd/Y3
IbExE8DDOxsCv91dPxJtBmNv9HhrArFPy9sZxDTGPnz/jfPraR4omslIT0HF
T2+r8e/+KZA42r0FiQf1AMP0Jdpb/OD6atQZhkYiUuPbes37B1v2tfQzBGrX
K8aGGi2hBM9gDa0620sLv/2bLqg9gbHXV6M9oz1b0Sxv72/SehGM3Uv+9QaP
F1TJdKMBirHFtqr/eCTacsdntcOdG+Kh09gRCFjG6LW9DVBVOSHaux0QPtSy
eLhzHW1mZBlNngd2yuZWE4gIkzCgKh7jA5KmpnfVn4OWS1r6X9xVhxWTwdj3
oo6pVDeE3rqkLtpdlBg8O9y+SgIUB05AjXcPNFNatGfbwLFHZUyjrbxIjxhi
GIMWUv5wx1p+hQHCNe8Ot68OnXkBeiLtb15UP9S8GCMx0jRfk8BgHWBZxPwH
4B/KhJKy9dJXAts/skksmoc3VTH6NIwSUNBDLUtGYu1Ucf3sxnD9JzHvbhAL
74LV4ZlwzfuwEAoFRcl0gBUNxby8dfPC+oGTT8V8+4TNerYFS+/mxXj/cUYH
lqODjHX/4Qfgh5HhhlDly8Od62k8fRffo9kgfOviOigw1LZcNh33l4fOvkgJ
sB8Eh8coMxGuhuzMQZ6HjAwHoyNU8u2H88O1HzAcTB8MGRieEoY7Vg+ceMI0
6Y1I84LQ2ZcGPW9Fe3fQeGqJ9x8bal0m0U0JcdMJPfvLoRiljRoHFA+Ixjl8
P4wHkc2vXYnQ6cD+W+E3iIzKC515EQPc0KQxeOhuxgUegDKMCB2U2r17mGg0
DP6UVgWPhE49C4mYa0pwmgcHQiIK4WYiUisq22QWggIMnIxItKX/6MMUBbyh
/eK8HapjwsqwxtoQR7RZvIJVr/Gw1k5p/Bmp/wSxA2Vi3hIaQJPMpNuYNLuP
pXflj0BYuIuhhBRQGAECv0ldSLyujQyQcfBKhBVjp0WlhQ99r3qdMUK2QFvd
y8bIRpoXMuNEWsY7hrs2h87IPBqsfHWodbk4MGUL+U4RuXXTv7LERiAzu5FI
TBDsRKQBxj6MzWSkUoab9qAZV1eKiDjRHfnwkLg9b1pQ/8z2GuQGbWA+3rva
49/zMzAejIRkA5ZDVSZ7YN/NMw+3Ibqf2OoBaEF5XmSAhM59u5E/d6+soQQG
Gjbg9RmHWikHahxqD4m46Nl69+c1yLraQCxU8dwnR9rGJLzknOprBS1oars0
7zVKUxeSUK+qAXV1W9Wc5jzR54daliKdhjvWwY0PbpA2Y93DirCrbFdP+n07
v1/WHnp2ew0VLTvdTR/fP9gcLL3rFwvqsR1gOXgPA/x2kXjrGQ40BTgWEY1g
52HftmtkvfLwfch2esq0pV+InWnFdXPLO452hqkxeOgeNJHB84+J7G1ZAmJH
8iCgVB7yIupYlgs3VMEbiXAlzQbRoVtFMH485eGNVQuOd1JpeVcYfgvsu2n+
8U4aiXjRepHz3/uwhdmEgoPOty+tRTt0z5qiOkLwQ/GPIGxZ+yBsgLZiRsNR
yHwoxjNoUv+uH/NdfSwKYJDPgZIb0R20VoDTkQcYUGgFktnXImsZP5zZJMwM
c1a9BnEYZbQb1EYmP7K5CrZ5rKjat+1aWg5OQEqDbYDlzHomBVKCcjDfFKrR
Bh6jm77t31H80xFOoi8UuTHWNBV68lPfxv/y4q767fV+OJNnxozDCppsqfGh
qhad6ISSsPeaSnEoQQ2mOWIW0QRNOiNJlB2N1D52zZ7ya9NOSAScgCfB4QrJ
UrI0XKdwq2lAFk+pFCUOiypP0iTsTW0876olCARF8Sl//nKNZ+bhVvqVtnEM
2PYW/fOB1oHXSxrh5z1N/UwWXWLOifNJmWU4SmCmUILG5CjnUxoP0xcFhPzp
8UfVWqG1cALWH/gQ7tLp4+Z+0R1PKQMyUxlwOGbWpCCdnV98wvwWMYLAAxms
C/ulIyXGZZ8d1hnEsegU09LSAWGiE7PaNh6wPS4r465c0tmtsU9qmaYchKyF
pzJxO3SQlmix6vbhT1iiZ3hU61VGzUHUai+4d3g+lDHZ3E+1wjROQIce3oNW
+t16L32G1C7GVmxv/Yf6ExIp8TUw9pdJ7Df/kBK7/FcA168jsdGzsm2ndydK
EHWGCY/sQvNqYC1zUOKr/aUAAPAbyhd4TPk8RlGKVVCdPP8vSmLTgP9REhuI
eCmJTV1WYkM9A4eaxMwJnXIltmCVP7TEBowhQ0BENM+V2ALnhurAOUhsvggp
/Adp6qflHVDeSOw6K7HB7VcusSGpSmwJyB+qzZfYDC7P8zAPILFBvwL5hE8C
KrFhV2aNgViHkdgQCkaiO5KxJ3iYdiKxQd1gWiuxZc03E9XvLfonV2KDDyUD
zMBJgwl9ai6lAXC0GTKqxIYDJW9P0m/aVk5d9AXkD5JnFgCAJVFP23Jj1Mxi
igH/4C5lLcWr6qEVajPf6bvJbCOAMyKrG8x9ZqvBnBqZ0Abzi2UUrqRSOksj
E6EKXoSe0BC0HwuUihnl2wcDQBAECwwzWPUqbYMgWAFmZ8d+KAmbaTli2vcf
Z57q+qAu88nsDleDbJmJvG6YoQ+C6ANUQQtpkmmMpKwZbl8pxQaPYGEx32kY
o2NQ91qgMnzIKCDQeMC6kRkd+otJpauxFGtsyfWy7mz20xmb8QQ/RRo/lTKN
JBFqRFvgPXokmXxCFRBWl9FlHRDGiDZpLRRubIRmsT6k9k5IQbMpB+n3lSU2
thLcCFcf6Rwc7toA6aAGUw9tiGrAgmaKSQojE4DNiEMQQbY7rxusegPwz4tM
GawqGJLZwXTAKqGdaLodDQEkkhiq3hIoRmc/Kmv17fg+RjeiDzHOePHARo+3
2h9FfBnXxDykE9OEjr+0q75IFq3uEgs0dApFwHAjyZEqqvStMrVrT77YOavg
4plgy4zTT5Q1L/JPhww50H/4vtVne0/3Dsn8bVnM/D3WFQZKMWV4RQJdAoeY
FLArDMDDUOaeVR5EBwIEYx9hznj59/4cnVLpG55+qBUt3H/s10w3xA6WMuwK
cRB39HR5RTf98u++HmMKGkoITeNcRBlifEVFD9pK4/SgsL/4h2/uayxuDDIE
wtIjfYG9N9JCJDDQYv4xkfYIUlr4/enNzCkMLowXWIJW3bmsFlZHzSF8tF6U
VPfSP0X4UD50lpXHU+IVQUegd1Cj2OMwZMxXwtyEu5i8z+2oRXgyfOoouHVJ
3ct76pHSEIefBGw0zDGBNJ9Jgi8gn1noFOeVCLFi+KRn5Z+htnY1BZ/c6llT
2csoMzv4RH/BJIgUmIS5b+zrUtQTooD5BTVe2dMAxZac6kL1MPpoHNrJY6gz
dD1sg1iDiwIlNyVMHClCmGKhJ4DtZ3MaxSmBJq18BWaDPRBf0ETMW6ZVy2KZ
8oEyND6jDzshwyF7Rd+Qf9ePYIbA/lsw4UFT+1sHrn6tPVQxTdopau405dy/
tppXVhpnFHiYNsCK6BrADJX++OMmjRSlwCUnu2ByXV9ASYk7d/x3n5a3Q3lG
AewBb0QaZg8cfxT8w+vHTKrMn89rQBQg9sWB07sDkj66pXpdtaQ74NfPTnXT
zllH2sC3x7rDsCI8BmXQMgr86Obyip6ntnroi+I6sRo+r1HYD/NTIBIe4OHd
8o+oZvTjGyWN1hsMtVG1YOZNNbL80dgf50+oxKS+Z6Xnw9IWnWJ89m34BswA
K/YMjTI61u6ARApxOyJJ6gKn1RijQwMj71xeq/5wEI7GroNLabwuPNF4KPP8
zon0FHy2Gsd4fb9EbNq8Dbp6qwaCNQrGTKQomk7NQF35UrjLaKq3fOryWrVo
3OSZaqG48ZDQysXDOY1Ru0PjGDVwVN9tzfjwoUYaY2fikxV+h5ITu05UIl0q
ecKVXMh8Ggkzj2UC55TZtA3MfRgjlck+wWPobp7xbv4m02dDtRd9zbAGD94J
VREIjKlmw1O77JZFdeooYxz5hIEBrvTCa8jIHfFVXkgvTaLOmLnARYaDlghM
Gr+IHNB4MwpHnojsjdRqiBHT0PjcGvWBVHaI1EQElIlDS0cZ0ZjMoh6sTgnK
ioIT4p2ne7OMLw1EZNAV2IjErv0ANkNbYW8mjaXJTyIYzQqdLvQAdXiYAgP7
bwP4He4Y1BAv5hr9EukRrpJ4OQFXLQfbBlDEWEnYs/CPLtlToLH3J+LMpYrQ
aV1RVbbRxY7vPNkjIj3Ro5mdMGG21wsQQuZAcK2Xz0jzgtj5L5Q/xaIBub1x
FcJWlxSZLGY7ZED9h7ubgnCgQAXZaHMU6vGAnZvMOHgAFIHCskulwHuxynVH
lVl/R8aKB2Bc/AZQWFyOQ/VIpJjvQHxA3N10B7Gs2IafUmbh/mBbCDlT1jHI
NJQuq5QIHhVv/MDxpae6hf/HxdIEWTGOjJeAOjRFTPLiou8M4PSpZ5g766u9
MlImhFJD8kYzUXbch4YVxtwGAsHz6ivWKfwBMip02kIs+Bw8w8O62whVpVJR
05IwoLOOtqOeqBqTAU5GUzMuEGRPU1DBIbwB5lHwINQwMMxltoUnOiUxptnv
CSlK20IwPJMOglOjDrquxqZLGG6khG11fh1ljJ1w8oIwmIE3Bg+3onP5SbBi
vLO0PXSiJ0I5Q61LITJ9bHeiPqD2qBPqM5aJxF5f3be3uR/hbIMlGFmYQWUj
IEGoZALtMCfToxlrYxzhFmC2YDzjIt7k8WrsJfNdl8Wh7Y76dPQjzA9ltKd2
/tI7swwtMxo9orGX6Sg7yqFw81giUq27gMVGkJBXr2ZskD/NioDQP+nbXOPL
rDV3WvkcMwDeSg95a/CsBAMkJ+JblJ8V24shn0wvpsuTRgoJGjeI2nBCdSYm
oc8WaGjSmokxzoqE/GoXghcswdCDruE35CT8KRrKSEIg7v3rquk7DKmqTePK
kGbvH2xhoFHWgb0/R5ujpjFeYHsg9KYaL+KIqQTYAEIzswCNlAlyw6IESIPc
AFfUBSYBlYn11L7ysS3VGNrBA3cAdYCR4jnx7kGAQ22UPih97rEO9AUN5jFs
VZQy90EvPKBhURJjlh2r3zyQUFykN2nMWCbsgRkEDjTCsOK5nbXIJcxbozXa
4SvRSpv+HpwAIGEOIqB0l3rgwO2oIXCyrGPWzUCh03eTTbSSicxIARgQHQ+s
rw6U3Liuqg99B8/TPEQlYAxzHhgJQmb6zAfkH30YoC4ui7O/BRky3ZCraMlI
0wJZURpulD2S4xepAktf5Z5Myf5jYvLACS9fRWl0CrSJCIJWjNfSU139Rx8C
xVEvs3JfSz/olG4K8gxXAaGfKPJc+0IniPGJrR6wKO2kwSA9oBQ9lY1CdR8B
kxgX+gL+D5T8gp4am/rIoOfdrXX+ueUdDBOEpbW6LgOCRW6DJ3XR1iwCLoKM
siLWs/V+szfqvrXVIFVQN4KUXvt3/wTIB2/MKBPbBMiKxgG9Y69h0QhVe7Yz
72gDsvrXmzFPfopVIrZJ8wJ+RRUC1xedFDcUnwyib+cPXi9pROO8UFwHtINW
ApurXlfvkGQwG7+IZFMekI3zneuB+rwoS6ttyyE7sFM0i29/3/pvQHAmwmNF
1SgdysHc0AU1YBhGhyjBQClGH7MPhvdtuzZYdi8EF9dW+0oA58u760/2RCDm
8zvrkJzISSDNcOcGpjBE+LS8gyHTxT6d7/7iH6EUFLSjcGWpruq14a7Ng553
0FPDHatlXVLMhF6epwRYnRJASowv4hFLDS6CwegLwwoOh8dgBvoL6VZX9vaX
PyJriB1rxKRqmE0fZd051qYYFXoqv4nolvXZakRiSrD3zYLnm+bBHjQM0Zp2
2ZkVWBrw9LYaQALKwr/3BmYlDywR9nsYQ49xgQKPF3mKan2glxmHWuuDcTgB
NoNQiBGaxxdxCJ99CcqEa94VXTB+URPOUzh0mHm4FagTOHDbrsYgzMw0VExL
4ZXeYexlhqykpR/rA9IxXow1pgTC/50Dzcg0mIepDUtQAjqFOcKn3aqGNQc8
2ODxCioblwAk7HpsyVM9EZ6hdtp2wGTAg2kpE5rDrmJfDI9iw9JffjrSMUhT
dVHgjX2Nayr7eJIRHzNrEC/trmf4mJKwK6hAEYJKpK8ssZlTzCaGEnFN19C/
yEBwLL0IJS9gEw2cfBLVjLGp+lrGFGlW9C3kKogRSmKJQ3w+oRVKWVbwuzbA
2HRNHHqd68W34HmbuQCJfDu++9a+pg8PtSDq4d7+Iw8yCpiOVApHMc0p55HN
VchqaALNZQ26HXY9CfFVCqELVC2mAQkqLxOcqSrYSuxRJxRTb9qdL6NmLwn6
AgpDRgTmUOsykBVEYOCoZcwssjBNJBzdeKLEtK95H94Wr8imqqJa/3M7amX1
fN/NG4xjBzIOjY0PnHiCiYzMZGogB8QrYiIiEH3iFdnzM1nFbprHBIk0fnqP
eEWmLTjRyaDzD9uc+YjoQJUwFgyBhhOgDREXtApe5WFkI/OCFl77fJfm42I+
qjMcsYC0lz2Gexq0XkHsq/6cblI+CoiZhaXv3fLN/mO/5guKT+RPwxxANb0D
+2FEoAqDpVORbAhPpAQPIL7eOdCENMZUpzqUqQkgWSpAaPwi4h3SGdduHTYX
RO5d+5cfmIn51DYPc7P/8P1Mc2SahIuc/g0QNFQxDT0SEaleGq6dLl6R3mKo
8epe8YrMKW9HTfBifTBGGxCPAyef4nl+hd/gH7QMFSG4aDkcAj2ZSjd82iDU
6N7MaKKJUKaOV+Q0rCUWYuAQEpXR5z40RLEi0/zFP8SKZxyReMjn4sag8Yo8
TzuRwOL8/6yWVsEtiMHEYKV38z+gx0ua+yEyuBfh/6OPm9DFKGUkyZyj7XAI
bRB/O4Z/xTQ4EIZHQ/E6sxgxDgGhP7OY11XH3TivAciHQjRiczukYLyWV/Qg
bwEDYBWE8HsHm5mJqDbRqvUfUwKTJdq9mc7Stvnq7d95nUStePfAhDADMwVd
oyFAtA3V3LfpvzKzmJvTiiUcV3Ej1C5uCMBd4BZkF5JN8fltS+vgB/RgzLtb
feO9a/4j2haM1BYeYfJCH6YGJSgS4wG4GvaDgdEmAFoaM2xUmO7DYhKNRFuN
nbKUxotnOFyN3FhysgvWMuFGPZregRkEAyOd+G6WijaIa6t9paaslxRARghI
wqLuzcJC0WYDthtgtpRJniZbtssfYRxhAAlaM0sMfFpQjR4Rj3Tr8mRmk52E
OsfaM0a62Rtl8tvTyFQGG6fN+aF6DaA1oSwPKagWlKsGnTFX7Re7xcxKpK8j
sV/d08DgonrigcNmbasq0jRfZIVZeWSKQU++qHaD35DAY2Z3CcoLDCnxQvtu
hh8YdLAWhGV8kbQaigOXMvGRMNMM7Ok/8gAAFQhnRMQelJFgue4tcTOhYFGd
qgAG9KauPFIysq7KN8xMB12bCL0PECPI0tDZlyXg0Nk2Gz33RWrCK5Le+Tia
yUOYymx2S3uT2lYwoHqUA9wCTmO+QwSklq4o+bZeA4YEsGEdwMkor5f31AcP
TgVmMA1hJyY4vC3YyazHwavYZQ8YFEG/gHzMUCAKpKOnZuXxBTgHfT2zrJV5
yixG2jDLEH1oqxAKq2Xpie5IYN8tsmyH6RGp4UU6CG+jI2iVrLTqymPrcuH/
96cwfVac6QG+IrKomrH45EibrjwWmXqBxMgTukkVCK7bzSIm8lYcsxuqxA9f
/EOkq+52Aa3JymP1W2gNOqVokAc0kAncBRxaVtGN6AjsvXH+8Q5aCzcyc1Gm
qGDUfbFBFz+d1ShRnYggWXlch7gDC0FA7BQqRVfSa+/WqwEtQBTkcDB+TiI5
zcqjCLTmhbTQxBNW0AYQFEzIcIRrJIYN4c+vyBxEFiyBfEBXxoNH+zb8Z6iB
BY2UA6fByf7dsvIIpEdVIUihJKy4zEAjI5CXo14ZfePJnwuRZWEiXAnfej+S
JV1AFPVW+6L+PdfTKvGoty6DpD+f2wAPCyvWvAe3gDN7Vvw/4HAqEuumeQHK
Be28D/Nz/61GZWyCGhKdKOuDx6EGBGTIjHOjSQ18tAAK7gUjRbfXy/KNwvXQ
2Rep0Tj8D4XrPzEBePvuMdGblIDmYn41q7e/ZQmdumVxHWqIojCBAyU3xQNl
EJCeBkvvBvoycW6Y2yABk73bGWXkW9rPjOTv3S4BhBrEGzqFsSyOvl0/Bp2G
az/c09wPVgSR/viTJjFPzBrcvcY3bvwhrSgpbCV0ELyEOIU+iHrd1QUZsY8Y
NXAXg0Vp6sJipkMxrGBGAcrAWkw3ELW675hB6AVZC453QH8gB4MI54xcuMiI
AJwELSS6Hi+qhgJYmoyFiaLcDHmZ9fxJISgpbElUP0gJLsJS4FOiyIwIRcmi
JRee6DQLoD6k62DVq8LnxvErhnOkVtdnme+UKbaJiflHksDYSZNsBDlGUzXt
J7hUVlFlvXiTAZBeHrPR8qnMDmgN8v/KEhsWgqmgMByODQJyoI+wsQo3xBG8
yrDSL9DUwbYQqEmVLwgTeC8BIftvZewQU1AAu5jvGiXVFUny2Fv7m+BARhbD
4ZdrPLdnsnAo1p3YcDc0SsfhQ8bUzSsCm2k7rVi2Lo60KM7bReV6RVxZncps
jdGq0Uo0jwmCfmRkmfvwmLrvsF942HDF0d/sqA3EzzHNjathlsS7Vr+pQ6Db
1mwe7DaT+AL6IOVgVN2jZ7M6j41LiBES1R0sm+JGQ/11UQPkbBupj0Elm0hc
46nUcuxZ9m90z6MJTz1Iw3QTUHj0QtjJp3Hj/Hpt7ZgJeEMU2HxcKRPRlKae
gocLF2Vx1tlJrVtaXKdrymxJcHsxNJqVZNtb9E9avgQdnf9CtQAC2d2lbncO
2m6aRLV+5ksqe5d6Kg1X6m0b9NexzC54fdJ1hGYmiNfuNHSvsUwSA0DXaCaL
oLvXXrzQDiiSBRRnfQoY5lJD3ZUJJ/GR9fDbxNrS5kT6bJ2C+dz0RNQJTnYy
k7jNzikhdu4L9ydTy0QWQXVKp3erZQrEnMkvOecIIUv5yOgFK23SfY+22D+T
zm7r/sR5SzGty92lHsmkn9Lt8KOZzao5jXdrTzocOJR33lz+LnUrVWxeiFFn
b76dhi7Z83ep5+dRSffaGdx0jeMXHTbz247k9CVfRqUc/vxqF4IIoYT6WF7R
PdfEIQBxUbJoOuYUyAFphixCkSXNUhRiYdTkzQZjr67sRUmh1ADAyAHsIMCD
BktgbqN80dFA7u31KKnnkdiIFwx8pJnuEZYoyv23AkTRfW/ua5RYkeaFIATJ
KHXuC3nmbC+oQ+mAzLcUG3W3iLr5GzNw2rLNBIXtjt2MSUL5/r03gEjB8xQO
YgQbgIvo7AaPl7ZhIIAYX9xVh7VIX+gmfaHxwH6EOTY1bzFPFUtrBi2wom4D
AeYBU7Ec0WLqKoS2PE8hlrU6wunV/JRZagc4gTb98XNds6Y8s70G+CEL4pl9
4mhV3QsPnjwg/j2ZdxgslAlS5bOsXfxp4H8EF88/tqVal6sQyBQOzqHlZ7zD
qGDa5i36ls32r/J8zAQPp0ygF/ygHK4nI+jOektYFf5UBKFUxWiMhy4U6ikM
v1hQD+KCmE8UeTBPUOIobtkuNHqBMlH9RzsHr5/dqLzdYOIBeB3QCP/oLnXd
VK4P8Dzk9e34nh1NTZ8ymsnuqK295pX0oaIgf30XjQxNxjLr+Fpap1kE1+g+
rGnASdeQ6A50nN0ar4vOE2pu90/tZLS12wtKykHVjoTHOHIRgj5md9SOmR24
DKJbCEptNLMIm5N6MX/Oag528N6EhM980QU+9+ZYdko9icrO24jtrsfZy/oP
3ZuJwUq32IJgycVIaeyRmaQuFMkRYjm1Z/2al4XDxW/2+Zx6rZQYy1jWlyrE
raigOC2oPW1HXE2a05EcCGHf/ToYO3jwjvvWVGPpIASmH2rd09TPjI73l1d6
h1vMstrA8ccTQ3XR7i2oEiY1EkxQKFCz8tWhts+LGwNMMV5HJk81LlDm3Vv7
mnhyfXUfAsrE5e54vMiTGDwTPHxf8NA93DQSspOJhlhDGJ7qGVpR0SPO5JYl
iGssSqaPLFp1F4GxlTgDJ59yecByoJsd1EIvVfGWnmNOfja1ZfhHs+/4rBYj
Dvs6VPHcUOtnyEwAnjgS+3bxpOwf7N0heUVM1Lc4D2un0zbaz4sYHUhRpp44
2WRT2LFw/cdwfv+RBzBY0INASohAdxQVm+jfp2ViZjJwysLuwTt1+G6c1wAp
oB4C9gczmjOLO+nsFrLn8eTTw92bE6EK4wPfF2laoP49cZs3LTC72/ajMm5b
Uidb2gXTvqkiFIu1d9Wfi0v2+OPYUxi5g5WvoEkVPqVMikKtRSMl0KFi9hoZ
KAkukgHIkkXJ0UBpW4gmievMxEwab8b0dGiKiczxbv6m+A16d8ruvPZVap6g
izFeGAjqTUSq+9b9jZamBz7yevDQvZjM/YflBA17/o6iJsCw2ixjmdBNy/mg
/aAR72g6vaP72bnjL/7hwKmntRyNmJV4DHNeJKYQ/Mmv6AuN+JJdQpkjJru1
qEwYgE3PqL/m5LIGPH/nyR53UttkrVZiCJUyaN8wZ2/MW+IW4tt2zahdmjEO
0oLIcyxjXTIuNrTJfczda+9qDVugMpU+4MjbS+SFzsOcrmXk0iQLHeV/ZlyR
bvoF993Li9MCojUvi4gtZNRJYmY5tqCQzC82P9uqpU8qWxOZTFC+nI64gYJu
vybalgljy6/6yq+B4489C8Zumg8WEpdy/zEmu0xGCUJru39d9TsHmuiI7js4
1TukCe6mLpf1wQUnOqM925APPAaOYubOOtIWOv2c2XAqCzE3LZS1V0Ds09tr
mgcSyEBECoIOSFbcGGRmyR6W9lV8oQGIUFQGGkQWtWWV/O1o92YJnGheGA+U
AcIRC7Qwh5ldczV7kdGf9Vi2tKcLT2+rQTqZ4PajD5kdNLIZ1nfAeOB3UtQt
i+tKjRcILgVFgyRf2lXff/j+wN4bZUtg10azO7XMRBqskEj1xk+RV5gkb+9v
Esf+3hvFi3LoHtPBY3xCOpGxJ5+SjvTuQDqhuRDFvEghut882lfs3fwPsvnX
7FPQ0Cze4klxHoYqTBT04eGONSKsVv8HNMhiEy+BnULJ4GFxBR+cSgnSNXMU
xbUvdg53rptWXJcInWYIntzqAUOiLBCkUB6Cyzbh3u0IahAaRX1Y2hLYdzNC
XiStiZBnTKVJSOCK50ZluedV2VQiIQcSeyl+7MZPTcBMtWr2H3/SJL9qUH2t
z2yxmY0oxsISEwwVc/wxCR03ceC6thvt2apVw0gQCgNHNvb2H+8vf4Q2AIkh
AtoTlhj0vAv9R2KM10M0xr9HuozC8m37tkQddKwVj/3gGTqLQUFnZX9T6FSk
eYHISX8pA8Fbj5i8W7ptsG/D30IBWZOtfFn2WXdtuuadVom+aF8ti5ih03A7
rKJRE6ACpKtZZJHUB3ALzNw5938N7P05SkF62jTvZ582qGi6K3N6Gn30bf+O
aNtAmSxhm3XD9M5rs2iCVUKbpx9qYbhl08G+m3nA7BF4WuIzJYD/oAlcb+ct
uq9rJYB/TWmokfO06qYF9br4lRg8S/ftBAmU3CRLtA2zvZv/XiKdIKNErdeq
LIJdjdvWQ5fFWTRwUlaQR2UpRxZkPe/a0LjvftBi+r5NksAkujSFXcpElYym
/WCVzFmmgPocxozS18xaqYzzZMzE08KrujHHNH4pCDCTZtDkuzOBuPBnyiwR
qrjT855MiF2vKxWBRlYshDJZwgwo6jbJrPxMxkzzJs6D1oBPNx9U8hJekXzb
wSQhzHhFMi6asfFc1ZMjsfUqCPiv/GIuaAgWRve66j5kNQMK0mP46BFcEa55
1xsdAwmjcLE35aTvUfFvIyvmHevgRfGcrK1GoAVL71pysku2HrQslrCB7iIs
bkAswpmJUx+MA8Ix5PmOaY+dKysRn9fohkGEFWKfh5H/sq6HQKt5H8YA5JuZ
KwjWCAHx8/9KQjUk3A7MlrjgYuyJY7iVFW1aqnyJ/dvdEv1lVh6PAv9mlrUi
eWTflux5lEDNmxfW728deLyouiOcBFHT1BeK60Da/l0/kdwXwvOvyo45MLbI
xuOSziLRTfNQLjwsMq1pAWaFWeY+bRJBvH/70trQmRdUmiHPZUvpmRfoIJSR
UJmWxeBnI0Cm6wySQPFED9a9hEGadWHJrSFZI9bShZ5l/zfGy7LTso3uZE8E
pI3ciNR/ojtW0HqJwQo+v/10N62lOmYx9HxqW80NnzbIUtqJJ5ASEEEDKXX7
hm7kQZ7zik4lRKvkgqDN4ip/AwWB/AmU3IgmjQVKZeURIcz3dKyIrNRc91Gz
9CVw6M19TVhhkmej9kM5ge7AHeJ4x9w49WywdKo+o4IIwUUfPzkiAfkwA+Vr
YgfUEG1AFKM4TKoN2b6nO5jQcW/tb0ILcAeaIBIlVqRrMw+jO6CeiXup051E
kkZDsPpR+A1OeGKrZ3VlL+XUBGK+7d9l7HQHjWyP7dsl62tS1EaxsMJVlIO4
liDGts89/ijQ3eia/WgWUM17B5v71v01ig/MY55ZAedAxr3N/ZosHSJEGubA
NrIBcOCkBL81zYMOaF7ZyWhCSYEHGEeyeVOCusOMoAQTdqxFrkqUtYRLGQZD
6QQOwX5zjrbLQvP+W9dV9TX2x0NnXzSn/Lx/65I6ft3dFAQ7IYdXnumBvIAT
xHX/sUdR974d3wvXzTTD/b6clG22ocG0sts32iKB7qOafWWf0YY/kw1KDbN2
NUoU2dHOMJwjYQO+kpFoK1NeFhZPdVf5hgP7bkHdlLUPflrefp9ZsL5npeez
092Cu/qKb11cx83t9QFMPLQ/NTLdaDxDgI0jylFmx7tQYGhsXLfe8PqGau9r
exuQxrDK2ipZecQswkCjv+gs7jQNJOB21Do6hS5g/hvf5t3oBTXJ7zHmPESg
3pmH28o7w/B2ZHRc0wUwrOA0Ro1p3hcdq+gbYnYghZZXyNo0PyGj4HaMLwqn
TBQ69FEBgoZSjM1A0DW4MWXyXj67vWZHfQDkOWb2LsEAsiqU8QNYHfF1JDa9
RkTTU0w5zTIk+xOHalUlGYn9HmajhrMC5Jh6IrGNZ3UuErt7K4NFwyTPZ+ld
kh/m7G+RKqrgwHLv7G+iC0hpGA+5BDO7BiOSTZvBQNxvDo2Ftm5y5rsyD1hf
Vo4hlqW8RrOMlxy/ln1rNHNilJA93oFIv9/AewCSEla3C2Eg7GsZeGxLNVps
wXGR2NNEYt/r2/mDMZMPUw9bvyNjraujEoq9UaIS+/pU9kGWUADZ6xLfum7C
crCCTw26vnV/k+M/VImt3yXN2ng6o0X3kv8LcQHrIrEldcPxx9X2l3MVnbTG
arOrEU3DfrOjlnlnq9BNCm6TdFuopWSw0OKdzW6dMngjmb2H6wczmi34iYxe
QP7LYRBl906sOGR8tu4Fg1F1aXvIHW77vNc5QyHH4tab1sVqSUdplzrRwDg9
Apq30B61Zn+1+Vr10p1Nttj8LJ3We6yf7gkpDpUul1xUfek5HbzUZVk634/t
+jFyPBXptmVs+fwCc67RTDpK96a7XOh20KWeO+PStY9nuQVy21yos/nz+vIN
znf1pBxwO5rnkL9UIZdx0eTg5ILunUu9mNPxryOxEbzo8VlH21EfyCXUqEjs
cKXmojHJ5WahXhHmzMpykdgfTEjscoOx992MxJ66XCQ2Jif6DqQNLgW0/3xu
A4BzW50fLV/jF4l94/wGANuiE50H20LAFdS0bPH2DgMJrMR+aGMVOv0lk1oZ
ia2R+SjQGYdaU84oZLwfuSltcyR2zqf9R0doObYDhgNVY2b2H76/3OxSl+1C
4xLBWNLcrxJ7viOxvVuvBp1uNNnwaBgSG6hAF2bKThBRx6+rxN790znl7ahd
nkRWo8qf21GL7MUex8Sg+2ASTYs9avKmAgYgAhZx75r/RAk7GwKtoRHNw3Mb
wGlddbHJ3ae7TpYZGNC95E/A+ZIDcI0HAUirbjeeeT3zpajWj+TBGAFjgwFA
m40mnJLCsVI1NIsxvWNZLYQ92Dbw6t4GX2zMuFNW037EFA8wUsBdy586MTFP
6DWjrzusNQCvtC2Eabbb7LS6bkbzBo83Eak2CVJ2yK4oz9tgbEbTRPd1wTzU
i+UC8d850BRKni9p6TcOk3lA0LbBERhM9zXz/KKTXYyCHnUxZmJyVH+pDJy6
vJaxAwhh0DFA8AxmUZtJ3SNO++q3dBcndNOc0iA3fpIEeh1rNNcK+BZuhzl1
jWZg5HzPiv+X7xJyv7OWd0GDyUSvyDpjrzEc2hLVm+Dtn81pVAe+ykPR6eq2
zchPGADzSkPp7P4XlWOadhXoC/6XPTIJibNVn8BYJh5Jq7OJxE0s32LwPBA9
I0D8ihn8u39ipYFGkqRbIv4BLxQA7mpputCsV//Rh9Ll2OUe46Aw2+i63LRF
erJSjm88ZcJp7DMoLAsjdd7ZpNzuOQUTB0OYm+4ezFS2kLRP5vxqr4J+bPem
7k/MKST/7KErkdiu4suX2DnvFtQXBau48gs8Zh0FtvsTx1jIGkfWkRlaO0LY
0iSw90bkwC2L6vKFZE5sFSRCerhkySmWm5hFOdI1lQ2YrYZKN9LJzJwjsXMw
hluLC7/d+/bPVCYFvX3RnPzSE/MfiL16VVbJ2QvZ9vmccwwzhPXn3skcyWdb
lRP1lCp0QKpedpnJouWkw67uEOeQxS6/pvIQY76aG8s7iCrnrfy2ue6plIs0
nOi+fKSarYhzEambisFlBvuku904p7X5l1uXPdHG/opdkDPFXPbIOZZFq86S
MM6Rjvl0Loixc9Jlj+ZFFxRsfM64qI7Iwa52HmVkZoHjZi4lQ/LvR89NbH/I
D9NyG+PSc2ILiXNYw2WgqX0958mcX92O5wsBayNcCtOOFjjRwF/w4fyTeV3K
XMZYsL3I1wv57bnCa+DUswCYSNMCsIfsvfXte2qbeDASodMjQw0Y2hJ1YDKA
aUDRyybWGnSqGZ+21/vFB2uS0ty7yrOuSjJBRRrngtLBMN7N/yCrWrJ36cP4
wEmwFioe9CI3TVra4OH7xDEbPCKHcx1/PNI4R0uTIA3J97VevJ2S2utY6OxL
6jwEiUnS3b7dtAGYClRDXwAFxyTY+Gd+k/l/zCRFpHfgXuAi6lvnC4jXpvp/
objuzuW1sl+eMmV/9CzaLxnqhuqGuzfzmG/btbINrfJl6X7LUomIqJE1L9/2
b8s6YPsq2RDXf0wSDksXjobrPgJo9R95UPb3HbpHzt9pXgDMS2cial0OZTQz
oa648cnDZrFsDUBREmubpGc/mdWoq64S5StZKXoBToYmOxPhat1BE2leSBeu
+6hZMhqd7KL9x7sjwDbfju/TEbM7+7X0nsfuIu+MKbJOWjGN0nTDO2ZC0Dhm
ecC38zo3E5RuZ8BcivZuFx9y6zIgJcCbvsSDh5/fWcsYyTrazu/rtg67g8Zs
c27QTFC9q/9C82PzPCaGZpfCEAgevEM2CrWtCJ1+DlQpO0qCRyKyMaQz5t1j
jr9pumelh0EJ7LvJ7FL38CS8R3eABNJO/4GZh9tkVa59Jf0drHrd+LFnS5De
/H8ly6O6Hz9SQ2PgjV+b/bOSwrFjjUnIdoLBTZlN0CB8LBdALJBYajxwO+PL
W5g/107rlLzlskfmfSnns9r+Iw/I7jmThM2/53pZCgwcevdAMyMOE3Yv/j/v
WQmTLNZsS1hSjCa2D8aOpItvmE3LecvsUj8jFDa7Xcwu9U7sFIbyZ582lHeG
Z5RhV50vaw9RnRnBLdN21kEiTQw+60h7cqTvuDEJ55iQTiadrET3H9dMg5hv
GFnB0rsZ7nDNe/fI+vgmOGfQ8xYMKfsT21dLmJDJKS1b8mNtsqk26YPmmo0Q
C4Xhw+LAxINKWDr3mFVO3V8PB/5iQb0ekMREC5T8ApMTs4hOMa9l4al3J1yE
xY0RISsR7auxYqA8UwZegjeYFHALxJftwzS+ZQkD9+st1ciNx4uMLz3WpolB
zNr3cln5DVeatGPLIVfaBukvZ9B1F49GlD28qYopEK6bSa/FZixrhf73i5//
FgxnGFUWQWqnS8JzWXpoTcZlP4KsbrcsRfTJZhyTG1xWK04+xSgzKEtPSSoM
piTKCFCKXczAMeshO6RmiLG8Rk2+UFn06dvFY2YizJKc5J53qnzRl3bVM/3h
B13ux2RjILCzmAVf59QwOOeJIlnr2VzjM+ksSsSDEYjFRWKLoW3C2/Ik9v5b
kDz0d0d9QGUsghFDWyzNiuclOeFgJeMlUV5C0i1wuMjng3cK6epmyHKzCSqg
j8NpiT1T4rEbP5XSjj0qx6BUSoZG5KTqI6rLMTFUrbsbH7IC3S2cSwbcm9ag
wLSfKhJbFvtkMSgtsfeLxO7aZCT2tyUlu5n+RmLfQ7N5xl/8QxNIsErX8U0X
JOU7/ZqQ2GX3mp25bZoPSkcWyvj33mDhNBX1H35ATWN6LS/Wz6QEI7HfMace
nNVeGIn9uGTNGqpnhorENtF9P5zZpJKnv/wReEw2Ke/4Lq1Via05uEaGm7pn
TYGrEX0wP8zzxFZROja6DyGv7WHI+FPWp5oXa3CdYMWk/9Ylda4VxpfWUAJ5
q0fGpIxNjVBKZ84xeL537V/JoW9Nwd/sqF1fnZbYyJlgQpIYyzaZwCHaMJY5
9caMoxe5YbZGysqFjV7W55G0ugJib6Yy0KVPklBJM7pma0heQPNipcwSw682
pWMDbOZnf+zchMQ2e0V1O5IkWDaN5/r2M2lLsNqcGnZ7dnSfZku24I3GILFd
AJbOKGUwnn3LxsVhQ2m8ojsNr58tZxU1DkhoerLQmSzuJcm4Llw82hnO9/aj
m1yLJpUHyHWfl14T9BwpsIPGnUT2gicnfnV85uCKHLibdHwOwxnD2e6gsc1L
pQobHa7LIt+osZA+RyaMZe+gsS3MLyGVZ9fYcgrYjOO5O2jEVBnP9Yrk43xr
MLrGwtfF2CeeZAojAVAc5pzHQ2CepoEEs5vJjro0u1mbDHaSffcoO6q715wG
uKlGZDhojXmB0GbmolsFQ2pu2+4twDMBsf6DMw+3wktMEMADDwNOwAy8y8SR
BXSAVvNCsP3yim5ZJT/9nK4dI2fQaCb/z8FPjrShHxHv4eQFdZSlj0wq5Md2
XR/5XhH9B9QU/UuX/aWanUByQYjElixzlM88pZHvHWyG37bU+mg2cxxyTV2u
umltqPJlIB/f09F95ugTHltk8oQgqzVAQuBB8AjPa45o9JFuwEewA40kVqfm
fYCBeHEbZtNloIvB2CKxJRNgrP1uA4wl5mGwUsjVX44YpAuITUAs39Hgkvqv
6nXJW2J2F1Km0SPHhzvW3bK4Ltqz7aXd9QyKQJH6jxFlSHUGDm1FdzReS/IV
R2o0dSr4ge4Y6S1hG7wl0QidGygcWkki7pKbzFb63SAWDdgzWZc9lAPpKJ8h
3tvc/9reRqwwdVCriSHKsXFeOgWKYHtJpCzRfX27f2l2zkJh7YgZ91LN7yFx
ESU3hSqekyBJA8/gUjQU5UAEA623oVlMyMRaye80eIYRoWtCN0PJxSdlNRb5
rIcji3v8RCd2XEXvUN/GvwMeSCC6nJNyFIDqLfpnxnFFRc+DJhkLhh5KU0C4
hEHuuOHTBnMKzHqBl+EqtNJNC+slX1bNe3D4vGMdvWv/UiBi8yKapJADAwdF
L4clefcyp2YdbedTswUCKaEY/QXWPrujpisiC0D+4h8JfG2YJdC0tzhcNx0U
99b+ppHhRvAt0P31kkbQlCzpSv7qveobl6zsO74nKbOaF8JX4F5msdkCcBG9
LNkPat4DzMv8al9NmcJgJm+zSdyxDpAGsESonvUOK5WgA9r2lT0NGmEL8b2b
/h5IvLqyF+UCHvPvuQFEB4te83KHwOn2lfSU0Qf1YV9jWkrOgca5/g+niKMp
6f/p7EZd1+ZhY9S8z1yj8XOPdRiCbLeJu71F3zL7Gh4GVF8/p1HDhNQMpL8Y
iZoY3ES9boRzNKNpPHTqxvmyoi1nCzJBtl1rxuVdSjCJvNZJHFHEo8qiZ/m/
FaBV857mPEFf+2JjNiw/DatisnamO3z1gM7RzFnMY5ngf8wW3bIqsYsKMExQ
YsqcbpZyFIoVUwWdnFd4wQNv7WuSA4niHWpH86cmiaVYjGjGVyS2HLrkh0p6
EAzT7e39TUxJkDPMCc0huJyQdf4LOSbJZJZjgvx8XoNE6mJdet5F2iAhsSZc
F59ul0iZbQhyMm/DbP+uH7nSFbMixx2d4wcbK+QVT2Wr3fyHx0zSWiw+TaOt
6S9kMcgp/+ZF9XJIUNM8jdBG2D6/U6L74AHVCJowENGn1engGgfLbAAzHUml
smIeoC03XfXqZqayGtkeWWsfE4dJzftp5a7Z1806V/eSfx06/Sw6Eb5FuMG3
Nqmj+3rPyj/TvJepzCG/iqvT8CNzxrdtkqbenbhTKA2C6wPMxwzYzmn8bNKf
6q6iuzMbPDMjnlVvyjjMTTrfA6k8xJXKrKNZYrq1ZwrsztHdw+ZAz1TeZRV6
fTCeysZOeg1nb4vWHNQTLc/zf9pTSHKaNJq9OJIPIezV50TCuCVc5ioI1Vxp
UBDXFTyj9lICJL+KnNWEfHiZX69tVY5LueC7BZuU71su4GrO67VbaUHkXLCQ
HBZyv+fQ1rYqf4gv82LB7vxeF8IW7TP9UAtAUfc8ypl9AyfOmj2PzDUQOGbg
stOSg+V4dwRsMyoR+4+B2dZW9enxguHaDyjEpAmdd/+66jf2NXr8UdQ0ggs7
d1u9P1w7nTv8JBC64vkXd9Wtr+4DLfB9Trmcq85jVLTkZBfwCcnPu48Vib/o
l2ZDyv5WiWSghdvrs7YyFSSsnY859LSkS0vssy9R0Yyy1l2NQYgw41Ar6Ffz
40mcw/kvHt5UdbIn8vLues0EZQ5rW/bUVg/GO/hn/nHJh1/S3B88eAfY+1hX
GNiDZQ01ICDCHwkP+pq6vJYOHukcBOMBPMTbv9rD/Y0e78yyVvXEgrjARQCn
F4rrVp/t9W3/9hNFchBAtS8qiaHi59CPkgnK6NNtdX6GZv5xSSN2p+y7kfxR
L+2qjwVK9ZgAcDvPP2HitPXUdTD2cMcazY2GbJ9b3gH4BFYxXmf6JNYFEAUS
HmpZzECbLFLv0RiJLpbTBBaDEgGcr+1tKGnpf3aHhH3ScdQZbwELATOUDDUk
CV7sHKptTBLI15jUjptNCtnVkruv/mMwIS3RRH+UIPaX+LEPg5ARtlgQGgQI
IAfk06/Pz/RU+6PichGH/wOgUIyUHQ0BfpXMQskLqmGBT09vr4GFfjiz6eU9
DdAHAIztLwfH7/qxSTG6Dm0VaZgjwcyyXXS+MPCJJ8DAoBEacOP8BnhMd9A0
9seLG4N96/5G4sZblqJ/4/3HIJSy5afl7dh3PR9PwYLY1zLAWxJdI3tIf8QD
AKqHNlbR7O992KLxD9ZjSctpM/CbETHA+AOoCs8wuEc7Jd4GHWpOJ3xDEup2
bQbZ0jtmAbQdHf8daF8TmUJt6GzMMXHi8VjQRNRAQyAoDGA278hKjaSYOGA2
nhgRDUtAeeBW4IMpzDVj/jR4MyvX0FaDwzUzpwLdlAEPko2wvD12Pn2w9TW/
7ZDNAn3FJk9dr40J8e38gc4sOfdZkhPO0bhWNYHVrZRylnShMxTT7cBisHRt
goxZbgfjZtEMBuJL1Jua6z6T5NwKSeaFFQgamqv3TWJPaaF/7891+tuULykn
14ErHwrroOxUMK78STk+pXzw7KqPHDH1lS9Gn/kYaZyz9FSX4mE+K73DGNQA
JEYZSWX82J+r8435Qo3MOEmW1bn+SMcgvI2wohBYcebhNqa55OkKnZKd0See
lPguSZrdiM01cPxxYK3EE3reBdWDYCVznaTcPMBjcrZm2wrZi1f+K0nIKfFX
azGL9IhSjLhF5uCVHGVdULnne0VyhDn/kGyZzXo7ZWNd46f3S7LuXeZ4oI2M
tTnY5ajZaCDZVpG3S0x+P8S1WR1byqzHltfVn1igjBYCs81JOvMx+tBNg9Vv
gsBNB0vN4aGvYwkivrgv+dya5qGwJLPW+EWmBqJSDjvuWHvzwnoj6ETOyDyK
tphVgxe21MrpV0yl+MBxah8z67/Ma6QlY8HEl6Pqt16NJpJ9apWvmL02smHE
t/O6lWd7oScqwJiuqwL7b5XNEQenwrQws25WmiNZdmt0ayfyBLsPgiCjREOZ
c38gmp5wLb6I7d8xp8HuUAtlqHUpPIN1XNwoCJ/yn99Zu6nG93iR5HZDSb1z
oFny7+34vu5/hHSIU/QOUgs9xUTWSM4Xd9WjPTEqqVr95Khs4AR8yKyXA7KT
kkJKw9p1H0Tfur+W3ZrDjT2f/3+G2bZLhlLZzedHKUCf1ZLHe/jD0hbm8sG2
kBqJKNZPyztgP3Sid8s3GWg0l4hHTOnYuZ/NadTTyu4zge7B0qk1/pisXxt7
+eo32hMmGqTGZEV+vMhz65I6j/F4y0ko4xe7l/xJWpKETitnxnz7abMc9pH0
0k2UHXTWJEuaswtdtqe5/5ntNcB16CY7MaNjPOye86gWAW89YPaaIRh5LC00
Et3q2e7b8J/tjFCrSl9XAMZwX/NSh6a7RHfYJ20GAHXyj2VOTyjvCtNr1+Lw
fzjFuqzdWaaWkV6mmz533tlMLy681DWClAne08a7csmd13rQfMFfc6RoKg9j
63c5LCkPPOdDvi/F2O5j+bL9UrZADva+lEVzhZecFlf1+txjHciKWUfa95vD
5uA06MlgDZx8Cu6Ci4B8mhAe+SOTtPJV+Bn+TwyeYZog7QWYyf7EZcyFdw40
wV1MVXAmrLWnKcgkRV0C/AbMYcpADtgSaY94WWQAKqBF5FXnOiYssxWAh4QE
hzOnNIsjKMIYAp97t/yTeOTqZnx/ejO2AIwtx9CblQV7Bo0dL0nK6kTZaeig
/gSeoXmzj7ZrJihEE/KTHnVEkkgPoBRSQvNRUz7mgGTb6Fiju+nRKXT5wQ1V
pW0hBDho9lTvkCDDkfPQAT7HAEFY0U3k+SJzfsHyim4Eo/iO1lZDUuwOuox4
R0oALAMlv7jXZIICeyNLnzMgvC4Yg+C0n1fk8AWzDRzMzE2oJ0Dx1DOy/tv2
uRwfHzxC1bcsqlMkD4xfV9XHjOZ5kFi0e4ucaheupCjqpS4NA0AVIl0xCsSK
2dOADDT7JT8UR3HTPID96spejWPRfP7GKHiNT4ShwZmSrhzqgR4lzGa4EQJK
XmJAte58RzcZ77eEcFS9pluBZmf260lskr8UuJiMt8d8JVK18e2jbtJ72P0H
ZfN+62eoVHXQoW6m7awLoGXqP2GA0B2YFagYXTQxFW1DWSSGauX8NWAzzdbd
/XIcgBxQMtSyZFQzQbUtlwCY/mM3zpPzzc1u/Q94a3ONj3aqo0yS6piNov7i
H5qFiQ/QCD3L/62o1M4NJjsr0+cNf/GPEHqMLxwFWRD4gX03YZ4E9t6oa8pU
R4/Q6SBhc2rYnP7D9+l5i5h4KBcoDB9KEE5sjC4AWY0fe7ac79lXbEJx9mGZ
AgmwayRneOOn8BLtFN+4r4QBZaKFKqah7gHzcmrqekm9Sy/QRHRNPLr7bg57
3u1e/CfmBIH1MB6i1YRJdMF+RXUSvY86020XO4wxe9NCCbwHVEh+4+CRz051
/2hmk0bpo/29m/4rA6F58n07vierDB2rH9xQbSg5/cefNEFVev38zjrK8e34
rhxHuPYvb11cRxXIAWm8OOFLIBpzh/ZEe4tR0xqvAvbgecnG3LNdDxKFAmg0
KIChjWFljnHfjcx5a38T4Mpb9C1UGDThRVmnXlSHmcx3BkL2Gn9WK73u2oA8
geYgGVD6te+2wl3MUxOycnR5RU/Xgn8FkBiselXOejB7TiXbW8Rz9WvtqD8K
YVqNmEU0OjISFS/owKmnTQbpGTBV34a/1VQAwAw9ruuns+VwHHuqFzZ7ymio
ryO0NT2jCz7pqZoSYm1VvspkTBlbQ+9olhs94PX9g81MB//u62UX55EH5aRR
E7dsF6lvyYTrN5pMmLwFA9jzvMYyaTOtmEVOXjutUxMjqDNW9+xbCTzmOKIz
8dgT/mrXRTaW59zO8WuNmSxJ6XqT6bMt3PJ9xdfxqdgJUawpT+FGOdLO7FXU
t9KttW7z8d9FRsexOr/zfksqk5nT/tMkabZhJhgjHYWu3uMxDX7IDhoH5NgD
rN2uDb0hkeFAJj0pA86Hu3JMv5SkkvNY7Y9d2TM82jXvj613WqtLZZCADnQ6
EaVuozBncuUMgRyu5GSbzIEr+qttLSRC78hpFKa/WnKXyaGXchCI7jdRQ9ue
rGSZU/N8ahvUp62kCyUzhvZA3B1c0Wgj5+0rBY1fbYzmcc06PcqQ0ZYjwYfn
vtDtM6Mm95SLnQSRgoczFDPIoVEzBpuplKGYIaMtc2w8q2G6h9QWa48vd0k0
wcmZlgCt3Y4o3WywvfrwlZ7mbEGpUV3utuqx7FiOHEmC4FL2tj8plSbwT8at
rdud0k3VcUx0KUGUtlpjNHPKqrnZbSeyy/B6WedGKgO0XCKoyyVfJgjNL0wk
8JRZY2gVdbKt2lqsj2VC+jlp5Vy07G5zsM/bBlsSjeV7RZKFhu/rrTwihcC0
qDMUijnwy4coBmkc747Ijv6yX6L7sKcwYGE/LBfVJqgSORO2ZSn4GTWHPsIk
v3lRPfqOPx/ZXHXG7AHE0lc4PVj9hpy+cege/oGiHzbnooJ8UI4Ae5N2W5IE
okkxtykBM0qRG9pqTWUfYhOl/NY+E7KSiY5Lby52tzsVWpB16e/yKvAPhfL2
/iZ0uoa+AOR2NwWbBhJoW6aMhmeDpiSmrmWJnPNY855xxd8N6AKNgFHlPMcS
ye1/tHNwWnEdtqQ5DvJDMCS4i7cAfsWNsueO5wdOPi0ulOZFgEysBmrE3JZo
mdalgBx+AswAG3xbr3msSJIhQDE90QDUBKwCWqD4Fp6QTEGAtDFzroSEUrQu
A5PHAocGTj559dutWAGAAShMv3ge6oFCwY2UwIBOXV4DiAXnAOqe3OoBjQBO
dM8j0JT2a2SgOVFlg8T9lrfzMESI1H+CaQ+qpP2YG4AcjCw50WCkV1OplLUP
mmz8MhzpOBDvXgmq71jLgAKDQch6gsMyk/q1d9W/X3yyC9QBzwwmL+xp6g9C
uroZkD3SOEeiF7okevlBczQPWEiQTP3HYFQ50f7gHaDEB01Yr3/PDR+VtUro
48tXUQvGC6yoR3JAN8BtWYc0bLh785g5RW7YpFDAkCyq9dGM5lBC1scbZtNl
Beew9NVvtZm6dvP6yHCTwNTSqSZSXaKCoZicoRYok3xH8U7aAJaTkW1bIcep
nOqC4CZ+fjvc/qBJ9wo4v3VJnR6PzsTBYu0/9mvZ254MHOkchBvlZN7AIR6T
FCu9O4IH7xSvYOeGx4tkjGBL5uAscyieHOBlYm9A7AB47D6YkC7DMKD9203o
OCUY7rqL0rCqxkw4rp7I4N309xgX8f7jGHpyZvqQICh+pRnonaJaEbBMAT01
TJIArxT0Lo7roToMMRrGNET58rBkxyr/lRyWZ2JdJDY4UApNZPG9eaGcdx9r
laOKT3VpRiyRGwfvVKUWrvvINH51YlAaD0E09D1pju9MmZyiQHdZNxEn2217
mvsxfheabRfMC97VhWbos6HaKxuxjVjojCSxTVIZ1Sl5bBi19pWBA7ebYJhT
H5a2WI8NGIwa55Z3pOXq+EVNd+mKVg1IS58vmZwQNUknaAQSKbC0eURtCKUr
oybEeKFl0Cu/QqeeZS5D51VneyXMo2sTpjrzCIaEmDRG42EQPubQpdLX9krg
KJP0sS1iHMHVWHlPbZUgQN/2bzMQwmxnX4QlMNWhnri7uzZjqnMHCSBoXM6r
kuymHWE5dlm37SAlEIYYR8ajO1U2GkgKoCVyeJAxHkWytSx2u+/qtRyMl/+Y
i1WUqggf347vS4had5HKCokvModOMrMYIyDrAckE5ekaSs491kHzxI9x6tn7
zE4QBCO9QzKY8P6l6ZPRouJwQPGhfeCHdVV9GFmSwTXaDD8znQMHblt6qkvO
ahRf9GLZDF79pjKPpEitehVF+Yv59YNmD7UcOimHE/mhieSe0h00bZ/H/AeY
RKPmcMCHN8npV4hQjcfunD1lRUWP7NM5/ZzZDSRRLt6if2YKU4LEeu2/lQFF
yj20sYq+U4icaa7RiQ1zMJCnLhcrmDGF2TQVHrXk6MR3DjT1rf0rPcgpZcJj
GHfGV7Yh+A/wjGixYx1oJcZ9dWWvHEpS8y41QsNBz1tyfE/ly1jNGX/FEj3l
XFeZxc+flFQkashoRiasURs3ziyjL6kM/BZfXPtKZuh3H+2VgEDffnM0jNBH
Tw1LmDN2EXrcAQpuq5O5LN6k9pVyBs3ACf+e6yUToHFWjJrjXzvnTEGrooWR
4bwCuWLOXNZMMqOZ1Cg8idVvE/jLuGRWyizdYHXZ6m5sH9QryOcRk50glYFh
CNIqX3TWkTagAsJTtxaOOp7wlJOBn3dXnOlB6bgLcGPmnAsRidatmokiHpOj
nNMYG5qkyejkdYFp01VkdjSk8Xms3aa70UtO/cgLM05lYLB+dxFvGiNlUJYb
i2s3xmqBGos+MX+dYPKYs9HSVnGpL3amW/SeyrgIUtlX/oHmbsuznswL8snp
o/t6/ov5oDq/iiu/BozEfuv3kNiSOJHJlSWxt3mQV75teRLb7DqxEhuF60ps
+C1fYsNRcohbvMtKbO0vEnvkwsS+idQfRmJ/z5HY0y8vsR8wzQudzpLYdMFI
7M8KSmwELBJbj5yzElus1HQiqTNIG90LbyU288iV2IoH0hJb2laNnJmQ2Lt+
9Ks8iQ2QUIktuRSSsu7vLfon3jUSuyotsffeALjSA9mR2OohobqUpOkQqK9r
aj3DozTAxlvaCzHSu/avEoOVOul0u5l7ZHlg743gZ+QS477GkdjSgPg5GEnz
4425+bFHeiEsukDP6VOglTIRrVDMnGjwfdsMVI8d+nj/MW0GEltPz4kFyvQx
ldjKBvZEOd3JEjozzayMI7GP6+ECdFkP9ePqnPNH6qTS5Tkktpv5J+Y7kHKm
J2x508KJ83H4V9oWcuWGlnk8s/omBx2OX9zfknWiARJ71DnRwPX15c9Zg0V9
9gQr+xivVPRNrCe6ssVK15ivJL9MeCa/Fm1JzsP23PBUKmsrhJtIIce2tf9y
JHa+sM2qOnvjW86vv6/ELpjgVD1XOcVeocROOQzw31lihyqm9Zc/8ua+prVV
fZKFvnsLbMy4x/uPMiXvlqNjXxC3gMaK9JfriWBAu2e21yyv6AbS8Dwyincx
57FnscVCZ38rsSLNi7C2mMvRnu1PYICHTg2cfPoByQj9lHhUZOPtCQ26kDSe
nrexHzFvJWCp7F5kgtmevKL/8H2rzJndvAsAo5ET3qS8Pfs5XhGXnjninS/T
iut8O74rm5F7tpuIFFnmQBjKjubO9cmkF3F6sC2ky/foJjn1oGUpmkXWVg7d
o9oknW21c4Pkg5VYEdkZ8c7+JrQepMN0ZbJvNWs64HC0g26F/sic8wglKQc5
Rr/kdLbSu8Db0Z5tN8w1h9bJLvUzlb7h8OgFqoBuJRnDkPsfH5bMNoF9N1PI
5hrfYOUrld5hgGjPyn9HR0ysyMtrKvuqfRJjKdvtffvlVMeILEKhF/ikaqS9
HPF88E4agNX55FaPbKEtk2MF7lxWO88cmrPoZBevo62gA+iUsaNeWMK79VvT
D0kvgolzqG/6qEe3b/B45diaPTfoab/vHGje1RiUeOz6j58o8mDeavwJr6Ap
4J9TvUOY56HkhR0NEpwvoezlv3puZ+2tSyRzpqaQhVUgtW/n92nDJo8X1O3b
eZ0/di5Ydp8cx1l8nZ5zdPVr7bAZdg3NbuyPI4HvMgly09luRQv31TMQ5mTe
V/fK4i8dAZdeN6MZ0tFlTMW6YAzzuXflvzNLkyvob3zgJDzJEKDB3z/YjFLo
nPfHOoKDla8G4+dg5tuW1Pl3/xQ+0eXCroX/uwp8ylSYAanpryT87AoPHH9s
5ZkeJp0xvlo03sZf/MNY3+4Zh1pHhhvLOgZ1nUh2bB1/DFvbJEU/gu2fTHSh
7GTnQuNc5g5v+U2AnCa8ZQZBN91jS5eBAakMvLxlcd3dZoGvb+PfyaJw326s
DMESZl5QlImSsnv5T241lkjfxv8i+7mq39K9irD3tc91aWSRHGIbbRa3duYk
o9F0oJ1kQmBENMI8bhbFgBBpYG+O5eX+We8wSEAXGsy2/aWQSGd0OorArDFp
lAjk1Sls82P7YunwdTUcPP7ohL8i453WQsRSM7FYLjzQSzNrJS+7s8AVLPlO
V304lJw4feNLX8wRWV/hQigBgZitclpBzfuyMbzs3hM94p+EGpJRofwRDMNV
5sR2+E0IayJyX9xVx/SMBw8zH8Grz++s65o1RTfUyLw2O4vhKGQLYOABCdaS
4wCAoAlzXpWuOVobDQbjJ00KpxkydXsyckzb6SbSyQfPLn0s9dzH7AMWY8MM
3Uv+RFTDyHnJVeJ5V5xjBtPCujrd6C9SAjmGxDZn0HwYqnge8Q6nYQUAzlPC
qw3pLgye5VMXZKHJVJNP3u5Nhp6neoYAt+5g2fOn5ETmxHm15b/7iEx2nSP6
6x1GYttXaKSakOKnNbltsZLiwaOanz9lsLFu/dYudy/7NzA50s/4K36BKkSi
2ja4PJwyTB4dyzIhbRfcS3PI63eEWE52tb4Nf6ukRp4Pj43DD6hyQL7Lq5qr
1r00bAz1nSrE/G5ut4KDjtLMeQUsaqd2zqUATLFlPp94MoFn6e6YMMIcDOle
urbrNikfIV8eUmoawKzmXdrVWRCi5L+Yg1VSDmLJeatgXaPZ62X5jR8dLQCY
3bpyPnNeKfhuwSblP/ClEm/UWSVMXUIU54/7pcieM7j50Dq/d+6Ll7r/1S7s
awQROI2ZsqKih3kNSMCUhoXQQRiVgCX0vgS8Jf1VvuGlpyQoGlwBMNskEvso
KH36ITmZInjoXln+qHwVdI3woUzNsGSOJ3gvDmrZUQvAA0HpQdvqVk2fQdMw
B9UAUAd9SZxz7w5z4NRq2eXdssTohQdNuPIaXaEeM1ErqUuwjasBXY51xxHQ
i1xdXtFzpHMQNUS/nt9ZixgHOYjPMykOUuSSnFyZOL++ug+MiqUvEXrmFPJ4
4PBjWyTyhy5o5LOJUusw61OfAcXl6Oq2z9GGGW/tUvQC2hBsA+Ck+xQl2u3Y
o4BzfjJH8LRgO8tGJHN2A2gfyQxK4Q51mRMNKjHhEcjLzCbi4OH7NB6bXyVU
8syLerwCsNnEuZk9vz3bJSdPx2rJWzVwAvwDEL3bHAYnSfX7j/Wu+vfaHjlR
ZbhBY7kDJTcZA+d+WuLb+QOeZFixvyRDUfVb7x5o1nPTjGbvg3rYPrrZBxw+
ZpylM0xGWVQ5UF8PgkTZYafobnea6t16dToTVONc1B/WjSyfne19wKyD+3df
b6ywk4oeGf3Avpt0MU5PPTO5m26jYfRl5uHWWKAMmKeLYjAtJGLsdAVW4yQx
GXQL2Gyzfodpw2ii4073DklyJPXg1X3UPJCA1X8+rwEMs77a+9Q2D3AdVS6B
9HJO+kKEPMhE9vX3bhc/2FA904cOyjEHTfN0J/v1cxqDh+6WZb4t/xjY+3N4
KVw3A5Q752g7VJJjrA+1gNhpKtpwe71Q7KYF9TsbJDtZ15AElwJUaPmKMz0a
MT6nvB3w8NreRg25AdswBMwXsKsu3gnXycFwj2lT5fupp307vifLr7t+zMzl
Jm9hGlz9ulgi0AQzuW1wBN0EggKN6/o+5g9/QqXPzInztBnrj3mxprK3NhDj
rd7V/0G39pjN+3dJSi6z8ti7+i+MhbiVgeaV53bU9q3/hsyOkpsGPe8Y5N8D
iuv+ZIqGS4kZtbgOo0MIskpC7jFO9xve3tPUr3hpwYlOBojJftPC+iUnuzD8
QXSYDFBAjBcDb5RKkFSDWBBHwQN3pDL5KukXQ4MxyIjAipqJ125QxepBytE7
NUMAirKaOf47V8hrzhnF9pocQ38KZDLO1QfjcLsuUA6NpQPqrE9Pjyu9vOL7
fS8MMdgJbkEaILUgixxWEq7GkO8IJyXLVv1Mxn1ddR+oD3muQ4nVT0+XnjJe
keOPY2Mio5CuyHwkg5zMHqnZVOMzJvYHGPj8inCQ42IrXwa1aiYoagRzqhNY
U3AwuHAy0xOJLbv5Wj9jVhqJfYQpwARxXWE5ITepPGWXD8Xt62Ny8OJyKmLa
Yt7CGEwKPUIROblN1JMPxqN3mBLwGJQBIr53oJmO6MEWw12bTURrNXhVcqcE
Sk3SgxZZPW9fqXER/z9rbxodV5Xle6a/db8equu9t1ZV91u91nvd1VVd1a9f
V73qmhKSJDPJhGQ0YIzBzGZOSANmMAYDZrCNsbGNRzzgeZ4lWbIky5NsWbYU
mucxFJPmOSLwQK3o3z474urEvSEnCR1LSyt0de+55+yzz3/vfc4eWDgAoObu
k8zPp56QGhwWYoNLIDb9gfMRBAhB5lo2tJOZoC5hxaPBwp/yxjaJqZHUVaFC
1n7Myaptki0Dj0wKzIOYk8yKl98BUjAWoGTo2G2IJ5YzZKQpwIqhKWIzTP+S
Kf01SyVLoW8+iK174Kji4yPNuk0BpGtN6pgJIhOeKWpiDYKBmh9b3GVpIXyS
4R+oEiPl/rWanvHw7w1iAyN8AVXMhpgEuCHx/Tv+2mT/KxyoWyHFsIJ5hlsW
Pb6tgimQeljGLu4+99xA/WpeETxyq/YBsyh07DeJlIUiJbROSn7sn3/aaMLx
shigVjNUxNa8ItCBwcJyS0/LhhJzB69Cc6ySUPYdAK8Ee5pqHSx2mjIe1ztf
POBjFhBPAIJxWzV7BZ9PUQZTFR0Ox+geH6xOJC2ggFMki1UQS2XSfmBttWbH
NeFRO0AS3fvVM77bl9ZDwLXn2yE7IKZnbVpzwdFAkrvc0bCGRzGhzulhVErD
B0fDRczshBUzmDwhVTgaMqrOzW8n6xf7ghN2hPqTJByniFi415R1llRmQJO1
b9C1528dRdTW2OFw571yVJHK6ar/1cTg8ZTrZjx1Gqv3Sw4QU9/KxiUb4tBb
XBDn0m/t/Wcbb53uIV+8uv1kFkoG4z2Vecx1m0tL9z7r7MZn1NJ/2KffTE3c
2qWXE+3Ui8C0t7OEK2STxJwrIcW4fvO7rahMLDHZ5l06RQ7Ojt/j0M0prGwf
TIuXTu69v1zUYCvAw1bSdTOhwWnrq50b4iYw1t7KsPHZ6eQEUFuH4zZfxa09
baf4pnM9nkqzbJ+/xEyeJbPXcclUaD0l6YCybkfhvGl+s/N4wviyugxASaMd
PIE2GzMe184sx011G7tvIymXAHtczv6PMy7I4njz2gxz/1rZPNSlinoA2Cqi
ajCdwyRq1MdTrtFYTECo006nMVWc16lThOOnJHQYiTtT4HQgGYOcbnI6fw6m
+/dKNcBxv3KOQyWNULaJ4/BhPOWr4HRSMcfpg+OPbS8cxuXiEMnhn55735bp
zm+nzq8z+9qU05oJdp5QkwKWB3tygkw9QadLjj+8urtoO46/dzx1mpb2RnPo
6SKIzRj2EOz14gwnnnJ5tdgmMDFxKfdv1EUXuyYynTAmm41OTLp++gxceFcW
Yi5mbRe4ehtN9xXRx+2l4aK/M+/6XdM6TShdmRDPNcU2x8ZMrG5GgJ2sEbsd
m70dblTEcEWvO52cIKDnsDKR2pHzUvt7flBgMPzPtPWj7WAIN/ePf1rQiC0g
yZkHJLsvlibW01DbLswlUxN2W8xUAkUlW10saY0xSfj+/L5ytCMUvKd2+ebl
1NLCcMeBmaYYCsYUxgjaI5a1PjjnWDUXm/rGgXR1Zp6bU4vuKqmWCmfQIIbP
09j751pnbKpSzf9RE9uraSuSbHA1DZ8T6QBi85X92/mXqFjbKzBd0e4ktLxh
Nb3CLmvpH6fnNI6eyZ/itTgSN2F3z84+UonOhjKGdorJjKrDzQxhxVnxZKN7
3CltNn9D5+nw1st+dFr1i0YvlUQQm6qwSdX/+YO8enQzlGStIO/4yKEmaeIR
yVLeXw7Gho/fi4JKa5cDQ0tNtZeB+lVxk75De05/RoK5T+70YbOg0/LS5/aV
Y11iYufUR9B4xTtxh08SWeTey5wyNHpo4r+qULq0Jg7WBP1nOGjstDzcIaVy
vzjVfOtnjRBBc3f3XnwN0sEzoWO/FrdeQPiaRO68n1uH2R4a/RbFno4FD91M
a/urgnJK1XEgnPdAX/k8ukfLrxyqOFAd+t3BijuWiUc3Bviy0y1odKdb+x6V
KHXJtTXUuh21VlLbDVTATnDIE9t9962qgT7YAv3ViySIaaxTK/OaYrirseg7
l06hG4wXK6ZzMMbUmKC/eRLd3y0RuEAEBMRIoYeQkQF2n5kFhVHFd5R3MTsL
TtQjvxDc/i+mME1cxKTi2VDOndC5t3QOWjdr7VeLxVcTS0c8ZEZbF+Q3IMcZ
o+TaPTNroGFN8PDPdfGqGsMX6I+4pw/086mdEmgQKXoCrTIydgVO4J6ODf9z
flMyUQnMD6EgBZxDa/xXmWHZ6eaxq9ehM9TQ3DWmOI7sj0nyya5j9BAjLmmJ
9Jczyw70Pb69QlyjL7S3r/kfeEteY8/rR6tCI0mh+cjmSq60D0T1uKoyNKJH
/NBWz1sVchFtKAl0DCO0bSDqhMIlJGfvrboA0c1YyECKHlQpOsFOilHoh9q9
jsGYZMUxJ4/qxM5vR3w4S1W39530cXoqYYsqvY25dmRBUh+OTog5fui2ftEo
OX02mZzZ8hixTQAbvZ0MrglLFjgIE03XyhLpkjfhUapdQvCP/Wy42AFXYDOe
bOnlu24ps1IAGegguyKyxSHcq9nUd/nkXKynZDbaNfOLKcfCeeNoFdYuqAJc
8Jt1Otbvy6qLJNN+mjQvtMwjWKzcLDvS7XuM4/2dxlekkNvQ2LmOairOwONd
JhXPehad0gEknxBtSc0nkEiXYrYUjv2hXZHznQM9517QXZGnTMUuRInsHg9U
mk37IIYDf0pc6nD96vOSYgLU6r38FvYsZBlq2/26uPeHZMdVMocUaAaS7rPP
rTjbgvkfKZguRmXuVA3fw/aXvH+p4eiaCmXdoUYEgKC7IvCwOZ2fb/ZSLmpv
5eRxp0/8/YzP5EggN+krcuIB+PxLk9xedkXOvSD7e1K/cmrv5bf1vXL6dvgW
SXl97oWRcNF0U5adoUkIgOHt0MIp8WRE/4WY5OL+LZOrPoeoshC57csptsai
bP/gOomYVm43+wmfqRWmOxVTV9eYjZ19sv/TeUgzU8n+j+paYrOc9m//P5N0
ME7dPC5+LBUfzTS+wf6U5i9BweN+JqJr7987TKtVEVN6rF8HctN7LfHUEbDe
Zhxj3k+kkMQs5FC/0dUh2oEqSVrS0Dum7xqIXXUOgm+e22pgIaTZ9REQtvrk
Cw7bKh+z7OTu1osaMplITMRcxMxxdlKFuCY6JyLeXoa/WNgQT1XOcuicsJQQ
+2Y5uL/2HTLOazKMDzdNXIxOQJZjIzDLXgU15ikCnvBoPvoRbPRsDihhXTqS
y+BNquKZim1lhC972Wbsm32b/Rb7SsYaNBMqsbcGzbXvYunKvF4ft+Io7ZYd
w8EhuEupdva97TFmtBG+/2fjxQ4UyMKW3tHuc8hZdABx3TH7V9j7fWVzJV/Z
eJfWVh7ru6TZvdCoJYdSxwGUFuBroHbZ29k1rPRjdREAGRWid/wKCio4g3rA
PYtONiIf0bQHar9Ec0akomCM9ZWhliOvqyMjCItZe6VwJGIdXXe4K+vNY9X7
KoMSH2Fq0KAi9lcvRslBXCKyUVBvfrcVOH1wfTV/gnUoAD/7uEl3zCBdb/QK
v2cfrmS5+ULDml0EvNIQY4agcgQNB9mkWa0A7fLgMCua16mMAOJASAxJTUMH
vL+TXYMyTA9ZcZKAZaAC3Qx9m1eA81DMFHpYj4qrebMlu5Sp5b3lUicCS0Jm
yt41gR55oNmMzZW9JbP7a5ZwcX5uHe1Afx6kJ6dMpB7YCLeILCt/72htuKFn
bKevS4prt++Om3xcGvOIJonoRGeW2vQtW+kY9ATlgGvgHQogSfsrP6bxSP50
ZGuk4GHwU8qgmAxIZgP/hO7D06VXD+np1ebucy8MNKxFGZac1cbzEB27t2wu
ujFSFc7B9sHyggH4rsnfNFAFVR+bAqVxoGYpup/xx/6E+dUCGZJjpOJDybxh
tHSpcj7axuOi5ebXd597HiVBioyYCEGTV2QTppkkyOLZjv38lkrutV/2XnqT
Hj4plbtbMB9Cx36jWZRhM8QWGqP6gaOKwBsYPlrsgEmEEyQ4SGpS/M54N02V
rfKzz8pcj7RIPqWd/9nkFdkNg4H/EE3i+8zJoxS73/V/y7594LjJ7N2oFoek
E6xe3HtpDoIVgpsMYOvoM2o2khp25eK2y36mQNKONaxGWOSYk0cmiKkMHPhn
xDG9laTHnYciJ2fCY/zrveO1KNULTzaiVzDMyOi3/GnOF5b1VXysuVkQf0w9
6pNUpfmmkjdKtfriFx+URCvz0SjCJ6ahRYsqe6H9jqX10Ge3OEl+AHeV+gcH
49egACZnmckJiZgu6RzU4tpaWAqFmQXLKpai5HkP8K5NpZ2sWayGSMEMJcXd
K2tR2lnLsCK9YiAdG/4c0wydH5solHMXZgjk+vWSevEYzHvghf0+NJMPT9Qz
OzC81BU6+xyP0yU9vIYtl5xqQo3JbewOHr4Vsx3WkgPN4fiRWokdwzBEgdSc
JMwdUyBebWefRT3Alg8c+Cl0mGbAQVwN9/ydkojfyGjsfZbq7UvrWaeYe+AV
nCyOrEd/Bf/TK2DBRGJ2YYo2941jvjH1tIwdzdIYqF36wNrqjnX/Fr6lwQfW
VTO/kBFjdqYcdDZCNNYvZtpdK+oWFjaiOfCi3b6AZDkz/OboBj/gg82IsQYa
sGa1XA5vhJFQkscHq+k2UAYZxeHhynWgTL0UYHgp4dq+l7ELYtetZEnCXVyB
Mebm1PIIvA0gc5FXAFbQhIWP8ok+9naWeBHX9YwyL8x+iX8QqnLz3GwxqWDm
vMZuhAJcpGV34BbQCfNze5k/ePQ2IVrN0o5lU9BCZYfqWvIMVx0sJxRC2Zq+
aAt0cd5DzTMaBV1FtdaAFMky3fwNSJXcFek8LDh5cubhmjCaMzipBz3o0vT8
CZOfVmNjmU2GsNHUoGcIkbFvUcXhJd3kBzZnbKo6YpB2zfk2BkjPXzkkSS+L
Wvs+K2xkfc0y/tjQ0KQHX4bCqbsirKnK8MjYYBV9FpeSktl0prZ7dPHJJgQr
QGp2RaRIBPPFXGBKy3ZH/jRmk+sv7vcBmGB+UUsvzLytTHwwkEcwJHPKSuRP
vjB9Ny9oUgEBoyKmJbF/+XsgP4uUe1jC/iVTmNPZR6oO1UgCefgQCMU6SMb4
jIvjOoKM+UUsAphxSSo4dfkZySomAT4X2rWyAGjP4wh0CML9dy6vY+ovdQ0x
y3C7JBE9M+vTAvEZ+DCvnn5ynQ4bfOhg4fi3/xWNwEtIYanGa7wLEIiAubgr
h4vaV/93iwyySUGEkW+xlVhKT+00kUcDVZAFxJZdEeOPDXcxa0ylhDxvqoQC
modWz0BZy/RTHN0rPmaBM00zTLZVNHMQ5r5VNZpt9YO8uuDIt2vPt937VS2W
O92W5PxnWxEotAkOBI/+Uqva9VcvAUBUBtGlledaEUxSD2JQRD8d440Ar4kc
72IxsgpAVAnzr/hIioxI6Yf8gfpVyESsuceNt4kUbNpUBZ1ZPpqnCwbA3uGN
SCXJk5B9B2oPkoL+AxomSn0DpoocfbbvZQrQNyT+aKwTlhtq3WbOtb+W+NPI
GSGXOPxPFTO5ZonU0eg5z4ybbMmSjwvljSEz9bAxnBbY/89SgsR/RBORMRDA
mbfzHVWENQJ4cqd/x19jf0WjAeS+lNKo+YLVZ/a1vjK6jXo3HZIzr+P3mJoa
z0ME5tHUdMjWIDXeQmum2tcZdYCH7FxhyHxBVlaGhtHrGAgyxYiMxfeuqk1W
NCidY0ZdjGkGR6GRmsyTGxkd+gOWI8qMOH1FAxLF1r4XZGCOUAXR67QpxRDW
FOqQaIaX3gLnNQc10BQpekK6LSHDAVZTYO/fc9uYScLPumgwnifOicYP+8DA
kne36xhG1t5KyaeKNIEsgDbrHb2LWabP6j5RHhxi1HHJk7CQSdlbGUBp6Sl5
9dMC2dl7Zk85uNF78XXGxSNSNw21BC1L/KAWwA+sPgUozYoJ/ogqJS4Qxdym
3n3iw3DuhdyGbk1JAXOCeyxnJ5SeVSBZ1GqWdC2Zog5yIujrVkDeWz5pkqCG
osdRb9B50HCQI4hyng0eukXqjOTd37H+3/EdhJeSlKVzEKPFHeJkDovK6gjl
Yz6j/HAD3IiqbxTpSrQLVjTQwRJ+bq+UHcG+4KVSaDvvfuH27nOWd99GeJWR
fl3SzkoBaevBfFFZn2c4yHQ0ChY+6ASAcxsLn+UJaH9xqhkZJIxh6u/IUYJB
bOBCfB6Md58JET2x+rycbfG4RIY2rGWZcJFe8XaATnYDfPMVsXmRJAlp3QHm
i8pa/GJ/1SJ+w9vPmgTg/m3/h0oQAAce4/qq4jbW+Nrz7brjeteKWr7wigNV
Ib68eMAHS0wXN0JF7K7IycdYUJe6BvuiVxWxRW8XdTRXwKFlq9xQtQhhx+Oo
SRAEuAgevFkRW4ofxa+h4Jn6OEtYQdCcPjPvXHQQm9l85WDF3grxuAOpPi2U
FKz0lsnVLAFojyj2jFey2o6C2BWIFUBM60UaxA4pYsP2L5hCKggRxCLv0m1h
bAdT4iQHyE0h9oLG3rGnZWM/mV8aiXBfyo1QUkwPx78u6WD9ghhAE8qG5KDO
vY/7V5xtDR75RQqxF4vqK7hXbCH2MeZX8opEw6iRI+FCNJboaPuRmjCqGqMY
9h/lt6Q3rFvO/BoToEnLHqlTLki77HQLk5hE7AuvCmIbx0s51Mi6nVGAq6J4
5z8knniN60FscZJs34PWarDrbHSsQxBbpMl5k+HQj+yAi3QfXuyU6sVi5/YU
ixtS/jQTW7QF1YIhs0ZQcRFegX3/yNJgpcPeoDQD+eWihjeOVsO6845LocwH
FbG3/xXaKUCByse/5GAieCKCyVC3UqJ6zcmFWPFRiTMV96qzzwpiq+tRV5Y4
oA7XM6EPCmKvMi5kM1l3PMsVhowIZj1inqDuQgqTcfFBeO+er2q1TKepnedT
OdW55T9hb5q891Irk2XLiyScuWYpLZsMh7vhH8T9TR82M9fiulm9BEyD30JZ
v+lY9++QC1BeQ6ehWzLjYt1KRgSQ0ueuPX/LQmD4wqVY3MYxGPZABv1gxN5y
yQ8Pow6Nhk8hvNCUJNJq/Ap2JRYfWMTCYeFrCiamaZ/J88l0my3Kg2VBWVN0
Ep6n83AX2otMzVAM5QEaYtpo9SjMKFjFFNhdzg1c1LKDNIhMBMTQeLEggJGn
d/uYpjlH5XQStVx5ScqH1S4D3pGDPIWSg+ADo1AhdFcEBO78Ygpvh9tRmZhB
hI7uiqAd3buqhs5DupvmN2vFn6H2faiLQx37YFpTBXg3k4KJgdmFloUeDvEL
mnt5Kar7UPtuc/C0W3xiL73JXByri6DuAuZ0ZpdP8ppCgYHY1WeM8TVQuxwt
lxVKZzRL6hZjtIpjc/n75tyqAMDXkFKmW9RyUzcTKrEK5ufV0T5YIQnurn0n
YaRlc3PqpdoCqIJdrLDD47OMXzGyhosoG4wUIJ25RWKRTPrTel4E/2ARYJdV
hUfEZ7Jlixw6FL/EXIx2n4Eygq7AQs1SVDgahHq8USP+YGbAxOyKyG5Gz4Xf
QSvUZtbFjvIuX2h4zKSlRWQLeo+1IyaMbnY/XAQWvW6Svj5hclyLqX7hFdnf
9h9JZkYymC/1j8Y6R3tL4GcYgLHIrkj+Q8m8SZL0Ugq8Ar8CYrorkj9N6xoz
CgAQChRLmut/0gNBzHMGoubPrL3lx2rDYiS27pCzs54LQDekSzrv7fdJLi9M
tvrVEofbvDk4EmctSE00hGbnwblGEUUOml2RWUYM5Us2BpOTSjQTyZ0u56Qo
tGY5zzJJkKrES79xPbxKU1yUsNaNYoshg5SqdJslwPyy7uLGq4oZhK+wGQFq
ZBysm1UXwbThOuxR1NInWwdjV1hWWuVBKmjkSfZ1GBgBxBRrHQ0AAXWRPtMm
1JZE6IWPANoqi+9bXfOyEXwQGRIhMYfi19BLt5jIYrhr9Mp1lHYGJZLX+DNj
fEnPg0PbLvsfMcrD5ktmVyT7t7RsYgeO0yy0osN95fNNttWFnd/8R95uUG4x
XTJO7yvuXlEbQgqcnIncR9FiFaMqwD9fSF79lzC+mvvHNZkYJIUP6XNBcw/A
izREi5M45ZE4SwNqY1xgIapvp0m3foeY8OdekGoa5fN45ElTNYMOf5BXHzjw
U40agB9ghkuBoZFvr9/5pVRRQRXBSkKUI3mBXLUaIPLz+327fAEG29ofbV/7
P8EPkAL+ZIGjv0Hbmz5qChy86TmTV42BoHXA0vSHaWJEtAA6odvD+RCKJSB7
iWefpasMLXj4lh+M2ChOrDJTircEykvB4ubNksxh3B+9+h3SXPfW9BQMGMcs
jasLbv0qJLXxH57GuFhTCHSIiVoLgEvBpsgpsQRbd0qWIfT2Qak/AkFYUAtN
0myeZdGB2GZjdq8k2m3ZOsOksOMiTA4D9F6ag9LC2qfZt7KqMUulEJtsgwRb
B5LHTxm38V0HHF5fEallVvUZEC1B6BfawQ1hV2BntBVuZLAIXHoO8nBFQq1P
PdlX8aHWeWQ1sYJQd31BKZIiVuFw3MS2B1ksALjEgOTcLSmLL721w+SpPt8x
ACUR9OA2a40GkXosXuQUagk94ebs+ggdkI3u+lVacRKJgHn1pEmpbapdV0s5
755iuFq2i7NuNxmbDyJrxvpKmRTsFGH+ktkQnLlgSTKtLBBAUgKj+n1PmXxW
WoCG74JOefdrATgWBaSQk+LW7Shd9Ac2W1LUxBypCzrLVk9daVxOQiX06dz4
SAs0MdU8C1VBhXQskyFT/tvETx2FySEjKxc8QaRi1xj7+tGNpbITDhmZU9mb
MnvyjOWlAz46gKxn3tWRgCu813EqUMchMJAFQvdALd4y3WSoVr0UQsnAC2fI
3p1Q7IKkWUB7FAGxK2YiL2gK9Y8OoCEwdo2gwRqCq+m/KQy9G+TB0mGwD5q1
T9+gKlorUwZCalpLuJ2b71peB//DG3Ap8AiFZake+zUPotsjIsXMN5UrmSMp
h3HhVTGj+sV0wqCjcb6glNLzA1VBMF+NC2g7EshVAYESK3sCnYdnGrcWXgqL
Mk1aVUS25Ytfgqq8EaxjrcEerGvZH5DkMLfLAXHNF5LI2lS1SFbDDBfB3iCz
nhZJhWXjmwp8xaTO4z+Hjt+t1ZdMKfP14L9sQzV+DSWR9TPM1i6Kin/HXwOn
sCWUZAljT93yWntFaJg5wt6Uk+6xdpatf8ffaOQLuqsUvqz8ZCSQrfm0U3Ue
KyC76NjHbpOUFydnYsSJsSwUOI79JXH9HQehs55YaTVMJkh8ZqJhpFvYlJtR
Z/7AgX/BXIIHAGfRuLA0z7/MKtCzwoEPfmJSKb4jGXjk0LZRg+6dAt/Osbg6
28sh+NVkjuKeVNZ9ICKw9+9Zp4lUdTkpPG3idvloYQjvHsiP2hXR3LPRibNp
J+SWK8AOkKLD0ZuxgNR7Af0E0Q8UTF0j+TFMREDyIFhjlvly+9J63VWGM82B
1D1Mk32cascExa4x2ADGsn1KrhU6EvbudLqbuo3YaUfV6cGkzr/s43stWp3Q
AISxDlgiYZ0Rj8/9iQlhKI6bpIusQaQ2Kwt57bijcFvEuFU4n+h4QJoKnrjt
8wa7k/oTMaFS9sTF0p08EyYAwTW5qMqO+4E9UvEMj4bGrl4/2dKraon3mDth
BSCYeWyIjH3bseHPnHtc8s5LYadjdrN2+15vJaAgzVHn2ncQEIvJ9VQi/ZP5
QD/TFxdV7RtcDgOTvc7bkxu8PZaewsh2pnWG6eTVdO53nApcHfC+ztWmPcaM
2ojX28FWSFz5dpxc9/Y9kzXovu7x046n+bxNZH+KWsVA9YuTadDpTNx45Drc
7iKIqw9pi9d6kavDrsVuX4nF0mqpe8muKbhdTOJlZnsU3hElEhM5AG/8YEYa
/oCPsyvucEhL/4TLolYSTKRgxMjfXLPBdS/whYE5Ei6Se4pfQttxFruGcPLT
tee/aveSFQ02SN2TmOVvY+ejkERzV65j2zorUabYSsnoGq/jOTOB2Ha+r3Se
t8HHWmUphr8mQR+Fzb02ZW5+V1y8NHsbIhsL6wmz9yvBd1bLrpQa8CRSBt0V
xHYhZyKViT3hmUobJzWVjf1f6Gln1XBe3f/hFLgFOxpzkiua7ibhsTtQKpzv
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
qam2N1+SXkkiuMJHMLRRiUEn3qVZjx40SSH2VwXpD0zLkuR3XY/q2KuAF+P5
IGl8TJinRPozXsnILYH274XzH1pmkmxI+U6jYzOJgeE4KKQ7FbKp1Xnw04JG
CRcFaeu/WniyUTMGLDZbH5oUDonJiu4yD2ruL1YWMgKFllcfb+gG69ZIWeQ3
4Ar1kTCHv/ezUrgnUvRYKOdOiAP88p0+Y45xM4qE5lRn7YAAaIMDtZKrBx0b
pmL2mQJAnoGAPGCapCvMvY+FLxkAVMeWnIEb0d5Hu4sh4G+X1XERHhhq3xs8
fOss460KdlWGpa6c6NjvtijsA1zcKUXEar/s3PgfgGKsNvAzePQ2xCjTanZX
PoGLDtVIx5Agklno+N2INhFeg2JZaJIlyS1W9DiPsL4wYcBbAI0J1aph9Pau
FbVSATlUIDlDmr9Rzgwe/jkKD3QDprCqkEdglH/HXzOJ0GfqmhoJMy/t5BEg
uiw4hJ7Mv2TvqO8SU69V2rcYKoWNji0KRtsu4BGQlKpJUAYm7C3pWPunUnrb
7BTdvaLWyP19muEcKAbPuUfyiuTUwmxyBh0NYmhoXVH6iY4tAZttfRJtWrNU
tokCOQwfFIqZah1SaO/MLNgJ0WM22U5I1OdI87D/mJhXg7WK/GgOLDQmgvZL
/IPIiISJQaCRn3/aCCsuOFF/n/HZQHazWscHk2dJHRv+HDFEt7UCxfhIC9JZ
MvkYJT9Z8rVfjuRUM0dYOC6mkj7CgAkMEzzyCyyphDn+EJMqmiwozKfWqPEu
jIr9OO8+db6V0iSpAEAb68xG0IQ/s7M/rDOre3S3Pu+H3+BV23bQ2zSDh9NP
oK991b+JWces9tFJ3Iq1mdjEyFRoJnmUkN4x12/vSYQzNGdvxGnBPkdwPkpt
5zq8xBVJyLZoyo2HoP9ill1txq00xRNXLDvLMQRctpVDB/tjGKnYeZA/UY1c
Y09SLDpho+mP7vu5+m9PnBMPYv/YjGeznFdhcNl9E41E02Yk44OJlNeuq317
QpO3WfmfE5kWQnySIye7z7FMJ48uzlFWsWfca+eqce3SFqJWvmUXn2QcuP2n
l7G9nfeWK7IXr0Mlm8Njnkcykk4/o6Ygkf0v+0+XeWsPMJHyYXbm3T51Snbm
WloNGrfelbrf+Z6RAhMD90TQyKSY4mUxE5ThHWA0PYggkZg0giaj7ufaG7GJ
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
tyMX/Fv/omvn/2UT0OaHuJbzsDLZ2orWhI5tte9Sw/hocpiY5BWpRGdmROET
07QbE0NO6dj2/Dpb9Gkzldy5+s7upE03/VMwIV2zjRrJ7tWxk+1Hw+KnJ0cS
pji1FUHjBON8Hx3bNBWKpWuYE3+myKvdc37sRnR0GXXsjCvd1hKdLy4dO5FI
0zadrnoLgSVSuwHeF9kDsa+4yOL6btPKJpRLLXcVjPa++sbdcD3o1W/t9R5P
1/ldj3jJmLEDLqp6V5CLzeyJdrGTl9Tf/yMK3sXX115o31HehaI70pXNn2N9
pchfX3AYMQ0O13aPIoIBitzGbvRM3ohARx84UiO2NgoAagloL1pl00a0gi/P
tKA8iJf1xddeOVS5/kK7xDwG81BT+3zz0VrRcPivOF2fex71prC5F0Eg8e9V
i3g7qDLUsa/38ltmE2aeSeJ6HFGI2uCFYpsCNkG8POOaYiAulHMXUDzUtpue
I2gQOsNdWajNaHcYFAwEbYeOjfVe/OZSJ9iI3gs1eLD38ttoucgp9B/JvVm3
ciRc9OrhSrQ4bH+JBrr8FjC7DC0rbyrEGQkVQAGUIv7bUzJb/B/adkME9Jzu
M7Po0iyTHAC0x4oRKXn57e1lfpOK5IQUHcifZlya19IOb5c8G00bVHGCwtBH
XP46D39a0BDY/09MEIqQWDoNq0cCuahbQKUkYr34GlOAfsUb6QaKKAPETpn2
tSRkoJP0EKsKkdRXPg+JIyeGZ54xgVEvOX6qCjv0/5eLGvrK/z/i3ju67SvL
8yz9sbvTp8/07O6c3emZnp7pnZ2e3e7t3g6zncqhkl12OeeokuWcrZLlIMuW
ZVnJlpWTlZOVc6JEURQlSiRFiRkEcwIRmMAAgCAk0aqD/dx3gR8ffqDcVeXZ
szg4PCDw+73fe/e9+73f+8K9M3E9NH8K90pQ3O7CgYavKVOW5kVcmyWjQfM2
6dmqORKb0Zg8GBGkC9MsJbTugsfG+i5LCLLClxkA9EIsXI4QZJE9LpnmJLxq
2Qw5LiopuWW5UM+ZQmCoDAxQzv70V/q++XMqDFuAnkWCp+Mxn4QDLXlHIpkE
cqkJDtRg296lhc3aBB6NB0Fpt3zcTM07d/2VnGqRaZnLj5koo/S1hEELnJRN
qiPXZW+8mWsKnrhHIDoe1CD88P+ei6+ldveZa5xN4LpHnQ8w84gsc19EOOak
zzQMvW5a031xjKLBtt2wehQK1kQ1JDlCrIMBqZggDe8uTJpDLlCLhQVNDBIn
KQBf0jXwPWy3M8JT6d0Nnki4ksE6LrtlVpNGP4v4TzhXPr0pdRRXUyTQ3bpi
ji5I5s30srK0/dhdMiFmzTVpIfY1csQAc5y26SNmztNFq5ImyWm68k2y5b6j
38YlW3l1+332r8nx0M++0UHg+t5YNlrGx0vR7jINzvfJLAx32dzkzf397O+/
zwtdg0UDqrhdsGuwUUh132VYHA4aCt7vWYRvxQgBsfEQ0SwqICclq+YcMojN
MBtq33eqoVsQu2kjgLDiQouD2IxnfCXJaxPI5d9wzQL8eoPYm0BshjqQkt88
htjhqrkOYq8raUdbbcRGyxxjbR/pyhbsb4DYC4I59+HnoimgK3J4eW/5kO9I
TVeECkeufQseypnH6gWK2B8c8+DCm5BEq6nJqiIQ+80xxA7mTTlUBYuWrFu1
S6g2xm6Jhdgzcmpf2VfhRmyDn9z+4h4TgfnKByC2pKy6/L5GZ8pC7DPgXq4k
UtmAJkpAPBC7frV0ge/Iyost/v3/xGWAsEHs1SnEPis7jgxin6RDe4pexywq
Ygs63QSxTzf2UDdFbC6gUQwJ8/kD6n/Hl/UYXxAbHgtiS1IzkzptDLGvyLnO
McT2LJRMzTZiH7rdJP3ZbRD7iiD2hVeQtkyy1a8BsXH9ZHdNCrE/YnQx6vaY
EMcmtO9y3HDkOdkgNmDVufP/NsJcZhA7r6RjQBE7Jbeqz4cjjQxURWwuA70l
bVDvJRAbbqCIXdTeP9i6UxD73PPYQYPYuTKJUTAJh/qL/EaqhHBwykzgnQXe
7ujbBwWxn9pYjRnlmrmapej048JeCp7jYsYetATEpuYn6rpwM+lfEBuSQxdT
Dn607scWxO6vghdRjkkNVo/AuYaxd9AT5KEt4TjMCougiA0+86/uf6MtlM83
cgKudQcX09cYMl2P1hpOPVJ9y2dNEqC7qJVCygND6DhDnafD2Uo6+qk8Tnde
Uw/9wl2du//mUbPLnfEPfxtq3w9iPydnKJqRAxwD4TPAAOenZXbCAyBIbPP8
Z+hubsQYqSeum8f0zJcGeOHLe5fV0ooLbWHuZezRU1CRtv44bjsX0MVLzzdL
VtnRG8hw/pkGeJ1M2sSuHvN2cYvuNkeDFhY0Ahqq76398ZRXbvYSwFWQzNy8
hsCRn0IsGTyMLmSoaIDLD5KjtqmIOvHrTjJKB0C8Zj98yvbZKx1pJ7S+J8Zo
UdPpeKOMRr3MzkWbjeS/20tZDegqpxRrvsxr6uVfk4PgAoMZFZNdymE5eA7t
BDlBY0NR5ujBZK6kj/hwsr4b+YB19I7kaeop3lQq0ZjRSgqn5LPNfZTMKIW6
vHWwEh2ByWuELvQLY8EwZsRyPd2618hWg/N/VdAEetChr+2XKKMuau3yjGyZ
uLwkF7xjOIAF7NGeSr/kXqyeDy4d9XYJejRtZpwwGA7UBNECNAJokk3OzVsG
W7b1162SM+CNGxj5VcGhrjNPabh1gKhn+JrRpsZpR2sUS8GujaUdBS19aLcE
JtohseYYeNhHbJnOYyMQGGlX3hMUixhROgTFsMTqnW3ulWgkZh57+YWW861h
wdVQAXKmIQDvC7vLUR9wFSjYWeF/aLWHfyGBYBf2wiTJ2sAjcJHoCwHhwpep
ANCn89ioIerw6j5JmkYhqDDASO88vq4a4NJ5bOrMg0zqyf3dhS8xLAEQ39b/
XXY7X4FSSvJHlGLLZdm+yPBA5UO5j7xmUnxOO1KzCffk0lSwDuOo89g4aN0F
kx5eY4LJVwWoD3qxrLCFwSDD4MqHC/IbAVs5XW7SBwCJ1BA5m43f27EC3ecm
QxdBA2gSng4dAd29f0UtY4+WPrul6lxrn0w4b6jG0O8o77zcOfhJjheVpEN1
HlusvyzczMfmdiyaMNCw9r5ltRO3SQp7yWJw/O7JBhUxysgcG0e1hXXXfAld
REM1iRv1R0fg/7QreOI+AKq7YDIdLVtYzRYs/AKIPYMN1nH72zLvDQdgSEhz
wFUJOVgsg224E4THgoA8mt1DQsrnPcm/DEKKEuPYtkeoVFgO8ssm5NolKMjj
68UTETdHttHOQjLAsvhBcaFSjAEBjagcPKccOYZfNr11xb+Q07vYx3PPyxZ6
g1EMObOBv0AaGG2FNgDRfI8nBQcQD2JAonjF+qs1DbeEoeg6NzAyKstJBpTU
Logj0HWeLmOE6L5Kw+f9NFYVMJxOL8Jlbav/INZbygWMFl0LgBMKITcn5SVp
2nCnpp/QU//iAhhaLoGg02Fn5LJ0hN40SI7ll6dwnkiXPbDSY6qXCiygr3Qm
ynbnG5vj2S8XsCQzZ34wAc5PLn5uTxPdrMDf9gV6oAiMUoy1gjDIiWQutIdl
VmRbZbhmIXZwvjG+GEF8bSow5XAVQjYT4EXcvrG0nYFk7KwE7mMMy+Gy+jWg
FkABpEvyvvZ9jLHpxz2TzKoK36OnWFL0Vzdso8VvHJCYltAAfmK0v76/0skh
LhuSraBJrrlElzBt7ybbS9K3nA08+dBMCW26Q5fDwEmsDIQfRtTYOwyM0y64
GWgg8T93VIDMtAVAA+6oJy1tG4iHcu6nUUjv+V0SSlEUzfMV2Au44ejdPqcR
owZWmFQCLwDLqiPRa98iItRcHUbkrFlOYv0VUBeFyl2VfglMMfpriDoAAgsC
+WEyfJB0itdvPCcrYk+nVkKbNn9w3BNcMKG4ox/2Aiw09g1jZAvbwk+sr4aA
ATj7q4NgmrIv8btNFOi2Nf9Kpzd1/wkkStIm9lerM9s+MPL4eveZ68v+wZ8v
rMOgODExKFZOJ43+WmP3KW8HXWWio2aBxCKQabS5or/DnSgRbfd/MUFLo8IJ
E7tP9k8Wv6Xbh4YHPNqn4BVCgCo8urbG6VDNPOj0Jo/m33uXeiUg9vUbuaYh
fNO+/g91K6ZTIALReXLZIu75SqK1dB6vNxu5YwPVGhuEe+/8si4e8+nUQcKc
SrDHUq05LehQAgkXn3O/PRo1KEcy08uWMw66e3awTjZkdhyw1RB7YeY9LoyY
TUcJa848ewybEjowJS5HMmlm4F0zBo6y6MXQj2xcsnfX2y9ZX8uc4oZS2jxz
rAJx95Syq+b2LEraRx6D1myQtL+5mR9tf3A9MWFNm9twkfGINE92PdRVeOIm
s9OuPnI13FVgInMm/PtwbJgbHgrUDnYNSsgERdXnGG45qRdrB2FgOHAnSBSw
g+MGwo+Y84CSQr1uFa6KfPAuN+fT34QpAcKwTUAez0sS9e4pX2WSTKF0r+wt
hyuGq+ZBL+FRgUgCyMJLPeoNzc6tw0+XTOuFL4uHGDqD+ViQ3wBPYBhjO6BY
60184HGh2H6N+71ziyPtgYZ1PA6qj9uLdZAoKOdfwAXA999V4cfNATn5Ff4m
0XSrF2i+YNiOTvUA3ZDDht7YAytq8V7xB391uBp1gOTIPPalqdw+1HmUkk81
dOPYTjUHkw2Zn0eTQZV+74pQ7qM0XMxHlRyXA9zkgNWRn/JQCB6wZs48BmGP
GAKoO6A65XA1ZkUy847eAHaQFbYDFoSQJUVs3hPwXjmMtlV8QORGIYEDt35k
1uthmKGcB2TV+MzT0C3ZjTl6o2Pzf5x5ynvYE6JWwOajZg4cxxabogGyAD2X
9LBxPEjOOZrDoeAz/YurQvOBOG7s3PmXEGaGBEVJOKyTD+I60UCJaL1L4hIg
wNvea8WO8FxsZVPfMCZPwoBguM+/AOJBd3Vhl2pDj2kgeK5Ph7xR/2RaSSEY
EuUp7m9b+ftUGCe9r/xjOpGm3fJJM5Zr0bmmsy19sL5g5Kpw7MaN3KVGhGfh
zeEjUAEMk3NKvX3N/0QFZp+uw3zkNfUEj/7cHni+b/5MP1cEhxImkjM2y4lP
K9NEpx5K41hq/p9+pP4ymzr6ay5GEeQYqXHG9WB4+/p/gxVGjJS5+FyzTlzT
BMaeM4DV1x5MjD5uNqvI+kJ6NVbQ3gRqg2xnI3YytaAsVMG35T9JW0Z/jRvi
XHnPEq9eo8YLMqCzAX2GoPZYsQo7d/9twhwrsFVJr3SuwSj3mwy/DjrF0+uq
Nvo5x5RoJr11oq7bVlhbf4cjjePquH1ZInN5y66bVNgKnJJdiP2N08suk5G0
kNaBa9eVvzkWjWsff8MXTPirgiYULRI4CQsCk1ExBnC05yI9JZGgymZEuwv7
PYvi0RZwBmxJmIy93RckFx53oU1AK+gtsdfq18A/YeAST6lxPWNeVqAa1nEN
96JKePG45EAfZgLHFmyR8Pu+w3h5oISmzO7Kn0inAzL9tUs1UnHSRBxNZLJr
e1Y/21C6esTVs7zx3yVKVeMGjBSgNCu3TuLDt+3GX5ND34O1wCm/4hHjm884
UQsPR8exX+g1Bkv2mZe8gwvJGOaznA2vmImXh4MJEHENvp5EgS6YhNziZpv6
JDMn4DQBHvuUSWfMZ/Ac8/HJSS908eE1HtlJ6F0+5DsiJx/joc5df2Wi4q/E
Sewrn4k7g6dPmXqcR71yvFrqBmmEpQeP/wLTIGnC4gGcoAdXejATeARD7fuB
C5ncM7tKVD53fFmvddADRJKR/NzzemBKAkQMy44+l/QQDgNDkzwmTYJg0EPW
0cwBKy74xWJvT/HbA/VfSxz1ytlPbJBIGlgxjepGmZFgXt9nJsGx8aNNmV7Z
lHjhlV+aHfhOvDgTMKEDq2pHzLA3diIHdRZund0ohVtrav4vJyh4mtZd0hvx
mISW509EJowunEql6BgCXT3k4h/NbdDnYnP591ETdsMZeLG+UmcUGUpcD/Gw
MUR25lsRg/UnZ22ucyjB58G2PbYa/nRBvS5lqihco9ql4B0mdSDjNvsCSYGR
+aWLaVP5bISBUbhgYcTaiGU/XU9quFQpmYVvjqzGpZcuKjsu4XTdNW71XIXY
9XSx63+WxtuFuKqXtKDGBd03I/zZN7q+/D4ce3igRueHwWdNXmnCa1xWjYYY
AD4Yd2B26OrokO8oF/M4IAVKDIwf83bBghj8cE403T+UkD0PZlMHhaARegAH
racQCDM8M6VBJkAZ9E9bhI3QhBHQJ+cgJNdoJLekpcIukdo9ZQ/RxHh+ZdIa
Qm39cQhYg9CeGxpACR7ba8JjgrEjJuXB5ssdtI5Bjq2BKGJ9INg0AeEgDXVL
b/2oRetwuVMoEPzHZD2Y/NhaiXjsxIpBvDC94LG77JpALZwmyDSFOSPfsfGP
lDI5Fuq291t5usPr4tE2EC8pMfwlG+mHJu+DyQvzsWxOMBknobtOY9tW/B4P
wpHhc+DQj+kgJ2E9ryYTy86pEmCi6ePH4NFsyXCpHo752C2RJtchx9C8CXJ6
ZfQGTdbFrzcOVGrMK2e4MjycQaiFgzYSH9LsjnD1VyIdflxf4xpojRxuVyMW
LnMmAexRMWJmOIF6DEE2pxoxy0k2FATMbs9sOucUq8eEk5mq7cK6m+m7vhqt
XviONjqtyC4hmYUPzjUuwpkYz83PppQ24bxZK+y2uADWrsa4GJWtoS5xjfvZ
9Y3rKa4Lxq2eS1zjNnzcCmSPye+ugy0Kl3yyW/Sbv6YfF0a38mLL7kq/TOq2
7QYkwShJodV32ezHnoZj2F+3otUs4/ZVzGKo49sCSssLWxjz3YUvAddcAOK9
aVI5UyDIL4mBzk3G+5YTE+eexyigswB4uHo+fi5k29MVhb1wGR69pjd6cY+k
R8EWgG9PbRQ225X3lArnls8ax4xmekLbab4t/OwhmsxUJf1Vdvcdu3v6Cc9g
2158/CmHqnjuvurAUW/XF/mNlcGhUM4DONRYmVjvJfwO6vPGfonPI5FmD0pY
FXgvita+9l8jw7XFbYASAAWKIgTodCjnfsgbHBskkRVJM1GvxxlGzG5wAP/H
81JkDCJqzMFUOOq9y2qRwzuHZE4Glzl2/Ubb6n8FzFIrUBfvfkF+4xdnGwcS
o3z5rISzrsYyripqnXK4mirxOLoAewET645JKrG7F3vxifCA1l9qf9SEKEk5
LMaawHVFIKO/1sAjD6yo5VddrsKIBKNX29f/oU1XDLTW4UrQ9pCJz8wgeWZL
FY2lqmUBCZr3sy/qNYcOrX7fxOvGxegpmaIPpe0AKa7EiDWPXRWKPGai9VLP
pMWiNcVMTn23f+/fO0Nd+Wp6MKSOPNCbKljNjMM3d35ZpxktE+n5W7BXA6hC
IWTkX3z9oCeoXj9uRTByVR8qdYuHIle/5bkUrnbWebpOdzuDzTeUeCw9xz6S
3njvXO/c5cQKgJDwxEOejK1lOttQYmJWQ8LHBXxnbGNDZRtA8IyNFfo5bGZa
simNoxH0nQvSE1mTBi6csX8KmqbZDx1X9UYsIm3b+uxbxv2Q/TmRSZXtNrqs
mF1zV9tdpnkcQ2DN22eD7bjtyqh/eku/jTPOjS6x/84vfHkJela3QlbhK2Zu
kZNuFWX+waGOA+VmI4GJonZ0w6V2k4lvL6g1fP2GRhPCcz/V0GM49nxAGx8f
eA/lPgJegc995TNQ5Jf3lOO2oyASBvPc82adevVA43qUJdpTHDj0IzRIUs6V
TJEtYaXv6jm+hMll01syxTmfMik9PTLugBzXOH6HxeQu/HQUkyZvK/Ppzjos
zlD7PjyCcM2X0e4LuOEaWPVsc29f+Sehkw/QOuXYksqt6E1QCyfx1uktkdCZ
gYavey9Pwx8Xjn3lA+HY62pAPEm5JUHycUAm8w4evdOpCRDn0M5+77LXDKh6
uqPtG/7tQOM6mbGpX2Pic/pue084NkA01HGwv3Yx1eMvCBA6+ZDs4qtbZTZ0
7ZTnnn8RiEPIgYO3S7TqIdnG07by9xGshoxD4ACycmwVY1f+MykcMJ6FrGaa
oy6ObCnNpXcgG0ZBovcb/50hoXPdVFWnOIILJmDN6VYEKCu8OfeHa75QKB5J
nayp1JPsSbPcP2LiaE3eWdFT9AZVTWZqMQKE9vOT04PZ6iwNyXtCCxcfwRgj
2QOW+6j+ipcxYuZzot2FfACu+2uXSsxG/wkFfHEK0ifUkICOE0ndGw/w6AyO
ZOX3UbEwYl1qnsii2c40lFZYspVZrZAEPWZOe8RMs7jYmgtkUnbThCK3ddnW
hWQWiqYMh8V2xm60Tg/ZKpN9ZWJ0rPBxIdR+rn1ZRiFZXvDNLFT255t943qK
C06z6+Cqp33XuIiRzAQWu3DbmGb3iCMcWz7Z9f/NX+gOXJexiumX9LLXvq0z
LqF2Ii6qLJfEQ0GTxCFh1n34C/2+3DmoGYiu+Afxixt6Y4drZSZkyHdYfjJx
RS53DlQFI7H+Kq6hZEnm23dZIuGHyzTC0pDvCFpPObB6OB7PAiqhH97uqOze
77sc7S05ajLz4gJA+w/WyEYmDAGEE9ILNW1bPEET9QIgwJFutmRcaeALqHsw
5z5Isk51PvJ1TX86M29T37BkEI40wgyP13XRLhN5UuacFbtk4S/SqKSRSpqQ
qlWx/goJS+s7Kn87jyG0tSVSefCTCiOoY94uOBLGiNpSbQBT5pMlguV5OUYR
OAVzPuQJmZWCIpqDyYOL5jf30mqeRUdI2mKeFS6TMxTmxIpZHj2lkpd8u0MN
w0OSu40CeZxuxRSKG5ZoirRidVGrSdh6hdLaBuIm/6mIXbcowGkp7ZvyTknB
PFTfX7/KxGX1SrSueGh7WWdj7zDYLumAm7dS2r6qAIg0x2TFDXsWYhcoDXsq
d+kGjMb1kcBJv2GGegSDb2gXTllBS58RwgEqQz0x8RLZMnQWF2z+mQbqT1sk
3Kg5Hbmrwg/JjIYKMEyMIuQJF5Wdol0FZpviegR1rrUPN3CwddeS883whI9O
1C49L4mTaClWjDrzUN1LDNuck1e/vzqoT+FGMSXRq21m8sTkWb5MyVgZfCLZ
2lo1V1JIMBRlL+uqzeYIuWSaTozKxvKy6etK2vOaeqPdFz/Oqd1YKrHKxb5f
/RbM1x2Ma4rbwp6vIv7juGZYNNi7eJeFLwdz7ocPIzdkQidi7nMbe+h6E5+2
1WOCbGOd6Vk8VlHDgRpZoPcsjARPw6Mkg3Drrlhv6YGaYDzuRz3lhEIg90Rd
F3xgR0UngsV7gvnsqQogBDjGYU8IfYEj9det7Cl+E3Mf9izCT8RHw6XFVHH7
mqJW1NYk+gmGaxYy2pvDw+hjwsSu1CCQ8BOcyu1lPoY6tbrkG9ATzXSZ7JA5
/ThWmPFPL3OZVBhxyR7FOfQ4Y2ZuXgNMbKB5Cx0hG9Tr13DZE+urO76aICEL
dmiapGLJ8ty+b0d5J1qAzUIvqIOQkLY9Ep2+pxjZMqQZG0iD7kBQJsXzKgYn
bJDL4JPwPVlgqpwNUYRzYqx93/wZfK/7wquMHOgQfXGkNoRAfIMjmMvYtW9l
Xte7jAG5vzqAaaYVuMC61wuBv3VAMpJwARpED+pSLxcHj9/dV/4x/vKDKz34
sHLKoOC5hQWNfO7Ke4o6bCrtgA8w6roLX+o689SsU3X3LPVKYIG6Fb1X3mdQ
PbmhWsOT/m4veK+hhR/OzauXgwm1S6gbKkB3M9rxNJVj91V+hqZrQ4YjzYxD
yZzVtPF8a59kXaleAMfW0Hx0Dd9QWm/ZdImZj7Nf+i6ikzj25yabIyTv0NEP
rfZAbsFY4Eh2OxS/rTKnp2gpjjBMkouVidGDbx1MUTKXRXbxiuR3cmzbUZLs
uhurzM6WT0O5jzG06KydFX7JhV01BzDH1dVY+rJmWjHT5tgwW8wE/A2v+dYP
W4AacKOn+C1UBmH2lX1ES+l9b09UFDZy9UJbuOvM07wDR3465p8OeqccSkU9
xWeBb/MIxnzHlv+NHmc8gwz48kDxbdNaQ6ceOtPcK/y/en5f5ecypRO5ypdc
Rt0QmuylLJ3WlT+Rsce/nTv+AtuELWY8t636fQi2nC6pWxE4eGuKY6cpn6St
THO28Mh1ukZ5aYpUx0NAjS3zERO9QTRicAQY4RtxrE4+CFOV3UQhcdU7v5yA
QEAPo0GfBE/co3muUw+SlOulCD+ZnjnnXg1wzWhEL+xONBw7CJhkc2yHusRM
DCiqreW3D4zozg0egb12OLbBoirAk8vQXyPJ2ViH1Ok8OLZmtzRJZ7R8wBAI
7TYxrMaI7miGA86bcevy+rN5Y9zi2DwLzbW5ls7+IdIRE59qXI7tXK8fdAem
Pey/m2OnPKnxgjOPe0p9XI6tJ1NcxSZvzrGTWeRzJHNiwfUhOd5r3LplXzOu
m/AdhNbmyfaD7HtdpSUtwElkOfv/LMe2Sxi3Sr/JC18bpUb1YEEANRbcMI3W
UPSqJAE8/wKGUuic/yRjHl7BxTwRlAOiMYti5io+hZhhtWFrZ5v74CrYMrgE
FvOF3eUDDV9Dnvs9iyC6JqFMLfwKW0lRDDmJwO87JMy8fR9KDaqjSlglWPpA
w1q+BEAw8dTtk5Pe2afrVhW1ugSVyJxcSmaNNJe76ogUAgPuYVjRHYnq37ab
pwNxMGS4BOADpGPWYVbUH7s5WXbcNUI1V1xoWXWxFXK7+BwURbZeaGx/CINv
KIE9gt/KHP75FzXmIaRLIuq37uAubC5yE1LqP2H2433MlR8c88AkYRGgB2AI
Q1h5sRXOw3NlA8P1GzL5X/U5dhP6h5lDsBq59J1DcrAdk4dUDUIuwaeA5GDp
4EKUxnOhQ9hNM+X1KTwfLOIabH24ZgFYimAl36LnK9mu410K49KlB0zS1is+
zChlYponba+knjoDxnP3VQfePVINS0dQCZPQ7dNTXmg2eHi2uRdoosyPc7x4
DVRDWy1WpmoO1BR4p/kI3EyVLJQsD9Xz4G/IUOM7YZphAtwix967zsnG6Zov
NJec5BRo+eb9Y56u/GcwWJKJ2Jw3h2/DmiRDdMUsSAVkEosga9kbq3XGj8GJ
eDENF9vDCFDs9TYJZ8T12Fw5plq3EvMHl4N1wychHtAGiSpz8XXGiZzrF5P3
guyYGvY9vEYidwnxRoC9l7DUEnFofTXl64lOWa0wWvlU+vQ3Q4vKQAWjPRd5
9Pz8BskZYZIIQLblBM3JBxkDL+4p5xs6FJsrGTw9X/VVzuKJwiQlGv/7+EE8
V6L0V3xKCfA9we14UA6hmKAHgcM/HUmHTKHMZBqN+UljlD2ypkazAEjg9+5C
3fL38JoayTohZ/k/pxU4hoh0xASihFONnaAZqH5wlUd2qJoMIKm8NuYEzS0z
m/S5dJl/798jPQedqP9j62pU6TQ2fsIcTqQmJp5kEKsKyZFkmsa31b18ZtuP
nyrxOTb9BypG3UsvS+HWtkbZSuTPcfRd6auqufjLZiPiLR83q+mH+o7BqZk6
09SWNjJnz+GMa44d4HVi4GdD8bhzMt8TsSNXv2UYxK7Lzg2GU0VwSOLjmWMd
KCMd8cjXNWg6PghDhXELhwRsb/2oReMdMQxund3IQEWXdd0EaNK8sQjcf+AW
NBHVlu24e8qDR+8IHLzNbi9+riMlvCoUXEMcODiMO5PMNFJO6CcXhUhmEels
oSUy56l07xYfAAeAZerhVPwiOVQVD/q/nIAvyaAFNAKHfyLvI3f49/2Df8//
k0jvK0tK8MNZ6eEhKCobti+/DyLhNLmejh3UtJWJrHkwu8IzT3pdtnug/mud
20/qgS+JOCFH6u5fXosuA3T4XL5t/0Xzq7ramDAbhkfMnjEJRXL+RcmKcvye
bIbgjCVX6kxni5eLaWdck0lvMHb6JZqOOQYi8LM0Vb2rEPsu86xgLFyeHI/n
OOzOlptdEzsmmHOBbnTJ1sFEaqvbFTtA01j5VtKrdMXc+74ySGM85Logm+O5
OsWt2qOuSe/x92+4mm8HU0p/E0xkjXynvbYK2AXq7LSr8tkFJq05fBu7kiYj
g3OZK1ui3dfZ/Mp+rquPnBKcsCTO9S4NSlowaGucU7LuTEtmvsYB2Kxetmvi
lGkL1q5DtmBvhtjZlfnNX47V0yfC6KBSzqNv/1WbLiqVB+SwQHcstcYNizDk
Z+FRb9dTZs82HEznimPXvnUObfn3/NeESV16uFaGdODIz2AOTjMTaQOtTeDR
w4O1urjvfKlm15aGjefJzJ61cftm48H+1zk6B6OGkq282GL/Gp3xA9pidgvc
gNwGj90lGf0KJukikVMBTJ7dFxRl1vsOPrx6DLGd5rSld8ElrYHnlKYXQ9vs
8vnbFB7WKEDOS2t411d1A7ptuOOgrM2VvG3L1rkSGTo3wm3qe2MhE0HRLsqu
kgvBsiWfzNTrbDyUo9OWayPTFKM3dCbZfm620tk1SWa+svVrXJ21n+syCvaN
2WCYgWBZTMkxBzeryUg69Yatj+O2yHXv+E+0rM93XGxHjXM+jDvUs7vV1cDs
pyStrrevdMkhkTaXdgNt9bTN1ritcPVjtkBc4cqz77Ur5sLtRJoJjDui3N9Y
iP0dV7qa40Ls72jjdzz6N3/hy79htuSZJOBzQFTUWZYn6lfz9/Yp7Samzfq+
ys/wm8JVcyF7Z5p7DWJPxkk81dAtK4BlH007KlFqJYSIZ5Fkzir/BB8TxMbf
hHPiWH2WWxc48tOusxOh6HjTKy60gDa9pRInEEcep2/KITm6DmLrjtzLnYN7
Kv1wM20s//63Rex1Je3QfjnMmPckWNd15ulQ7qOSTc+ziGbia0dm/ACTJIGU
W7bNOlUXPHqn5A44O5Er8ZTxteedaQAtoaxy6KZ560DDWmr7yt5yc/B/+kOr
JZTB/uqAVhWvHOcF59TuVsrRf4va+4d8h7/Ib4QMwMNNyOuPQzkPmKx2OXKu
f0tVrL+S6/FYIfD0xZDvyF2L6l7bLwdOw9XzJJhz8du7K/2MuvWX2l/eKzOr
GETZ41cwSSKiNG/tLZ0m8/blH+vsrooCAu9Ij2+2l/kWnWtKWLwIc6CBZJPp
MKS8GRJQKXVg8e5xk/VxZuWuHP8Lao3jjBfTX7+KVn9+ul5y5FnnSubm1Ts9
whvjeLK+e6Bpo4aOyWaPFOUoY8q0pTNtpRuyJmXl09Fi8fUYk3Y5sm8nIicK
GU543NRwsHlbIpMualH2iDrskSREzsE9e9dHuh/PpObARzN8B+UwySwQS2bp
7M6KsZxo6um7xq39cka4bm6xv8lA7LQRSRoOnEpCYe1AcwocyYpip6/+kVE3
x87k8GOIbe+fyWLs4yJ2LJ2N7p9FbFfw2+Rvj9jqSbkq8P8XYo98P47N4FyQ
3zDQiKbsGGjatOWK74uzjdFQgWxmCBXIMnrz1ubw8OnGnsrg0EWAxeQZ5y6c
d0nO230RuN5UKmEhARwQ+6uCJrQAQgU77auYCY6daepdfL6ZK5/fWYEVANv7
vUu3lfmAKQ27Gg2dBbTxmoG11/ZJRtGl55uXFbYoWL2wqxysA1onbkudwsju
FFt0zri1L3MxDT4sK2yW6jVtWlMkx6V5hDn7ebIiOHShLUzdQM6I/wRYh33Z
Ud5JTcAcWr0gvxHoplEgFaoq04P1X6P+my93yKRo0RsbLrVLBP6CSbJB0QQd
5dezzX0DjRswCk9vln3mG0s7vjzbSPOBUF1y5XHYhaHO4zRfDzZKR3Sdh69S
JoBsdk2cB6ij3fw91DN8bdL2CskCX7dy6uHqdSVtYc9CXS6fvKMiXPOlpBIO
5OY29mCOd1X6PzpRq2GmJAqiOUSPzcU0gOdTDlcdqQ1xCx393A4JFf6MqaRM
pUrAvZd+NLfhyQ1y3hMbIVsLquY8u6WSn7BlvsERia/oXWpi912QpbqozNnO
yq1DGmHPVzQklPsYLZLV25wH8FCoocbe1+hSiBSQ318TlHAHtUsl70/hSwgK
Ge6s6Ow+/6IQhopZ2KynN1WZTf7PU0heU+99y2vRRNn/X/TmN+WdWFITbXWZ
6ZfTCEpscfFbmiMYYVIxegEYZwAYua3i0VwpR7cuvKoBmpAYIyF0+rHX91fQ
oVCIisAQ47Z1yYRH1tRM5kN/HHtHp2PX6Jeijv6XzZHzrrkTGPOPrZVId9w+
PFQnud72/YMYiJGQBhg0+XM3UeGZEvdsmtkBcmlXhR8spWly2KH8Y7wwbFbb
mv/RBHeaPVGCsja/e6R6b1WAfxt6Y3oejaf3Xpnesek/UD3s6dOS0UAC48h0
eqRx0IRPCR7/RdJEOqIC9yzx+vf9I2OML2XPQ8NaCZ/VfVFhPHj8HlSPtsCj
wvHrpb4Beg0dueXTpuCJ+3qvfCCzCmLsmmQidIfEHyjpGJBM67EOPR6riRsS
ZoJaUzZ0mjyeYsTjQXiOKuCAMf28sZUPrPSY8LNt6PXic02aXD6ZTnmJ/xsf
9mkI1l8s8Wrh3p6oanH/yHUHCePmLP+YlUyHC5Cf4A+YKjmY/DdKAyrMXIFe
qbv67W0bLi/SeYQDNS4ndCQ1Hep3XelC7Gwk/z6IzfiETuc29Jxr6dtyuQPw
hOz5hkZAbJzZsCRxPhGIyGIcAx6HOhI4ydMHGteBHhBs2VFmTj5GgnkDDevA
YWAKVqZ7gTRuc1lgkAEGXUTdZFNW1VzQEsWhv0CnrVd8xR39XPxxTi1QPyev
Xgf29OOeTZc73jpYaZZddqKzz26R6Zdsjp0NzjdDbNsxBD/hojSZFg02b0Ff
Ip3HC9vCDFn44fCgt69ylmy0btrs7Y7y6yv7KqDlDGzeaCWqDTJTc5ActORG
2cMWLoePAe+YG9mA5F0OYtNAfsUULi9skUOdBZMkSlLbXjmtXzZDgsJJpvL3
0SBwD0PQU/LOjBO1FIIRLA8MtQ3EFbEpR1Z+W77RPmL4AaGS4qdpI+APmUd6
fCNpXEqnYT2pHs+l+/AgNN93VSgCGOpWZEAP2DlQE+wueE7yhnccxGuAxvMl
MtcY3ZrrBGBnwCN8evaWT+Rw36en6qgkhh5mODzUaM7UL9tR0YmxQ5hoJToo
Xd95jL+y/CFLeyt4YyZ+abK0gN4gNt16oT1M5XEEsCxmaexrEBtRmMVKwXOT
nHpZX+XngBJIhbmkPqBZtOvcj+c2mOAqk2V3E1eenQgwLhVDLGFtKBAMl8Py
Jq28OAXRlkgon24SxDbfY4L5JnTyATqUjkAyAB1yk/zF1Ll+FV4YF1Dne5Z6
g8fuZmRK+IKTD1JVRjIAWKyIXTCp77MJ0Z7ih1Z5+EmyoA4DOJ0dG/8Y6OZx
vZd+xV2aA13juJrU3jt1aRjYxB5JAN6KWbK22LrzvmW1lIlN+eX2SrjolMPV
sCNAHsQGS5ED/h2I3bbi90BIEANzA7nSVDga06OgpS9w8LakCd9BBfj8yNc1
slh54l6D2OvwmlHAVILsnPvXFreV+AbEwo6MRvzHsXp8/9MF9YEDtzJo9dRn
rL8axEbaqECZ7Oltjl3/VmOG/2KxVzUOXsfgQSYpxB72QdSfTK+w9Jgzxbwl
BMqph0HgoavfikGv/IxaqQum3op4GfEQ9pTP9y6rVZVPRdsb9ut8ZgokR29g
PhwyH79+Ywx7jVuE/fIfuEV/jXYXOuCpQQKdSKq/M2KriUlaDsV3I/a4NP43
f0nknIqZaC4jc8qhKgaGroAjBPAndOoh6BA9CwtlbAAj/bVL5IzG+RcZPx/n
eNEURjtDSzfjwY2fMonmsXpoogxdo9oMSPRX/i16kyG3tqSNcsRkH72T8SlB
mcyQ1iNvqCotwvcHqTRwnLIUB3W/g2PbcG17SS7EFr++YR0aDdfF3FBnCc5z
4ZXBtj30Kdakricmg9+7HBQF7hCCRPCo+BQ5oL+0CACU3Wixa7e934ruy5SI
BKDOZUjLKfXzL8A04AzQHhMlD674AgwzZet13j7SDNpozUEqjBqslS993/w5
qAtMwRslrsjoDcAErJPMbliuys/AW8gYDAGyh6rKhsnit6DZKKykXRu+BjHT
vPA8Gkjp3PF/0TS6EtsqQaUKJmmOGB05qTiZI6mQIGh0557/6oQ1o4T7l9fa
IpUrr8vUDRxS/V+JHHXmafM4v26mRWd7SqaAP1xG9X62oB7A130m+vZ0RQEQ
fYQkgpGnl5s0oPfp3sKMePjDnfgy/i8m2P5+hu7omccT92rhkhbK/EoP+rb/
n6mn9Elu6NhANSOWb+hNhqJ4QPVr1NN3ohvxvn1OQ+q5/pOMdt+2P7U11HHS
tWQwHKk6SV1H0jvonNmAdCv8qevNg9AvW22FRkos0LOassHlONsUJZme21Gr
bY/5pJlqyB7qNhDp0UuXBimQZoOD67lJExTFbpeNby7tG7cCNnbZnMr1vUuv
nXuTmZMe9vU2rto/2R1hl+Aq1gUgzr92yS5sscfA+N2UNXPrgqbf7QWbnXa0
BiYMLQENACu0vqYrAtnAoAMIfIkrIWAy4Bls2w3JQU819x9u+CFPCNjBnf+q
oEkiQTWsVY8SCgSMa1RVOcB+diKEXHdbcc22Kz7wnHGCF4k1h+dLEpaNVSg4
EAcYGsSeByUI5aZO5/E5kV5ESEkm7jaL2aw7mWn47JHDQ+EqUFZMiXigJhoh
4FzaOYCHLkuNOfeBovjmsDIJZ2QCpkkU/aI3YYnhmgUSPC3a3L5oAlq/pqgV
Pgax4TKca0AseOwukAQihKoCcZO+qQAnH1tXYyF2EzCulcEuQLlnn67vHb6G
s4/hW1jQiLQj4o0GAUCMHai+q9L/wTEPovvV4WoAE3OGfKi2mjlJ8VP+CYxC
8hLmPSn7SUZvYIDgh3yDeOfnN3Tu/lusp3MSMGmwK43YskkDi/PgKo8z4Qz4
3LvMa4/5EbO6SoE8SKU6eWeFbM2KtUFvGCp8+YQka377g+MerZtv65/KNvtz
k50S1HdOphBbVloZbMHjd9PSpzSr7+gYfhrEzuudPWEMi6wZWkfpNOiTFqXf
UA3IauopJoRRW3/8kEfGjyaJgCEwDLQ0CfU87NPSbvm0KY3YEm21Y+O/txHb
ce21hiD2vSZWqqObDjjbb/WdU4g9KmfzbTX8+Vcy3QRrSpgD+/ZITmbBUcLE
cpGd5PGMy5JZ6+CuYT9iGGw21HTFxqLzOa9xcUl3jI9Yu7ZciG3f6Fxpf+MC
TLue2U+3PyeyqJdLRNlgbg/abJx0Shj7JjP8havtLvwfk6qz/jvqfoSr+7Kb
9ju8tpd1whjpffxZoBKwmp1bF+srre2O4qABFLKPt+fiwoKm5rCExIT6Csc+
NxkdBLgkyn3Bc7jJA/Vfo6R4lMKxy6bnN/euKmpFL4A4vpRDzf4cPSR1vK5r
Q2m7eKmxDpy1gzXBdSVtALWsZsrBnErAhxZRq+d3leOvaRtxBOyhMq40bFG7
DGW2jRts2SF5gRs3oMI4qsAsjAsDJFEHm7fgrxmOvYyf9lYFcDmfMGleMRy0
CJzHcslu88To7W+176n000ZKALGxAkA3PJaax0eFY2seYUwVmPnwmhqnJiAe
V2ptsRQ4Hf11K5GJb8t/mn+mAZ9lW5lP0pqP3mhd9t+B9oWtYaon9Lt2MfZF
EuDmPgoydxe+hIHAP8K1efdINd9P3FYp85/Xb2Ap8FJbV/wP1PnpzVU48oC8
pCozqST10ZpnKmGObyQkk3uVE/FD38+YICS2XphDJa+YWPHiEZvwL08m0lka
BfFmNmGDBpq2SPaBwpfxSU0QsJecYhldj65NzXzqWc6mvmGukblo43fYj0MR
JAOyGQlOn9rKqITcGSoMVBUyTevY/CdalG46Mhx7Lx96S9/FuvWVTR9s3qbD
ic5ytvJqBH61YgbeH7cR24mBr3UAJDUk49gINObGVupkevNnMuW5BF2bf3SL
FF6/cGwTwzYbMZwmyzZjSjCX2TVJmlmI7JGfgdgxnwsxnC9dsGlX3nnZu/hs
SHfZdBtRs4Havt1ul/0g+19XNezrv8OouSrjQgm7bq7muEyDXZQtFlcFkslx
9mRmY352637bl0xQ1K8+09QrU38NPXDjzZc74G+woEAkAZ+EZ6JTuuDIrzsr
/DxOTmFcmgpbPt/aJ5nFapdw2We5dUA636+40IITitcWrporB0M6j/eVz/B2
R82ujCl9lZ9L2pr2/RXBIYCFW/B5JSJr0RuUMPt0HS7/+dbwvDMN/d7lPRdf
47JzkkPcC8i7ZJgczxTaxj2ZhdiOwAeaNmoWlUjwNDaCtuAmlPgGGvuGeSJe
J2p42BPSXFpcjPr3Xnmf1iGTF0wGc0C1PCABozaVdmDjlhU2x/qrQObB1h3h
qjlgLLIF4Y/UhmhO2LMIlIBAIisIuUB0/Wq+AX4FQFLz2MtPN/Y8valqzul6
U7E8KkNHAPXIDUEBvyDMgZrgGpghYItrX/y2TAtLcq6tuj9nWWELqNt75UMM
Dc/Nqe/GCGKY6DJaqnkTus4801c2AxMj+WJMwCs9Ng6Qyrz6ueeBLNAe2q9J
hVxaMCOnFqdpe5lvR7lsDcXXeG1fxTFvl6crSlei1NBdSbJW3olloXp0Iq1G
kmA7b76hZOwCvgmsgCv9QwnaS7U1hnYwelUilsevi5Ny6VdritpoZvDEPSm8
irbQF059aCnd0RKOB0/c+8recmSO8DU+dvDY3bRX1oVD+XQuvBQigTkWgV9+
nwHGlbJYfPE1QB4DrX6crC0e/4UcM/EuozcRmgZ6kpFjpl/8B36YSLFrmaPG
eD0u8bFT+aHA0jsX1tkgyQcsO3WWVcXEKM2ULOEXXtENIRq/kcpLlr0rH0Z7
SxhsqS3NaSquRWm0Qwxx8Pg9eo5YM0roIySGbeiMHjZJA0jQHvN64MW/9+9U
bnhDDgg4AcBTE8Um3YyWOXT1W80krsXe9kGrsTgBu4FJK86V3q77e8dg0Joy
GjNhzkaXUbH1jBwbl+ztK3bYxtQtN98r4kbguC5Bjp28yyZ4drHZlyVvgt4u
bE9morcLkVyVd33zW70kdHzek9OO1sw85ZUDYt6l6NTZlj64NzoI7Zl1qo4P
kl+pu3CwbQ88Tc8DStrWmi+Pmpxr8PAPj3u4WOMITTtSM9RxAMYoRycu/Wqg
cR0OO8oi2awk893dwsMvTQHY+YCGok3hqs9BCZx9tI/6oN3wHwY25mCwdZes
rV+aCmS5CEMyE7FtwdoXJDMtr/5ETTR5imSWPPWQ7NAom07reIpkSAzkoob7
q4NIIxoqQCyBwz+hOeJc5D9716I6VJ5/l19oCRy8/Y0DcoBO8up2HHxmS5WG
InxotQc2Gzr5wNQj1ZgbGiiHcQqe6y2dNuNErULTJLOARWXQo9vnNOCSIAF8
DWBTJp2qF1CZ3ZWSC4znIiX1cQA30EbCMh+7m17Q0NNYHITs3/f3z5qkt6AQ
D+WNEXxsXQ3cGziiT0O5j1DbYM79CJnqyQKQ2cxpcg2Ua3wGiO7bJmcl3WrW
0Z50BqpKD8kk3v+BznjAjUMnH6TwrVd8OAUY6PLAILLC7GI7ekreoXqaKezt
g1VYsYnmgD+W656lsuuGnuVZmg8Cl4Fy6Pr63hjt7RgYwdNBXJNMzF6GmVYA
Y4p4nZGP2bp7sXdnReeP5jbgszACuX7pecnO4N//TzwL48h7/aV27B1DDvMa
kSi+byBDWo3HRwllgUGaieQbeiW+RODIzzCCbx2UjEi7Kv1UW7aHjd7QNabn
dqQm6IYHBMlFRGeeshMk2YcO9C8WJHjiPkgLvKjnwqtInhaBvQC4Zu3B46Bb
6aDSzgF6QaJjGddMg5anHjcoCwrUkOZDNrDvNl7xbumPq5RsuEikJmp8+AJo
7lNpMcb6rjhLZk4EAF1GpFZtA3JwIB73m62SY+Cp4bZSxcbH4bq2Atoq6fo3
mV7yc361c/u6Coxn7jBMZgJ19vXJTLhOJsdS1WfcG3fDpl3zbP/FheGWZRy/
DklrALjq9n0Q24mM5ECZLnxoyWCsxiVLr9J2agQnWJ+JF/3+xlIJ4EmPa2gF
tct6MpR36ORDxrhjQPP4gL8Pgtlwqkse+i9uaVfsmg45hye7jLVtBBPpSSSX
7Xaucd2YtNyWRNq7HPsca3N2/OrtspNt2IenkJRIyxWheROAFFokyVDSp7qM
ZKrsR0NIZMK/Zfvtb7fbfa3v+vQUq10NuzLJdJxn2xLBzSB+Lgnwbl/7ryGc
ePp4H/QjuOE03KYBw5FGp3roe5lJYptdN3vU2ROkLqE5nZW8CYXgVRWM2MUy
eJAJNN4pSjvOtrlO+bYW2IXELaWzB4BTW/ugomskOHe5LrAfmvGs7DOP4y2E
jQkkHrKflX1KNPmddCJpUUpHFNkQ57xsBXHucqDJ/jK7zHFByf7G9aULbezz
jHarbUlmK6lLc7MhMXsgfTfE2ZV0S2C8QZXd6rFxeJMZ5ozRaPWFDRHjijG7
Si4kzwb23+o1+3QdbinEDKoAG4QC3be8Fm4GUYH/dM2d8LRZPZQcKN6lYc9C
wPksbBm3UTJfz4eFSiCp0ndf3lveWzLl89P18MbAoR/DbR75uubh1R5ZUtxU
BXvpvfJB4MCtodzHhtoP5DX19lXO1lTLMAr4hu4SEUg89RDknBbBWqEiThgi
3Gpb8i5lsUXnGuQZiG31Iw4CBJXmw5llO1n+M5geeKweV+mr/Py2aa2aNUbi
YHgWtq38PQhGV95T1PDrYpl4x0jhTePkQuFwK3TxFPLD7TT5ls8kvN70457Y
tW/hezoBjhvidCKe8lqTYDcph1B2yLa0so9Atp6Lr+Y29JgTNPcPD9VF/Cfg
3lQPPoyskDBiQVYrL7a2r/tfIYGTDavsq5zVdVbyqkCcYF88COXFncSVhjxz
GaRR4tle+lVX/kT/gVuc4fT6/lQcAJgVpI7Lugom2YhHmS6ZA57aR3qCZkF+
A7XVX7GwsbCMlgM1wZUXWgabt9FqjZU9I2dsQwVmXUOYJo2bnzCzwXhzcACK
stUqZc6i4rbY2mQriG7B1YP8vIWgmm9eMGuLqYaYCQ1qrrEo1xTJDh8GFcw/
W61wOkbSsxn8ff9YTQa2x0O2Mo6YRNV2hcdVVZfO+ocyPH3GeTI9SzxkcjXa
14+LVwPpld/keNjrumus+7KOsTstciHDuIhtX+myd3a/3Ayxk+Phsws2xxVX
8iavcY2OXWx2K1zycSH2uFYju3Xjm90scf1/gdiayWugcYNEtK6cvacqEK5Z
iNLBiqHTqNtAw9fRnpLNlyVJKz6dhBeOByU035UPYJKXOwfB6oGmLTh0IL9s
puWW+jVF7f1wKpziReeajtSGgIVYX5kE5av8DKPQU/TmfLPcCThwQcSfs66k
TXYJ1q9+eY9MFwCSOK3UCjuy+FzTUPs+9OvTU3VoPZgGEEEpNUu1i/zYAsn+
awsZENP6SH49Aynhys93mEn1gzVBfFWUHYLdV/EpBBtXWlJpm7h5Euvv1MNU
b9rRmmPerifWV+PID7btXny+WfLsXHhloGnz7kpJtgX+gPmzcusG2/cOtu4w
QQIfpckq1X7vMgoB4flX8sLk3G++l802z8mUyLztZb6j3q5I6GzIBHtckN94
rrUPkDFnCY8DdN3nnsdWAj7ATqTzOECtx3MwIgj8k5Ne+pSu6TrzND+9tq9C
DpXkPzPlcLVE+Dl6B1YVwYZOPfKcZOpchigoWapdOg3P/WxLn2w+qZj1grFE
2AU6XTc/89xHzVERCeI0JHs4kQzdxIBhSAxHmnU790DzlnDV3BUXWihzxola
QP7eZV4JsnThFd5aAsJnBOKh86uSBP7tKXpddy/zq2wXL/uo98qHtEITKNNN
E7dWynboc89Tq8Dhn9AdyB8WQfMHmjbJ0afAKbqApk3aXoHRPFwrAaPaTCBW
9aRku7V3OR0X8Z/Efkmq8WM/x5YxjLEyPF0zp2NrECzfd2z64wdXeSTLWPu+
4LG7MMq0qK/8k1MN3brnRCaiG9fDARjYXacfpwvEAJW+K2nfTTz5zp1/+ZxJ
9U5v8v2ywmauhLowWhjPSBhxUSC6Nti89dYPWx5eIzttGKKMSW5cer6Zu4o7
+rm+u2BSuHoBYgkeu/uVveVbr/jM1tNZvzpcjYtKd8gB5PJPqGRdT4yWYqc6
Nv2HH82VTbYyJbXRpLM/9zyjd39NkGuoPJp1VCY/56HmjJNvzApFx+Y/8e//
ISW8c6jKBHDbIROb5ybLIAye6djw7x5YKXtc4S3QNnqHIYcK8wHBIqUS3wBP
nH6illvisY4YI7bgOV2Bpcy21f8SvVtT3CZpQMs/QdQMlaKO/sG2XRijWz5t
kn1ZF17tGBzRc0nrSmSoyFJO+17ICYUPjIyasFQLqXzCBA/BhXx2S6UDC9Qf
T5neQZjUZLaEtX9Djk5cFUPcueMvcuq7ey+/5+2Oxq/fAE8UWzSLnPh0oxLc
WCiB2bkduzZmSR0v2+Ta+LtLvoGk8YV7h69RuBNvSpcAXPjsQvXf9vXGgUpw
ddXFVjAZjj3YtgfghYfkN/eCP115T9K5fFhb3EZzAAqGEw2hmRNN9DO+oRcY
nIx/VEPiqp15+sPjHnOMcTcaBJjsqvDTZdGe4ic3VMvGs4JJJpnvUuHn66r7
axejX2Z39FPAF6y7p2SKxMOvWzHQuDF08iFwG7HI2YrqeQ7fS2ZZQBcsZztB
Scs+8u4rmz7ZbGBGxyU7Q+1i2bHWsr2gpW+ofT8YApdGFxiQdCij4gmTuZUx
Br7REImrVvHpUMeBjo3/Hku3s8Ivsea6L/IT+oJyBY/LhJIkE6+ef8gj27+B
3PtX1PIshg0mAGr6RX4jeof8QfLHZUfcWyjyQ6tkRQAZys7DjgNQa0YdI9Oo
yWmcAhRtpzkoh/ZRGZQLvUb35aCl7Hh/Q+LvSQbkufQpHUfNzSrb51QDP4KL
6RfGMNqHGlIfKjn/TAO3n27skQp7FvLGXtB2ug+0CeU+IquHnkV6yp6uDxy5
g9pK9vboVcwNWEF/6RwsA973zZ9BiVExHoo/IiFZit+kPh2b/yO4ihVDidBT
OcbStPnVfRXVoQiioOvR9Df2i9egEYD5leoBShggSXMjx2o+Y3zKwmi4jMrg
RwCkyHxnRefjJtIvI4fCcVIYfgwesX1V87C80GYGsJxLat8PUaQfAU98SZpM
pwBfj6ypkWMsLTvoGg3DK2umxW8dr+sCgn72Rb1//z8CyDxXoijnP8NQRHfw
gFLb79dXQ2a4C5kDm+ZUeCe3x+NyqBBJ3rmwTtJ5eJdpCuDe0qmoTCSQu76k
HceEK3kuulYRHNpyuaNnzoTAodvxtmhLrB+G8wamXKPtcT0NR+OQCVYv2lWA
iaQLph6u7iubgQRMrHtfTVdE8zLoPAb1b13+35t4v3foaUoKkQDvUVlGkW1R
qKE/B4Hg1p2o64Jg8D11fnClnAkCuChW8hevq6ZKC882XmwPw+tawnHNHxc8
fjeuAWhc0tEPIKBTSqhEDmajVCK971E/wNZun9MILeT2pzZWU3kkoPkx9XSM
pytKu0419EjhJ1KBy4DrpNnBqKdskmbi3YT9KXf0PWrFLoBrAWU8InDoR3JX
PHihPezAhc70OscnHejI5t4u593lNcT6q+3bbXR1+fs3u+y3eoWiV1ErSAjC
xOiDBjj4EsnHTBvCXlAoEBuFku1PHYdATjGRRW/IGbETtUAKqI46hGu+gGzD
uAAf9TRru6NPmoVF+DNDBQx/bJ3k6bbb+8ia1P5kyQZ46hHUXJY2nM3AsY5U
Kih7qnD0hms7bjZiJzO9JBvkHTdN8sIUTNIET2goCEzd1AvuM6mXwJa1JXKE
FjxhhIN1DDxY1kQDFLp7lqJSGWbTJ1BoI+RQjokd+nGqttoWSUd7+sdzG+yK
ORP+tCie3hJ211d1zo16GYwLLdNqM2hNfoRzfIZ7ABH0CJQD8ye7Qczhjnis
HafbGX5cFjVRO7hFTtCcnQjEyfZjI0bdYetIBl0IRq7a3orkjrTmn/X7mBUM
LRy/HjTpw5yXb+EEbQLmb3igRnf3YZvMKZvUCl2sv8Lln1LO8KAXj8zcm9Fl
0l9mY4bL/o6YgCRaWxMRdOwWPsD9oj0XnVFhN0rzVsj5R5MdbCR9sMVpsn3X
cKQJOufEprDrphf0mW0t9jcurzlhJlhSQzEz9ojeRS/YlQRI9fz4uEPaaYiz
muA8znbMbfFK/aPpbR7WuZukNWVkv5w629v5tO1jT7cWW+PjxQx0yklYUyJO
VcNmBS2ZBWsj6WULR4CulUdbDvaYzJ67EGtl1EothftBFoykkMRgi11z1xNt
4Yz9m1551C00dpNtjLIb+H0QG7tsnPF1EkK58rNdlX6w18yKnMbJlXQMLduw
sOsvteMuwfckLEM8qFt/oRPR7gtQRAnr1LzF7IiYgxONZ3SxvR8+8+Ke8s9P
10PkuDjaewnrDIMCZAD8hQWNspf7/Iuf5dYd9oQWnZOcgJLipHQa/tFA/Zr+
2kWzT9dDq/rrVx2oCX56qg4ChtfcsfGP71teC0fq3P03ECQ9uIGyJ62QAo5U
YZ725m0dtPoTFAVqhC8JFeTRmCTI6qbLHdh90A9eTSVhAlApzDQt1Vzq0CoA
GUMG151iXEUYAqQaRgdlKgsMUhQ8WZIL5D3Ze2kqBgu7hh3EGmL7AE+MFxwS
p6a/bmVf5eeUplP9wZz7tOFcgF2AkW4r85mzqGcwgqAxPBkARETgDJ47CDPR
rD6YI5Cf7KsOQBp1kwkl0KeGpW/DQ8HnlWPRl6bSHDnbUvIOdwUO3oZxoSjd
MKPnKCOBk1TbLCuIuyEwW/4xForq8SVNgJ+Lq17wHPZrskTtnjMcERsNGn9V
0IQdgRVLdhLZCSkMmWrzaP2X0QXT46Gy5eb8C4GDt1NJBCthK3pL8Llg/r1l
0/kXQo6H8uaBSroDNtt75X3cGSoD35aZN5NmAs5JZaiVf98/QtfxDfE4npbN
k0spHPZI1zwiSS2fgY5KiJvKzzErg607dUfi6/sl/4iJXn6ic9dfMzIDh3/M
YGNY4drI1I3MiiyghnrAyrftvzy02jPJnOuXnB1bKxmQCIcB9tbBSrMp6MFV
Ra3mTP0KysEs4pJIOJGSd2DCjKX29X/Iv0gpmHM/XiQ1X3mx9UJbWE7xD1+j
92VTaM0CE0p91y2fSpRjJGzO4e5GjDDw3svvlweG5Prit3C4JKLXsbuQPI2S
uNyVs2FKyFA2RlbNgUTRcWg3gxZiTP0R/rNbKh9e7UGM6JH6ZRJEPSzrRyig
zLnVrcRFwufdZTbx+r75c4mPXfS6nK3rOIBwqKfZ/bUB9bh7sdecYX8dTBC/
QwJ6L5K0OxdeYZQ+brJdTzZDmkrS3bJhaZfkhAI/EUXHpj82TtYm47DMR9R0
TWPf8D4T+71t9R8wYrmMHoZQ4WfxK65ca3+cLqBwZILC0iIABGWBh8txv/JP
ELXkAcl7Evz8xRJv546/YLyJMHdUbLni4yl1PZItC+8A9kKHvrKvAoZ/yBNE
jB0b/0iwZUdFW38cVWLkQF8LW8PBYz8v6uhHC94/JkcVZHqn8GXlVDSWgUGx
CZOLFr3QbDWBSAJ0op44ninzcf2Gky/7+yA246330pTVRa1br/jeE+TZQ2/W
mz1O5YFBuOIXZxt5kEDEgAc0O1gj9o4aIj2NkqRB41dJpqodgKregrPGwAvX
fAn+D7Xv7S19F3Koe9vw2WXvcZ3gsAmnv1CCWniX0+Poo0xeFb+9rLCFaoSr
F9BZCwtkHps+ZQCg/nd8Wd+566/ol3uX1eLHDV0dNSHjWh3EdngOf/WUsQPj
yp0UvRnM6CkDDGBBrdBfBrzGsJJZkXAZlTzoCYKosd5SmV42uCRpaEqngtJm
VmSmzGoe/bmZ//fPzZMMR5rqhYGqGxd5U21poGdR7+VpjP9nzKwIxHjJ+Wa0
qQ+MuvwemKBYilMP8oA5MjfeugM1KWwLPyYq/7pkawqewYoht42lcgJdzptc
eIURix1E2mgxg5/RIpuuS6YwjBmia4vbGK7zz0gI/UOeELU1qV4mM8xARfnG
LCIvyG9kJJxp6mVY0oO0YnuZD/kgE4mub6IN0Efc++xWASiJZFj05vTjHhSc
W2Rrd/2qovb+DZfaoehUANPGZ2RF9WQeYHf5a/srOjb8kcZUp+QHVtSi+8Aj
ylgRHKICICFqyBu9BgFM1MRvgBd8t/cMDggmVM+blVvHQFITj8Litj9ptvAB
X9QTu4a9O1HfTScGDt0u8CWxcXKwX5DqHQBy604GA83hSp4FmKOkFC6zIpur
GP/gAJWkjRKh5dJULmAQMtgCh3/Sc+FVcSoLJiFABsCUw1WRgGzmpz7ABUQF
kISK0MUUBVdBRKA3LUX4jFv+5Rr61wzyt0xor3PoHaOX9oJIc/Pqa7oieyr9
bav/JSiBIoAeGjiCar8qQ/ES19PdWGcIA+aPz9yoQVEkG9GZpxEjjaX3JV7N
pald+c+C0tTft/U/I0BGoISL8SwyW83zQKqG3hi3o4+MLqjXcKTZpGaTc0ZI
RqORoCaMOsYYlcfYYT6qQhGxYqs8CqqwAqyYJImo/AxzPzu3LpTzAAaRoU6Z
8CLftv8DxBbLeORnuFqMUuCUkuFLCE1ipl2aivaha5JRJR748TzZe8ntPFTI
T+k0WWgzi0p0AY/Tb2Qe2/MVyuLf/0OIAbc8t6MCd4yn4xNhce5ZKpuWGfZY
KNkBWzIFJR3qOBTrr/bv/TvZfgyXMNOb9Psts5o6d/4lvYy/RseBXbK4EzzD
GAPQJG1E5WfiDg/7kZg6ZUJ+MGol78AM25ZMoHVgHTIxewZyqGe0u1DjaMXj
frov+b1XHoeH6hEvhWMyZB+y/yRK0YGnbDwRs9d6JoiNoRxMjJ5s6EYNR0zq
UvRX57EZIaC3rMpVfNo7fO0ZY+J1ooO+QCkYcnzAKNPdGlzCIboaXixhzqnJ
cpXsZBiLPg0aI43UxaPpjQHRFs0ApUfPbDcwkTnRNJI1m217K5rfXI7CxUP0
joRiu/iaOn1aMigK2aZPL7aHUd6H10imbz1OqKsnJWa54acL6rVkDWdBKwCr
rrynILEj6bMGxuESwn/7lHY7I4Pj+eohAv3Jv/+fzCxQ0GkUbAQQ0HKwm7Fr
317xD/ITCivkqvxjRiOk/Z1DVVqx+LBPQ8ZpSwNfTMC+03d8vn0OwPiY2WDs
05g5zqxCWrytWCv7G02f7fK7dT9DymmNdeiJQqcjpNdkiAbBBOSMasM5JRZN
/BoPTTVk0GuPBC2nK3pVAsZaya2cCZnYQHW2Ozxips7UKLeZDZBJy+tECJpC
PWm556lmDndKjLvWXSa0aXvCCsg5ks7b5QwVif8Wa3fmB5zvnTpgtpw9SyMj
YwkOUuTK9DIiGnPVrcqoGsIt7SeiR06ck2TmPEPS8rLHRlfcPbztt1CaWLtG
iIpcHetuBwTs5thfyixWOuODfhlPx4hImI2seq4/NZ/gOvOYnuXTopw4vc6V
mpXD1TXO03VEufrOATpnCtH5MmbO/rsmJWiyPsWe8nIKGbSiDaTAMNLcPzLq
ulIVKpk5e2PXOZIeGN2xa6pNY+KywuPYzfk+HBvnEb53sb2fsQ3Thl1jsxCX
tydKYzWHIzYL7kEDZUHHhC+WRfALrw40rMOt00kVTD8UlL+SWr1mQbTr/BZc
2rO/BPCP1MrKC9ZTVo7KpuN5QQCgcwnZsP0gtoC73jGb4vrKJbG7AKmZeJFt
D1tTK78a8HkkPWOmmJbMdDFskSas6alkJmJrObQIdxvDGuu7AhvRmIHY01hY
eBc4Az3D8mI9L3cOwJ+l8hWfytHm8k9gC2uKWmUDzPUb9y+vxXZLqMyKWdGe
i0LFK2fDKzB2w5Em8c6iLXQcPr5sSDh+txMXBVjAu9HK4Ixg2uTk/nBn4Mgd
mLzBlu2SAkDPqe3/J6S6tqSNbpp5ystPMCK+p3AxqZWzTfjWdog0Xh6GEjso
Vj4iYa7re2L4oZC3rvyJ+Ecwf/G1C19WCEqaGERaH7iHwPuRO7C5qYBmozfA
Q9hjInM6zh9JyEz4UINKVaJRFb+tYUZ0FQa+CqmO+E/QZAyKhmQRuh69qoGa
JTD4+z/Q58b6LqsBdSZMktZ6kMy3x9ojgZMUYuuaUx9MzID59yfzU3k08Er0
MigTJEf73dMVNTjQihHhLhPCfSZGBO6qDhrqBrPSG+82keh4NKOUf6G79iZS
PThj2YVGzQ5mVanFGXuJ9IZ254QIEgDh91QFbDXEbeRKXG/HNiVu7jtT4aHE
qCastAd50mSwcqTkAM6ItQlWDsJn3eU03HnZ5jJhEUJdT3SusQ+P2Gpow50j
h6QFdElr+nfcZsatYzuuOiQt7bY/2E8ca7sVNCy7jW4zAU8YdZfsVNW+3u5u
lx2xWzQuRH8fuOYlJ8EvvArCgE6Axq5KP1oT7b5ooqEW42i8tq8iEjqDi+fp
jsKoJfbFcCcAgkMq6bD9OfitIDCfcSQpx6zyfwBd50tGsgRSrp4P3B30BCUm
84VX4KsQWnxb3+AIFy8934x2y+6gLRL9GJcThxGsALfx3PEWVVD4R6khJ0tm
Qi3sZRdbFNmm0CU6fc/Pbwgeuxso3lbmgxjzgfrjbNJw3fYQOvkQDgVf4rqG
qz6XwMLFbwqkXHhFZlbNBC80o//TH6wtbqPm1H+gcYNsI6meh0zAH3gFyMA1
GgmQn9rX/xuHfWET9Vg0lZl6WISG7+kfSty5sE5TEC453wwa4Gjc8nEzjgwU
HRdS5h/qVspPAzWK2C+bqIMIHE+n+9zzoehVIJemSZDJoQSw+cNZTSAnLPfj
nFrfN3+GJcIFAAY1I4AT8k72OI3eoEA8O+cAixzMyX/WoVUqRl20lbNCZj82
MtEAyNyuu6E6NvwRnU4X44QC1PevkICHWBMQW0jIqByRxqHWAlsMN8Zudp15
pivvCVqatGJgSh6x69+W+QeddHJGg4JjBDLappGXaHLaBFzR3g8evfOJdOxH
XbiMR5vPt/ZxGdaZN9aBLlM6h0A0YV9CXL979C6J3REPIjHhb2nnCE/BVjqA
3YlDkpKPFQZw7EsT9VRhQW2WDQtaT0lnPxIKRBLOMfBsFEqmciAGK4NDzvcO
kiift4d6Mr22qNwej8lmL1qgrJxmnmByAMfpev1myIpbqPhmQ7FNccflz7ZY
RixszKadtouRjbeu41fJTFR0HiFitEKK2SiRzDwnpX/FmXLclszF5Zt94xgF
HbR2LKlkJtTbzUl+j9eQ78hHJ2qHfGBlxGRoPdpfu6Q5PNwxOIJ+PSNoPAeS
CYjhMkB1lhWKc2e2Wj0Nju2vDkho+vIZEs7OZI0Xju356mJ7GDauhHOwbTeI
UdzRLzON+c9+U9YJmcc0SOSHnPvwgk1EhQ8k8fqV94WVVczkETINePH1x9en
EBsCP2JtGkla+GwLM3uYZZ930HsP10o69dxGCaUiKe+rF2AUIoHTKAKEGUaE
sVhspkoAPUyM/8APTSz9iSZw8UoJs18+AwWBo35jYlnDtAXncx/VYMsPrKiN
maS6cQkK55950otkNDCRvsPx65qBkbekbPAsxEBwceDQjzRRL9ZQ5xB8W/8z
9x71dknEae9ScHv26TqJo3Xkp9gF6LQYTc9CniUzJLFrWEmsXszMnsGp7lpU
RycKDW7Z3rn7byXf/ckHnaGlGcQEOcOCnPSmky/SqNWN4In7nDonUnu0fLBT
c3DbOIPnX9DtW7zx0fjmZ1/Urylukwnewpdf2Vdx27ttxnZXOZ4yDt3Da1KI
rcc5qTYeBxULHP6JooEz5gEoBKs5fbQf7QWLERMWKWmiDqowY32lelnw6M81
JEgyDZi4jercSe6h/ImhnAc0spmqm65fJ3VWx4wZWAoVoOb2iNLLbFor8rRG
o3MEJq3RusPkRnoABx3Edl4aVVgJcKz3UvZ2jqTNVE3W2sa+YXvAJ9Jr6zaY
uBCGvzKBk3UIMZxe37HBxL7M+dLZRWNfkMzkjeNCdDb42/dm0077udmInYGK
mQYo+7nJTPtlN9BVcxtvXaJIWlbJtjt2CePK0Hl6dsN/txcoJFyx5ot+zyJU
D3QFNvErwdtI4FS3SaQS7To/I6c2GLlqplDWMZx6L7839Uj1qYYePLi+8k+2
l/mGOg6BKt0FzwFWqOqphm6IIooMfEkw9ku/gq7w7+zcuke+rtHTItgIkF9X
HF4xiTxw+SmZn6BJULK+shnP70plv+q98mFKVmYHTsLQhmyDnrSGqC15u+P0
J1nfz31UN6vAfnXPxkD9mkgoHwaLzZq0XfKJY4mqQhGwTpKAN6ydftwz61Sd
b+EEOR+6tVJm2o/cITm+W3fiKVzulLVarJts8Ct6EwMneY27L6LUyKT3stij
VAbqaCumQakp73uXeikT0V1s75fYqmeeAlKQNmyW9koYlsvvIflo6CxE+nxr
mJpAQiSXeum7VFJynIXyMZc/ntcw1L7/gZVymFT20BrSCxpIbNvit47WhvCn
9NgO2KVpm3D5E2aq80J7WADcBPfQaQe+hGOD/y7B0tjbp7RjPpr6hpMm6afs
dpbMv0ENxBfKfeTNA5WMCjwFoBvDhMlbkN/QOSRHn/ACDnlCGpKIAjHlCXNY
kjq/e6T6RRMzBIDV8UkduJ4RiHCcHoyniRN//ZEEeM7njo1/JFA27Dvm7dLu
Zpg9tyN1ohOPRg2Q1hl5DrXvxQuI9Vepp08FdNI7YaJ8CLe/9q2cFxsJ6UlV
R+kwLrb69wxfQ7a2FtuZuZzxprGVkma6XnwfK/AR12iARBA7kU4jOy4mpK6n
mbzNEsy4kJL9pVM9DXDtQId+GLSOT7qAxQV09rS2M7+XzARVW1Yu6+BSSRfF
dbXRVaBdk+wEl7as7I5IPTo+jjBdQk7qlsLMlHAuq+SSiUvguhTlkmEyy+LY
6P07vDSAmCPVRHptQmuFaoPhzqMlOs1QPZ/DsyZAAmXqtXlL+9r/5Rk5hfGS
g4dOgVMOVyetdQeItJNdyLZWtsA1OLZLMnb13CiddUrdNoK20LTjXNBtt73D
7Il1/kVPk2ZClc9N4eEPTbRnHHyH7Nll2gWOmBzibx2sdNX2Zu1yDYZk5phP
PyXDg9MPmmg+aUBDZv5L3x1XSbPVp792afYTXY1KWpriVoSRsZjAyUzO4Pya
PdSdOJ8uUdhDeqycuFtf7KLsFtnCHPdXu3p2JV2VzwCEm6xluwDHFpGrXXbf
2Q+10cB+2cLP/tcFLGNfxt0VdmUQdskte/iNe6VLUPY3rpHpEr6rLXYJ2Zrr
koxLIC7ldV1gz4q4xOsSoN0Euwuyi80eLbY2JTNHo2uQ2ErkKtOWxrjX/LYv
E6L/DVglCKzZl/gc6y09Uhsq8Q28Y+KqRXsvCakbrIV176+WRXxY5btHavgp
Fi4L13wpYaUDuRoPSnISNW083dijhyh7y6ZvgQRWz4vyw/6KweYtodOPgS2S
6cC7HCINjEsC3LIZuoVJZ79x4bnm1X1C0c165UfcDdlLpPftj9grj5mJp+2x
YTp3bHef/VNPyTuQScOrv5ZZ2ZqFEGx4bH5z72Db3lhYNhnyYcaJ2ljfZSrG
v/11q3AclhY2A9rQWmhzf/2qrrwn5ER2/Rq8AO6Fus/Na4CHS6ySsxODx+7C
v+irnPX+sZqw56uu/GfbVvwLWkRzoH+w9CfMYRY8ejnqWPgSwpcZp/xnZTd1
607eBS19T22UjcqwbtnlWDUX2cpG9GibZFUoevPr4jaZQgnkHvIEg8fv5t7A
4Z/+0uzFlVxdJmItd+mJTh5Nn/ZVzLz1gxbfN38W8efQdupJ5YVat2w3sUem
3PJZIz/pPkMK9A2OSKb7AY/uDaDaciim8OVpR2t6zJzAxzne/tolDJ7tZWYl
99zzL+8tlwCwZR/RIt0p91VBU+eOvwgcvL0r78muM0/fs9Qru91qF+ueZ8kK
bc51yr5x39GffVEvq8C9l/AvqH/PxVc1DyBMOK+pV9cTNYPhw2tqnlhfLZEh
j98dOvUIt0vY86bN1DZ47O5fGv9xqOMAQ5F+5Hs4hkQ1KZnSX7fy/WOeiP9k
5+6/Huo4eO8ySQfGII+GCoJH75SlSUkS8TaNYkBigiVIi5m1wDvQNdmzLX0m
H9MLtFeP/sl8Uewa/aUjzSE/FCJH/AInvd1RXBJJGyRbyDyS7cLkncfLQ+Ci
Jr0l1LC1P45gcVuO13WNpKdW0McRsy7ZVTCpr3zG1MPVzjqghEVNjEa7ztnB
zDW7gVYAnwVCEuuvCBy4VXM3MIQcGMEn0stgJgndSGN2y8jB7aFG50RVUufb
M2Ov6U9OOrBkKjdEp61xTvwo+0ZEPZKe/sWtAB8y9NQyPWFrKsbBvewP2dbE
KQcndxyjEHfDqWBL1vGopDUdnW2dbSvguH6uemabpO+D2Iwcc4BiCdrN50jn
cZjbJd/AYNsuVEaOk9etwG9dVtjcEo6fbOiWtHTxoImP/SuGFg4puiZTrL7D
MitiTlh8cMwjO5BrF4Phk2Xr9QqAkeGtsVvBBF2CBJRQXn7C0wcunvumYq1J
RoPqaQR+YK274DlgREKwnp2I6tn9Ytu1bPlk92ky00ryOPOIV+efacAWfJxT
q8dAkAA46emKouzLC1tMBrTwyostE7dVzsipRVCf5dZ1bP6TNw5Uai5dPGik
Mft0HQ0f6jwqR4ArZgGAaDFqCC7RFhHX5fdk14TZwchdyIq3zH5UfU59MAEd
G/4dKNHvXRbMuY+KAaqYPAkN6s8JHv05hfP0TZc7EMXG0g7qgwLqzk+qNP24
B7jecrnjka9rgLg7vqwP5T4GnHLLe0dr0EcxfPnPzjvToLu++RdYw2QcrAli
cRYWNNJN2l7ASjZsm4XF53dV0FO6V8SmGV35z4BvXGaSlzU+sEIONK0raaO2
CPNy56CGI/jkpNecoFkiUS/KP8FqUIe+ik+pA3K4+t4PGFQYMp6yu9JPlX65
vRIU4m9j3/DTjJDYNTBK4qxulgyPT6Wr0TEgDXeGwSSzAyfiP/Hzr+q4XYN3
0Y/1PTE5QZP/zK4K/7Yrkn601DfA30XnmvCbEKP0ePknMBAAMNYvp28eWFnL
XXAVinplrwSw0rNOwRP3qbOsm1IY5In0pD1Qg4hk76WzJ2H0xgsm3GXSYpiy
UersRFA91leqJ5Jkj+j1G9QEcSXMWqdGmD/T1Es36YoeRTlRrBPphQZJCFU9
j4pRQ03l4GgBBuVF69E2Z9YLwMan05Be0xVxAgbSUv2g09Sh6FWdINI9ltpq
fVH5ZCY8ulqazOLYNhXPwLf0UoVe3D4wYuOSDX3ZVN/lbmR/cIGqqzQXXLge
atM/uybZpN11ZXZALRcJt5uT/F1f045IlBWwV+aoG9cP+Q7R6W0D8UjoLAPy
lyZbwcX2/rBnYVfsKjiMYlKxd4/IzOpgyzflgSHUVsM1oPJvHZSUfxKYyH/S
5NV6DX3UmNsUAhuBawHCYAVwDRUHsiSyR8PXJpyOzHbyIXTygX7PIlDU4N5k
6tZfu0hO31z5wGXaXNJwWbTsv7bMgQ64EMYFIq3JvsGB5RdasPUSpmlkFN1f
fL4ZMnO+NQyPpXUwyZknvR+dqH18fbU5NzFpsHXHo1/X4DtwAUokycpNTB5J
a1v4EpD+4EqPOb+5RFyJ6nkgFf8uNcXqARDESGVCuY/yk8lBvAt8eHZLFXA9
5DuCKYRnwsARIwijh7bAEAQFrHG9HOWo+RKp7q8OguRQ356St+/6qg6U/uJs
45ritimHZZ1R4pafnTj9RK2aDITMc4FTWBn1n3O6fsqhKpRxV6Ufp0B59dDV
bzXXmLO7z9FEeCz25c0DlbgY8bj/vuWC3lQYgk1NKoJDkh5uR8V7El9FJv9l
03jFpyC2rmsgSVlQfu8HX+Q30iiuPFwb0kxnjAqGHHyREmR364CkmeMzOOPs
aYF/0lNOfeSQyNlfRnuKb5/TAIjJ2aVNVSsutIBvclrk/IsIbesVH22HXVA+
XhIQxF1YNJw46sxzm8PDPOXOhXXgBorAhxdM9HKqiqh1TVMhlOcyFPXRtd0y
N44BQkrOYig4rIsvSQtq0J3QqYc0ai7wjkXDrID21KSoXabxEcjcvHpG44m6
bglymH4ceO60VEP1wqZ6r0yXCNu7yjWjQUoLTHiNF9KPTmYRGKGUo792DF+5
lVWcMaMfJHenOTJ/xT+Y0MjJozd0C42+dBFWH5fJQt2b8bIR28WTdYdPuvK/
DkQyAh3YFzubOrJ/tRtr46cNrfIe/fVIFkjayGDXPLsC4yK264l2HVz1dFmc
74nYYGNf2XR4CNxy8bkmfCVDnOoY3jhleIUrBMSK+Ckea8tt7AFSqAYADjE+
UBOMQUwlusjBUw09PcVv4bnLCevq+RfawjA3QYay6SAM2ALN0DQr6Cb6wgeY
1S8l6fYSdAqUg/sNNG7g6RKXqW4lyo5dEEXOfwYiCrjJ1jjbWDuuyncvrGfO
ijjv2bkmvJJ3GTWHwn2S433nUBWOvLcnCleUY1klUySl+wnJrw0y4y9wscnV
uwwi/fnpeup2rK5L9hvUfAEtBwPxSp6V88te0OB5Q63hTl+ebVxd1EpbJGtD
3pNKd8M1C58zM0IdG/7tiJln4KdPT9Ud0j2Q518cbNsN3cKPruuRbJsYr2WF
sgNTTiW3bMPY4VQiOkoDUnBD6D7k+di6GvoFpEKGPBeTSo/IJpzSaepJYVBM
5NVZEjBwY1VVKJIKnFv1OViH2eVZtOuHs5qi3YX+/f/UdfpxbtHDI/Foa8js
DaOEh1Z5sFn4RBLT9cgdWAGzQVTOroIbdJn0de1iwGdNUSut4wMSo+GST6fo
DQzKz76oX3yuGWsu8fH8OXqu3+xpeQtQunV6C3RUgU4Ofec/q/ux4zGcjhP3
r5DsjbrtAY5N0wBP/96/l4XsKx/wdAkhOFSveUUlKV77fsCcEYgEZDvfcCfu
G4xCDru1729b/Qe4UTgmgYO3yXbKzmN8kKOpJVNwlBA1j44P+4BHjerW/vX/
rKOu2GyflniMp5/QCQoTUrIOq5dIzUU062DDoPi2/SntGh5qeHiNxyRjegfD
BGpp8i8KwbTB+SPBPGQim/RGb8B4D3vGxi06Zej6JUxGT9Hrr+2v0DXQpDk/
IukP8Ba2VzrAokleUuxa1mQ7uQanL2EWN3W+RUEAt071xWts0HCkCeGbD420
CCvj4A9uSyK1+p+xbBeOX3dKMwd2OuzjEvH0qRmbcTlTOpGr3w6MjOqsiI11
TuF6xMn+1XYubCKdtBDbBlhdjbJR1EEGFzK7GHX6ynGWdcasUuamdLvAmyG2
qzm/1WtfdQAnHS2AXcix2e4L2Ho6FL1DUJLJ0XeooTcmWWKvfhvtvljQ0scT
weqB+q9RagYVzPxCexiBQ2CgeWDL2pK2WH/VYNsugJ3SKBz0iPaWmIhwnX2V
n80A5Nv34fOCz1BoiASoDoTioi4saMJMgKIgD7RNgvh5lw91HoWMAQvbynw2
6rqab7sq4/o+dudSgRdk3n4fdEJDJcB+j3m74K6gH7wCOi3NbNwIZuY19cAY
vynv3GoShUw2U75YGRwHcUNM2jVcWikKVtm8RUyP2VAt0aUa12EH++tWAFDg
CU3GfsGfwT1w4+W95QhHjsqWz4ASyyHBojeAFx5NX4iOD0rMt/n5DTwF7Qb3
QHUUORBJzDXbtrEmdByPBkAg0lzwlKQG+xXNyanvlqxt7fswIqABn02Kt8Vc
03v5fWAwEsg1eP6uhsbFF+4ufJkrH1tbg6MBjFAxOZa+vVKNrB75CXsWhU49
gvMO3Om0wHvmsD/SwPgCa+Y4/7sm1spSrpGNLo0bDnqCmnUdy2jCk95DHeQc
06WpSFh3P0KAJVJo5ezOXX+NrZH4e6ce0gjboVMPS9qj6gUmjvpjiEW3FEpK
9CsflnQMCC0/9zy14gLGT2FbGOiW9ZHK2WLpKj5lTDJ+zCHoICAvaelql9Dj
D6/2zD/T4N/3D1gTRjv2WhLxnH4CSBcr1nlU8jSdeUbigRS/NTwg+c54EELA
wUGAE82xfWg5FkESFZ1/EbQ3gbYCQP2w2Z9JX2DjkBJyVo9JJ9IjwdMbS9sB
RqqKeHFOo6GzKy+2QsLxNBktlAyyaVgDhkG0+zzdh8AhA3TT0Cc/gE2hpxId
segNkczJh0BmySkcyNXcarqzvSvviSdMLI7AoR9LdNyqOSZ233FJJDoSenwd
dGIOBpceifVXG0qwGSC6dXajhoUHwE02k2IYiBzWrpjJxfKgaKvuyf/FYm9c
dy36T0AboCv4OEmzdV92AZ1+QhXWSdqO7v9obkO06zymMHDwdgk4WfiS2W4k
E/VJs2dSDgp1HOTz/8vaewDHeSV5ns2I24hze3txF2c2bnduZmMvdtzt3uzM
dve0WlJPt1otL1FeokSJoryjSIkSRYmeIikakRS9RCN6TwIkQRAkQMKQIED4
gjeFKpSBK3hUFZ066n75surDw1fQRLd6EQhEoeqr73svX75//vO9fJkYU8PQ
QnpoiCdqFemEiWak+4y1g7ROlJGx7+0AFCqKOmnzMMcOMjSZqCEsrAuu07m3
y1tJWHw7YUqQOMDutizjV6jsu/3oHxxS5u9Q4OzoYBMMEwVAe+Wocl81f9Fq
4AvElgzVcezgFZw4GiDla5u+ZaJFR/yQELACQGbSCVsumwus4WZK4bDar4Aj
rLmkCeouAsH2lXegG9gIPhXErliAboBLTDE+Baagakz28809c057vrnazhRG
sZHzohzJNozvL4lEUJVoEJKZ+AHEtu3jDyK2/yQKTL8qgoM9pR/KnlTzDiCu
oXtEtH34Onh4vCaETOhmbksPZBsSC2gfqgpKcV7ZJF1Cx4W7NmzSwpQ4JiZt
+N6Blt0YJnoEOiEog9gbt1zxSkHYinky13zH+AjbRBsk8YLA+Kfbir0Iljff
PlYpG75dhdgymbBFb+GwMOvRcJ5CqzJqw76BGDYuUv0FsIZZkRqLwWwwhAsk
pVKpLEfgE3HPd49VLskB2+fzIGXaXINj1Zn3Io8TXirewXlAHm2XfdLyz5h0
kur23JNMYck3hVt07RMaIGU6K+b31a7Fy1ie28SEApF4nKxxmSQze8r8PdEb
PSUzBbFb9yAZeiqNafqWRwDUQNOsDMmCKGmir30yYHLOoC30hQfRMJPraXng
0D/g/YH24MP0Q4rYj0tSa89qcVLyXqB3Ev9ZPleaVDa3tKMfvAVI8TiA2byW
HoaGf/koUrUUHKbZgC0jKJV5oyHl3oAkXtLkzTVoLA7Fczuq0DRUlFt1nn8W
bFT+T7MRrOSzKplZ0BaBZ2p6bawbAlTEfmh97Yq8ptCp+xgs2XS+8Dx9eV4O
Kz2DviGKxzZ5YB2ayEV8z6sztAAlRgQq3pn7Ahoy42TVcOclDKvkSwcYzdKZ
Dg2zDNvE9NQs6ILYFQva1v03eLhYcBGmWezCyNILra0JRLeaIqFx2XqY8ozJ
n4BNkZMUNcvlzoGzNAAAlKxNkn3lDB4xsAkH0KPNv1tdj2vAkKE/6DBtCJ15
SF0hBMWd+SKjA3nQGnnwCl3yYozat/3vlaFB3pexPveEAOZNqbypa+MozH1r
6sSY+k8EM36NzgPazHcUnpkFOURKciLs4ktALrKdbrZvppmQYORz1/vtFaFB
oBhbQwOQjFaohzg9sUXOb2puSbqMnUWMGAU9H4dYMO56PMe7ZhJKovsmkHb+
ip9yQ2qrJVILTUz8uISeCqrzfm8qFB8IUiRhkmIOaJWYjxGv+i+aJNYB8/Ql
nT9lVUTLwTBJI9XLsOPQgI6Df4fkeRPlv2N+s1mUWMowSYbqqiXIH5qNxkqG
5MtvbyhqTWrgtU9w6gETLnhia03PtTnhs4+akrLvwxbw01FjKAHeumQM82fw
KzkAS2eDQhCPiGcVYkfCD6+vhW/HzClyWfQueE07CJgni2xaFbvit39vb/jG
rMVtlwsWHx+WyWv0E8pEg984Ikn8UMXgsV8OtB1AFLLL6VmJRoVznsJhBHsh
vXd81qKLujQSpUJ/sFBxkxQLzQdAQB4EwnRALUOZ99z/VZ3Q0epl+jiRsCnX
O7a2Fg0xkbX92M3jJtMOvZOYjbZ9mIZp5nxNXffws9urESkEQwyBqadgBmWJ
BGxcmgZ46rEdE6bSwB16KxfLDlRU9Mo/ENOwcxgaqiXLC99W6wqDyorJqO3R
OBAcAUZQvU5tGwjvWoLTGecE7UhMRbFwbyYjBEkOY+Y+L4Ei6FXF/M4Lz06R
LenXgDJnLCADzEfndczkqsUQyP5s2dzEuDOPYXXqud7lsY5JUh3z6i/0tR6W
4Vd3tFNTLKAfefui3JPxitR82Ve3TpLtm7h0XTSIJfc4FiRlIrmm4RhLxz3R
SmqRMB66HlKIpa3Z2t8auZmMsla5aa5R52IscjyV20RTao/T24lcftoWvzVu
BcDFSVw3ScrBAKZLeunCTJ9cSQWwQs3/mZuoWJzhs69x3cpum/1125VOr1Hu
ZE+NjV+jsG/iGg7XHWKpXMfjbmudoImlLWLYrbW/6Bxsd3LmOK2yAccexD8F
sQWjKuaDh+XBQTih2WRcPdJbipeN64F52lPWAWhg/rBBhd4ISGsW34pgv3mt
vbg8sCMMLo6JqUi+RUrJ1K2FigO8wpc8qzZfbuMvxBVs5AL+aipROCFICFXj
I1j3m0cloV+kajEXmDC2JUworoeZaCzBS3srXMORGL+4lE6n7X8T41e3uCcY
8u3VdjgM7iQEaV52Hc+FrR2oCEAPgI7M2vDKi81V4SEIual+u4UWaqkROiUJ
7YPZQDQtHApfAJwxRi8Zd5vuSNa+muWQJVk98B2D9gAgMzMkw4ZmGcWWdV2c
ijOYMDGWpsrDeqwzwAsAAtq4zKA0NEmOOFUt5Q5nGrqQz65SH8+lnYwOXGtd
QSsOCFRQkk9+x5VLgHTutpBx8R3vq/9a+Fjl4lcOlmNSaa2UcfGseuuoZBcc
7ffoviTME7IheQnOPUEXOg79Pb4GTFsIUs5T8dRqpEoP90dYWdUSdCNuTk1i
r2XhK5wHEuJo02Duxjto1NZir4nuq+dfyXEn5WlmA+mTN3u0WPBUkzAfs4hH
L5u2JR/C1e/8uK1CMoH7JdlI4esYGonkN7msIQzhrEd0yvN0eqrl22AOSLu/
aZvxHfK4kvGFbyNzrCHXQAWR6jZTqU2iVioXmwO5h9u/+T8utfbeMa9FEoGO
+BhKbC7txBXCdmvCOtmDG/VrFmv/3r+iJVAphgOxYOvhw/oRbBnfB7OuOjmU
OtMNE4MPM0cwCg+uq2N8kYnGfmihcOyarCiWzBIWXbta0u+P+nH0Dpv0I2om
YLmxZCb5ybosozn5Yya5ChejFXp2Ut90cvvHU5mioYj3fIlND+Iv46464Bk8
+SudL+UmNEViDnuuxs0JBewvPmYSmm7/fvImD2ZFrY+NmZplXa+JRG+KFbbX
sdMAlr9O3TTMaNfIDaah8xTXXPalbj4GrePXsV2AYM/6pBFP5cBJWIsS0R9Y
x3Zdlhi/KuKIdOz9H17HTs995DwoHYr/wB/AGTSee0Z8OrAIGBG2mfEb5iBT
gPkSOvU7IHTqngqIGePl3/OX6NWdH7XhTUvi3yvvogP4dBIq5gkNdxXMyqie
sqtyueRSfk0qodSsBJSkPGLWw6EzDzAXqsNDXMZzE5LVZO1IH55gvtkjW6YR
d7j8ou2hC8AaE1k7qFvqSbMVTXKVhBVUmbBgOZ2cJMfOOrEODkuEs+8E0zZS
uZiOAFbYEd0xxJvT038gD0LgXw0wA8rwK8FSjBfNi5t6kSO91/LbenHYl8j6
8EedF6cqleVZ/c079NF9DZv6m7YjJbtJTDFtJBiFrbxqAm6hr5iwAe9BAFnS
QYz6ASUko5WAeCitwro98FWdBstJ7PrVD/D+wMM9ZcKTGUfsqT5IgEuKf80X
SDz3OM0TH99EO2jDdl/zJ6yd3CPVQalyaG214FCMIzzmtluueB0FljqYNV/G
Teqk6IhY9p5rHw8Fz9Jf8BM3CuvA05G203fGbl1BMrugOk1g3YD3gIky3Sjt
sdijXoZhGpuh0XGGW++JqJP4kMr793VhK2bOvlLBSmtzyOKV9zCwnFShW2P0
D9M8pjAQ8qbt43QpOgY7+kIcxjTdcxAg+dfKehc30RH2NMRypffLfso4dpry
0Wx4cYFJYjx2pY+gC0DSAc2ZXC5q6mK29uuxzsaSaUPsCsvuKfnDJcgnbIbd
1LHUjtYRFRd5c2mIy8QYHRvHseO3f+/qrwPL47IipPV9TOC3fm+/n7DqMrja
n97fP/wHkjn9UDnaC5EGXQc7TkMdcVGHOy+CpXIOonV3sb+/r34DlGAocAYk
QVzwq56yOXi+JR395qzE7nNN3dCYtQUt8M/Ps+qGwrkwRkkrd1Ay+zGFzzd3
S8qRqqWAxrQDkO2tutLIZD9UFQQk5Xh7+VxJuHrh+b7aNaAKlgKclEzvnlVw
Hrs4b9wUYJ1QdOkG0fWmXt/fvFMT419q6zU1bZe9Y1I64z7QL0/nMG3bUNQG
6ysLDIBjXGNY2UL6pZVfQEI6hSXiuwcqA9MlW93ZZ7dXcR8NeF6W2wgzjNSs
GO7Kf/toJX3B/EnAiUlHD8EOHPsFTDhu8lx15U+XXYPAGYgiBEwiw8O5+W2R
kX7ZhHoTx6R6OQQMrwTWN9CyCzrUXfjGczuqZpyU9NQDrXsW5zSETj8A3j66
0SOp9WvX4kfQhqe2Vb9uJCnJNC48y3BL8YiaFT1XZ0DwsMJSNNCsBSFq384/
f9rEnkGTGEp690KqbJAjPUY/eOIuaPNA6z6UfPJmSaGM0M6ajU70RDYBpQFS
iA1+q7n7GGLaidCmmbwrd8xvZlglBLTwDd2HDRz6e6wPZmh0oNZUJW7kV9pw
7onQqXt/OadV5xSuH6bHGXoGBZoB2wwc/TkMYYbZ1pSEZiM3MGoSuYrhaN5O
B1HpbcXttCo63IpIjY/zEpYUQyzE9exjT26tgUBeaO7xbvqfZIEr7wVYd8Sz
8o55zfFkPLMEpDkHZIZ7rvLX+9UkWq7RxeYaSV9p4wO/fkO8R/qqu0dvdJ5/
Bv7DQJg8scHGnhEuaN/yv/RWzMMpwIg4CRkACriNo7ea4QqqQ7NDZx7szHnK
SZ2qbUN1tW1JuEjhzBigRcO4VPpiuKvIuVLPpsVMvqyE2S6EkygwSnKkYa8D
F+Hsx/Xr7jWNWxZcS32fNmf5xW6DLRYnO1/MZKlq7BmxccnBW6cjMYufaxKz
hGWqxlalosl/nS67xsJ5RDQacNkj53obWGImn2oircSMq3mJNHudMFEuzq0S
iXGU8o/E6bEfuCt8Ca8N34SJA0rvuuanDUwWWmiqzBT0jN4YCuZIwKesUnr4
Vo6E+e3Die6L3TQxftcaekYgeFkNXdBmyaQ0UC9EsXWPrH6ELgA+3r6oyb99
BqzjSjxovC189sH2IzWdQyiqZNv2HecjQIzvMrP4LqxSdiICWVqYLLOuE/wJ
Zz8WqVocWDGpPDhgyrcF+2O3HPnYwjT16ZJvJkwckSPS4c5Li8yDmntHzbG4
E6fqOmG5TGekgUqsL2yF90qow+gN4JFmm5K4p1BmocEBOOS3Dd0jUnqgdS9a
LVtI/TWLchoypQ5jx8qLTfvKO+QEnwlHGWw/9mVeE/CCEABt+sv7gMac0x4w
TerU13x5spb5WAaeL7vQiJ+ObGkbCNBb9umuUh9PoTs7SnwjkTJP1/BA/BZN
gkNm1oYPVQYYAiwgHdlb3iE1cz0rB7yHyoIDjMWHmTWMo0Tf+TN6y+fRTkQ6
72wdxhFHQ0v/0BjM60hPCfg5+5Tk9qcxEjdS9qn8ln+OOQD/3zAFO+QEaOEb
313zg4FoOI4DlnrQdwz8P9vYhfJ8cLJaqpa0H8HkIeHPsmqP4qvVdcrZ1Svv
cvG7x2XlRwodmoN+KNX2knZktb8iINUxitpAVFw/qQ5c9KYeiQUGQWNMqm6m
bCv2dhe/9/4J2fQ0IYVlpnjiLMaLpwNrkppmTyWOD+NY2B5BnfDWGXQ4ieB8
+efQDJCcd0A5rQ+LfWE64J5LyWOTfxKrh/ZOk2o7izGjUsDUZDjBkUTOWBmx
7PnT6Qsmpr9hM47nzAzJPUtrITn8a158jZGFcogKhXPDOU9JHeSKBQgQvWJQ
jB/0HmOERjEXkBv2ncehS4wXw4oLfNITprPow45Sn5R0rJjPWOPkyth1ZCJV
9FCPLEkhZnOSFBskhUIuPI/AJcGjsaHhc08iva/yJWyJO/MreVGK3pKsNZ2X
0EbmC0OfWvB5QFONyUiFcmghxuLl/RXY5dKOfmyrLGSVzUFX5Zxy4RtIrKvw
dTmSUDb3oXW1TGSpfHHlPdgCz12QXQ/B0KxZNBv2gmKcqe+CISBJRo0RAVLg
b9hNyYFZtWSqbI9moQx6VIHxxV7Dtbwb/vu5prSTHFgr/wyXU0PcaQN30wU9
RpmWYCgZEdmVzp/e17CRoWR201Nsyr2r6jGOfIWpisuM8KEWT30jKYYw9yjP
6kvNjAKk1Lvhf2CkHtngUR9ZDimfeVApOpr82EaPblcFM35NB+dn18m63PXb
gMnd7/okbb56kTe/P2+S9zr5FX/cjzmBvoWBk7J3HafQfBQPvGL2xc3xBOYI
MCJFPKPBjsG4VhiUQ3wlM1F46LduHDNT+JeOz82q5bWvP5bd2I1HLGDoP7n5
chuIDdKiaUxqmK0mvURvBfBpQ/MOCWOoW4+IZpo9JkZTT+TFU4fKE0nnPeRa
CbFNeWKiLYwJP2IIUGD6S6eYjyCqGJRwbiR2kzHC/qKEQBPCoeXHPSF4iMRU
Vy+T8+OoVlfhhkLJ0mni977R4BnMlimKIbXP5FTFaACqpi2UaNuKeU7CuriJ
dNLzCDTsaHVwa7HYTS6WsHYRWgZkVbvQffkdAFOCwYLneJYU0eg4DZJLoLJk
UFzK9IRV6olIVBElXJLToIe4AfZQ5r2a/BbIhdVLwMbFqQ5bgEnqixZzQlkK
BJud94RZhUMagSM/c3Fs/pr8203aPGgwwJjKWerj7+ObZfGZBpt67nuQCS96
Sj90OAyc9sU9lSnqWKoUMXT6fgGWgtfMfdodwkZj8DXuer/dISeaYd72iI2U
3k7esCeZu09q8ZR8qFdi7PSLEkIGFmU9xGwVX6l5R6o4ps/hTu2rJ+m+rVT6
4OJlk2xXTitxO9Lghs6x0CTtt5KXOpc5Z8Y1l6OLUt65uAmV08fpzuk4/93q
aczsEZuU9QedlRZH20cH611Ezm5J3MoalLDceScFq/Njj7Xtwrf2Re33XSza
eaKrwfZfu0f6Oj7REoF9sc3B7E4lxrvS9ky3xeICBLuPLrobHZ/bytVC5yb2
g+wXTrGGsUdYbo5Ltuld/gN/oMr3fyUhGZfaemWnvnIh3NWQvWvMlDtneXHi
QBKgFSjA89Vq2gBpZ87TsDIpe5c9GUMDbmORT9d38hcrHB3xAtTB47/ELMIx
MHY4m7h+Ev9gEmRpGKemQYiZRMTCiOrWP76lRnfM47dkXZQm2cIf57ZEx2mU
PTvS5ekaQf6FMPh2/BmOPG6F1PUufMO/96+16AaOABe0f/N/YnqwFOAwPO2R
DbVM8Od2VumKgcZ2xk153CRpN24mQCRlrS69/PDXtXFz4Dc5y25+XxEahLzZ
bXDSII8O1PbHb2ma0EdN4mi8hliqpgam/+VUJm04BjMackunePT0g+VYQ3gO
FEiOl5qTAkxAb3/U6bvmVi3tGEDyMI3luY1OHomYSb9vTzGpTZM6sJAU+Pjy
IkndNqcz9BoTOutNWIuu4XNP6MW1XcNywLBsDg4CMrRnsaQlHG9tTeoz8dds
c+yMnV0i1p5rjv6LxMbPTRkmU1zANQdjqRgGuH389ri0V3p/hVx7pGx0coGV
LhHYk9oGNGvyun1texo6+focpZ3w19VB1/WJ8eDggs0JO+KS4VhrJwqUdU0r
uyOue9rdtF/bX08HdvvR9kR2ScwZvsREiO2yGumgbQ+iq0fpVND1CPvNdDk4
JyvtLrhUYkJp/1E/eGHQIa3vJhXlKhcGbcSeaRC7pxiGxkSGLzmILb5P5ULI
IYiNUwNNBbeZApKQ4UB5ErGP/XJPmb+vfiPOCx6ud+P/qKdoHbFEapZrF6CC
UDLcEKe6uvYRz3FCxHZG7Q9HbJc60Sk5njBQC13BI8P79u/9KwNZDmL/60H/
CRhvffcIfiUIPCWF2PosPQvmsLg+E68Fm116vgHEfmh9rcKd81xQbkVekwsH
7Be6Ouek7nR6hAsPp9UugPxjiL2thhHBaMoibVeB5OLWVK6pcvPacbzpuBZp
uvW9cb23JVcjk5s4oViaJrteT4DYziKkUVSXGs8xCRjNzQMgNg8dCpzGO7Cn
p2Ot7CmcSIUBuAAwMb6g9oSIPZaA2nlnPAWdYDLq3tN4xDY9GncrJ5wvdVs3
EromY7rEVF1dMGJPw1hqFOwO2mjpvlvai38esRMW4PwQYv9QA1yIbSun06R/
BrFtQdm3sj9NR2xXs8cNa2ru29/65xF7wpFyAYWjMC5ldp5rt8e+YKzjVv13
W0ttQdl9/HE/w52XTL61EnBgKJgt5XcDWXETJRuXTMgHJLbt+q3h7ssx469p
SBLYbtaxLwNTeGfV4SG+uLe8Yyh0Hh5e6I3IAcnOfF4frgqORCpKO/olNL1y
Ebz0UFVwR4lvOJzX3DsK4Fxo6anrHsap31/RAYp+mdcUqflyKHRhyxVvbksP
aP9VfktWQxcu/4rcJsFYcyCXIbNLR6WjtK1L9jg6mlbUHoGdQk2BCF3WAKhr
zfqwlgKZm1UrYS2d+YPXb7f3xxbnyIEanIhjsuy8rtCkEAfMoY60k74gE9C+
r2EzjR/0nfj8bN2R6uD0Q1KVvjI0iAUcbD/y3vEqOTTUuM0sBG3nPtgsqPum
y22RmhX5bb04y/1N324r9ha0ReS82EAdcutr2FiASMO5o/1yXIKHejrlNHFf
7Rr8l6HgOR7EuGATe8vmbitul4SE9Ch0nlbRF5OuvJthGu652lv2qa6Xyq5f
1VKQH37e37R90J9pRqo8Ur1s1zW/CWXcKobYsxJ7Ycp9Llh5sRnH6q4ljafq
OuWgkPfQ5fY+zNCbkp3DPxTMwVsZ6S3D+8BGYHwlC2LbATyLZRcaM+s6Ea+s
mVcvQ09ogJ7xQeVoD3ZTo0Nlp6D9CKLA4dJdAzmb0/QNdnCaKXam0Z4S7lL4
Olzin5Y1cB90Zih84W05fb9IFrKat6OZ/OLfbS9p72/ZhTmTahHD3qv+/hIT
kLO12JtZF+bRSBL3al1By0v7Kpaeb5Q9l2A2Vri3Yj7KyeOGu4tkmTrnKVlO
L5+7r6JDMu9deZfGy6ed+fRoyXk5Ed99+W30c97ZOj7tWTSJzvKOb+efM2v6
PKu7i94y6Q2P8P6aS83rzaF+tALfE4kxZAPew7SWycJgyZLs5Xci1V8wRlKQ
zqziSqX1SBli/zCz5lBlQFaVL71sTmztnrpXSpbDmqRo+5pJrx6SArXPfCsp
DQNHfoqjIevb55/h4reOViAWRDQroxoRycZNNOSsVPfVrjU4cFZPF3bmPm/O
Dc3i0YP+DNpgMtLMRvNHekp+saBZi9saL/UxzVqp5TzQ89+saCj29eHfoTmd
uVPw+7QwnB5C4SY0b152Hc61OZKzlFmvJ/jQE+bRw+trZZH58ts441N2VYID
iGVmRrUmfoEOjfRXo3vMnYXn6uWM7egN8Bb+qTFaGtkYzPgN4yKZbUyZUW6C
MqMMyhYCh386FM5DMpranRbKHpbstLY5GIL2JszRmISevr85VpZCYaSheySc
9bBGvsmJBlOw9aqpACvvpHxPG6PS7fUf9bMmv6Wr4FU4JIMLZ0YfmAsAF6PW
EhntzHsRbTzf3IM8EfWg79iGInGi5dxu7pRI9XImL9JYdK4e9OBNZhbvowzX
AgPoG1Qc/UQ9mPtF7X1SA714Rs/VDzRuAUHx3TeOVAA4Ogd51lPbqkOn7vUP
xOSo9bWP0cmEYTV6lCahbMQiJC4WkRhvXm2sdiE5WPfs9io5Rt1xWmrllH/O
RFuZ13SxtVdW8vuqHt3oWW5OEiEZqP7jW6QyL915cU/l87vM/sLFqegJGgIs
M9f4FPNnMkHNBwYnb/YghDsWNqFFeqqFDj6VKmIF+cxvizDWSlYlADJ3Csgm
Cf/NsTXJf9h+REu+hrMeQUofZdYgKCbX+oJWwDM0dN1UD5cDaIgXk4fu+ff8
Je2/4/MWJC9bHre+Rz+ZdG8frezMm8roMIOmy+R9WgsqJUx0ccKwTYwRwglm
3iN1Ns12rSTT6L3mygRlFi5KvRv/5aXW3h4z+367sp6hb+odRZ+rQlKemG6C
ISvMEbPluU10BwwHo+Qk2q3ve6I3AG0wTd0BzHHcrAaHzjwIVuvZ895UORjQ
zLCIM0+kVp8SqRRzSo/19DGvgQgNOebmepl/z3+Y8l0yz8YVX1/CFCPQAsqq
vRIl5T2MvZAG4LmYtW5eP7iuVjzcW9/zXC5GT2yK7jxdL/Z0DTPotoKZmTuW
KEn/6pZ9wuQekfPX/pM2o3jC5OsA/+Omnmw6PR7Hsm7cpiMlHf0u9ptI1aBJ
pLFupxl2RQMXS7R/XPzQed85B6SoZTNSN6GdKEjDBqv0Ztg/6Wx83HSOuu88
4YPSv5j4AV6XVLaJOHZiPIa4XAP7htE0ju0iiq73f9yPnL1yKjUYYs+Ud/4N
n30EoxwzR9ISOoUj5arDYj3L5sDPw9mPKXVMqiszaCS5lCE7qmajZMhs0Ec/
+QkIbI/s8I2x6gn0NzgUf/jrWtsn1fKytuaLpVPEtgJcExOtjCXS9Nb2jOIm
7YDTDHi7RhE4Ir3jsxZarjOL7t/zZYMsieyqAn+c58bNCVZbNySLTqQc9nX3
0kbnEc5vgwnlspthq7qOo2ZbshsMr9BdSLunvOjY9zcYceYg9kJPXidTNlmZ
c+KpIu96QxAYwh8684DzaGcFNfnE1KKEq222esfMKpbzWg9L2t/SnM/O1339
MW9fFEna4xUZX1vQfpb8a0WLpfQqaM9xuzH6Qjc9nV7HrAMsrtnqFv74aNtY
6sSHc6VdK1CxKJGGhC7dc3UtkUikr4rYauAKMLb/upTc6biNGBNe4Ap4dv0m
LFhzNWmsGelnHsd/xYVgrvk14evYeOByfdFpQLpWjHvfgiznMlcDnC64tNdW
IdebTl1IGzrSR3zCJiX0aHzUPbKu9tjz98f9MIVxtyU0dFiSWowOygnEeOrA
7PYS33BXkSxxmIqreA16egiH7mCl7HfTx2+utkPkdEpe9vUNtO2TWIvRDoBr
8+U2fLqRvsrBjkwgEadm0H9CAtv8J/kUIo3HOhTIkiQk/gzJsdaRCVeX5FHh
CxDdEx455S3lEkI5Ay27JSWUP8NZ/9QkkOmicym5PWdt9cPfMfFplyCrJsrr
IqSxvntEVl1MOAHcFXCTcL7rt739Uc3gIbHQ3kO4JHhzuGlSBqt2jfRuoP5M
fRfMGZcN0mhCpr/jRW/5Z0OBswgqp6l70+U2U3d+68YioVj9DVtgxZLuVdI4
SO/kDOlQCzcHgUs7BqJDLYo58HyzqpA12l9zsjZc1zWME0QvcO11yWjrFUm9
NdxVyN1OeEKwcZ6O0Gg2nik+Pk39GoobKcM3X3Wxub9xm1S0r/6Cd147XI6T
jmD76tbJBVfeW3BOco1mmAyomtX/k9MefArEJa66HF/NxgFn0DV1DwReJGlC
PXEoaNi0A+UmsuUsunGprfftY5UoEuM442QVA3qoKrjyYhP2RQoxhPP6m77l
PlK//sp7Jh/Xlv7mXfgvsozTeckkAF/TWzYX0o4rseWK9xNz4pInSuJHeuFZ
hfxRJ7PMsqXQG/n2quT/YVj5Lm6LrPb0VYnmjEioKsMhIi3/rL95R3/zzqHQ
eVpCO7sL30BuOPuMFK8hKkgJr3M4nCdxg6UfSZyhZ5UcCz37KF2Wp1QuLA8O
IFIahh3nbvgjElaXPZl77ir1BU/c3XnhOZRtoHXP9IPlx2tCsiVUvayvYaOJ
0i9kmuBBizKXfCiHHVp24eyjD/hrIo3GbTNPirv68WnP0eoQfq6kKQuewyNj
XD7Pqgudvt/IOZunS8CkJEV8ouviS+gDThlOB3LQCG0cWzlx3LR96p4KBhrB
Ihm0F2uOjvWUzGIs8IIPVASYVmWBgWM1AomSkOrc4zgjEqHUmc+Ux/OlbV9c
aNR09zhrCEFow76/oYMixuL3H99cw9Dgk0rp7W0ikGDGr3Xe+Xb9hb7Aw8X9
QfEKvBEuQDklyY/vONRIjnZGQ/Sor/Yr2ZoZ7QgevxO3XfZrKhYIzrQfwVuH
xmgLZ0j6kanK4vCk7n7b56BiZ96LU3ZVqueuiW5M5GeZIjBONN5iT+lsLdkA
9EVNzVCNuo8l107FNes3/ESqV4zccNlTprYUJTEO1LAidjSErBRdNS2VizY4
ePXjfrpHbzA1NNPvtmLv5fY+BAUya5OgxIwsSrWz1Ndnwt60ph5CRm3QFgg5
YjGxZxuB4rgpocvI8gIahrq+frgc3ZYR7yoInvgVw2obqZdTZfj47cx5mnGR
ZSirUrbGVdpmCwVLRiil2KALnNMRe5x1S+1XIv8VuU00UhBmf8W6gpa5WbX6
r57NwQ1fV9C68Fx9WXAARH1ya81L5uyhbgLG5LhBXcLU79A7ayVBiec8Kisn
eozCCaaS0xCdl3yrJtnDbR+JcjroOPLOQJuzRfP0TTEi12+hXXFz1Prpb6qB
XF6AP4CqksMhqzJswtTJ5Z2zDV30HX1mUjubp7FUThtHknLzoSbb9um/NoF0
DHo8uScYiI5PtaHdRIHBYWAhcORnkt48Ffajd+42ZUFsvsc9mY96kjRu+Qj6
i1lPpNFFe3BdHDuhieOM8bUVPjkcI+2yNNF+VE81uuiWkxpOG4ahHKdR0TGG
4AxuegYJW2LjSGlalgx+tHdjk3p8SW6np3bv5EXaIbtYbGyL05WBx9WkcfcZ
7xSM3Wo8OUxY/DCmG23WORqnhckpFh0vjVtuku+K97AnaSKVPdvWQ1tc0fFb
w/FkoJFxtaxi6LKq7MrjbYndJdWEqXdpO4xj11hQ45qt8VRVrIRZknI2qe2R
csk2vTt/1A+kCMo33JUvObu8h6HcMAHDM+sZDhMkXADx09y82DUukK55D8Ka
sMWY1/WFrTAlSbrV8t1xT0gOTYQuYKmL/f2SulkqcFXktvTgMsjRPO8hc3Jh
B9QLugIXPVXXqWW59MQfxO+zrFqMFBwbc9BbMR+OJBmqW/dgCLhn+9b/1fft
v8a+Q2Ck2rgswvh0F1JLzdqzD/ZlB56pidSOYz0lK2D7Eazk0vONZ+o7T3rC
ECpoiRJFaJhsF3ZkgjwNPSO9FfOk5S271FLTo93X/EgAnKQXXEnXwJzeysWD
vhOQduQjZ7SvfqDtRyZ7yyWHxpd5TXKeMZiNfZx3tg5bNtC6L1KzElt/pFr2
LGQ7snp5XktPcCgOJZPkpZWLgD7gZaTnKhKmeWUm4fzmK16TJPMETJs3h8MX
IXtYWOgEbGfQdwxDPNx9GeoFx5Zg+97SrkvTZNOhbn1X4etymqDzkhTrlI3X
vL6GTXBR0539fLQfunXtE+72YWYNbYO9X2juWZBdDxFFYSR7TP3XjB0+F8NK
Z2kGrdXAfrqJET/b2IVrwLcw0xsKW5GDyew6EwYIydQcgPga5kxQBT1i3A9V
yQY0ZBIbJHoVzO659jEXrM1vgXNim5A/Lhimk9ZyhzlnPGgCwyHZBirmSarb
hs1wKogoPYLbY3D7zV6wiYZqQkt1aRpmiBJiiPkImdDHl0y5GXGpguemm+OZ
NHigdS8sVDIH5jxpSk4v1FR+s0/V8HUagAfKI2gw5BPfROp5VSzovvIu5BNZ
deY+j/BxTKAxz++qYrBguS/srqQ76LkkN+7MNwXg2vh3X3kHtAcHiodi9yFL
fIs7Mx81PBKhMYJypOvqzIhnJV8PnX4AkqMZcvo8qy+09KC00E64B7+SGqVi
gXIMSRd29pGugtekxtnFl3BbEBpemLgnfZVSckgyHJ6kL9BFtGW4uwgAlNyD
UlHuY+PInIIDS8KEfUJvGGgIGKxGjrt6D/Amo7yj1KdR7igJ7gYy1H0W5BDK
vAe3JZz1CO/ExaeYJcU1SiRnJl7A7FOevrq1ZvfzPN4EgPPA2jqTs/dDLDgc
A68HB0rSV3YVSQLzk/+EBn5rPCNJAlw2B8IMe6GpcHu8EloekyMtv5EaH4Vv
yGGfnCfl5II5mDzYLmUBQ5m/ZSxk16n8M3BgoP1w+5pJv11Zr9n8pOU1y2k8
TQJq8tsipqZJLYADq+GeiiRdBdMnb/Ygf9Dy7jf8XNldPANHQyu+4Y7RYFka
NXldlOP9iYiNH4RWAAgMwZdm303OoA02SOmToetMBzwXXjN/gSOp4t28k8d9
mFEDeYaCDoVzmftcg/6g54gd/Vxf0MoExP1HQ948UiGxB6Wz0YHQmQf5ly+a
s8PfSKrD3ZIIlEkte9m5U0Cw51CSnKcZJuYFEkPrmPUYDtSA+yhzcNaxXfYr
nSEkLFtpX8wvcx9lA+tw3l8yQCplLsFnY0cgpXJIrekbtG6ktwRnnH81iRN/
mZhrC1okb0/nJToleUF9x1FIYBNFRTgm3+aza0ywIs1mVi7LbUSd/Hv/WpMj
Adrcme+ihHGTzkh2Yz2rkLBoculs3sdKlmCh+mNPmLhrPj3f3A0uYQ54jVZL
Oficp+CuTENgjR6Jm1z71RNbatB2vMhBfwaj8MgGDzOXi2nJPy1rxPFBmODJ
+yekMlfwxF3AO12ec9rDiAACqDHjjtVmUF6Umlz3uxwWZBU688CKvKYjpuhn
6NR9DPS5pm5UFGCs7x6hm9wBGDT5Tj8NZt6DhkuVn7I5M05U9ZbNocF3zG9m
Dm4rbgclMH/MpuDxu7heIGXkBmrAENAGOc4veWmeuXdlvQ5cYCjOv05jPjnt
ee94FW/6dvzfmDZsFj2VaT58PfzFJBoPLGMFFpns5dgdOoV9D2c/BoRy5YyT
VRrJgEw0ufRw58WOg/8ZU8ugIArGi3+TnoXhWlyv/+rBEyZ+OHty1Ko6OtVs
njrEUnkv0wTrBpMBAxlic+4gQB+LTMKcwLFf0BJwD/gV7yzFsRtMFibtqVZa
l3TTuVPwPbERSlGSF5gdYbvOo0NTx2jtre8xJXo3XefUr+vR9YTxSuLG08d8
JAxfjafW+fUHtNfuCL23HIFoqvR5coaO+m2FGWPaVmIfpyqBVleE1djz18n1
lDCFI20nIpEYK1PiPHSM56fiabXlihVOjIeNEuluhcmX5d55jFnr2PYTXf5U
sp1Rt0OX/iDbJ/oRPzBbMHbT5TYJRTtYvqfMv9pANPQJdiFZQVp2FRviB5UF
AXQjnok5K6PmgByOLhXGGMop9vWZ5b4PMTfcAdwD5CXJUtUSOBvzBXdeciw3
75DC65emwcEwE4Ae0MEFTDoQA5rKd1FpzXIMavWWz33zqFTvekVSCn+AKbQ1
MDERYrud0HQfx3wqxWr3VwjDbN4pxX8l5eznEs8AW27bj4uBfcdBAE+Eafsz
QB7Jod30DX+ZpN9d80NvEM6UXZVgL50FDTydw8gQeIe9c2deM7MiVYthVhJZ
VLkYBNDk1ZGaFRJtcuE5E0uzA3MweZNHli6bd0LkmHdSViaQxcTBKPCVSPUy
BHWoMiBxVmYTgZlL20AVIMVk8zvHL/dhTgnmX/sYkcLHGFlzPPkrBkLOkOY+
P+dMLU0CxkOn7sW5ALuACMwNT4e0MKN5LUnpMTrnn+4uekNWsyvmMcqybly3
Lm4WRaEuxqSuwKyAV71lc1EkCdtr3lnS0S/AW/AqF2MUYKrvmvVnPh38/CeY
MEgIcpAEg/ulJCgs9Gh1EH7Lg6DHuBuQro59f4s6Yd9pHjiPVXpuh3BUOfe9
uxJZMTUgPDQGMgYHQ3me3Co1LrkJT8em7CnrgKkyNCvzmnaYtHiYP5MFfWck
elMaX7VU9iba9t+5WKJZfDv+LW8iHOSMHeSe7x6X/DC7y/wYCEYE0vvYRg9W
idvCsRk4rkdhOvNe5LUEiQ01Y6Rog2640zacAtU3xsX79X9H26YdKA8c+bmJ
D5Rj6WgRjlJVeAgNxI5DZjTVABDKzZ8y9cgw4nQH1sqn8E9MEuPL1zF8sjg5
IikUGO4pu6poRuj0fckcubGb3UVvOtiCCtHHh9bXIn/GVxuPO9wcGR26cRtK
gM+LdqEANAadQfEk8/mOKpSHT3E8m3tH81p6TVTVZ0gVpmeqNoQ0jm7a/qSR
gkYylV4wK3uJlL1AFe2FF16ABih/W18Ur6er8A2Iga6XcrdGUxxN4200OaEW
1omZtCfx1OFcG3WdbNUukBRae/N7KLGzGDvSV+Hk4EoeDbNScjk2JR3Y019Y
ZijkAL4LjdMhyL7Pj/uRyox5L6KlgDByBipflRDiCyg5g6iTlFkJSQMigBEc
Oh73eVbdtAMVUhUxnLdMVjOyYFZSmffiVBR7UU4DgP9ZVl0PDgL+WsMm/FPu
1nXxZe4GGsjezbFKhgZCxVhvvtw23eAbeDjdFOEdiZTJnJJg4LnGageZks6q
UXT8TnE6OLusoT2OjrQl5VTu81Jr27MSxii+zJV3Vl5sgvBrdB+kiPYAGsNd
BXScSSGR2A2bBrwH8Z6YPnwXAsz0YWKKP3h15khvmRQgO1sHGpiI4rOTN9dI
ksDYTdnGKvsUzTTkRJhAhVFabQ/4KcdLLzyn5bChT8x9zJN/ME5nkRisG8nn
t/UaB3kPAIhMtA1SiaZyId7Boarg/V/JFh6YwNNl+T1+q7ZrGGwE8JndmBV8
Q1gufQkOXdfdCqd+op7ZNEWBFzhpfHDYp+5x5zXCQEQWTJLlrD4pF2Iy0r8r
eael1KBEFjG+Juh3h6xjNO+k8QDy8txGpColwoeasIB6tJPfoXAeX0FEPHqR
xNbO4U2AKJEkbIHB67cBJQbLsdR2mKsE55hj6fR95IbUn5LyKGYS4WvARrTZ
mj4U1qGL0oCnFPGsXHSmvstn9rBGB5sks725J/qgIUkaEwintYlBbPxZHkTk
5AFOPuvG2D6C8zd5vtIcMqX9qJnNHxgjXiQT4yuzHb/I74ILOiKn+1OLw46q
j9wcW0e1MTNJjFOhgw5A6beceEIbWBSL3CzULPPqHWyAsvMZpnPRWCxsL2uP
3X/8NTYu2bzaNaMTFgG2QcC5ZkxdU1iRfn9nHO2PXBx7rHkTZSC0SbvNsW1x
uS6wuzMhGv8hP3116yGxAy27pVbItU9glXjcEo/dcRqVAGT2m2TRgDOeBd49
l/F0rtfsSY2SAKqD6VAhFHo2GCJZpn3HZCG6efu8s3WwERhUX/3XMFWMu9C8
vBe04C9mGnuhR90lS1LFfGgYt4V0DbR8x0dy0KNmOaANlaUlb5oCuJLSbahZ
a/y51CNd1PabifFRYeAqxoLbArbYGpr96ZlaaI+s5HtCzCncbTATtoz5kLxM
UhLliKx3eQ8CoaY+5qeQWIwOV56sDXNDrW9OxzPrOukX1kdXL6EuuP/AJqyS
6Q/5wcVYntskXsnVD2Cn4XOPw9tfkWMUhyR58p5KOU3QVYjo8FawdCsvNsM/
IXiRmi8H/ScFlEba+2rXbihqxbyuK2jBWDBkkpLu8tvPbK+GFWOFZfe/MkA3
AU+MyEWTWEljRUCz0On7sU2wO55LI80hjoNYHL5r6oXNBqunm4URaK1WCTGH
Kb5kpOBd9IVhrQoNmWopn6251EzzUAyUZ+peWdWENGJNLqmVadlNjyQx4DfV
KnkeITa6eScWRGxi235kNTer1iz/ToHNSiW1ykUmM5VH686YNZPpdCFw9B8X
nKunefQF0sj1MA1AD8yX6ocFryJwhoAbMhYMa3Zj94cZNbj8yBOti5sK7Fjn
NZdauOyxTZLqkDGVyp6N23SpWetUmoWyU515UydvFpcEBouuPmH2oJEP1JFm
ozw9V2eETv0OscClsSxPbZOaEbhs+F9q75Cqb9e/oxcfnJRcQ6+ZhcEVJjP8
QOteTJjsCzRsgvxgskVQ2/8Nl0Gl6AsGGvti/M3PcGaZnvgdqCV+zYPras1S
8HZoEoKiGZIeOfO3fITzEsp6CFumBBWvBGeEhjHuz4q3shgqNWhqgzK7ERTO
xZmGLr4oGUta92pQK21ASbDyeEngANNTa9Bg05n7v1nR0LH//0U5ZU341O9g
GoysVIQpeoMx4rvDnRfxEeAedF+yH4z66ZGiH60KHPkZlk5OFki2qHd7Kxcw
mnCSAe8BST332U9eNrXsvf1R2qxF7ZHAtcDAQNsB1IMXTAGNq2dmSVLuW9/D
UhiORGr3895V9XctaZpiInL5RRPQ4fPNPZrM4eGva882djEBMZQjN2/TcYCl
W1IutDp3QICxVMVMV75c/T3pkZM4GlLSAb8ye2rD4YtJE5BKgOOyF3/Kqgiz
HhoJJIJFUh7de5ApKQnEOk7RWggP/hGey9qCFgQiG1jtR2Mm7bNB7OMNPSNa
Lqq0ox9n3xQzmo8a0GaUnwk4K0Nq2wnu9V5DUaV0de7zkqLfswp/U6rEmr1F
SSVXOhtAxlGVurQtu2VVvGGTJAXFjrR8ByoyfTToyHYrfgix070kB7H1iwyf
1Ai+9jGzm1HGI+CdLRImV8lTGLtFOfXohml5yWVf3/zseugrSjvQultyptV8
KcfN2g7QWvX9aSH+mvgU9Rv0dBWzHo2lg1uveBEjLyQL04Vn+cr87DqQCuWH
yW8v8YE2wZO/nibFyPZxBzScGwLFTBNwG6TCA0JEJzwh2SFqPzroPwG1A8MF
ZJq+0dCsgfbDTCjmuJRlL5c5i6HR8utcg30BsfkUWKDxwFQw456+BkkgoFF8
gtht+3HqxfvIewEoABmknPoOyebKpGAaAqdxk/hOzhOZAmRlgQFTkVAqGpzw
iGLgU8hRo30VoCigRxfM9tA6xOJdM+nJrTXI2fjv92vA27vHq6CyfJFm8yCE
ia8hiF02B2QIZz0CCMsisznlBDQhsdCySUwNrIy6J4hxWW4jf2kqasM1Gy+3
4fd1nn+aG5qMkVnchMmI+kkCpVvJSmcfZdaghEBZl0Fs41Vtx4jIjtuF5xae
q8eFkQRx2Y+DaaANoD0UzP7VF418F3XFig207pO8cBdfMhkP6ruL36cZD6+v
VUopybeN4nHDtnX/AlforaMS9jZN0gx+KMdsg2ehN5AQCWZr2GSMVz6CQh+0
VBlNwhZLLFbdetkFMzktURXJi24KHgE+MCtsB1diTx/Ssz9mAUGDmnQi0H6E
g94C46bCxUKGTNK7mfAG7Ivk2AxkQQBG+quBAslJFQ3TKhgXYsTlkfOA3VeA
WSTMJJXvSrXi73W1XA1TwpwP6i2fh6qMhUxHw7TWgTi9TBzM808zXzydw2Ly
rs2WI3WGo+Ls6H3ipqRCQhbPp+rMbTN5qJib0fF7WJKBwYrkcWa9lBcc8Q/f
uP1iyk/kcQ4C4L4lEonY+FURF27YeGs7L85vwlpydy13pDsarvd/3A+zGCMO
Jtd1D8MwmW6SO3TU39w7OnT9dl/d2ryWXgSFuYybA1NDofO8wC82W/DneWe9
2X8EWFCq5MHecB58BvbyzdV27KYeNh/tr5Uysq17mfWMDp9yWwmoa92NgeC7
8HNI9Yo84RuS/LNiASSNK7mDVCovmcUciY1fQbJHLWGRatvvsOVvO2KD/kxN
6DrcVcRkwdqCMIXeSHAojjqhb3NOe2gkxoJ25rdFtPEAy06zADIUOANK6Bln
2cIO5x2qDISGJQaY+wBfzD7EIvWz2vZDYxAF+CAF2eu/fvuYpIwDJJlE6lBz
sTJhfHZewFXMmkMFrjSuDQwEBivIEzovuUO9EaZ5XJbipQA68l+b36LwDm5A
RQA9ugb4VwQHM2rDsjRhlndwkQAuDMTnWdjHj/hljvA4werWvfArPCOwAvlD
S3xmwUcKPWQ/riAgEX2GeEi2Vfyg1t3XTMiK1meUKNnBOEYNpx5bpue4JTK8
dQ/TGcxhZCXM+PLb60y2VRAS6BBDVv55c2R0e0m71LIpnQ2PkvOPWQ+baP8Q
VM2UpHwBWckJx5F2bNNdM8y5JBNJpWXc6Uj47GPYL5ohMbc9V7lY6t1c/cDE
qEtgf2tfFKluvgxG/V6ydEpRs3n0AsgdiWBBHhCIuyXLpIyapGC93Ab3hvWJ
HEyhWF1Wxe7EzRrpebOygcSQwOhQS8KEhzFxYJ46KztNHjDeZ1glP3ZEFlGx
g7QQUejxwz6TwIqbwPkBrsJ2KRgqgVvxW+aIRJ6j5JruElMF4WdMsYkKaHGz
kBsYjONB+Pf+taPqPNRhL7QfxW7qHX1IrImcGh42i1E6R0KZ9+hleiibia+n
rsBG+qVZxfSefJ1naRCsfd7EjtXEZbBPisVTBXldTrFzfo3rGT4mi41LQzfG
cgwyrVzzOj15VzptiydP2wX0WTbY6lfstNtOB51lDZsT2lTQJoSx1Gkv54Y2
YqcjvOv9H/cD9mpFaaAbFneuqVuKOw/UFvv60AcmPnjr7Y+BXTwFPMcv41tw
PEHs8IXw8HWQocqUlTHbRisk5X7rHk/XMAACvIBdKDZ8m3vyIDAHiIBggGAC
ehcazcbleVjfzAxJvIyVB4WOm+xGwClItfR8I649LAL0hkzacnNJwzUo9tpI
+sKXVGa89rGU1vKfBEDA4dVykOQEWo15Qi0h1Ueqg3gQ2DKEw5Vwb6iv2Z57
ZvMVr7rbEC1J7hE6Lys2A3XcCh6+p8wv5dQrF4EMcj7FxPtxPQACHnINTgQ9
YtKBacgNpBVftXIxN5TUDSWzYIPDPcVQnaaeUVAOHwf/Ma+lZ8G5+szaMJMX
1RKeL0Vvt+PUFHgjtA3qCKuU3QdTzAUEZmSZ3VvNwROJijH+9WdZtbqGcKAi
IEFrZZ9+ld8C3DH6uABvHa3Afaa/UDhAFQIpSFs8A5x5weQB++6aXxhv2RzA
H0oGuGEjvjHFIEy8X9M0489KDFvVUjitlsHlEdBLmBVt47Z8i6YidsYdwoBN
ERStmA9/4+sdB/+OyxgRXVbS+gL4JpJnbH8FrBh10grdMHyehcXBQTbbLutp
/1DH6WJ/v+TEuPYJfhx2ASGgkztKfNuKvTBDuhnxrJZt3PYjtOqVg+V0mfsj
Q5RWGKnpFP4OoylrHeefge0jq/LgYPDkP2GyccGQjEgsdwr89r41dXBdqaV+
8SUAUIoHRQO0WSsdoCSYHnE66taCtxojBzKfw2n1Z/gHYtwE9sK4Zzd2Yd1o
DN8V0/ldJdNQU5GgGBhrxiUZtnSwfHTOT3BdQX7MAe9wTx4tMGVqqT++WWrU
6jFYxsvk5n32CbM/C0PoLn4Pl02xNHji7nfMugcNQ9s3FLai5KDxHfOacXbQ
TE0uhIFGVrSN4ZM8A9EbIGGylvpXdTrvzAkj2SzWwyOR2E0wX0/x2/MUvzVw
6O+ljNpggwTU7Zb8D9hKHlrXNZyQqJVGngiP4rVvx5+piURcyhvVVClIwsaH
uy+PMd4Rr4PYvdGbYmqjIXoh5TjjtxhfBy15RMKqhO7wQBcBtmmevZTtvK8x
e4nEOH/feScxEff+UxB7ZV4TJIeJAxyh1WAjCoPuQZagvrL/JYvSl4AFNAG4
PlMvWSDAZL4CgAgO12+U4OrOfEmaXTpbYjwatzAWMJ8+JkXVEmAQWtUoIc3z
mexTJFZESn4D9ZCcGSer+ToMVlKaSzXeepO1eCcOJt+aebIaZANd9W9CDyBE
3YjtAmebhE/op4guVS9josE8B1p2SZaY2jXMJnEQNOBzKK7L2nAwJumF5h5g
FjXGZGwrbg+d+p1mj8feoWmybtO2D8bL9BEqLgHnOzVRCVxR+tUq78zKEEyg
d7qegGwReE/JTFrIjJNtsuIZzBoTGfhcX906KRvRuldCLwpfh0hrNh7utq+i
g2GCCDF5cT/7GjZiMjCLoCWwICF/Zx+RtEjln8vJyuYd3BBpSxl633HN6AJi
B478nNk3EinX8BIJy4Sg+k+a1emNvAk/Z6LhAmM6JZ/qqJT8VrINOQ9l3tuV
/4oUobgu9axBDzHHgbPwUpikqIEpc8B3mdqmEHb7rmv+uz7wBk/+qsdE98l6
/uV3GFOp3RM6Lyvquc9jgxblNACDTGfmPk/ErCAKUa2rH8BymeB4c8B+IlUv
u2Pf33IN+CyZE7Ino2NIWBaHBxuhzeLC13zJgALjGBegm5GSw2uS334Tg8hH
vl1/wd9HN3iQg6ZS0QyNYmFLPmRe8FqWOiNlNIknAnqSGyQaQET8S/sZBd0q
7Ry5DrPVSImYlXN7oO3AHZ+3QFHw18RAHCiXHEf9HriuevrP7RCT11s+D+MF
aYH/MF/4SKtyazYPXSwFkQBelIdfpwKjFAwauYHFfM6K7rPzD8CZwVukFDj6
CygrNkvTyOjXnd1n4DphdtB0E5Zv4VbgSDr4A9pLycub3zt0NOlEDNQ5rwFG
Tb2SsLhuOkHVLC4JUxxTGt95aRxOWosVQLR7Hdg6gO+8cNG2WGyswiCSdDnd
CQtO7du6+F7CQux0N8HVBifb6lgvJjoBlG4U/qgf7D56wmw67glBYGBrS8+D
2NfONnTBSUSl/ZkmC98uQexwbl6LuGYwTzkeGzqPqPXkI7yUr8NadZekUBG7
br3UUuw4DbdpjUThnGDglF2VXZemQbpg1L2VC6FYKE8KsQ/DIQWxm7YbxG7l
TTSTG8IB5pzxSAG+8YhtGywXhtuSHzeO5h3cAZDwLbPrahZavxZ8a9wqp/ID
Z9Bq2O+OUh/eAYgNeNIA5tTGoja4dOj0ffOz68Bb5Ga2L+fQF/ikIHbZHHP8
WcpUadHMWcZ3gHLPNIit6aTAWEwA6AQQRTwSzyYF6M1xG4PYzwNTmAngRcKf
8l9hmGTjoOO0IHZ5B9wY9ZB1bFouy+Zf00J8/6eTiP2oyfQyzyD2zpclK12D
2Vw+jvAxVXNOewLHfoGNGGj5ThD70svAGjxQTmeUfiSFxr6pFgfBlGjvLZ8L
35M1/9LZWtAKHMNmaZkzoOzJbTUGsdcUmXpGkBY0wWwqNfWWzdWi8BBXeP6d
s9uCJ38tiC2Zr+R0iUYHDZvzO8J7q79AJtwZHEZuWHygjFYJ1c9/BcVApDz9
6W+rW/uivBbEPvCfQFTuDxUEsbFiOAJintqPMEwSxy6LrpkSfTfYiB6itLJe
cXEqEsapRCYd+/6G3oHYnXlTaS2Gj4dyN8nBa2wo/waO/hzKGs5+nLkA5ILt
3BZtZ3bQR7qDrMqDA+oI0BHNVOMEZjMov1jYDGNHqeB7IsyrMxk4UEtKAsVv
8YgNRW2I97KvDzp9x8KmUOZv5bKSWdLTK+8iKBQGa4VUIfyM77vHpAjdSM9V
tREfn5JMAjwISI/e+l6LiznTIXDkZ77t/wb1CJ64C98EKw8hL2yP6HKB1Lzw
rMahQ5FGB+oz68K68xg4/F+e3FoDxYISwxAkM943yOQ9/BTUElYDwdZkEVgK
Lf4l2ZslS94GreBgEv+GNcdyInXekyfC4h5cVwue8H34Cd0RWm4yYOgN6VR0
uLWoPZIwZYt15mqcD+bASRSmq+XY4gkROzAYB+1hlVoyhuaN9I1VVevWNBdW
4PcfgtiuFZKEsTg/hNg2Iv3XQmytYAIUZNZ1mhyb21BFhgPvDOEzWFqWSDaR
+z0A0bILkuDo/RPJ9AJDwWw5ydi272h1UNNLIhygDPLGFBbucellyQ9woDxH
/McXuDmDK8f8Sz+Cy6FgPIK5g26j9l/mNTH3cS1BDK4BQxh9WN9jmzyQVQDN
8UdswbqEPOHaiAuxecFsfcZsdcnBk8zfMpuklooQxayTnnBz76gWfzTCyUQs
ei4MGOytXBw4dgeWSMusaOTAnjI/4ImzwExnKvE+/YLQ3r1UNpWgu2bXbBpc
+sU9leqDo/wPra/l/nFT+cUEKr8vCw7ZkyX6wmzIDrYfhmM/pqHaLbuAF9PI
NZpJADiiC28elZBssBdzA3yBhN5N/xK/XthywyZzMu5+Jj7PxYbSU/BTxqXg
VcYLbunf9e9wc7geMGFYH1pXy0yns7AsOeOT+dtgxm/swDBe0Ob71tT1XJ0h
GWCu3+5aMgnSK3y7IxOnA2LGE6WddevM+oxUqoIVMPR0kDab3BdT71jQTLNf
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
xdIYMbLsqVKbq7+xeiMPY7XZesVXx2MAuFoDqKaKNs5b93qGIPbUsDeqXLyZ
NyT8MjcxD68u8teOnPwJjVARVHsCyKJN2qVWjP1dCvbmzREtjjd6p4Cb3ql1
M+Fn3Wa460fRPopUd9XtSCi4F2VKgKQKVsdjMBAfQGZdewL6ui2EPmKNa4Nw
nYCR4PvXRewR02MVVMZfIQg+SRD9YxBb5Q3DexXL11vnJa+9aqif9isAydIh
s+2pB/CORPGt7QXReccrgRE0xVpW5YAtCJUKARV8pkJq/ZehpqCcd/xE+Pu7
ytrVMSpN4FC5WtVEu9SrGk9f5acq1xiYbALrpqYUoUqwStWdK/5CmWIN+1FG
tbrOnzk81lInoXcQw8fXDRgYPZfjNT4FRsFL3HjtPhAVBLMaVpmDdkCKhABT
ymBtzvQeNMAmCqXeB+XNCjzoKGy98A7ICdiq2tWVq67X/GnO8Qp8B2Bkrzqj
CWm/Olunp4rZU163QD7QqfnUCxBgYAFlUX3ppgy0fppaDa7lLvCx/u4KPWHM
fZ9F+8YgXcGQjce9giLQpJL7oT3YSnQfJAc8GaGdZS2G0ak+dvQwZmKPpdv3
tpyFGFuHpi2QZ5ieFwoAJHsbM6ahre25T9kjS+sjMPvxrws+P1HpTe0FsBc/
iu65iZXZXRSz7OmdVrrHa+59iTkrb+nLqGnDiL9svSe25jV4VuxbKYUbLoTh
sdyd9cEXaMufYfE5MxA29aBp6WWVuAs7gikB2B9Vf4E5KZZp7jW1sCxAtLWt
fx7HhKW48d0aFmGK1Xplg5jISztEpz88WNrbfAqhAiTV5Qrb0XBgzrEKaDES
63lz1j3hq87KdaA9YDstTbU6sbbwE+wpTFX+YMmXCDmWiw3S45WD9zAvLsJS
eDBe88lnEXWEhzHUrfjnsFbcBEVT2BNMxLvh27/2zBq2gzcBVfaOF5bUX+el
jNEOGCZbjPghM+gj9kUxzEcfZfCMBMTm/wUnq5C00/Xtil058mhb/qfsWtuM
G9Tb4spVvCpcJzBZp2HWfnFXYTS07s90TtJdwf94vpKK4gWKWlfYqqrX+lLw
w7cm71GVNpS3rKVPHQ0a9mNHbvuiLLrvn1hYtTq9/F1dZ7zp+JMg7Rt7CxC5
uIFh1Hov3r6gTAB7+TtkPrb/NuQQHBuwgk7YlEdWF7o++jHaoB3OsJtepYqF
xSLjMnjOlLd1Y1KQRq87DeAP2EHiSSvOANRgO0bQsj/MjbwUkiu4HyQmEECP
jPvUo0evlVFy/JovYCPExwnig/smwwFXPQi/SbVZ/LU/dR0exxWHx3HIJBPw
w/4pG3S0EpSPJ+hfeAVs/enKtawlfm2NX8EWKwvMUpYczFlJPqZMrtHMJgCt
v7OEX9Fl3lHE4NBVqLV2ashaanYWwWB1LNB3GaVTjDpb3HYh0jMIP8Q+Vrb1
V1ozTeQf+8giz7dqnwApAAg6ARfPbRNM9cSOIZbIYeOhe70uKPKm85ZzbyLe
+K3IMzASS7v7pqm1ToEYnjfTFIXoC/lpXmLu/lwJi+/vIE59V64iDyyIql3h
+vUKMc43dDlVcNVgFrxg/Gri01kMJFr2qELuvU89KKSi3L11EFpoqjcg45Oa
piejtef2dRYm4oj4X9zbTmvFWOKXE3a8qe+yjN3gkMuM7t50kks52ntimrxp
1QCPeLs3RouQ40f0RA4wEveejEFFPYgUuMBqQOTUEq5+V6hzoLc5CwPtNcDB
nF1FMeYLMvd3jxyZMgu+4tCU8F/UicmCprS8beeZL/cFCsBM6IF7duWtfX2j
1cgtvy+difd3lRQ19WBTWId4v/qplaoxX766ltdtZ3ZAHNiitu8Fs6DQiutj
j8THMk7VqsmdmL9JoAbZU8U6K0PZch88zoHb5YQ7GZuniW3Li0DydxZGLTpF
OZs9jcegvoyTb6lufHPmSHf45kyoCF4hhsbpMePnW8iD94MARdWyM7Sno3QR
mAZdAas/OlTK+OH2qtUzdNXqnF9Anv242/lDXqxbetFVYlv2e3gLjobqMUbT
27VZKnejmtUSpBB+BDYOgYESs6EsoyI5mzO9/+Zb+wqxI0gCTL6rdsvbKUr8
YcyppY3FTT0s42H3qW2yveZKq6ANktNTVWw1IXnTyTAIbyUfM/mxWqN11r1u
u1Lj+0LtBbM92JXpeL4YTjrUTs3RYscwx2jljMNl+A5d1RtQPXW1LvlSYXub
8jFMjA0bh7LgcCHhF6PdGhIIbHWnl2dJWXTfjgKvf8JN0SZEAiFRfePIQeDX
q9lAYGDpHeXLoVK4qCvP1EJIMHkMVckmkYNef545skSWYhliJRmnCgLX71JD
FoCuqxRuoBDxwrlYGUvVT/EC1BgUL5LDtrpPCqRgAbFEbA1b7CaDr+OYMwb1
bO0q6axax9YjV7hvk/fky90rXwFb44uR3T//wYjNgqiUU3gfQs5e49sqvLCn
yrvT/mpeOZRGnCrjmf7uMubyrLWHhmbcu6zEY/+wlYx/trUlhaLrODrvE4AC
rbxnSQlsgeuH1v1LZEnZWFmvjB5NCPmx144qKJedoD715IaRwowyjr21idxk
b7UWNG1ByxI8KRpvBIOeTsLAIfM4fYg9YAi/gv5Ftv9NdXu/IM4YbGTXP6pD
3MG7AY3WnKnQSyyC5bI9M2BFHdPKm7lO3dL/YdCycb02nffOiO65+dE1hQlL
N2Alc9n08PwbggMLmVFI/OpFdx9YWTQw1pTXf/XHSKC/9i5m7h6yeg1b/nOz
td6bdbRi0i6F8QzaE/9E1jD/Y7kwNxA2hU+ohufreP2JdUA4g34cVgzVCN5d
/ZjGeTGu6X6L/p5qT2RLXEepbXJXVfycq92/ohhReW60I/bAaJZB0Is0k6cc
T4ni2EMtf+FPDH2QI7ce232JDyQ+7BdkcyOj6cmJS7nnpZ7FPZUQez80SEzQ
P+lmOjE8mGGQPiV5vsOjp7iJiw8HTuHGs6+gxCZeOFYHpTdpcYIjDMpz8C4j
3x36XgVJUorhsb5n4q/BAQ+OPSIIzj1Y1i9R028gEacxrqJjcHeCVwuuTGJJ
gzdKUvDhgOM8fmrB/4Mvgj9Jbw6OZcKJkY8Rm7ERKeNBJgleriswwbv/gTh9
7d+ZUIeawHZXYPFzrQcKFmpQlWxF257bpv5TqCT2wn0KPFC+hSEDQ6yiyBmw
AiaAQdxZEIX/zLFMLtQBDcIFVheD6OGW7CmQH3V9rd1qxaA2ZdV3YEBhC5g/
nYHnRTC+Sv2uWIUbuya7Xsa9MQOL4HG/C09W4fN2h/aC+c9ahWT8O8clw6hw
cB9HVz6WaPcQXC73ehikx7qoH7raWu1uPf+ON6fwxvEwk2zVdp4LycHEy2+t
XMMnWQoFS0fS1DKj9Vxb3nRIAlRHJYkGhrzFAB+21oer/BBAFZnC+6y84Udg
l04D6ncyI7xLK338eWf5KvgYiwlbUzMC1TM8aQ2M/Fh4+p6iGJwNKrijIAob
8bZEHx+CFcyGBrBKENG0sqa2ix/wXS/Qt+FCmE+yv9gdmNWWvAbcFu6lBmQV
X/mzTnYNGmCtx3ZDFdgy6MTmiw38CcLQlDFRWTD5M3DkLVt86SPWUQVaZflN
G1UDduj3vMYcMEKMoNqb9oXU3K1wjmfWQ8BYrn1qFp/SfPLZiZsVds47ePFM
Gb6HLEFleyKHWi+8q0bMNZveTyvRsYw6sO/2+iQdpUsgUdimzorVCllUT968
hm//mo/xK2viFQ8YCavtqUNYild36Zn4jCPlhyqaWZYGWboj/kTGS8FwdwzH
kxv0kNRDlcyzGCl5zaQgWk6i4CHqI5Dz9jqlQD6J1f7wYCk2CGcE4jQ/o/I+
C3TByqv/+KkXIjv/3hPGMfSwXJbOi0dh1pVgW/Q531p2ugaqj4cC1V9wsgq6
iHbkx7rPhjrUmODoYx0lC/AQ4ajKoLG2blBxNAWthB+iIHctUomYj9NLYwd+
w/Rbz/8Ol/Omt+pYNJbiwVVFTUce+fn0Kmvp/kTTsSfgTnyGmbKkCM+xqlZs
Fr6Mmo3mvI2mcwvWjUGyYng90X3/NMHKevOt1NImtkZdujblW+mJ/XUr/9do
yq90flUwO5Z6K76tdHNLnh3m/672S8Wd3rtMgTTKwcx4Jrr3F9E9NzIXU653
vcIhOuWkTo/+7Xjck6z5IvrecmYSGmc9Cx5XJZyteegRXP0uRTQ935L9+hPW
q53BqxRkzlvAgprR9F7i/QHroXPX4lI+qYyk/XfwAT1eV3PD3bBiBg8BY53t
iGkeEsJrRLR+zf8pfc/72DM39f6xCd49IbLj74xZRbiUQwooFNnxtwwAsWfH
UT31+jzxlHkHin9z19tMWAy8Gm+b/tB/sDJ1AjUCo8Z8kTTUM6Ki6GJr7D7y
qQpCxyb0teW05U9nv+CTsLtfzy/zMn0WzjfNCllsFbzkfwrmAO+Azz/NqdBp
W+77zZ/dgCerdT75XNA2tefPHEHRnmoWxBuYBm3T5N3545lJkGYkvR4ey7GH
A2wnyQgyVOQzbi0npqWVtJ57q371n/hzCnaTj4XW/2tJS+qv1dH77OTwpv+I
nxVT/YQJo7xIMasTN41Ez+q5CTuY+SIyyYcfXVsYJC3qktl6zj+cZM2TLHKi
a0PiT2gBsjo4SmjVLyNykD95hh0L3ph+/9a8hhdG62Mn0TBV/o8rXo7Xz23L
8yywa2RgKJlcJU7Jrku9hsdym+tuATjjb+Jn4Sgpt7F2K2sYDH/y+wb5iROz
UOBccQzPiY8Zki1pbAyliY8ZT/ADA2PpeuIzCYtvahgbP82gzCS0bLzGBWln
kBskMcAx8jBOhhNXS/pKkvSO54rBqQ1+dy1dxU/8gp8Zv3fB8V9/zePXrpA8
7DEcO5b408hKBt5JYphJyjh+PZN56dBYJhb4/LVNiY+5VPB2iW8lf+V6V3NB
Cl5hzP6OPdYOziu4tomrBb8+foV/2D94nTqJ4Nj21UOGIXVYXrQpPpLdtgYa
AMn0ivpwIXeZIdUKkGg62Rq/DMjXdQ7gXO8uisFh5qsS4HHYJrZblAmL2Xpu
eVYtfjRGHHIIN7M+j5mq/F+1HhbETcFzyB6GO6Wk0c7Etih0kLvUbvVqrlAa
+Cp8ScGB1rkVQ+aGZjDQQSy4bjonNwMXlPlhYbVODrNDnaKyLdl49FhtbDfU
EXaNv+wF+fk1O6SGIHgfxc29MOes+vb0ihY1nSxbBjvFwIFIEDA72cvpqtkM
1Z97vDKtvBnWvT1fdf/UoaZmMzOFzqmjd8GsltMv+4ywazqgOP4kFk2xJeWr
8HF0ale5FgZ1UgfF5Qr9GrrKLdRPrU5BNc6xvWEo70DAoGSQov7uyv6uMjg8
7Lrl7Gs65GdhW3PYhZlHyncVRmGnfW25HcUL8IO4uycBQTjVQSazGjLMXle3
91sFRfVzFNE98dSnh8vkCBx7HEukB4JrChl/V+02rAOkXcVgrSTvCjUl36eK
Oo0nei59x9S8My98FcM9P6OKEbICCro48xojWZJZo3osZcsRGPh2rOcSW68C
gLVbvhptZQ5R51twclVzqlqPQWetoKncDqMJ849s/6n6BZ//HZ4aU4N14yV5
jBzOUUGs26KPYgo9ihzkpqpOFjvGxg0oXXQ664OYseZ62Fo422JXFFfPRLCP
GB2cGt5hUrgD2MRHrZoHX1G3rNO/9WQBkbGLH7LLnisKh+SmrK1at1gbccg2
3gp8GJYLFWeaynAvnm9t3b7CJdHe9SjbkUvhfSgcq/l046H7GZWeNmLs6r7l
gmvP1bdd/Jg/qW+yjlLnsm53Lyl5bbeeJ+rhXf4MZoEtrl94gypBfZMf238b
HO+mqXWQ1Se/URMuxqa66MdVotyqFhxismzQU1bPHKGFRaOhmbXtMGp0ChYK
NX3GCimcqG5Fc5UIZokS3eHU2xeUKWgn/YHpVgBWKWbWmdfb1tSv/j/gnNG9
tzy8uojpwPQgGA3f/n+4GCjXyzuVNc8ir1R9krc+O1LORDzUh/kih6zktAPF
WHl2n4swkXf2F3N9lqu9aD7knzVhzJFdP/NmRrAptglfQ9myl7+bYAUn2bLI
jr9RS6O1hQwDAEHj4DbMDvVn8KphfvghtgOfC8HzPK87F6l2gcp9Z01i5Mpi
OPIw3jpa4EegqKRHGjMR7o4bxXTAN3xSa3xc6A2FmYWYvz0r8Q+jjEFq8cP+
AdSdgyPPrfzEsvvSUMIK6BGbBQtdC7C01hgMwzrIj7zm/8q2fhVm7Kv3J48O
myAqII+CgOcDlmvgx5v2QoYY+ZSnEFdqQ0/jMa4g6e2/3NR3CW+6a3AISFRU
SbcCvDENABc7C59HK61v7OeNB+/1yjZ4OrE0Fbpv+PavYPIKmu0PI/MqVnZ2
8s2fVSKfiGvDlv/stbnsyWPByDDs0RheTALYnYBZT/kqX2SNub9B9TP7Iwqp
6qvzWpen69otZEKFgpkjWKG2TX31NR1x8FaRk3xx6Kq1ACtl/IicKuf0XMKQ
YeNUdSe0h81VN8nL3zkVr2rrT7QgGdDzxFNcwQMzcH8StSu5ZmlLL6vkD/h4
hzXUUXBDKnfv69SJiiqJNZ3E6PhRj1rxxlVSGOsM4FuVyxRwrL+rpLflLFf2
QEGsDOZpXU69OilH0w+VN6OtzAVUB2eYEa915m+yl1amKBGVxMRDsXrLLII9
yar0jWYTsYOs267CGGgPKiIVauYbO8Ka5PoDtd5aVoNbY6dk8SvXgk683maF
X+AVmy82MCpes49qD1q7FRdpWVYtaIwiILRWb3Yn0N3bnKUSo/FGUAUycKa+
w8Qpx6XdhVxVsjtVp44pb1Ksac5SO4VD/FSNoW4Hg+FeOjDsqe4O7R3pqx5O
YWu84txFVZs5gRhgxJFMQAyy8Ul6GR/2/AKMC1YYe4dMIsM6XewqYfv0BLPp
FOujINJ4oz/Z57sWn3lWxGZgaHFmtRmaQ5l17bpj5Ro+LzHoratpjwOt0AaE
VqnKtVsx2aA3O5LT0MksFKxYu5Wl5s0Zh8vECk48tS4nxAJ6bcxFp6rrOuPq
KT9aHJLre5vOY9WtaA2qHbOTfAwrk/Vd43b8wMHmHKvIqGlDtluy3wDT1Ga6
6SQmQI8a677dcD4ELWH1Xt2tIEYsDtYcFuEdz987UOz4Cclh8Btgbi1nPkgr
8W5u1ks6X0+c4zHvb8LtWBN1EoQANOzn4hLUplPMUW0XwvtgESg++45Jaj0/
tbNyNXaf+4Lw0b2/wJgC8hhr7KNyt62tBnuNZDLN1py34QzejkQBA53qRmH1
c95BAhmqeE7V16rvfeJpAFxp2sULlG2X9QoTx0jdsbAUfcE+KvVp6PeK8M+f
wVJsL4gqjiJ/Ju/MPV6hzPHsKZbcPd3r4fRN+8kP59hNGd0NBzx+43h1q7ay
OVNH1h6PXb1B9UbiVy5ElMsGMkDbhlWq9JgHOZimpLN97DILjth480c9sm87
z0oq6qBTNZRQDcWnRbu6w3uXZdX4OQ9SxA+fZ/FVXjucclRd1CHe2xWlrMTJ
tRBgLosdhxUsP1Nrz4x08plIHwi6QsMBFy/4ZpIryg+cYU9RTG37LKWO0W68
EFb0Mte34w6kDrzyOtXlrX2QW/SO4fEVlgWY4h1GAiGE0J4JdajnTvyKGoso
lmAPZAzCwDYxQcQSq80+imOffV32JZyixKLsN+BLOtZuSEV4Chp7EEiUbiQk
cuCKmwn0Dg0FP9XAvSFVsTSWesYIIQYFsZ6ehgN8mHUGxLrrd+tcumE/a86A
mZFapTfsV+PgrpJpaSWMk8Egfs9syQNaYSZeQ08lcFuyxLHLl+ussmAWY5t1
tOLtlELkH9akSqe50/gAiKRwnRq1UQBhrMnL5m15ETAnx8rRwIIwqQyVy2LK
1Raz4QB4yNyftnNpvA9oKtTUKrIux4VB9lrU7XoFe40/5SRfjNT6Fi08qWBj
xS7WbYd6NR151Kv68EK9ikJ7QC0gAnVgkFBZ7BFKBwdjVG+lFLJTjFBtyluy
8Js6BoaYskyAKv2eEWEumOXF+rzFoTXbfRGg8Fbm3OuxtYUqXXXhXbDFeeb0
w2VteZ/gGwILk/fkK8Pr9MswLrYP6njvMnWbVenR9WIFn5+otOcX07maJwuD
ITPtgF1Rka19qmdVtny+qhCfVNXBg/fASBn/q1bzh/VXhfOLH/B5fppPPY+Y
MX4oJUNl0RQDWTj74/RS+HPLZzeAWjr7OnSfAqiOPsoeAWhWrGm+qrCuLWTA
v92pIlesJ/LD9b3hO5CCgVMwTHgfigZtjqX+mhUG9wDeNdn1quwEKS2czZrf
MqviF7MrdF7aeo5P+oCZiMhzztv3LC1RxZ5D97XlfgD5xCJbA+KnnM4xPNaT
lcf4xg7cCbCzjJ7zBYfBVoY3/nurEpCHbABxgDxbhhCyQbOOVeC5qPtP/HI0
9Va+xY8OcvsjINIja67VnAEqa5f891D9xvQH71o8krrFRJwRPbhKtAGaraaT
1rBStKpH7ZzsbEd5PZ4klejM6/FjwcMWQA9fAwEzPlDnhxUsjoOMY1Tw7OW6
p0B/0D+cd6aA3Ao263c5zDI2Gd+hq17rCVFXZN3QVcwNBm5AXUi+XZxZYzWc
y4AvcBjnEWQAbA0fUvFJwStoyUcHS/cWNwIs4DPwxXW4HdLCFdAp9NqsZypw
/axZVXbQutkuxnlU/cn8GRYhrDhSdnYg8DA66XBsOOm4b2xvtWCdc/8AxlFD
ZbKt5xgnCAyjQH1wKywcroG/eu3NytZ+NAoUVUvunHpwHozCmwN4oXNCYBNg
RgskPmPNwj46pFDzzsp16rhUtgxExTXm86rdlzERB5wPMCPm+POPlfWPsoAG
2EFAD1aGBIK3DAw+gADwLQTDMHA/yw64QYB1ZlW+UqURrb0LTBXji/qAbwgh
M+IKrLbX6lSz4+IFzM4Kq65bY+WSFDTbW8tqW7/yEvDZer48BETXr/1T3AGL
3nkSV9GD5ZBGryYBKOlBZOkSFwY26NPDZdBdRGVngVIj8d+bT72AqbXH0Eem
7C1Yfz60MTeMX2nubRGKA+jxRbVZOTsZ883aNh5+2ONyFUr92Q0MAO/vN1+W
8uGnVXVZtTtQAbyouuV/ZC6GHpew4Kpne/k7UMLb+OqwIpwKU31cuaXLntt2
caV6x39Y3NTbVbsFRoF1s2KDW+CxQD23ON/QGd78n1TKbOAK7gko5+mTEsWy
ZXqMJfch7CExt35ersbNA1eA60F7kME++vmb50Xibo9Exw2MFERiK3lTJ2mX
hmKptwHpkC40Tq1jrSAS6wnMAqSgh1yDK4qpNjchZcShvvyd908RATaIQ2Cu
tfburYMt8GGG7UGnSXAh3+3KVUv/uQ0sUjZK5GBCcbybz6Dl8jsx8wIj8oys
/W4CZ7g1Xpt3dGWF+XEuxEwHRqNu+CvO8kgB0rhHTUeCPMr/98BpDR7XNS46
NEZh+0KJ02P3+oMnxj684dFaK8HHEGNupGDskegpr4kdPEOOB45S/V/SaXOQ
EAYve20wdlNvvjwcyFK/BkTx5EchPgU/xf1h/5B/Y7xZdsK8QbGXjSesHk7R
4NDvBeaQ4faLVu47ChnwKAUoEwYaaWdDPTa1r0PsAjT4VD3I0vF8wXMsJlQZ
UytXuqcSmgciiapd/BBXi6+LQhcvkIeuWnbvQcms/cESXAlcGwCEF9ZHcqeq
33x7EagcDAQODQdO9YfHEenEgieDub2DocG+KM6zPQ8Su7MwqkBK/LL2XOwX
e83KgI3cGsMKckJxcdww8XjB76iL4mqwEbumMh35M/kY0+dSQqecEO4bhATy
03r+HWABPoDNghThJkC6XjF6w2qg7E1HHwNzsF8vWwsYgFffynkbdwzbAWXl
7spHA7EtWYaLwOfV7R17Wr1BmfXYvkgaVhVrC9Rj8hR1Wb7cozXsqfd01ty9
VwwH5gNqoQrD6Q+oQczp3wI4oCuIgUPB+9NV/+pJ8Bz8t3CUz2Kpt1oNgWm8
L1WtWIW7B8hDttVLfdtFLI7aPjYcADQQBozOs1aKEHcbD9rXhM21IqJ3iVDl
ToP1KWqi+Av+iu2GLYBjOO+YOYygH3JibgBhtR0v+tzq/t3HXHgfloh1eNJM
CWQYWwlXVOuc9PsRrbbc9xE8PBqonQ7MsR1WzJblZU9VhLyjAD4MFDM8fJnG
Iw+z+A+vLsLQMDUN4MxrEyyAwatZsk3hTf8h/M2/xcRA+Vg3q5439U2rdKqQ
huw3Irt+hv16zApXKhcMDbKyPC5s3s9L+F++ghuxYtyRibDLjKGn8QSyraCd
onkgNjz83mUl9QtuUFBK5ougPd9tzZ3GtuLXQGYYgNpEFn+BFbCGIxW8UJ/H
C++pIkp3BWiJbwWpHrYE9gFrR37TzEqWAjIc+vrPxRYyJrKqOoLoq4eC6rFC
+XIMGa4QwqkyCL013FexB8ceZ2fZaHgLu/aY0V2JUN+l1v7LSCnXh+uCQqAB
zId7qYCwJcuA1Si+l380TBtJb4f21C3/Z4o578i/b7n8EeQND0jHiRafrwPS
ziL4JK8btv/UD2a9REZcZ5XVI6irjPgwgh0fvfJIuKZBRLynWpkR3eUPrSqy
WojV+615k2/KiJHtLLoG10Mjz22DiJ0E1+MfpybS7QcCD6+vi9gJ1A02vvlD
/x0sb1ZwVEc+C5Ve0YzLz35hkjwhQlSkdotlNGxW8ZmWM9/aGq46W4e4brYa
zjoAbMpghYEORUblfgCseR4EAo8jhu60XnhHQURnX4cNppYqWQ/nS2QsV9Fo
PbGjWHyIDfigNn9Fn4OfiuWr3+m9OcB5PEHc4STrFvwZHvvkMbF0wczHIGID
VhB7O4gog9t4+yqMCO6VP5x690Axis9gWBP1CC6a52cL3fW7lXYd2qN0yK4S
772L+8k0VZp+vQLP3FPz8fNdVREvXYy/AMiI8cKWw3uxbjiGLVmTZKbrd8LJ
s2xNWs68uiiz2vJJS9zTQWX4Oh9ggzCvsiMWP69itqZoYCx0mjGouWT9btRc
J701W0Zyrq3SCyPBMjYdeZQ/Af5MtjXnLWBfaKAHdhs3Xgifj3RFdv+MT6L7
yKGmVrKQEQ6PpR96NrclD6uEmeBXAG3EW2m7oMeyA0PuZUOw1SQitAeWCw3G
IKqPqh44LusoXfTAimJZooZUZZ62nBU/XKUsJ1Vb7SxW7p4lwsQO3g0Gsiaw
Rx8DnAF/PDEk3AfMvbKb0++35HFxBnEJ5W7fgYXipuwjq1diAZDMVA9KTjyF
EII8DBjngpHjOzMSz8sDkJnC63tV5ASQjO2/Y0TMLGghvPHfDVqMqDdqUbey
0y+PIlIjXNdT/AZHQ2QHLCkbV0Uh6PEYV56yrwCTV2m+OYR22FjuWykqfYlb
tyWvYXA06AL9SszUWSjM+dfzy7iImr5ZUOuAxWCrbFftVjz9hDp40eagC8+L
yK5/dCqYa+ecDgINW/+r/9WTCptAy+5KuQZXvoNmg8wJ5qMyvFeutlhDRo8k
GRiNlk+AEiDpAe0JjUs8BQtCnzdktBf1yq5q2J8AuuGxURkeFJe4WmIwQVyN
jy11cq0erCFwIsA+CYqTYjYScVPD34/Y1wXwURy+1hNtOIDYQe4d/MAP+4eD
PPd4JXoNnXNzr5pOSmnUYziPUkDSYEreZNMj3yzTnA8fb+q77PEAMKuFJ6uh
EHb8eACODXtZebZueVYtKgZK6JzhcBlos3SEY0fB/025DSgvkg/4ex8TIB2U
+FzJYkvECYs+V8NEa9Grbs4lX6IgcMKWmapmnGMyPGjZf8PB7INREu5PvoYD
TDuxI1gKbqSAinadxmBBGKRzbObukS1eXh6Wy19ZKAaP13+iuvVNdZ9crVyn
lrMYI2O/u3WO0ZFvlWZX8Cf9lC1lUkwEWg6+sRpM3DteyTcvW9qc+RJWQ+la
ZUsBFmxZVVs/6Ad/g32xbp5QCSffYWfgoB/261Rtm3uvOPugk3yims0AbF9b
LvDCvlj58a8VNBtO4YcF/EoZW1/0Np+2BmS7Laj4CVW1taoaRjiXYyaYoFrD
Fy+AnTJHq2GlEPTGI4/Y2dT8lrOTvdgI08S8Mi9gYeKmvJlHyu1JWRoefU1H
HELodavYfTyCzvJVDONQeTOo1XjoXsyBOu0ef0L3LV/OjRQFHdoNimLi1ao+
/1OGgYE7XNHCixlHynAQ4Id+FMP7kEwm5R5KS/brrB4rw0SMfH4EDYBXYMIY
Kq6NikPqMWUZYgx9TStrVsft/BnW0vcruChXxmQDs+qXpCS4nX4OM9f7VDbs
5zUYHtt/u2fXKjr92ASGCuCzFG1elfHgva3npzJBTAPbCpF+dqvqjXhoNFPG
QXhnfxFmGvaOD6JWCxYyhO1mxQBw/FmmyXgwN5gnNSk4OxlJQES5DtKoztcN
qVgcKDFD5evYOBOwxXr6ULxAFTWzXwd+8dEwN4wT241zpLz+g/fqReZLnm7v
bXy35UegRgi5jE7WK1wHaUQk4Pn4xf09VTpOX12EHYE+4TEtP1OLGPDht1PU
gvmeJSX3LC1BimYcKW868ghXVhxX1iSGh7/2wMoiJSBbYyA/eWN3WAq2CfVU
V/fUX/M+K4+1gowhyd6tmH2BAYa+kIJbjt4yZKbx8EOt56Zo/Ws2IQ/1X/0x
dIW5s2tcEAWB2DM2HbOn389GK5R06OrtC8pu/KD64a9U+ze6+0Z2TWeYxfNZ
TFSGwUNg1Lbj4ocICT7pY1Yf+O4lJTibkq5jjyuKHszZUFDc1Iu4YtzdaL42
GnUcTbn1N18q5BvdZ7nY3Mjun+sJQuQgiMqw1UbKkFwk3xpWBk8AfsA/4IIp
MwXcHHiXp3lCj0FRkAowVzZo9DAbhMsDUHjjM+AOR1uBSZ1FzAhNBw3YDtxD
VVItX4loAVDIwOTd+RbVNlO1R3I/AHmQFlQPAqakFZjeube6qjeoTN/JZ7m1
IprOvSkhR9Hq/n/a3gO4zivL82vaNVtrl8teu2xvee2q3SrP1Ix3Xd6dGc9O
UEud1WplqZWoQKVWjlRqiRJJkZIoiWIUKQaRFMUgJjCCYABBkCBBgCCRc3wI
LyBnPIAiqK7n3/8evA/f+x40W60uo1Ao4OEL95577v/8z73nnrMHVVE+hOrl
qK4xGSsVregCF5Zg0phKBeA7ceYZshk5Nt+8Be1yQSYHeR3vlZlQQZwTuM+h
gTg2gknEpGYGMbPezKwC95iPQDceOqPM7ACIkJ7jjZ8zHzFhlr0fjRXwXnqd
WQPvhcDj8757rJqLb11V7faJlvA5/7WcOTpQ8FX5ckxGR6Zmd/a9oBaE8GCV
IhZ0cqRpq7HT1w4r0xR2xCWw+kw5PTANdeswqVpQqvuCG9E66Gt3wQuKaqhb
h/BBRbcpmSEQrlu36lxz5MD1TG1oZ+epB4Q2l996yu37wGmfzyhDD0e68i2b
4pwdilxy6XfaTHS9rqCh7dfDYZg1lo9Rm/v164FozdCvtF4NAT5YpVRRn+Q2
YKnxf1tW/leaCGceVblwbUu9g8RoPAJkrtEM1ftrzeBKRAFvtNR8SBt33ure
5rf2QXoTbidI9OnY7UzD0X4lu27d+K87XfWTD0/VoW/8SwlJ3KoI+IlpQ2kZ
C9i7rEPFx9ipw8qD8Wtg8IaXWjtPP6T41d5LjMW9XyprLuIFk1UucPQKZNjS
sSKcUeeYg//IREll857AJ01MLQI0zv5qKkm1R/zwOkOf/0t35ugyMIL+SKqd
Z3QwvFMZsC2nCjqPoTlQqZNfiibqK2VWjo9bcow2YETZmUauaGWp6DUw3+oP
JtyqLyxrpCvvgc3l3pnHkWTaJQUyDTfpjHw8eufaKmVaGKzBJbRzzQlVQr/R
eA6qPu6iv8zFxv3UefaB6VyyiEXRR99OVfu1eceX5RC237lMfyZPPtocZOD8
3nHCuQBTrsRoG2+EK3q3J1xiRm8Ke/UIAv/1z2i39h72CBvejZ0gtldYg/3P
T6RR4oQrneBVT/Cn7DDNt/WWuAVE+e71eqRl/+QcMRQacmKJW198hy/+FMRG
PdwmV5EywLjcEcy4eDKqDSuslS74m8vSRpOsNj3TGbi22D9Ejbjw35XKsmXn
BtX5zWegy6JDUPGp7FKte5En5sB4DvNa+bcHKsFk86bx+KwcrYJ8WvdmVEZ1
Hq2/DJ7mVl3OQk60xRbajTcd3vO3WEN3yqwMFWLiw0mwJhg4IAgB2s4IDWbm
cqXFrdFspqQnN/H5pq9VHclFmtEegEIRZckz18xlRXBFTiq2vF8byvzJhKJf
Cj9WVqhv0HxMj+Xu44L4aGihWxLngdg4Hmg1fLGA57VqcQqionpeuBXRbD4H
fjFVwAhEC2sFv5Jv2/S1CkeGjzFtLYTSkhky33nLSZeOA2dnwtUhRZLDsRzL
rYFDoWJA4WMwFuguzVO0WHcB18BvAXmZ16plfIJVwi5gK2u6lB5fsSXth1Qr
bawdO7K9uB2mOtC4xUXvHIR7K66p4iNoCQD49N4SPuQ5XCZpT/4BZP7GZTFF
i0a6CxE+vYagaijbD+FEbywM0UKGWEu+cLm6L4BBeJFbaDqCwmijqisfumVx
7JuLWnkjd+W39r9+uBK4g9m+crD8uYwyC495fFfJIoVqzIf+qWHuqKAVZRto
2Di15jZYDc6rwqZC4864ApSNjGBVlziP8+yOw7dD/XGeg8fkqjys5434NcjE
Kv4o2VfPRYwIAAvMMi5cYIwCzaQjKMmqc034gBgpFYsvfAXdYFjBfARFj7AX
WCK8ISWHD+1GS7FfuB4Yx8HWvUqrDtSMNL/tijUzfcKuxCrsxZH8Blf/4hQk
x6mTktjLUdpVgs7wBOwOdFdhNk6qSA9pRLNuNXqAiVdd0a/K717nTlqVvMvw
KaNawUtczO0iJ7Fc5xi+yr+UEaX9kCos9Md17GLyD3hPKjxdtw6rlNvUC29Z
croenoO40DpsKPOOB9KvOS4JFWa3t2T+I05Q/NcSnSkLR/HbzFaIioX2KfNP
6QIVbypbhDMI26d3mHuMKYrKW1oHxqNZN791tEr+tatwxzNVVa10PuQ/oyI6
FSSDM3j6QW5Usrh3f3TXuipcSEVEbynv2PUf73Jr+1g3mB6UG5sIe3RJ2CJ0
Ew0xp+MplxLNRuS69xv5xhdYmdcEsDzhKCgT5+aVNXIKMn+NoOAnd35RpcSD
J+5CRLB6lWy++Cpq37L6X9y8ogY+j5O75VIbt3Ts/A8MVuTIL/kQdKIXhe0Q
77sBwx+M2DBMHA1AFYPOnFUEVGceONztAr+ZhsAykNXogDo+2sr4gnha2u04
ogxCk98J4YH0vmI0cGdpB2ywNDLkImAvHakBQLLw1gExZu5Xl9rqukeBFKF6
Vz7jstcVma3vGaUBVidrOHzcaY7c+ea+OPDFmAJlGwtbER3XRw7+RL7Yibvw
PtBJADxy+OfRIzeCaXhwl8KDMArFJzu7xlzDc1SyO7dzzV1mOvkd+8IYAbPQ
aVfV+lyGC/ZTOK6zjDoS0nMxt7kXuwlCKmizp5C5r8MyTVu5EXMGEYLiWiVH
rcZfuaa1iNYMEAbRHXG2CVhAtiPdF3Q83EV3LD/bBIBjuVz05mqMkY5R16/n
+WAXYw3ZdpHAjdociUch9lyPbFUjWBlxK+x8JU9Yk99itoCLFWDZcYS32FF0
ZA4/x1goM4/OIu2CZWHC+DCnqQcAVBZNOG5WNUbHoevhxr4xW5sCrxA4iErj
aRjUF8dBS1g4O5ffYk4tPdPAcI/24+FGBbytGQeqoqiKfMCxDmauTsdETtLC
6MgVK76s4tcl79npb+COWQyqY6NRPxpfHh1W/TgZ5b381AZH4xZYsbyecJaC
6EoXao2i7QCfdxe+gn1/O0uROUCNNmJ6LqoO4O4SMNalBThPZ+kjcgAHMMcM
h4tNvSgFnvwOm6LtgI6jYwPVdJYJC9rrxlgu94Kf7uS+3sWMwLu3/Vnl1oud
cdmt51oFPe1H1K/Xic78ZyHJ/AsAUWbCnAdUw6Lk3UdVrLB8oGEz0x9jhCra
tjL2GpbLgNJOOCRIy7xAkcaGarE1OqRz9gl0o79uLcaOjtP+vYryPY+vTfex
SoPNOx9SNY33h6M5oJ8KLru6qEANIwJO8mrlmc95AAoN8lgpVQBW2XHPqdYn
wj/v4r3FIqqWoQBoHeQEdS2PDduuLvrAk5EGo4m4luY28C5G8FxLH5aIeddX
+TETQeebch5Ab5F519nHERRzbY5CAe9BLM+5EkJuleYpnLjIoZ+/5hbtkTya
gD2y5BXSk3DWsNvl1CJV2SIUBplgYlR8sHoFriKWAmVzazUvgBgPbi1XesaK
JTe80ho5+FNky2NxUW9bXf2rpbWMGtKwbU2Gz1Xue4/bj9QoZxpMD0PTc/lN
jUjDlxCSllV/1rJiFraGeeocmblwA9rWses/0TteiqDuWFMFBKnvmTeOXr0m
i+wy5MdHQtcvbujY+X935j6CMqi+c85sABzJg9vogFIS5T3J1IsevclL0PoD
vpTd6MRdzEeGDAXAOquCTOSky2B5Hu8V7gdWgEuwazgAHEZku+JjTC2zCc7Z
W7b4UFWssG2AFtpqFQOhPbuKJVoLOjOHizFwUAj+C6W0+lm2uIdm8icgwKDg
/0rgBS/SX/6rw+8lqqCNZexxoQWMOzjv31ZIpJ4MDSxW+z/0/8tusRUJRhPw
iWXfA5egtRamuw6DAvnJexKu9aQWfg+uOtesyVi/0WryWgUxK7WA5eU5PITr
mYaRA9crHUHObPg8Y8SVWiQseBFbjBAwr1rHLnoNwsYTwvv+HvnbCcTI4V9o
4lSvoGF3ut3zwdCufeWRoY5MJGPH1uASKKp27uq+oIU0mOdL+QtfVs7V0jDK
oFNCS2fZeiMz3dgOyAZCbitut/0+N5Fn0zzkryJlBS8yQRQfm/cEqo7OM7OA
cVeC4VYGFH22AeXnhCtpKi6xlee/fbAq1v71n9PZxxx4Mr60JHrkV4qI2K0i
YrBBLUIWvQ5B0hGzY7dDzKA39JG+aOVwU4Vbun9tYMGPkI/LKPIpImUsaBK3
wJ345TcrahiaZzNKAaWHv7ZNlpVqzPmn4WwAi9JEnLiTznIv6sQn181v1D5v
5adWWRjdxjwxzUF1Be/t1monowlPY1jRt8ihn1lZMciAVT1joqGNUCxMlQrR
Fr0OonaeegDObPXjbllVjYigfN+UdsC4QH7A/NFkaW/cAVM2+D9tm39cQuOZ
PJl+0QyeABWnYeF9/2DV6LTGVbUMMYLh/IlVhXIDJnMPV7x+pFKVzlCnCy9o
b3dHKWOEOwwl5hf6ywVWh1cKP6kDy4nkugHdfM+l1NZ+ROUneCtvZlbRDJgV
rLUzdw4mFfHCqRA7j1pwohYCY9tS9Eg5dVVKrBbdACH5UDGfvrVHLIj1FNJC
F5g4/gVbUxv/zh0Mqq9yaXykpTd+FeuJ5sArbP2Hf7Ulw555mh7euMX+HHN5
1Wy1x+BrPJkpyML8/BuC/oROWr5zTbXKm969Cd8mpgnNYhT9MDLjVmPgc7s9
7guHSCSP+SdSY0W8f/1gxLZDhUop+e01C/WBQ3pbeIBGjbzISI1Lw0h/sb/c
Vagz2lMcW5sUQ/V4l+U6m1ag3DIDFbbyBu9SCs3ey8ax8Xah00ZH4fBYJRwc
WMfYUB1UMMmxs+AM8HaeDwlXJup6ZeEGbUDOodZ9kf0/Zpp0Zt+HkiuV90iz
23S7bMtNidRlIpiwlyA9kcyIa+LS4kDHUTuuCMjAgeE8lg82mYLyEG7CaXcK
DGsFBVLuYrhidwFuCHKDT9IprWDozGANEKow3cpP8V4V9xvaze27VPsgG/ng
JijKsXELkxGyhKy4C34CoOH5IlXL+si7mMjMnTJVUe8wtg8xzmvphVxBxuip
1d7iczg8en5uimM34CzgoeAUYN/diTydZOR73YWQUlG17uN2HgXhpFNWbBFW
rE3D2jVcj0OKNHAblVqqegXNcDlsT2GnmOlgGp8DrRh0Oo51UB0Bt5PCuPB8
cb+xqfqAOu6nk31nMdMxcewtLgXT2fknatz+6UHonFuLWM+HSqA30oQEdHLc
ZemBPeIRW2Qg4IAWZSmR6SeqgNxxBCamLaqaVT2XXgcbIa70CFXEE4HaKd10
u7aPG10y0rPNvcaxh8NHo8qsVUYjGV94CO2X3AarQf7V55rhA/BYd/AwH5lY
CJPLSqQVZjzrztyHlS7enYaTF+x2fGBrg83b+J0LMJ1yE5q301Q4AISTP7Xr
l32PvIayReAh4w4r5kVZtZ073SjTckRkFBfmowztA1UPi2M/Lo5duwYmrC3R
0C7MBEJWCT/+bNrGcMhoumr1j7r8WsgZIo0xssAkFSi/OBfDfc+GShosc1C7
Bo5t54y4mBGHY7cNjIPSjKyOvzVt63QrVHZClsbDNFQ2nVHryKSF2hHYWUpL
dG436xasJPDOLIaNd566D0lqIejs43hPimbcWYop58nYnY7dfwOlwURiXvvH
r36s1ZVnbT1Nyyx167BucgZjOUotO9ygsj7F7/C9vbhdVbNdgW84tvbZQ3ss
Cyh2ynZ/sG7Xv96Cr+1yYf0OtbnvywpQBet/n1vcoO+W6Uscu+OoUtZ35UeP
3aYTjkWvW5ilOPbn/zLy8SxMKtNBQe+X33KHtvZCw5j+ynBV9BpoAxjSL1t6
ZdwhIVBxYOS695rav/4/aSptsxl907JapmR4eMKC+e0copdP+4d9Wb6v+1yZ
p64zc2gnlIZ22h43tOehrWXojw58XXyVEUQggCcXt274X+Bpi7LrtM9V8u6H
7kQqNyIf0eaLr0KM71pXCcvC7of3/h1UWT5C/rNaBa1ZxRxBRKp725qBPn9y
ugEE5uEwFiwymI8GoglwHtzG8NBEX9XShp6xiWSqlhRD5lvqT/iItH+rwv+h
GSP1cYdUOnrkl4wm5PP6N1ogHjA0hoyW3L2uEqKoXPGOK0YO/9JV770VVqzJ
WLoAPaepcEUw0/JvIDT4GHdBXOGZgIYy8nXlw0BgX1AsVOicO9WOWazpHnnc
bYfJMjbvABZUYz20G5XWWZuCF6F8H2TXKTFXxj+iM0wTZsdj35QaR0VVaBJu
KS2/Y21V1/mnnBewgdfREoR/qrEb5NE5/RN3vevO2MohPXA9PyFIGB0QiVcz
UrRHSzo60LRMWS/KF5tqFYcHc5t6XjxQPp4aIQbOy4uPnWYcXe6vRciHwcIR
4NU077frK192RU8QiLVWeSc2Vci4hI+hw9g+oIB5gfHCmuNK01SGA823krUg
rb1OVWPa9mNbYcveaGLNvcaM9Fy0IuNMveFItsxBRyaoqNmU/xz6BiH5srB1
Q4HKSYM2QAoWH/+OFr50EJfwbqwGjwKvDlROcSQeNXX2tmUncKEwSN/O0cmG
7umopPEYXQDTPA0cd1nK/QRsinxGs5O/YAh2wQcmXPAwvA4WjegyKiL7K6Pw
ZNRgwhfv5D3ZU34XZn8QLhTwNPlWxHJyIyzdr5xwR339s8CuzKzpnH6+xyEn
U1ilPUoHolOrX6VfE5hx/v/6X+rP3eRd4A3xeHL10pvv/rmcnnHLO0rjScnb
hZyREgeaZ6/WUmpyx9NP/NLRI/Bt1wQ4dsIX9uB/kf+NP+ALrqj6XJGTzk/5
dLDlG5TZMvbzZGa3C67bg3rD7na55UTUjMmISbU6X1bxBL/j+Ywy+CeIB3Wk
8bg2KqVx+iFt9G+qYEaDY0vPNPh14/7NU/mxMdnXLWh06wkPJD2dMCQcUJqa
RMn9Yu3VOqnGfdu1KZqWOlP8Mkzxy7oLsBeuLkO7VkUuzgVYjHLzIRfHTt4D
7mGtkAkMU6FBhS9pkarwlQkXqmozN7Tmv3XTOWpTcmD+j2LH78BNhmN4fty4
y4+9riB075cV/jZABb12ev1CSgqKSGog39ctbHxE9fu0NQ8c0TywlBbO3lJ+
2+fVOnOX92R/7Vpg2U6KKb/fYLUHIGAmFhBCi5x/8mE9wAjAehIbG27066fL
RlXmF+NUmv3UpHb9yUofCSu97R7ifbdv/yurbItxr+ochvw44vGc/0VWqTYF
6HoK0TEL+A8ggGTVXzZtmlMnu31bWjD/1MAXsDoO/rbZY/FHVJug/fCM+OY9
yr69ir0zTtWEizGYSCMG3tz0K3xACb32MEABHfZnnJ5GqqnuR/3P9z8qgDOB
/6b/TEekGeeUf5h8zYhZ3Y1EIhid5UGl105/YZcZX+dplyei9OtnRD/7XcQ1
tSBL4N4Z5OCD/XHv9GWypqQ/v7dFCM+oSP5eDF+5pvOkvu6MJQvBBAZ9/E9A
bB2+a9jMPOUbPgbNwLkz1wwMF/xWfITrh0MB5kAMIIpIprvgJaDMSjFC0Ve5
jQy4GZ4sEP1pboOWPiLHQTnwRIkgTt0P1ID/eEOwHfi2ix7p6Dz1wHvHaw65
8o4du/6TFbRVqd+JSSv5ZHUB+KYlXpenbNmkT4DxlKH3y2TCZ539ejXQsFHl
xbXnmI8fQZNi2fdCNup7RmEvGCyIN0ANSUMmlpABIkR3ntlXCsHGg8MpQ0Rg
pm299VV9xr2/WloLkGKJ+BnqVyIFy0Xw2mFFqeFIeu3EHdbJBadmiAUfX9Qx
Hotm3Wo7aFpmcRiOZLovvKAD6XjcVZ9BsZSjyeUKw6LBxqGmSLW/egXNw9ry
atzYsSEVcgK9MUzcy7jghkPXtVPg8q/aq+9Y43L2Tn6X605P3PCq8uuOe4d8
R1qimb8OKPzYYC3ulXDMReDgeWGUrZCNVe91Kd3u7i2eh2WH3zKIj7lMazZz
sUeF7QORT2aNO7OLpbNnti6bhem0tw+5BUw3icIIcOvl9nDGP3nNsIys0zPI
MZk7v6hKVsC5YMP9i0/qkIwpDMR+3GXEtWLidgjdtpzsyDNO69hQg70Ut0VN
cjXf6ePtn1d7OpZwRR/8M5dndmbf55/I5i/7wZlfBpLxS6qvNzGJUnnoxM/I
wZ8woFYVaMpexIOI6n1btRqrxxoAjZ74t1MBdanA6CGM7Vn7X53+YQBR/XBh
hYcC+JNIJc9++zLdgGRmM/8t/hkaALF0Pzrhs6rTB2SSLbTowQAaz2gXvC8/
7E/17urUimg61CdSTW26RUjYAczJ7/z/9YcI+gciINU/6kuJzqLZblW5xWLb
rOqrvcuyL/IvS0Da79KuJtz6sM53916mj0dqOlW4ZKACnpzf2ucCAku4BV/v
m9IOFSTqufhNaRhRrM1vGe0pUhYplyCOScrnyvU6WMMcxBYwrXD3UEWatMc9
Z6BhE2BY2z2CiwphwwNlYnbs+o9g7J1rq7Rtmn1v7ORvmc5KiV8015bZvZJb
OOxAPS81EeHye+I939pH2+iX41qHmOY8f0TlkFqNMg254KuTitlrxRORbx7L
1ZWx3O3FHe6cphbc+iqXAgKdI1cKnG+uc80tO21ZbKQzb3NRmzu9WKlViPAx
O2/oSiEUHq/rUokilSJaTUvWXWiBRsJXkZJbRM1xg6I4QyRzqrFbSeoGKi60
9bsJqzyBODhLXc4oW0gHq3npUMcRV+lJcYDNfXFlfnOltbYXtwOnH+XUM3Y5
jT2LsuvwiWAmtGdxdp0WH1ozVEjr0hs7SjowsgP1G1zC25MfnqqziGjMGbbp
d3tKzoX6tDQdPtboKp3hN9mQASNaaf/2Wn/t57QBfUBJxgaqk+vYZ7B0KhFY
GsZAY/6mAjba9lscI6ZwQ2GIUbDzp8sV2JZja937KiLvn6zl1dy4Jr8FA7Tw
RO0Tu0swFjSS3tFTVbp3hSOzaju1Ptx7mTYPdRy16D5VOh6sASqBU4X0KF/o
IQaUsbOKA7wRFC1sG0DCDMo8t37uDlgVczFEYrayjH4Kb392n9KVbyxsVYhg
+DiovqWoDevP63BzGL7+6uW2I4zF14p03pN4oHMP4+ZsUI8av7KtB2lIT+Gl
8CANo3e73XkWBpFvjCyEgQ8RPlTn6b0l7qzZaoYVNdMBq4bNtA0ipKoNLTt1
0KNmNSyC0QT8P8lt0AnKwleQNkZwtjvbgvJDgfqrV3adfwoFU+rXtoPSnOHG
d7Kqe0veGwzttUwL50N9LnA3qtSsObNhJnQEa4K+oT/dF57T6bloNlbPcszC
BOgmb0FtECOioDGW6Amh2Zmm29dUI4dHXB4qGsOVOtRQuhDN5xcrcKYo1mi2
KxReHzn4Uzs4PBjahfrhGC4/28T1RR0DSMmqT8I26RSuq7ZHF826a52sMN4c
zY4c+nnXmTnKZJV1i4rOX3ghduIu5qart3WYjpfHhu/ZWAnb5BVPuFhN1P76
xQ0/frtZx5GqV2od+NKb3YUvD4b2ADVwj6jLM8BYaEN8SzkKPO7KUmuJsvBl
UALK8etltXTfpUj6ElyCazFYD7hAR5CK1zHFrIzXD0bsR3dqTb6/7ouV55oe
Uf6uhmczSkEY9OdCa79pKUro6m5rM2jhyVpe93ZWFcKxbEWqHdOaAfDqZMTZ
x6CILx4o+0x5wHSGGt2Dpb+ZWcmkBmBx3nkdpKX7wvPMo4fdRHChPi90nroP
TfudchHfldfSSwcZVkQ04UrM0Cq/AZ22XPBAXzh9wAFJuFwxibQwkgkX8PCI
9h3m6kzfsdtcit37kb+lzkNzFA6kBIkLtBNXtxYOrJSSJe+hjZEDNzz4VTkD
wfS598sKfnnpgE5iotV2CAvNpOXMso7df03H8cF7Lr7KbKJTwuF4FOgYjp2+
z51HGHfV09q//nOACNuH33HDB/UalJpVClYcDaF4845Vz9mulEeuDO5yWgKY
Mx8R4O9d2CrzmokDuQVJBhb8iM8B2IbesfLokF5a+Ap6CG/XIrnbf1GaMneE
QWlp45HYyBU7+a5QtMYtxlgwsigYwxqQKgL52ZJ6cNXSdLes+jNEd7a5F1Oi
gmvxGAoMUCA65MlE4CeelMuUVWu7zJhsZgdy6ItfZfpMuNTrOqW+sxRw4F1e
8SAl6BiqR86x43dMO1m+LWYXw6B1G9wHTC1GhIdb+29bXQ2xd0ryB1v15Upj
sAy9suFpKzNTQe/jyvcLxzBViRz+hcoajjRnuuRL/lcnXBEQP1FkgCx2xS+l
8bRVCys7O+HW95hKVnIukSSQjAujgDzNv0ivI+Bng1ap03JsJgIrEpO+iga+
qAnvTyhZgHXbHPHzz8DtfnjR4TWvVfGU/EuBeZfOTv0T0P/YmQnw5PSHfprq
p/EpD0w9pe5HiQAr9rd/BtbtixXxg4a/GendTIoxJa/IeNL781Y4E0kHIfDe
P+oLyFUeldE2bAQ6wC/KaJ2sOWiHVdEQK/OKLuHTjav+7PmL7QNWVHfEnaDB
NENjiiODKhQ1UIFWMzXAPZ6gGIZoDiIFE+BCI7Ezg03bYEGghIJDXKbi0sgQ
H8LnITlWNQAGGx6a4GmZjsMfqopBepl34LmVJYoe/Q3A2LL6X8Q+mgVOYl+A
puHwUZuYJkmQ6sfvNIkeu3js8P7r+lx9W37HWOPX057o8BVeoSCBWK6LxGgz
ZgsE0QW3NKE0cfCiKpfDEJa1Q7mdcyCZzD6dRFDMSXmhy0YCjsEbs2q7MGHY
8U1FqhMBJvD75fDgYMs3i07WWrlPhNNfuwYQ3lnaAVWDhpU6v0N55xo2ISVl
2ol/q1RpTV/TDJOkQnfGOqwXKm8a2q3lX5cgGmSDJmW7OlxWpxXyhmyVrbe7
QElRxifhjYp16blox71pBpRVdU5jp6GmoNZ78nSy+quWQWBgnoohb9wCR4LG
8DkPV6YvF0ACt8fhwsnCUjBwUNNQf5yeIsCcph6d3+kpVCnVZCgOng4PcYdM
tXGmOk1iv3m8l14jQIXZtO2nndAt5QFo3KJ8LNUrXJTCIeXfK50/1K7jA/gm
/XXr+qqW9Vycq7KtrRlgHaaWtmVURFSXtutcU98YhJBRpiNInl4D5jXdI0rV
MtoKgadrjnhX91V+DPm0onXuEFABrp+d7jnilBn5KOLRRbq6mJZFOh0c2q3s
3LFc/D78we6ClxCdigKE9nCZqgZUr0CMvcXvwEm4GENJS466FJFIDOMOV7T8
XRjWrZddKFT7Ibmr/eUYFJnmurWQYdiLkkPihRWE7ADX8/vLtl5q218ZVXG3
io8OVSt5KfrDDOKN0ABLsIZ24SmotEHWLT2X31TJrdZ9UDK7mGtwu1SpOa4E
CO8eq6FtyBb54GXj3k64hM92hFnsV1P15Jr8ZoTPG2VDT9zFk5U/p/2wklK6
cA4F0lx6nUnBZHxaB6aeYxQ+yK6DrfFexPig4hsrLF8Nzh20jQ8H6tYjN/yy
Cwr7KYXVKJ6hbFFf+WJcRQjJU/Iy2hEdsw+dsdO4g83bHnMUC0W9Y02VjtCW
vKusCxdegEdFj/yqM+dB5W+sWoY6Pah0B3VObwUvqBwcmBZyr2Unphcwc53y
OPcUsxjKAZN8LqMUHYgevUlxL6fu6yl+G2au4mIqKHaf0siUvc/vcEtmH+QH
vkrDoF5yu7aVQUKQoeJYDt5gZSPo4D0btFH1wxG79xID5I6RtjPv5NXaFo8j
rqiQKkpfVQF0t1QSseSQoJmi8gbFt5VcYrAa9AOCtNbddhAY1HMGKiASiu7r
Vw5JHghv15nK1v71Ohd5AdMA/wSK0Vishkv6mq/VhshxMJBZM9pbjI4xf5VX
sGWXCrXUb0TO0cyb6Du/KN2rqmg1GnGyc+uewR13u/ZezslEcrHLfi8ODzr1
KFGayo5Mpmqmy1Q8lqxaTjPoghI+x6OyPoruy6dhWCsUG0Cmd3K0GzYlTx6d
UbCfckFngiHgG1fi1Cv5dl8J/eUCugC/Zeox75izyqVQtgiqrFTzjVvw0Bl3
EGCzCkcODLj8b8icaVKkcMpDKDPQZHUfhNhd57dcaqOFl5SVugU8BwosNg+d
PFKtwm0qedD0NX8CZVyDS85cs+KPComPX4WuAzWqWdCyi7f3lsynO8pKV/eF
RfSBPzoxVzoftKfxuBLYDndO87Cy3F+9trEwxEDQXyydAhRH27BBzCPlNAhn
0Vq6c6a5V6cFL79liWQBKF7BXD6pg367aBgiwpFnVoJj9BeXRDlUIyfx17YV
tyuNdvUypjy/rzrXhKeJtgDX+CbvywLuA3notZZB2g5+U9qhhJO9RVgH1M9V
utGxUNSM+a4AztG2qcSG7YcR0fMZSoOAX8CrgURLCPzMPqW6csdgzzEfdWbN
7ekgvSf3KDmGkjBULUMrwEmshktcMO/NzCrezsNxwWiztDT7nnDGP1l1b0Tq
Sqh8Svd1ZkrF2fNpuVKIV6/gQ77t0BNowBMYF/Wu4yhCYO6Ah7SNjigmHzBv
2goqatOnZZeD9y+QjDIMHPwJpgQD5ADz2eixW3/8+2aFCuQ+8pXKDXygVI01
q3EkEaZCTONXGRTFJYKZ55qNesGg4kpaVYbHB66+4VBay2Lli1UWp1mFpe6x
VZELz+8qDdvBivk6zTHPFSNQljOF/OXMdoFVC1vX/Y/Cz6/Kw/v+HnaB0+2O
/yxE87EpYOnmolaGmPEqdstEkUNaFcGz5oK5h7TAAqr3VS4d6cqjeaAx4MkA
PeJWVPjuX/AjGsOrgVYgpX3HvwcWbFVE1S0vvqqcM2ULlRG07QBIBbUA1Rll
JPza4cqMiiiC/fnHdZED18/ZUYqSoFogNsYCxL55ZQ2TXYlllKA4NNqvlRAL
C0e7VL2o5L0Jtzli+yO8xZXPzuEVau3wFasRb1FJf2J0nwVAupyE9VhzsUoH
4Jb5Fm1UBGn8KhNfkDjSYhUN6KCLelU8tjL49RTJG23dy6xED0EVZ6kLUAlX
+EAZ/2ini7fMRQILTkxlZN1e3IEXj9JCLBfqw5OuNOeuweYdK/KagDhlIqr9
XKmS69Zxl2bxlWuAsBKYO9fY7+n4Pa+AA+W5V55Tg+0GM5mP0ZErvA4DhALQ
Eh4OV5xQLLqOXevs+Vi7HPnQbp0c5MrwMVCO2c38ArL6qj7DANFxpr8Or5Uv
VqmLhk0KZo6cgL2A0sZ4mXpoJpPoPa1L98Bznt2nCmhYZJ1PqVpqVgy4WOKO
eHfiufSX002u50/V4+g6BzYK2F2BQkjgJ6dV3FZGc0B5CJedbVRuopJ5TC7o
PbQfhKG1yBzQYCIAMkwB/oteMVN4FFDM1GCkmPK4GExAGgwi0ZHHXf0Onbne
Wt6V9+TKc00W6IhNeTurCsRQ2bixb5mnLkHBN9xeEhkcG9bZ6nnHqjFVfFjX
PfrhqTrEhbQV37utDKCm2Tzcknai81pO6czjE26k+9zbmfvwKy7LLtPn49P1
wAvUhTmOAoCfYI5E55IOwb7AB4iTMr2cf4buozky+rHTOpnYutcWt5EAaok0
gERa6HJtbcGWISJegcRgxegnuMQ3DXjE5R6kjxZYyAx1J7zmArmGTi40fR5a
4Q6MfKiKBvnPwTNpISQT9HhSyYEXgPPY8QUnalyRiMXImYdYzjE0B11y2Q8G
6d3Hpxv4Zg4Cy9HMG63KFZACY7GCAowUAwe1tqJpWBklU9pZytQAuoFiBkXV
gT+ZhWB5O+OLECA2TFsdbTt+u6KgC1+JHb+TRwGDOrPZdoApT49QS9gFThA0
gIHTMYRRbRnjycIzkQCICuBj12CVzFm06Bef1F3/RguYzDQBG4Fo2Yjzz1gy
sTvWVmGOud3V6nox7qImUCQLnzCRovwIBNHxCqYGo6C0FdCn3ssdS2chMQwN
JKrrzBwMX1/ZYlX3wwUL7Qmt+x9O1HfhvrnzVh/DeRTzPNoGYmAUEkqprdUb
2/OylFyRAze4YiKLGXdLEHfLqmo0WUGhsdOIyNYJ+cZmTSTDBZFGwqVtEbm9
+p23fTyejB5RnPaXFYymLouHrcgRPp0BTt/41cRM4Xx/EmJHTsC+4B7A1Doh
j3Lg81JsEEbEnVnehZJrkdMFjjI3uQuyhBKqvl5/OYPoSl+pshIKjJYyNzGU
zBrzpmHLrl6esq1+eKp+eV6THYVGOTG+8BPUA5TAuQATuJ7h40/0H0xD8aye
u47pnUoG/ll0nyu31DlyRVW63GK1Erm4DVNbrDNZKWQiid4Wk2YdZ+opOVLb
fgYFK0wXIA/7jS3HcrGk+HeoZX/N53XKuJKBK4o5BlWgB2AsTV2UXcvQoO0g
KoBwsCo2NqQTncyXJ3arQBIYi412ufu6QBJlJTozB9ix0tg4qlb6mbbNP1ED
vLhd2kL4ALczKUa6C7WQMjGp9f+aVaglkmSeun1S1XynJVY0EFInstq8DXFB
UPnJZOQWBhcNx7F1z3+VMYI19bkkb4CnqnWPq86IAjXLFiN5wOqudTp5insI
iQrv/TvQDDQw3wSxT6Wyb9gEMthxEq3BnrwHtNxQEIJ78902MM7DgQg4M4CD
DOk1WgGsMWEZRKv6HTnyS93oCmRjqUHLyOFfKhVG4ctwBuY7XALS3rrhfwZL
0Q1caRfw2WJVPxIW4RCPKV9H0zaUAWxE+KCWetpxhMkCw1FY5qn7mKfYIESx
9EwjSl7TNWJJqp909R2ix27DXvz0o3oexQjiMAKJrev/J6wGLBF7FD3ySxdJ
Um/6o4La8SgUDtOsWlHnn6GzkeEJmtQ+ON7YN4ZgjRX0uYoGtK08OhzO+Aes
AwL82RJtUoBFdrRKtcPGYzSVoURQ2C8hsNyoRkgOCjnuUgmh0gpcGY9BEm54
pZXOKh9dstYAs1UJJ7svtH/95/FkxJ3F7UxYOlOXbYlpwouUQ2z8Kn6Qt6Da
svK/tsJtOI96hcqDlrhF7wau9Bd7Ql15KSJSHOnkVBFn/gWN9JZ2tVsxUOlf
PQbovMSz3GIlXbjMZii+oeqDt+2feotv7XdiKjinPLiSn/yvt4Zs0X0J7xTk
5HcwsYlk0IhqNsVTnpCYaf3c6s4EmN5EMjht6udomwq9xadqLCZ8S9lWmsH7
060thx0E1fuyckUsV+0PRmxEbfFOEy7z8IArregRURxk0TwUZnAK91Tdzx1z
O9fSp7qxLveIluP6K7T81V8OY1cwg0tuxsTB11BSjsgJJWgK7YbkAOYHHdTj
jmmpoSsfrYDEggOwoNzm3iNuVRnPi8fCzdxaSrG8wto12y63Y0OVN750gRK5
nH1chv61EPyBEWcqucP7T7Rv+wucJnqnNCyfzMJSqAz9QKVOmpx9fEqvBnTy
Rbo31gFHddEg4hvutKbGAjsS1fmv8xMuaysIfz7Uh8/rTtUdpqnwagZivVtd
RI1VNHA8hg/IlTSb29F80fjOPJ2267nI7eC25X/QwnLbgb7KT6Al/OQJWtwe
qlfEdes+TL9L0hixgYbowq6BPlcD6CxjYZqgUx4Nm3BbVBxq9AqzjAmOm4Cs
XEmaPJeZpA7Dh5My1LoXiMPthYdYIUU8cWYx3AabwgDRYAZUZapaM2A7NAlc
3VLUBkVXZonKT3ETcHOwWfRlc1HbhdZ+S/5mS82AkqVkUYMbt3zsyL8y441c
UWiBjrJmq/BBjWgSg6U9XJfwypLnM+IKV2jehjrlNvXCnPkX/XUrAF/QWnxz
jEKOkoFkMqxYTCwjBA/YxAGkp1gQO8kIrx4basAxfCuzCu5tvXOhMvUIByUH
ZkHyPe7wjrykio/grhgOnXAcqGCs0TRXQXg9VAHRqanKcfSeVup6LiIW0fjo
KQycUt80b1de1tIFcv/LFjlF/Rx+qyWCssUYdBQVk9Rz6U3UDFzlRavONW25
1Jbb1BN21foYaAXnNGzWwn53PrqBoXfLFLu1LNNzURsN0VMHlHa+FjXDBH+Y
U49phts4v/W0XYw+YO8wi1u0B7EGNbP1Wzx9yygy0pUHkdASR1UMMdravluv
fk4eU9f58619KD9qYPmuodPoZ5aW7OTflUaG+JN+QQ+werhd7iDhx9C819wh
erd4tQL+gGSwd7zdJen9DP9OHoqyZT6LNCIHf8KVPBzNRG1gPkeVpjI2Vdy5
u0DkGeNVvVKJsCInlQ318u8ZndUKZSlmCmATeTiTUfnn2w9Ct3i+GEjNakbT
IlJu+KDBgkyYoW9pdV1Vm5XeofuC0tANN7mFrPdcEUmlvkd62G6eowQRTdvE
bcoWK5NkRyYMnxfFTt7t0lr+HFINi4gc/CnGWsl1857AKQNIo5m/Vonk4nfg
Kqr/eP6Z6LFbMc2h5bPMY9LizLHbf7OihkH5wYitukVXp0MlbRHY+zPL5dFK
JPdVGU3jEr/8tE4FUEreQ4sATNpPj8ZTYw75mVE5fQiIP5EMXQjs3k7/dK9Y
m9+SSN1kn+FK34u8TxK+FZL0C9LvdbkIotOvnvyDGWXvYnRvPFmtGDcNDMEH
H3v7R+hbYCkmRXrJYylMXn/z0jvi77X3Z8Jn+ifSttf9D+T7MSdz/tS8u/aH
OTtKA7d4JCTwarBlRpEmUheOJtI2/dOblPA5fdMPicf8YQxT7CJZB2rGHk0k
t+n9n/ulkXLeIZnDMyCTQMNMkz0S5Sc2AeG4Z0b9V6b+KyWG1v97urQD4gqo
8YQvqiHwBH8L/TzNPwT27WUzCyTwDIxaQDLpc2fGHgWEMO6LBkmkhm2kz0FP
7NNX+gI2ArdPtzON/XrNSNfnQMv/i7PG/7lfNwJCDtw1gw6kBq4EJBz4JP35
6XCU+KFfS880vHusBhICGV7iqpyogsxQnY4JxKPYZXhyVdeIpcXGPGXVdvFS
0aGWnSOxXBg+lENJPzqOKqiy6eu5ing8hB2EKuPaa+E3moNx7ByFztWCFSAh
zi/OqXFpWbG2A8vzmozd8YR3j1XPV9aa38O+cOFdTOZuTCH2He4XUI+UGZqG
2+lD7/1L+c0qP9lVGla+voqPsaowIkgX5MHyq7iKAIeUF66vVNWiq1fwX/xo
2qYUDXCJ8g8gG8p+oEwRex0BKMGUD9RvgB5AfnAToEP8N6NCSXX6q5fTR5fj
8Xfwt77KpdoPypntara+zzO1ExQ7jb3WiZhCZaNSec3R0LP7Smnnm5ku76hb
codXu9gbZfa2shEQJHhsd+FL0DOIjSoauDoLqgpUMp/WIvkcVb99WfVYm7dr
A/fIrxhWbQ/lPtxfvQzKygWdOQ+iErTKslZid3TwJ/PXzq9ZaBndlZf7/FOO
s52HkT7pkuojFuV6dVHZz2aUcmWyiOdRyad5JyKCabh6W6+hM/T6CddNCIli
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
Iwt+0XXwr10tx5QQRTq7cEUE2y63282Om80es/ZW6K3M5GGjriag6jg72RJ/
6r7tpe26kcxFeHgx+4BsUNGaIH0VX0ja2J0mw2pqmjJbP5PF7Pz2DROpnCFF
8qkpLBY6u60k87mkOsckcU8xybQTsB9hXzX+UE18kTY/kMKXxsYnFtIbY1Oj
dAJmE6S4k/tOGz+W8pRYcrHJuY+z/OSa0LAZVNQ6vmHbbPzniePeUSsbnouD
Oe+blESB9EfYqh5L7se25W+PlHPgevzasUnkkC4iV5OcLMcTdCgtmUn6GCXS
qFQsjaamH5Fw3W3CkK209i5QTR/3W93wVu10Cdm2iFgadCfSOHa6LaTL0L7z
H4/YA1L5YhlwCt3Ss3tAEHHZ+da+/ugNc6Z4DyQToOZNIA7nGJeNjiv6rn4G
f8O79VcvzarvAUYI56FkwfynPs/1wrX4jtno+w68GodeHRwGYYhDIWNS4qR5
18naoOY+grFj0VAvWtJz4TUYCCRQyltULOqr/MKk1OvlkpnJk1OOiBKpFDpd
VVxytuUJ+4Jgy+mtzlM4HanZVPklTS1s6ZOE9lJYqhKBQPCQyeqiZiGfdasJ
Oo7VyGSy5hKEp0F4JMe7d324cQesmF5IXpHMB2Te2/NdIOuht/FrnSd7L71t
MpC/DBnjwk+zankfItd16L/RKkktdeZZHIQcqz87i9/PsuuG/XklvjCUtfv0
dFgr30FoEPjlZxqJX/AXMo1TNk/S352bDRs5WhOQPcwl74pzKf1QFoIbt0Pq
YDi8KYkTy3ym2PrCl+S4TdXUjZ7RoQacqS75EeMQCzy5RY5Q8VFRW/+dnxAF
vCjH6IyRmkoK4soRAqxvzrFK+Cr/PmWSgdOjU3Xduv743J5KWoLrx0MhFgZX
y7XD9LqO/D1D2VsyF9csR/kqFknBWd8J2PgTm2u0fqisvy+bMtJzgeZ1Hfqb
7oIZmpomGu2CFewp83Xs+JN4MpMt3oexgI8heZwsFFfWtdsPQzBk/r/4TRWs
LEr685adaYBdSK6q/KfQW4QMmYT2Q8gf+L7uxf2SDa+lPzp9R3Xr6v/B1KB/
TnZZ5z4eHWkzuwhkvuKhNbWgX3SkZbDtEP+isc/uruTChClZxa8e8XNUkdeo
kD/j15gJ7dcEuZBnU96oucKcdZphischJXSPoA/iKit9g3Unase1fXS4CQ7M
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
ubM0n1bwO0AMiJ5ucp5jsDo85Vuj2bnWyzrkHlEyBBXobM8BhBkppe8783Mb
/t+vp2zqRqnWm3l0JsHX7eFnt5Zpd83w/Qk6Wwwu7lrbQp2EWpEyuOvrpg61
8uREfPzaipn01+YtVLhRumKErJraT859dN4kGkBD6CNQOXl3SXQw4HxqKpHl
2QO5iROnI5cN/56RtaKDJjnQgZTsxfWmUoB4QntO3G7IH77XOzTskB8kbFi0
kma7OarbKhNnAzycecQwXSVuo2bzTHzsFISH7j7Iuj102s1jPe3xkNtE1j0u
Q46P5XseYPG88Dwl5ixWRscZkR/2gzvrrlgPIjFY2lpctgqzAitUA2tAuXzB
BHAmdP4xYnalPL3xIeCAzmjj7r4SgA6FX3+tDoTvLFoAowM0FqRUZGjKN1Xb
JBZPaE15DhNQmqPkx+FXZn282R6wBbV4jQXh7IiXaQm8YuCuZpaUySGiWQUr
H3tayjM63xMZuU3GrQNOjAaJxUwOFCjbKo/GjlrTXoD3Qo97/UnECJiVcCzp
p5i8TYAP9mLp4LxZlroF/4dPmhW0GlgrRAv6/fCn9XBmyxCGzK5X+0TiF2Ui
/fav3KPWYeqDWBPA69ksPVpB6yooV9WwgD0j7N//p9ADhgMQg2Agf1tPlsYA
MkgMygc5BIts6kiVXjI7pWULgy0MIiR8p5Lo1rUc+QsNYu4sR3rNo+dNYqMr
UzYLkyPnkXMrUZetmbKJzjXEBTYNxdDo0RJ0Q+eGImW2DhQqwbg7afNtl4EF
dwA7ZLJY1Oqw3ilPHG2/4l5T89iOfdGSkONIZRP769zvON+lO6riFEx1q4rT
u+BoWjn7TmL2fg9niCUc8fbwBPeLxN7x11nRu6/AY0sZehrgboO5OOS52P2U
ROhOhFDPNR6oTHy0W2KJ+JwIXImP8/zrkU/igx4kDTdajiuiBz3RMxAe6SV+
fWg8xPb01H0fDxwl3vaH/Vw3gbbWKaJ3T5aGCCcJYG0tVNxrdlM3SGJzj8TM
ETCgjG8ROIDJqueovbWqTgjaYJ7cwdSAy+Em+S09wP6m7IZ0MLDlPGERbNzs
Il7Ykf8JTF41Vqq2godwWp0r8a3NaugECcVCC+arwkvDEe75hjlwzaddJV/B
ymxxdoI7EBXOT9vAdrsCDvh7FLIvdDnaX+9ooLOIz09fywU4IYFhRVs/9ycU
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
pAExhDBW8qE5GpMjZ2fM1lBikwXpAUSKlKKFb6653ICjYYxkG23GQ9DsmTJ7
fBLEVtqPPAHhEcOWJfOJmeAFrIAmB7Ed6Umicss0tHytLUnwxKs2uo6mXTPH
c06NmG1pWpQKxJZNm8E1movJQWybhuHBXeTtrGSMXKGIbeOANuZ0YFKT0Yv7
w5kjY9O5+gnhD+Bsgx4uQ/OJEetJkvB5d+AQbezSRzPuo18x/B+XYT/OBWK8
8kwd29R4hLQbaT9C/6WpdJ0bgtjDYzlXnX0jrh8bAYxFhCZEIbsBXsS2Ze5t
mIus2hDkglaX8O1uTvYvl0BcqPj/I/af+OprOw1Uwoty6qKwRMgw3INo0ZDP
TElx6V8qW5Szn8D0Xj/mg/uBwInAymd2+TF84B3o5kosFCiAn5v0IIvmplXG
yz+PXfuD1Hk088BrrzRE82dBJsGQ9OpOkBmgg7guvSB1BCSH9vmp0KRF52Sn
H0QCH/HOyfL3To2V86iNeiU2YfddIp3sYpxO54VpstxZuzV05D8/a1YhZUnx
0os0ZldxK72WWf20e5V1d+Q8TacSFZ8nKlfSC8lnmD8LUZjSkDKrHz5xl54L
6LryGjJ887gPUAWXBrv9vnCfLnRC85xG4hScZODEFId8IamTEsnpPD9NTtVl
P/lZthT6udQUj6Td13X5ZVxA275/d/f7zR2ZjyBV5IOcf7O8Rus8rsiVVVFG
AebcU7OV5uExpXx23fbppn5l+NQvaSffpS+zjVRVkXpbjo6MnngtHbz53eJs
KXxp63lf6ymXJME9mSePXtXd8gw0vqMs3EeTiFzw6fKs4vcf3xJo/2oKLqxl
6/+oaVRHRmdRQrSNeGrEZIzhizgaVMIktXtSc/TZCk/bhnoC3dWbJlN7nVjG
nfFGjiiGzum0xpzTfoTGhy09slUSenm2qpNwif/KeZycp+/8pJ7+OmggWxPN
o+mdgfdGU2usWlPb2QDrgib8tetDr07qqfDh0aW9Np11d/pIeMvjJKF3T6Vz
Cs/1Y7swYopw/w0v6KUm4SfeaybEOhvAUxaK2oBv45jrVq7b/oip2l7DhXIu
XJ2wg/ZXXB20n+vyTS7vYDdgQvfhGvTJBGs/yIvSE7qPn/ICKFZfaoBHwcqW
ABFtp08HOwjVpTpYMizVDTpyQdd1Vxr0ZCIkPDnYAqMmnu1rOd7aO8yVhMbh
/hHwdmNBkxaIJOCFvvbU7ZK6qzWbV19uqOjoR/MxAX4D/ih5Zk1XovKr2LU5
qy7VLyCQN2dzsCk8iKQqvfoO4TOhPZoMoTXbnt2kwiUo12jaY2H/S3/TjGjh
WzggGKnu3APcAGcYppxp7QkQuWPycGxkcibY0V0tCaj7wzmEz+CATAIUvAmN
fN6kFqFHXRdfoP2waD4EP3vqd0GMp++WwFwiCN+n752uiJUugJ0iBET30mHZ
cVcTkwQOkqv5/FSkLUXq82ZCqvFWSBuxICWwZXluLRiIy5AtNP6lNAYmBkLK
rsuqtcQyRW095ZG+yLmHaYbWiMQfzU8PzNwntWg19Xdv40HJy9p0GDrKiOMd
iGKkLHtH3tcX6zvOPUy09fQOqQuMCxYYj+TsvNbCgLp0hof+9qtqOUNX8SXK
IBTaOJT1kp9wBjd592QFfkQDDXyfqETTIYYSWD7ujzC4+LXw6V9L1qOKLx5c
W0UfGe7wybtlF2L+6zxaK1UBrYg04V8Wyfg9/RoZm1XWo9/6wkEc84cLW7of
2SgZyVDCoQ/v6I9cQM6Pbw7oXnQUGILB0xEgo4a64mJk/qTw7cGET6ZQkhFU
kf8S3TDW8JOMmi6G7JENwazaKPK3UWtTwWheES18gCvRQwSOHiJbt0+5/b3U
pEhGQv0jKAOj037kP42YFRzUjzeduc/2NuyDNhCuLhlzIiOmrI9j6UTB6kdk
pTu4hh65eCl/6qpxyoPbzjVLxioCO5vM+VMTGP7wk5RjTSkPzvPCNGxv7uXD
XhicEHZctDY1tlhgA6D3Mpdpuy5zuYDURCjtBQoXVrg64hJgyoPYdpPsa1xS
mtBR/nmvRPnnoM2RijC8GhRafakeQJD8Ts3fDvVWQ7nhYDrJjKbtKm4hnITF
9bWf5cPepoMNoHU4C4QH4iIZD0rx7qP/SLwpG+GCa145UtZ24O91GpyvA86S
Byla2B/KwAVg71xPQC21yDMfNUVyv9xY0AhHogHwQ96rLdBNf0e/S3S2qL1C
88rTJSvNkiFndWu2hs/cI4cWS+bzJ22Ahea3JLBfKdRYNJvOflseMqFEBvEv
tnxYMt3NBrWe3VsROvZP0HUA55dvte653gpK8C9u/v4ZPxQUpNVakNGr78LY
AYpRY++vz6judApdyW7qxv1S+ODKq0B3T/2e18x6rm4pBDHA5P72dHi7bB0x
Ocyh5ZJO/8J0Uy946UDnRVwqrFtySpvQpqdup6TwWjJlquzYmUUcgQfsyHqM
6/GkSVPLzADOBowXfOONFIJs+AZurznkcZGtPZJ8wKUzICSh0BY5hL58MF6C
X3v+gI9wAI8TyXgI/H/xkI9B1OOfABoxCyiN/4oM3DAlRHPB8A/TA7SB55qK
RWdfOCiZK6DZcGxapalddNRwcPtK2jJru2xzcxoDX62KSmoORAQw+iJ9CEE2
oiQ7vjxfK1lMk5Ga6OApOe9fxiAiYS4b6CrYcU1mitDGAZN5Q1feU+ZoVU/9
blnn7ZZD6Hyo5RodEx7qr7PhCAj1mXNeNqR47VpLjxmUbsG9/lAa3szhoCRD
vVX0lEbq9hUvWDkC4UPEqOmbxoGeZzLBy1erxg4uOUiiEO3cx0bd1HjsGjGx
mAuL7OdOCHreIUtZOOZCUeeNy8Zd3UxNRMZcF7i6bzsyl9zsXttY4TTDhfyu
jjjNswHH601c/fqzXzBh8ARWAHXE9QPahOSygmPyYENC0B+QFkIo9XNrtuy9
3qq79wn8YZIwBEkwkvAB3QAdkA6HgbRD/7YUNi/Oqoa+ai1ymKquDfU27gMb
QQ+iv7eOy2IT6IRHAOV6ardJxpuq9TxI2GP1BtoG39t2tZlvVRjQnkxFbYnZ
knRJ3vkueEiDgeXz9TGZ4TEHwLsuvWSmeedp7j4tyGXqiG2khd+UtPU2H+1t
PCA9KvsYdwNqQWX5umyu3lMhrif7ybdkdmhZd2AVX+Qmkm8fRi1Js99845gP
XOVbgCrSNqUTZPOMbHs2+9glnV3RbHBv5v7R86SIV1Da92kk7bc6S6NZu6GC
QKUUXrkmC7tSn7f5CDfh63woxX2yHtNiN1J7N2cqSAii6gb79VKJOJ/7D8ZL
nzFUGaaNN0kEVj61rRIJnINhJm/J0tu1P4DGLoMC82kJhJBhAuja9v/fIPPj
Wyp5Ohwb3QB+W7+eQrNxhbOOiWcUp39tDoR5SU4Njef69kP/niEOn/5N+Mxv
EBHyad74P7x2RHI2dg/fkjy0PZU4i9FT/2m/1c2Bw2Y2CVV0FBiODc4ThYXP
3MvFjAX3pEfH/eHW3X8l9Yyu/eGhdcG75zXhCiEGjBSRoGxrv/QigjpcHmII
Bnv8dMoMx3GIevjUrxjiSPqDd33YyDBFzv5u1KINDyQkHDFnJ2EpPSO3cU/q
iB2rx7m47HqorwZlkCow0UKithnflP9+fXAwXsxwE4NgCChAJP0BhI8cGHS9
j2T76a1WyScHmoiqTPKfLBw0VOGJLZU2q0ze/j450LytqNlFYJw2aPsZYkMY
GqJDN/tu3NbPiaS4snPwBmQMr4HyawlmNa7kWElK8e9V64zTaaU9KcuLOWhv
ewqbY3uBzrZK2Ug5trXSBbMu9HPd3AXRE/fag7p2w+zGuC5OTQT+k5FkV8tt
UdjN++mIDVAT5Q1Er6JLiYrPseXu4FoA/KCvHY4hqWlajkte6LKPiab3lbZB
pVp7hwmjXjUFnc2JgyOE9nzYU7v9QFm7VDqo37O/tJ3r4VcmserSjzKCkvSy
cgX2xTVSF7vlhBxPM6fzMDSpA2ggUYrS+pdpvjJC432SLiydgJF7GuIUcSmJ
LWSXoGzx2hfrBfBbSUnkX3pBMuE8O1vK5s6V6Q7/snlnK4ku6SB+Civm6fAx
SePTuJ/GnwxEMDp6JLUPajaDCR05T5lph5lysGhvBZH+kpxqrYBmqqG9fbQi
TO+4A/KkRxvyG3FSgBhgCP6HTFGV5+UA0a4j5SE6bjaEvA2Tx6MR+4C9uFFo
M2R7qsmWQzv7w9k8pePcw5oLF4dI1I+LMfv9fgf0yRpExRf4ShD7OdlcN1XK
LlyYvsZUkMdj4p0ROCDGZeAhN4fPg41f5NTIUc267QvPBWWa4sprRAQD0QLw
tqVHKmgTPWm8IJrTcfHBtVIShS++aMqooRud55+RCfasx2hzvHThdJNKHQlj
7ww0zgi0f2B1FWAORkn2bJOn985P6iHA4gjkNOJHjAIhPA6Itj25Vc684Eck
J2pwDUxgWNZM5fARXgP94StSdb1kvpR3SbuXMAEvds/yGoYvdv2D0PF/blr7
30D1tTAZzJmHyvGo7Kd6mw6hpfB/qSi0T0rXAZiPbQrM2CdlyLo/vYOx5ulD
crAxS/LjJW/xOKJL5MzPOyfkK7RZaXZaley9XJ/fqDpGqKjqB9vH5xIFYFx4
CmTeuvevtTqPnF+r22F88W+Jg2htrOTD6+29BDJx3+KFGUFQenNhU9flV2Sv
S+4MKBA+guaFT96tM/ZtvcO9jQffkPRTbUrdVeE10Yo2YLDbr7u5CProMi2n
y28c99XGBssjfVKJqXabpDffW05LxB3j2YNr+JdkMwusAk4lLVt3Od/aCSu7
+g69tgHNSbuNUzCZD2ttAMSfupBqWJK35GHOBAtE8dwW3cMRYOM8lAjXNvBc
s7CrXklSgI7lEPCiqxdU9V8wE22bBhS2p/NiSGo8MU6NdwSujriciBfhXdRx
MsD/01/0BfsFeJEqIAMowQAlVV3bGSndWPFlVm2UIfs0q1qzz6EGOOiM6q54
+ZJDguqyTQKKwhvZnya5HBceqQj1tZ1Ce6FbseI55qjgek3fITkwW46h85k1
XYzyapD5+gef59QkKr+adzaAOzgd7OBZOkOLXWwvagEGwbGVeXWwTT09bcvH
O0xeQTlX2n4wvzmx8mI9qkWQDlrqNCZAYbbtrRmIFmFi9OWVI2XH/RGoNT5L
zhW2HAcqsSNMD1YGOYlefVdKwBfNhliawoivLTO1z8AWCI+cc/y2DGHChwFG
0EBTNMvNyxYBsIgR85RNIFffxR1A8F6UdNZPSea6tjPIH8ImiBdYiZnrrmYp
g1i6QCLrwNdwRe4D9BG590cu0JF42UJz6OYTgO6L8zWIWnOP85vhMAejNhC2
zD1TSXSDjzBHKWeCANMFKneATgCFeIGS+TPNoSruKZNULccBnMLWbkS3F5zP
elwS0zXuK2rtCZ/8haT93CGVtmJF76EwCMRZzMXXEFxA12XmP3+WuLCCN0H4
tr1/rfnlwqd/jWOiv6EVUyRF+fmpeDe6aZLprZZeg05n7oG9rzXpX/BloKtQ
ULPvCKgntAEkQ8d/DgJriUmNiVp3/duXpdbko09uq5TEZVdeo6e4FXg1D5U6
nvvLoeK8ATb5FheAotKS4z9/fEsAj/PLt1oXnQvydBwTwgEVA6itVBz7ksbj
ExlHSV1+YRpMA1ijm2iCJrNKybL+6KItMgRseTRUhEfz3XtX1DxjDrGiIagN
8pTCbZsChEWvisqFl5gVDfo+0HkRhhNOu5dmzDCF58z6+EtcjJoN9dWKJlR8
oUpCF1TDAbctZi1AG4DS6kEJ3LdpvPhNVFrS4cavQ+8Zbm74yMYgve7IfIxH
Yx2YMM1A5o2JJAynP5yDxGghPEFXNxQGUyZi1fdYKMauG6Ucc4NLuDl2UlaK
QZLSUC+mx7hzQzwCDgIEwBePmBNMyVtC7wmx5W63v4fb8BVn0faHKGAsxc1k
kUV/KMOEBlKxQlP92NMXNoZMRvwmdAcuhJmMY9ug9NM5NrwFBogfr44OomCS
UbkrX2q9hXv5jR8k7kPgoMdgwsc1Qz2yt03T1cr8YTKimbSNo98nHjm4pqAl
MdBVgAu40pzA6QPpMEBCwsFYMQGvpLku+RBlKGyRfKQEy5LaonY7T+ECWZqs
Wi8pJvxLBzrycBC6BAkblMVHs010ssjLKyL7Atsv80aSV9ft5Ll4KwGxSE5G
TRc+Bd3Oa4jTazqIc8ErSabQhJRZTw629QzfZtzBAb4idKVxP90BWwBGOCSO
bHtRM83WDecShtRsAclxPdxq9/VWngiayXYa32KpQVb2MdypISEH/GcKAB4A
efCYKDBECJwEJfwdsurKPUESWWUIrDxZGQE/kSQuD0fGZchZKvQNtQs4X35Z
YLlmE3QaKON6gE52kldvIIyCP6PwDCVArSU4MS4oqM4IYXeG9u83WPqIrEL6
l32aVUXfaYBWl0B6kkfUQNDu4lZCBgaIrkkO5+ZvAZ/G7iReDzPMNJQY8kn3
UQae3vbN34SXT5HvmsrvgAMeoevi8xippCe99BLRh5SNA51O//r364OgX+jE
nXQcIMJLwhmQtskL+ryQNFPXgMYDqrLtv+ANKY5cuhCBXzLlFGmn5KEtmi2U
wL8UOkHXEEVk4Eai/PP+9nRcz1BfXfvh//CLd1vaD/4DzuV9k1dWTntlP4m/
YGRhfZI1paCJAIEgFL0F38y65CcPr5d1SUk7GViFdwYK0oKyZqEVEFKyBFms
mknEwbjjDekL4IyvZ6ReNEl18OAVkX6zuLCDAAQigb2AwPgjnnvvVzU5dVGk
J4unO/3YJsQGaUjmcJNFduT26JbFhH8546VQqRqudXy0Ad3BVT31u9FSKDpq
g4mhAGgCyg+2Y4PQM/gY3gcEwNZQY2xNclM0HgThR8ypIugWHhlzQIxatcGx
LxrvvJfWNuy1Tc/ZJe68eCg30TvQHjRfq+yBrnZSLEVXXe5xzUu4zNlGABtO
9RPNEpaaHG/1TxcxdlHiH+fYKQ8ge9//RTg2gRX2Ltv4E6VSY7fzIkAqufSj
hUiVSBD11s0SNZIdupS42Cwl119oiMGrR0xJ62Ezu4j24stQXTBEqhj011V1
DayV5PySrpx7gmODt74zgLyWD0sl6/7+BRkBTS6NTpaamAhjlxQQZYvAcAzE
lOduN+ffq3QPqst/2TGRd+xcUnL+pLPAHV3DDRFEM6a6BC+9CGdhBefro2km
rEDf9Mh85+ANXHz/je+guOCqTMV3XREifeW1xdnVYCMYgvHKpppIDtdDaUAP
CLAEy9UbxbRrNk83mwbhwBBLTBLCBgwK7cybif0iBBoGBYUeI0acwkC0AHNj
UMyq4h7iIIRM22Tzc48f0TFkRJEyCre/h8TyRO5Jq4SjVq3vqd2KNdEq0Btj
1BkwzA3cCJ+4C1MF69oP/2x0M0nTYaliULcLcIhkPAQ1xcZln2c4G9DGivHR
iE5TEBi/sJkmmUzLEhMhEFjfYLekrQYhcQUbCxohpcQOOHRGFoj71dLaaIEw
bYBRjvaUfsRz8UHrrjQQHeAC8KGwzfZv/+PvVlXjC1p3/i/YMsLh/gJl/qWR
s/cBO1oih8bcv7oKAkCXJQX0Dr8A9aWXJKl1+RI+wbUJw8+r+ygj2NeWBnel
qZrlwwC4TEnxuNavp4SO/1cY8lsnJBWYVljGn/In7jt2fS7BCDJceC54KhDB
m0hqytKP7lpSB3Rz50TlyvVXGoduff9teQjthXKPzoqYNK28OpZOiaTfLzVx
JJnJ1N6Gb/AvSB7rgMQWt8tCJA1bkB641tZzojICgHMN1BreCxpjFwzlU9sq
GWvUCV+shVbBUgZdVrGNB9HJnFH9v/29zWwXnasCh1FIWRSOXFh3pRE95LlY
KNcQZRgzP4Oo0cZNhU2MNRJGaeEYGMWI2WyPFUcL34JCMEaopR26dletHX1/
+/vitp7u6k22rXmL8phkXMfVEdAe+IzmZuEOWvVg1KhNmixNAmZTL5ex2ziQ
8oBqyiQBcCAiNUk87prWcN3H5S9cL3tuxIU5E87Z/pQXwpS1DJPKA3SSdYeO
XIPJcnoX06uJDQIXUqWlr5ZhbTYH5WTLX91OhkZ4eHs6Drq1Z5ivgwY9ddt9
4T4MQUoESomKTXLCovUk4RJenuHmz73X2wB/qdJSt3Pr1eb+jgsgpyHn3YRp
mC28QlICdl3BBEw406qZylxitz3vhDJxYbXdcfwUICbxRX/duyelpBTMULYT
RwtRdVRlcVY13QfMKzr6YSNSgNjMFcPf0GToNJSPUEKz0YJOGBFdlvXT+t1y
5qh2e2/zUcmVV7tV66wBtsCIpAUYbPWbvY4gNmJPyR7Ldjna334WOctctMyZ
74Os0ir8BQiw0tRTQ4yx4rl67psx4omQVcyc2JwRYZhQewinpPqv3QrScj2k
nYhAsgsWvEn4LLv7GvZJCruk5MQb6pPq6sApXuClwz7CpWm7JW+MZmjXem3v
nqxIjX/RQcmXXvSeVss1yQYD683mvXdOlKMnkh+m4E1IKVwdmi1T9LXb8D6a
rxtGDcAS4yMuQJ4uoAyAavjUL+k4TkcUzGTDMwQsXyYNcp6WndVjlqU7lvXV
MXCDIRvqDd6zokbYXf2up7f7aXnvyO275zXBlukdcqANdIo2dF54lvvIMqt/
GaKWfDhB0Sg0jUbKNpJYEQ4L9QCiH90YgGOD3rayAX2j06rJcMpsE8VH2JSP
O3jJnrJQRh9gfO9URfLDOzRg17NIHece7m0+/OyeisF4MRzG+ZbuaLXVHjuS
tgVXAeD2zIBek1MXtbXdFaTz887J0UKNzqnGYZMeyu6gZJQa8zWukBYf7fok
NZ6aegmS0wBbIC5bTo2ltHVhsmtm2BVEe3vnpdw2jE9G3pz/2s91eYTJEHtC
jm1/3YVRPx2xUSTMn3invyMPly05nGGV/XWSADN5C8SAyIFUME+sgPc6ByKn
FJu/RTOlLFHkAh8O9dUQysnsaNFsnfgF0PhXrGT+3uutEkZ1V+gaJbHbIxsD
UBSdHpEUr5dfmblfuA1IgsppNQpCZsAH3OMTfmOwmpLIJVtH6yYTrHeU9T3U
CGIMTkLVsCDaDDIgAfgMQsCbAOC7ils25jfihgBYSC9wmtcQgwXJglrZQjPZ
O4+vSO2Mkvk0GwI254y/r+WoLLw2fNO6968f3RToW3SH7IU4XIZkoG2waFAF
goSRSpZUU3EYDgksgydwb4ilKb30JVEtpG6g8zKAIJtSzj8TK10AyAvtqdkM
km/Ib4Tr4gjMkm4+fmHaLn/o+D9rtZFI2r1y9P7qO2Zny6J46UIsHVhm4GCb
BOOvHy0D06T0cHANgPbQuiCgIZVW/EvXXG7Ak67Iq0M33jjmU6qjRzIRHfRM
KkhmP0kz8E1SACKwCqhHmDL93n4WJOzMfZa+mK0pm2Q/duM++Pbqyw0bC5qA
68jZ+8F5RPRhumwKxV9AAvlQDqoXzUYr4PaS9ip/FtSRiEb2mV95Tde/cCio
lkEzOZtJ3+md1v81peVkcgBlhvk/YOi3BD7Vm4gIGLh3TspUCUorc9H+ZQgH
xJZiENUbtKIZvo82S63S6k04xCe3Si054hGpr9TtJ3pK3vpegqkb32kMlVHd
SdgCYW5MCJMhCpOdsSbeT1kHdeec9vc07EUr8F89NVuJFokdUGyuxCHisHBJ
mAy94LYLMoI6YTvYXQ7JV+FjPgyHkm3J91u9UaY1ooUjY7tK8GJoy+HykAMO
GvwOjy69lcixna4C1N4s3lUzxKNHzpMdfeYUFfKU9Smsvj1Nz4qKK+wJ6I7x
YXMICN2TxvT4W8YO86pZ6Un/MZr9R00y4EJgG3b4U6sTquPjvZaXcpmzvlHD
H/HMgbiu9CK2897JI+d8OCHS2reyW+LFkwlfNmLbN3e1+V+C5H/hRZyVWdPF
CDIKB0rbCXbQCq3tyM0le/Ct7yDhaJfZXFTZOSAnrVp7hyHD/Mk1jDuaKfNg
LUfzzKkZs61UCrRxN8BWpkQ6Lkq9sHA2wgcJoYVwQvSBAFAgrvUU95eCj93l
fEiASYwMEKEqYAsAYpLR7cWsHGFOJgrXsA6Pn8S2pYpubytq7m08qFuCB2PF
/aF0IMgUZMxliImaUWCcCPyNyAI003pb9Fr2ojceQOfR7WW5tUA3nBaEgY9J
SZr2s+fro1m1XSBAouLzWPH7IIwk6Gjcr2WztN4u2AK+8R7vECueAyLtLWnD
ruH2msMEKyBqhpT+4bQfTANM4PySNyB0DrlJXNl2ZrZk4f4W1ocFofZAB5dD
IOWE6dV3ZN02sArRLTRZChlrhEmUjYOeIZWFK16RrSCvapl4cJVgB6TFEUhJ
98uvRM7+jsgi7lss3DheItUtu2WyEXjHd5j5k529TYdm7itHbmDL7uutUokp
UcbdpCRW7XYcmWz+CawE62gtmKzrjLLn8NJLEH4iKZNy9hJew9RhX4+b7jw/
9ffrgrLtsHLFXUvqkAyuLXr1XS1XBLekg8onGdPHNgekNnH+LJwI3B6p4v6I
92Ufe/YTiBHp0XI8fnmkD39B24AsRpAAgSBrqCd4/+oqbnLnJ/W0lugeJ4iH
xSnL/INUQD5HB49XRmRXSc1m4hSINxaBZCLLp9By5ANxRQFGJIvXISBRazcg
KMxH37Tu/T/gz3xO78wZpS9kLaN0oeRDKPsYiSH87UXN+KaB2DWIDW6dYcJS
ur6cIsso8ev4hUjab6+3y6S6nKIKrOy6+DxhFHir85a4j/bDP6PB+kRRj9aT
DjThffgTN40kA50DBBSR9AfQeQIiLkAJkwPNkksnfxZv6IueMOX+PFfO/pgN
eP0RWXnEJa27IgUZbUb6mTn1o/CLmvE4O+ggSnUBHYjhlAfCuiUV/MUX9E+g
wzFSDTE0oUHKw75+4M/jc5e5uDFvnAki1328uO1yAXabJ+TY9g2993f9/otw
bBjImWAHnhRBQSnRQMxZtkcS2Zl5bKJOIIgu18Oxu30gs/GP1bBleLV6f37z
ORxGKhE07oORomNEo6g3EXReg8HAgaa8xjjoBLADI5LrL1Ema0n+Zeb8zklB
7HgJZoXq9jYd1JQm2XVRDAdjJ3weXTIev0XE9oZet+51bc4wAY8y1dCwFxxe
klNNT2VXTHCtOdiYjd4ilgsNMRpANwkiIOE0mECDfsmSYv1uEElqLgRXm6p2
MJ/9Uqm2crmZCc+GukOoYtfnyeGXUAY62duwD8Ipm5bPP8MTwSjIYbTwLYQZ
LXwbA5RUWrXb5VxM3ky+hfOSeeyuAsAW/wjI7LneirFUdQ1Imd3b3/OgePnn
kBM57tRXE+m/oQtwz5pN10Dx+vxG7nPYFwL6YLNFrT1yDihygZgXzvn0dj9o
9sJB2WIXuzbnxUM+RllxGEyQC4RvL+eLmKdJ7H9Ey9PoPPazOo/dsPcFOT5z
SionNh4AshARrBURQb9luqn9rGzIiVygteGTd7cf/g+SgjX3WWCQO2DpkhQ6
ksM1SGDVpXqa2pH5aOjEneEz94BCrbv/SuexpURvOIvLIhkPaUU2nZx8cK3k
kjK5BcxSJuhd8AZwt9AgJ/LEldCwaNF7hXLKYIec00yGJMWWKYWJ3rYd+Lv7
V1U3r5nympxHWKl7/GSO3VB3fA3OC+UE7bmeNoRP/ULL6/zyS0bninFqnzB2
oNARmcdewfgOj5/Hbv9qim6np0fcWbMQEKAhLnwuehW7Phf9AfnhD7hjdOO4
P0yQcteHjTAfxI5F4ETA2DdMUmL4jORO9y81sU+DntDElSCZUei4/UeMy1F7
xp1nSVbhvBnwCggDow8jkpzzt6UCr9Rl68pHk9H8LVeboQp8F8WT9UrfJwrF
kBm8p0w91e3QgncObNLgMYL9fZHMY2+wjVEZuA07pmLgnlGE78jjPd3Rr+jh
Kb1eS+g6xSxcv73W7cXP4dGtvGe9aD8hJXahihcwJ4Nxry+wZ0hc1/+Ul3h5
3yfQbCmeWzR757UWbBNWiQ50Dd5EgUEws490DWTD7AUq7hm+DZcGaaGpUnY5
nEn8haNHD/kQezwV6ICdcjHobXZKSDUZiWdrNgPIX5yvkb0QYt0HAQTZlWS2
9gFugKTMSFyfB0oTWeNB0BxJ2tmRBy3XKV+7797uu7yY7Stdw7oyr07LKECz
ARCUH0Zh8GqHKaNQTN+JqUEeCAmQuNBsKSeIlhorV16VmLpoNgYISGoaDUgj
hIQ7AM7ECBiF5LXe5cc2JZ+/71OtBUlfICFbCpu0XrkeC+I+XCl5sSq/4j4w
TG0JxEOO5p2fyue/XlY7bbfwNDlwVPLhRYk79gEOgHaiciVukZ/OC9OAwdCR
/wzaPLJR6rqO1iW/+g63whVqrVhMALZGkI7x8lxocLz8Mxg1sT+wwKBIfiSz
JwrMJ4JwCTlW9N6T2yojZ++DsxF0/OKLWjn7uWJKZ87THTlPGcG++qulo61F
K+QkaeBrTWsA0KFOPDR07L+ie5B8cA885Cmho/9FZkUK38SKEaBkkBtolArC
vsWgtJOSRYI+s+aoL0YEDgDxoEmMEaMWOvZPmgvxgTVVuusGZxRePgVIZCyA
O/jJ41sCskc9bwZYgUASyVvw3uW5dQ0JqQ1kZpWPJCqWPrS2Cn8HV09Zproh
f3SLKQR12BQ4wEfYKjcQLXID1GALGItZYVOoGUw7dOLnEEiiUQYRDzJ1px9h
IhOIRGfuDIdvdA7eSI1ZPTcZNunKYdT47qnmcOiINemKuC5b+0NS4+FFr1xq
2K9OSjjW8eX50Q+TpnRd9/AtPf5ps1a9oKd+lxc8HWO0UXrEmoGc7GV/RU/g
um7ivdJ+PyFtS02E2KnxIOzCahevHhk/2ZIaT7//FMT2hv9eL/Nnv1AAUzZd
prNwspDJwe7y4bG0A7ooCWbKPFgyIntyTI34wUQpYyr7RqSEbuHAze/6bkj6
d6ml3nqCz/tuyC64E4b++aTGehlfB+F11x9cbqivGm/OfyHY8HljYrv4l4b8
RZLQtZmGaZ4iGvOtNUFnOy9XKDShR5uQbBNsAhQFLYnkULvsoOi6gqMB9GC8
ehpi73WZxgExzBn8StkD01Ugux87L9FHWpgW7MABEQXDnDNru3YVt0J0Ya0Q
TpzRSpOEFmDnPbSTTkFd3j/jFzEmwyCDVgHDWlNmc7icQ5RdHNfj5YuBDiAI
qSIWSAs4jyODxWkZystNCVCIFiIiPXYEkxzsllnNjzOraLZkMmk6bJhtDiAJ
g5KCC2ULiX0UtyULE8xq8CY3AdIJfBg7mdK/8Z1ZtdzWZmoE8JsuAHcunZED
oVffwb8QjnEZjg8nRSjN4+hFYvgW/4X30rCXpUTvMSjr7uJWmXuXudmK4rYe
Ot5x7hFAI61KTv0AodwBl4FTA0iHTTFcHWhYpaxOSpbCB51xH4gWOHaBToKE
DOIzO/1mCTVddhonb/EJMQIcXlIghrNoSXNPEtopmWaHO/BrkFv6zr80AanM
gLWd1qj8nhU1wqKrNz65tRKXeve8JjuyA9JtuJCJmu2VNkDhTF2ANjxW0lT8
YEeeTHGk36/aqzlvafz+0raOnKfhSwjnB2yxzo/rJ8nBZp0DSc6/w4VUqJYS
19R4kLGBxXE39m0P+UL2n8bpFNoI49zqzePlXuT0/nZ6PdkkgCs01p7ad7Ch
0oZol1F7P0l5ENuLui7At1tlf/dHnuVCGG8LvUJOWcD+U16wZQnAIX5d+XPO
+HubjzJ8kgANrB6+Jenj2tOgK4SEUsS28/JA12UAB2LwsYmzBHlqt6PeUnMk
uBqDBRmI2QVw5OzteklI0rAPqlYVHUhULodFwyuAL645Z/Y/G8DZClzzdIJK
yAO2c6U5AZzywxcVsbVIh3dEXB+6ZOL6l91xnAXhNmQVoAYlVl6sk1W/otnb
zeQ2wIKNL8gIxornIoFDvnZJaVW1Xs7XBFb1tZ36PKdGTqMHviZkhtcRFLxk
UmBB2+CEc9Mq6TjiQiZ6AjRWskDOkuTPMkW9pc4jSL7qUr0uTiE9ycLdsA/Y
h39yJaT9ZGXE3PNbPbz87qkKnXMmroeRAmUQSP6laVt6GvYSB0Hm9xu+SmvN
3PVntB80AKBkw0bNFj2EiL0jjUj/jeFkhNYC3cAIbeaehOfRq29r1m4+H4xd
04Mq9gtHRlwGW8b8W3uGpWB65mNazRNejVa0Hfh75BBJu4/oA/k0rf1vIeGE
A5BAfP31UK9sINlfDlBD73Eox/3hzovPE1Y8bY7+8Qic1yhiJ3wEgEQ6Gpvr
OOrRy1EdALF7goiUsSsN9xLxmZIcV2TNJffZ9sM/a0wkkaHO4SCuJ7ZUooE0
pvVrqdPx0mGf7tbIroueNptGGHpkhS+W0cx9DmaOhG32hbHYJowXcGr66Cfh
/hGXYcq3zLkPLaOAyfAIo9gRWTYabEFKBKRyHqr8szs/HV1htx/6A/Lc/l5P
RBKg2eCg750kVF6XoV/XsyQ2kgzLWaRDtjUBnnTf/pZjZbo+6BiXi9najbHt
1Gt9Ix6e7II+1/29uOcFdhfY2s1OWSidSrl5nUvOtufyIrbrNeENXd91+Zqf
+EKZsVmMQk4KXJuz81oLQSJKC5yKy67dlt+SMJk812Knkh87ehX+DDEAizR9
DViK7QPyS6R6y1eQzJOBSFZtVA/IwCplerZ+N+wRNJYMfpJ0+lPZTdF8BMhC
2yWXUWAVT0GdLjXFV1+SnWyLzlX1Nh7AfZgsSQd5U27K500I0a5xd42CPejO
lTgjsEInbeSAeXCNTtdAmKHTMHA5/uz7hObJCaDWk7uh3KFzcGlYq6mw9mm8
9KP3TlXA2fg6UIztbylsgl6a9u9EdPxXs/xJddqTYoyJyhWIce3lBhA+XrYI
rquHxcDhyNn7Y8VzJDvW5ZdBLZPx7wBQjNBAPzmnfOXV6XsqntsruVLj5UsK
WroXpMu8JR7BHNIslDpi5rQaZBX8nL674uVvy3gQxJV70jUGV7LL1kll3iU5
NTIBW7qw6+LzkjnwwjRAdWOBbD7BK2mlTgaU0aSdBAJAoh5tQHTg3gNrqh7b
FDBHLBfdubg+Wvi2HFfMfQ6WiHPvvDCda54zKA2wd2Q/oec0o0XvRQvekEOI
Wyun7vADrVzWkfmIVhymwVIn9MprCIofmk3vdK81bZODLcQCXVfwmEhjxMTR
NOaN476H1weRGAKcsa+cxvR+fAd+h8FtP/gPtETSHl6bEz79G7oDhj+/34es
zGakx6eaLLVAPR/SBS2Zx+f8vHHMp2XyGDtGJ9A5IIV9287QBrSCQCyvMY4f
2XGtRSedZD9ksiPUPyIJW2q3jfJhs/0vJQczZ8tsfO5zTev/e0lBlv7gfV9X
o/OoTbTgTRgLWC3pBc49jKXwXGyKIG5XsYzXYI+fQBiDImxBtTqyHiMEi159
l8u0quOwKQfZ35GLI95q1npU/zvMJgFtAHfDohdnV4utDd8iTOC5kquwvx4O
JlMlSamGTGdl/3nx3ET551qDEjKm+0aGzYQMFk3wwoe6GujgFb12TIwLiJrH
8+eIC3ZGzIKj8Q6yacGcAFqmX9GctynLg9SaMs2p8YzX5apSEzFY5z7QRRux
nTY4l3kBdjJ+7nqEi967wCflQeyfDtpSEiVRpokcJU0N4aQprDxkzofqKVGC
TTnLb5VS4rKhvho9kaSBG6MpWt1dIelYh9r5OoDfPXwLYBnqr+scvDFiVif5
LQjcfITr2/pGAl0DpipNiRRD7LzUY1LfgNswfD6X/YSxaxCSsnAfyiNr6MYW
bNF53d+EInXJMyWZFsohS4WSPLaVxw311aKiuCQaEBmQ1tIYPeZJNzG9kGm8
KiRODaXVlJ7AOK1C5frb0+GQfa2n5PRQbxAyCfJjXMQRcmQydK6otQdf9rY5
owEao/PrrjTg0QArAo2NcralEI+Gtcr7zstyuCCcbSYVzw31Vfe1HMuqldUB
LEtXe7U6JDfXQofJoRAeELxddC5I28wB/DwsXZIEtp6Ex+JYTWKBCsitHhUn
8MdHjJ6ONIlnQeDs2iiAELv2B3B+b0nbQV+77OU79zAgD2jgo+kvTqe7ekNB
SwK+yhNxZHSnP5zD4Mqm0NZTKy/W88T+UCZRWG/L0cqOfqwYhJdstNWbEv7l
sinu6js62w/PzDRrZ5K/2pzikRM6Zme42Wi3kWAc//jgmiqgz8QUL8nh+gvT
YQXchFvxs/pyAyC/Iq+Ohgm6mhIPfW1pUiM+WoRTk0qUkuhJDtCBbKgTbUZ0
UspHfM1T+CmiBmKThH8p0Q335IZ8K16++Lcrq++e1wSUQYZB+6e3+986Lh5K
C+niCh/bHGjd/VePbgpoWgCYOU+nC5r5UHYEScKQ+RJ1Fr9P23RiP726c19J
m6Q0b9h7uSkhe/hHbhNpPmliAcZi2q4KKeu8v1yyihW+hYYgMXNkaSd8AP8S
OXsfF0jeS/8yfBZ+ipAZP9t+5D91np+KzSIBGoAYcQqwDqngtk/O5hNCYl8y
nxYrxq3zLSAdKZkMKpk6G8ltIQnICrcuRz4rv3rtiGxrIVLGHBZkBAgJcW0I
Ae8Ml0P9NNHNlsLmZRdqk6Y8EI7yzeOjJzErIqN5IHGCcro/bwbc7PWjZbpy
zf2xfcYFO0L4y3JruQy1gVEAF8gKr0p4JSXCzZZ4eocV895ZR5CDJL3VDgJg
bjl10YNl7Yuzqvkid0D4YJEmu/i2PMT1+KDhsYl9Gz1c+DwZ0nKBbpuxL7MZ
9V+EV9uvwZvfGcT+XhHbKV+oiC07925/j1Zj48Njh/dTZhu/LBmbDZ+jCyJS
bLcAAfZHzseSt3ABQA28mj9l41lPpTpiwZ+OPAJD7pkcaksLSnYImeiOXz/u
lxwvJtHrEQAHKogLQBm2XZUJbWztkKmyajtWVzQ0oXxsT2d/LqkSWk/KPPZg
s2wXT5QO9TdISZreoC7KmK2GVyXV1chtKeraVUC0KwW+ewIALFAJ94b27yxu
kbPtoXM0D0iEpiIHg+fnibIXZgRhSkgYegadBuiwLCxRixHPO1tpGGwYIWCD
sisyXtLbdBCMwgVIHvJwVtfgTeJlPVkMoK3PbyQa0uD3gjlthJLLYujgTRoW
L/uE0ACw5UqsT3ZFNh3E2OV4SM0WZP7l+Vo8IwMxPz1gjgQeRdtfMBMm8G0a
ABhyTzjnWyfKnzVz2nyFfoWFPV7hKYiRUAJ3sOpiPc2gwVBN+mX2q2dJnYXk
LZqKXYPwgCdtS1SuNIkOTkcLZgHFIADkvyt/VrxsoSwLHpSzLebo0CubzH6M
mG7AvvwKSAgiwc9nmFXCwXgpaAZP1jltRgchYPjSu7pdPIs2yB658iV4pT6T
nJaICcnjtoA7HBy0Vo7JDHeAUeDDRxlB3OjTO/zcH9pPBAR+yrxQwZvAGogK
9kqvL7+CT8mRg2CncOL3fiVVGCDGT2ytxEBwGR+mB0R7b32fXRdFkuC5KptW
CuMNQgYz8VNQaFkpqNny/pnKDEmtk88woV302qQLm8v9F8tUZDpahDTCp3/d
KuYTPFkZwUHg/vQ0uvoFPc8ilMMkBk/Ov6Pj3CNjkyd/7G3Y5xisnGvuqcTA
GWtFP8n9JYVEBa9oEtZNp+TA18htyeEWlDOMKDZXrrvSmBpdPriqZ3xomO6m
dn6ceSFQmsbTu5RFKQvHsnbbVqllIPjhuSfo3YXpatqarnC0F4YN8jjbhAGr
1Hi+6sQyE9LglJnM8XJsGy5cPHAyMJnsNSHO/8WxWl9KYkvDvf6OfvSZAWL0
wS64MeiEceFBoCIYPleC0kFzrBWrh5DIluz+ejghv9ElaJUkeT5VAe7xLQIx
/DsOVO4ZykBhiN8xEJMJaglGJLt6gJeSeWAyQATHA6hBOTBNPr/+QV/bqe1F
LQAXFg2R0ylf72SU7de8gVLKw8P1jWQsKZotJW5DmTIPXLsdpIIAo664DEmT
0vANevtVXh3dkWqYgVXHhDSeA2QWpEtJFDjh+iuN4NVzeyWvCCE/PQV/pHa5
nO1djfSwU8kx3nwUcKabWASCojvAiKTLyH9d98sBdBi+pEZsT5Np4ZynpWGR
HIhlWlUnYJWoXE44DDpB26QOY9VaPM7sU5KJDgFCBc8Y39d15TUeEUn7beza
exBjqAUU6EVzbp3foJmkqq7ehCXKdFZHLt3U7dBAbkf2E3gWzSUi517NhC1N
AtxS4zV5RW4dPBPEoJsMPQH+tNGj94uwOykBkPX4nYsauFVH1hPvnCiPZDyE
lPAjaIWcrmrcJ6mijv9ctqyXL3loXRAbh363Hfg7Uy5zJoO12xxxhU6cNBUN
YG4QS2c0nRORKZOzAu8mJ7O2+8Eok37wPsIcbg60wpwRNUIY+OgOhiOS8Xtk
iy/mocD+U9sqdQcLeJUIrIRg62Io3FXrDkCt0Qrchz0zicMaxRZT0UC2Rl9+
xSYPOkWQGs/Q0PCBm98hcFmbbjsTPvUr9JlBxCj6btymJTSydff/hqEhN0dp
nVMwBpklsxN+GQtiCJ7a/sOZR/3dOXADk3SeaGOa0zzkM0Ypg86HBGV6jQJ4
qH8E9+q6j16p287t59q25iVUNiTasOOdqNTQ3nUTLz1LjedgttV7UdeGaNdM
hRc0XJ+4mu36it0Ru+9OC+07jIyfD58Eif/Ul5SCLXwL0nikIgQymFquy+EV
+DWY7dy0Slw/MSk4ACBI5BtKR+vgjQREck3sGuY/0HnRF+mTM4DXP4Cu7LjW
IlFn00E0AZ7GBYRUkFKABUcA7PMsrAOGAAviPjhofkA2gItHQJnyGuNyQXA1
mmni/TYn+b9LjKnxHm3CGZIJwxPaBrBI6B1ci42DjRCDqXKu4SOQUPA8fxaS
Aei2Fck2aQLDT7NkEzXehBhBsoDmzXzhoA8EAFI6c2d0ZD9FazWtGeGzlD/r
vGgSge6AZM6QHE2vICKZEx5qw/HxOQFjckj2iiCW9SYelzzYZ++bc9pvagFs
7Mh85GMp9/BY15VXtZzBw+uDUrCs6F0p4FK5XDKd5kwldCUgxZo+y67ec10Y
MuHkB2mVz5u8piY/3m8ghGAFHAxCKAffbstWEKm6XvKhqbSVCagOxK4ReHL/
ZuNHCI5kqqp+j0tn4MOxa3O6g6viZR9zAdH3A2uq6LLsoz72j0tyqmUWJevx
u+c0N62Z8qzJ4zdTcnq/KBuT5KRSZrx8Mb4MB7G/tB3OTMvBW3ohKey2yb4L
nIUO5UC06LAvJCl5fZ8646gJqfRFDEikkxxqjxa+SWjDDaGRklWsW+rgTNtV
IXkw6nYwslKVbOmUtn3/DmLAv9oP/wxfAywT4vGg45URRlmq2MeKESAjQquQ
Ld5ZnYWjbE5aIf2NH59z5geM5Y1OoNkSGxkrQwlowwTeP+PX7cc0+1JTHA+u
nOGZXbLHjyF24MXeQTEyNjcuSeabDvEVL2mBAE+IPA6+aV1LufLWD/monaRM
+sMjJLPx+KPWevGZ4DgQ9v5MhtheoLN/5JPbExwSd2G+DYMuBLYB3OunJnvv
xXanAS6aZ4vC1RFXmydramq8B/mzX6hos9mkxw8wAphomQlNYKgKI1WWzES0
IyLJqTh8S8MT3eU+1FeL9yfuJnRNmklsruy78R3amxiWuXG+qxW6oaxyZG+o
bahPEkEcLg/h7okuod/Ed5CKk2Z3396SNiJEvIY5/HjFzGwfQqu9fsr1idcR
eweRN8AUXGj0oH04e6ivjnAe/JET9/0NotLdPjntaJbb6A62INMjQ23osxRx
iBXL7ER3ORHfIZ+cFS1slQxaGKBM+/dV03FJ612zhTAcBnipMQ6AQ5tBSNg4
3BXLxSvNNquTfa0ncXBVXQMyrRTO7m08iAfUutsYtZ424hq8HjFIqy4ryHpT
LTgz0CXHVM3CQbinbpfkLMI/dl3hPfGm7ALqyAMkAS7Z5xZKl4zEI7dfMjmW
iRFGc0YF14D2YBe0nHZGC97kApg5/lQKYpp5bLg9PhcWKtt76nfjlwmTJXSq
3QZzRiZaWZJm0GCeLtkJmg7REWIlxncwXhIrfj969d3NZlKlu3oDrg1uj0ui
C/hoSXIVzsqo7uS5sln9wnTiOFwhHh8eCz14wMxjyyz35VdAYBwE8sGR6ckd
mkRgAjjzLbO+kIHw85sTPAv/i6iRAFdCUCXVZ/NR5AnYhvtHAGQehwfRdGSI
Qqp4lC4wmRK/lnFvPND2zd+2rZxCg7k4WvAG/uWVI2U4I55icuSe/f26IAz5
l1/Wxq7PxSfylS/O19BItDplUsK+dUICsS1Xm2mwZh7m5jpXxuASamWbGVc0
hyGOnP0dgRIeFnfGF4H3r8xpWZlFqdlENEr0KgWPtlRCNpCqVEAu+wS3COPi
uShV69dTGDL0loCRBkgpupyniRBlwf3Kq4xdrGS+7Fm9KovstGFJTg1uDrIk
89ihDIIs1B6/BnPYUdQiS/OBVegV4jX1hk7R4IR/KfeB4eAx8bYD0UIaGT5z
LxfQEa0x1C8zJP6XDpep0WHXaoYEZe8SIe4rP+hrf+O4TwardqseBGBc8OwS
pVatR/GwCLzqUH8dzqLr0ksmKtm9scDst7wt7lVWuse2zfBEPYitT6GdWBy9
I+yVYx2hc1if5Fw1E7m6NYjfCiCDVoJBL6OeDGy5zBdxF2n66bD8Iy+MFAsC
uAYTpV+Y0lSaW0CWtG5+JzlG+mrpMkMgZ7RjxY3dSRRei4XxJ0KriPTrXDdw
KkmKAisJzUAMXVCGf2IXGAiWDvFmWFGSTzKrilq7sWuMYq5JWMQALZYEelko
PyE/jzMFFk/h/UEwuaB2KzF1yjN9bfu4lOXdvPGayx0T98mBi4ovcxtiGBFB
dG/zYeL6w3JeRloL9Ck0EUf4ZN5yGxQ00NmPMqPt+0vb4OR8CNvsuvIaaINe
8S84KjBIayUpR2ClyUK8iE7ps2Yd8x3yhZAA2KJZ9HUDLVYJQgJKRDTAAiyX
70Lz9MwgJgAy83m8dKEkNW3Yx5DRQt37wbdkpTJ2DaSFWsMPI+n3Y8XPmW0k
NFWS4ee/DtTIGmLus2gvdwAfCC4WmkAD0zPZ8p/FS0bO3o+9Mxa6tiW4nf+6
OVgR6TQLssiQPnZemEavATdwA2RQKCY0MCcTs187WhbJeIggRahj3Q49dM+w
ElXJQWlTKRj4JXZ7Zqf/sc1y8Ipo5c7F9UR5kmul9SR3Q0S6dUSzCMoOihvf
AS+QbUB+ZCzPCQ0g/OHK8JnfvGMKKIOTRBzcIXTi57GSectz6+iFToAgLjln
3VXAn5Kse185w01rcUaMFOQWaejhRPwC7elbdAcCD524yyz3lPZHzvcM35ZC
ciO34cx8BVcoaa4vTCszRL1GJuSlRowqYXKgWd+gJy8dlqP9IJtxRtMeWhfs
NntFJD2LSZnFv8Jn7mFQ6Mtgjx/3J8Xprr7DQPNzKvD/sfbewXWeWZpfy2NX
2WWXXeU/bNfaXm9tbdV40q7H69mZ7ZY6qNXdarXEVhaVqJzVorKoyCZFiRSD
mCSKpEgxU8wJiSRIEARBMIBIFzkDNwC4yAAvQBJU1/XvOQe4+nBB9c60GoVi
XV584Q3nfc5z3veEGBOEYdi09C+esKTf01ZWjrvqJUStB1p282RGZlz+x/5Q
F/82eDA2dAlcZWCRKEwnBXKefBLOkBhuxhh5xcIEEHKMpt3lEcawM/9xuEp+
U8/+UAyLzJcVZGze0RrYwt5QFMkJElHAMEUyVX/NdtVSizGVzyoZIFRHreAC
/wVAEPuUF7pPa5Dx+nHAt0s4EQ3S2mSAj30XDWZ2RgPbJlNRIo3ajV5rkyTN
bAl255ovnfqE1Jff50ebhEfuRmIRclb645awCDRjZSGfj1puZ53O5z2CylOu
fqsmxjJBdeqULV6kDbqOE+C5bUI+NH1deW/lkjczQj0Vn3CxaqacfdVSZUZn
WtWwqq4hFIGS7Ze8D5r5hqHyM+c/ARABkjBwHgi885xZmZWwDsi2ym0YpU9O
JszJyaQ6aI+kDW/aWNFT0MkKl7wV3vkPrALW+M2LqwEZ+qu0z4XPA1aMAPQM
BAbT4CdOM7ACtNuccwedfXBDGVAAGYAXAXQsJe2KnHvdHDaOsngZq56yub4r
AjiEOobOtfdBGIBTxtNTBzM4Wr+nnuWNkYM3MSz3WoVcTHieFtl/o29QO9Ap
5uXMKzCi7uJZ01YoCwcY6C6R8EmUHW2OHb6zp2IBoM1ztCty4Ma7fFcke5pS
YOVUYyUBrQdVB/ld05IrUFuvH6xwPzRWNzoXrXq4tqu/aXvQAuUHwI+fe+O1
AxVeyqEj9wFaxRRHM37dtuWvXrfywQjVDa82t6z9X7kmsvcGze/JJ6EBliS/
mmFhQFinipvOm4HYwFof2DC+K9I2MAIeHrCgIeYd4qcMqLairZTtSXRoanIR
vN7qlVZq83dcifw8uk1u4aqGcORuHqsc7OffBPCB/Y5517V+9W+QTF4U3vWP
ty6vfH63XIaON3Qf0AHKR92lc9AsqqTTupc3Mq282v2xgR2v8Ojb1Bgs2TWd
Ie1uSbWlAAQTAzKfJmzoCOV9atqOCGEOMBEoVpX/UOaZedGs22CJCIwqcuY9
cvtnOuXHDsLm5S4/fcMW0LqwqsdeFoRxS+Xf47cncWVQ55Wn05hJSvgHLo2p
Ek04E3PMQtUyN51vsxoEzZ7OmgtgpF7ImFWJoaFor4tt/kzvHYI6Pgvmv5da
dBcnKsWPY+nYt4Xjp65EvyVh1+jXNugwwYKbFcFdkSBEJyc7fv8zd0WuSfOu
+d9r7oqMTN6cSevId+2KTFUHU8fhT/hhwVq2zArQJrznR76yINWqF9Z+SKdL
tasBBAVKl89XfF/VCriuKmcVv+372FzW3JtgEpXYwdYIYq98cSWzoUN3GZkB
BCClVgKpggUCH4AMxM++Bioie4C/QoZz70dxHKrqgJwjmahgBOkly0Izap4b
qTan6bW0f6eidNo8+g+rMrLvJ79cZEmY1/3vrCAQ9ccvaweA/qI7lK3i5JPw
Ww85Z4gYFpY/hjZIogiRjFvoLJCIsgPPYXTLlUPpzmfN15rGy1etYdOO0jDE
6XllpZvpCeeNSNShldzDPCnzbS+o/qRVObSCIG8pN3XJB92/v07FrbJuYzDB
GWjYbSsqwXC4OgYmhActyWeuxx7BZlGAT9VSJVM69gAaFuwCqGkqCA8agJBK
gVLzORpZSV+H5LsL5weLWMJ8GIzm0jXtVY6NDybAnqqJnPpBnWHgP72rBLRR
qoHQQiAa0sUMtm/7O6SC6WZONZKqoTbXg49QT8gJv8ACfVEWO2Wcy1+YVwfS
qoNl89Ddj5sF7dtoI5aASBVy69dvK2lPzWzKNyBpMYAgmzL31n6BZsfI5dWg
OhYBnB+LO3HlGzAHbKTZ2tU/fCdCiKZwkgB+empZ0Oxce78jCa2F6WHjvGl1
kQD/oICltqn9X7n3NH8dlL1ruh/7DjMDCyQi82gZF2xsWExadChypXm0hN5B
UQ/ihv/LLWfb+lJV0YNy7iHJU6U9OQFfspGnQCIrLvXN6LjrdUNy8m6zPwFD
I4hFaXg1FTa/C+hSXwZfGnxC6svgYk8145oImbo47Za0u5KTYTY5BbHTfqfe
mzaqwfFPe35ysupMQ6c/7aegpQfAQcJRmsr63roXVR4duiQDcHQMMswUAzsY
4Bci/UNdp6o6h9C8GOAsf+wpRd1GsqODl+Qn2bwDex9RVD7taK6YQOs+DGfg
faDtAJZdf+MWxJVf1g5/VeKR5q+x6JW4o3ELXIVVc7S+C5p02PJj8xAQ0nX6
5gk3/j+usILaMG1U0y5WEifLsZmpUikL+5u3Y+GiRNadbaW/tIQGKOlE0zZz
PjyvqgfhTEXQtO6h2WCIamJWLbNEQB+4qxjGprZVW3ZuON/WW/0ZY4he4wNK
DdgHDAE6y4/dUub5sc+/6WEgeY3dC47XZVZ3bi5uZ8QALp6GafnEjgs65Tz9
u1Wnm4EyIP3xr5XkjcsYcK5BG2L1q15PVyE4jEnClUrWGlr0wp5ShT5Vr1Sx
1+JZtCSrptMdPBhwcKkJPZsIw3Wb+0YG2g8qn21fhbHTT+ssG4853R0GCdPG
k4tBFV7KOMD9Yjm3yzQrfMG26F/iLej3aOZvfH9Y56c5t7+qUqHveGlajFyV
DDj4i+Huc+vOtsQO3w1UvnawIrz7n7QJY7mm/XRPmRPM2uo4ci/gnxL7YH5s
nRX2ljGM09eVobMQYHoEpjFlN31Sg8WEvHm0o+pgnnyKMUQNXf9Wo++fMC9n
Da+0Hd26V2lLu05FD/4yp7YL8/O25ZWwXDR7MgBBHlGSTI6njEMG0I/JwHqE
UaeNmBhs2wFn4H21a5B5xkeKabgVKwaEn7YyxHyNvPkDD88M0suUVDtxhdsj
n1wMFU9DAC7YX/ktnKY1wC9eVTjuKdcf8EJx37zkRJLq1v4RD3SdykJV9WYK
rZ3KSJOTUWtqe6YSWs8imKY40iA99eR/JmJPhdBgM6YCcvBFU/XFNWFkKvgn
AwCenAzpaQ34037eOKgdQixoBA8+5q4CuytUfBZZBRBWiU8+/OCGUhgdOLDc
8kVDEphl2JGV5F5vZ3BlXlaV5fmW5diflRmCl0Yzb4XpsZARRY/RsCiANRiG
gNujFhJouy4z/PxrTVHLAeXo3oNoyUStXqEC0Fh8kZypvf4vIvYkeZ58MfQe
i8D3Q2SN5j8hH4nP/gd6Sn9hyI9NpJj7KLeWwRH4VC23MPB2+B7rHXCLZU/z
bZDIgZ/fuaoCNIBtwutAZnj1sYZ4b+XiD3KqgFzZKccf6sx/vGfkCr8MAkpq
5alGd1n0dGfgFa+DunedelaxGMVv/2ReLe0M7/onwBl7+fp3GkAhHoVdoOCF
3SWR/T+TeZI3o69uLUpNlRTqvoTkw295KSYA5r+qvRz8BZDFmNNmpYOu+Qys
hi+hlOHkw33ljDmz1le3zimxHzQrxjBehNJMG2R0NOJBv8BDFDeTeM9aWUlN
y/+b6PzrGDdkgGFs/fJfqbriices4PvLjBLGrx9KMp6MFcRemWAzK185oIZx
o8IMs6YZIz034pvnw5cgAArwqZifEn7kIdUYOpJpld/pF5rx3ayqJ5RZ8Stw
mBFjdlTdoHFLR+7053eX3ryk6o5VocFwFuNz95oKhoW7GnouKoNc50koh+IF
Ll2lqQg5IyzFFFr0iBW0SolfKhOdzx3c2Dd1U8s22Dz/GbXaWDwcfg4jQr+z
OgyQlSOlsSfB2mFNaXYqFqQKKPgrUiLtR/yJi20YuYqHLXg6nWMnYoqtuBYV
TGFRakNpeKJ2+YhFqU+CqUS0xKy/NAzkr9k1nUHWOhXxgtwyqFCmIvZU1J1K
ttPgOvW6NEQNXpmcgthpSic5GfPTXj31y7TnTEXs5GTVMPXetD4mv98PvBEu
cbyhW3WpimdBDsUw+8qVrGmwTnXE4kUW4LYSyneiqVthMpevKvykbb9yIl0a
08mjHD9qVxc1sxKRXlaEfLAj2Twc7tTfuBmUg7CBYNAbJZOsXgnl0HliwwZt
d9euVlh0zWfmFFEMqYOWg948BK3xvPLGd24tUeEwT+E+VcsHZyH4ZZqEBD98
da4VHHjckoH0VCxEQSjToDih3JUFJk1bRbNr1wzGjsvXq/4reYN0FqCbZu4r
02ZsaBEo98YhhaLY1sSbAy07ocosvYNVMS/8jTpgTLAaICdG2tfrjO/ofeCP
fPmK3wGcGXN02Uv7yvrq17kuU8KTM6/ss5wbtJOHMPJmxT/O9egCHuiHTbyX
BjN6Srnfo7K8Xadf4BWzDyvJth/SoWietnR/TBmqhMFkPaJZgCygksfe+UXF
xBbBdp1X1qyabsFuSkJSMptrlBi2dE5X0Uw5WozEAFuvEe9R9lypgpUnHpux
pUTVKpu2YnegegA6tAZ8EhTaofPcHfdZcUn0iwJANpdGDtyI4qMlKspQNlfP
KZ3zkkL5bmnf9rfhPT9CWzUt+4uHLP6djjMsCiQ/9KtY9u3mFrIGDJSP5ZaS
+NlX+Gvblr9GU6CIETnzgZS/fUfu/V6bDPkxQ+CN4V7pOAaHrmHooRyB7ttW
VNJgL7bOB1S5baHchQZUxWHMh4JnUJ0oPtQTANu84r/78cvNSnhS/PbcIzXQ
j86CZ562Mo48BIbPlC08XsdiSVoNCIg62pbW0i9uQavSX25XjYmGjahgMPzB
DTpottOEmbyOu1rW/m/KpH3hXVTPLZ9Wzc5RoD2vwGjSyUvRSwzOTz+qjZ99
lVYpncvR6bwX/Uube0OLjbvW0IDu0rm8FBMDZaoo1+MPYz7ssGNuTDbVU2jc
oszbX5XxJXMBQ7g4WG+FMN7mjbQWVoOZgwQifigyVSLuOKFj1tAidKLnrcWm
VvXJ6pXMu7uF8KUtpW2pZegfGK6e0GJ6KqOv5gtMMJQ1aPPUzguv7Bf4gDZI
I+KN/c4UYBKCPEg1M8vsYOP7eldpiY4TLMbU0h66fDWFisPxszoCi+RwV2K4
GS28RMFu2aqvBxsxMEklLHKFmKbvpiJw2s+IpZ4O/jc5WT1NUql/Dh8SDHnZ
+8qZnK9E/U3bMPowkwfbMyzabnOZyrqtxngUXsWOgwyqGdEXYlSZFLAayjFs
oQFAveU3/oRVMBjOOGbJpcEiSyHyNUB3BtozfBlgh56BG8DahnOtypquGlur
V+gEM68sOsCX68+qbM1Ae4Ys6JLZmOEwvVQK9GDHg9bKVMMkTeknA4htuV4/
RrB3l0cw8MFS7GJEcZk8PVaz4r4uDSN7IDlwjVTQKmhScbhfmSWK34Y8zz9W
yxPoIGDCNwjh7nKFe+xUuu99iteuWNBt2xG862OIevVKABkkARWhgj3KrTpf
gc/Dl5Wf5MzLUO7V2jmZM1GBfb+f/MbPvYGCwwyZsVnlXB0nKzuHdJpw4V1z
TVmDYm3qTbDSgS9lTrZ6wa8KbKUpgKmnrdwk39Cwi31aKbHDd1v5+HeiGTcD
QdzICEB0mS8HSRBDmhQSHj/Dr0ocDo4mLUsGSkcxd5VL5CuScwdGuph/wTPA
/lY5CH0EQgKP5mP/ZU9oIdr5UFWHO61xpTz08h65dXmlZ6OltYAnuKH2XHhf
x7gZt9xl+a8i+29EQgSMpXNks1Sv4K+s2ZGJXBY0UjUIzBcRG6Tj6L1giwKr
8x+XRVP+kafs4KVoInqHYVLVNcQUyKaoXz8YPRo99MtpK1VooOvUM/QFhEdR
TlsZ4lFoLsQS3IBmuL8ZbQA8/Wj+js9D20vCfqCzw3JLZtd28hbkwU/Jh7uL
XdhiWbf9+tOqwXd/QDNuXlwFLmn8c+5gJEFRWivvoLIPebUdgH6MqCBdKK/b
PwspBDicpcDzrX8LpvEEOmgZd9/gMs8DSXsQMNRZKs5o1FwsVDrctm6wvwBh
RBp7BykFgVu++J+RIi8yglJAi2FT0GVMBgZcuVMG6jyMFFPaPYVYhqqS05EH
QmIFB5kqI+mfvW7j+GamufgmDbeDAJhUytAG+FLiYjhxsZ2xBRAwxkfMYc/T
No6bGOaGt6qweYL8x/zf5GQOH9zQSINT/9Nag45koCrQNW+fSrb/+Rw7Odln
O938+fP5ioyMKT2FWaAxofFQUzxxZXSihh0DO2pxo55+c2RiCpRzY0KXjUwc
oHBxc1/CY961Ica/qmVzznKVNKdGAMMQtFEG9ctX4xcvl0ZVFJJXqFaCuX+r
VsJgQ0lEYRGqi9d+iMvQ4yDn/kql3wT8ASg0ZhCxg9N0zSENInnSXMqBZaC4
n750n/MDIBSuJVGRi1TvyBiKSSnfzXpVubTEeBeMaZdiaGARKBI/kuOJWAf0
qPN97rZ9MUxTaSSvYFRZVjyNXxAY8aZ3cAZWhxWx/ViJU2LHGIHo0CXuGmg7
WKiY0/bjZpUox4jqA+4/XNuFNdSoc96WcYLRddoaPF4BBPzBKsF0pWEoRMaW
sVJZ4Y58nedevor+pWGj5hQH+8W+Zl1vVWBUFljECICr2FbAjgLGQ4u5gF+I
kxKJY4yEFsEGWZJ8tiiVUlfr58PKJsc4yGRLXGEQzBX2qLLKDKj8pTT75auo
Qp6MilRxuvaDUFP32aa1nitPJTW7TvfWfA6Rw9SibUBuTm0XMgBQiP/Xrplr
we+oBtQK+KP957aDDBTj86qST3697mwLs8YtvIKW0DsGUwU9+yt5oB8v0oBQ
xyAUnSW86XzbvKO1ynArT3g5bGMeLpBa3IHyYlLonRyHTj7ZW7NqeUFjX91a
FfcMLQS00eAgDCOs0sbHHnCPSt7Vuv5fyxuz9PeoHvnG168HlLBEvPANVEen
0o2bB2O5jDytPd7Y7akYhsyNEFsJTcrFGJ60YaEasx39iBQxenRQs2kFCGCz
c47U0B4u66tbB6eCzEP1rWrbOz95tg3FZ9xjhbJ2RI96BVLVBCybB+1UYpaL
lxEGFYrqKuxv2YlQldssIFH0UWev7YfgJ4wz+gi7T7W2Y8eZUHlCZtxMfxkH
nTsfuQfVA2dQ3uCOfJQUGhkVwAUQMF6npF4nHmUeWX2YfjwQPoC4bi8NK8qp
fh3DzkLwzBiYbKriV/4RNAZ1w2jwV8378GUrEPzC9HVlUBG6v62k3R1Hi1r7
IABy3r7yjR+Xo+WxfFlZqg1X/pEVLvwaaGK0WaTYZRg1g5Ej3LK3IkrXVAJV
jsRr4I2ioM074AaIjSc3Vl0Jc2439GjyD6hObD1GSasvnKXF234IVoBpYOsx
NwjRU8HqT/jh+XLkC2f5ORfD65nraDlASmNUGdkO+ukmS9J5tR8j+i6HZwsZ
7i3/NL+B1cTIKJlq6x5kEuMd25O1r1NF+borGwn6HfFGSOAnH+SoMuw8jOLQ
IhgFL0WEnt9TCqNA4JlEcEApMqqWLVVkZX7yWqchaXpwKgkPjlWKFWCKKrS8
8Hnk4d2sSuiKqqKfeOxj27XWXn3bfjgwBrtXpQHfEHgJdkcedjerD6ZB76Dl
8EZwjOUDS0EmWf5Gp1eDKvDGjiP3MoBWFPLNBcfqFDxStUxb9yef5EuEnPbA
OTFIYdoMlOxr6PSWcb9KFruqktV/BRfFLGXoWB0Okqw+uJDqTVQttUS4J6MZ
v77riwpwDJoHb5Sf4fm3XtxTirEMN4MumvPPGiYIZkibGXzMZBhs5MDPuVG1
UbJ/a/x/oR5+4V3tLShDbDShA75SPwijJZH9P6Vr2AUwt/Yd/xE8V2ompVR6
ADNBY3LoV14XjL7TUxVwqV4JQ4MS37K06rYVlcoccuLRG15ral5yHRfQkvbt
/0GhkScehQnbcL11j5FGXnf3GlUKA/wxCZENlj/N8Gz/9IJ3ec6i6KGbwzv/
4ZeLqsXYs6fd+UWF0iFWLOCvd65S/luej5gxoTqyKZrJf5Eu+TgxtnKIui+8
4Lq2zf8393bkTm/f+jc/X1DzjG0IMOkYJgw7zJMxgVRY1OFj72RWduQ+IDvd
IA66gn7xbe1kYEObF3nGwt+u1AjDaRlA1p3OQY7c/eJe1bNAWgBbUIi+g9WI
nMJdj9yNLlNu3satDB1W8G3LK33DJJp1KxAqWLh8FaDrb96JadBTNjdFBVGU
KbKnE+T69cBaR94MLxbJ2KKRlYGtq1Bb4mPwkFPgDwsTafSdfLkEtOwcr6We
iJZFB5kUz16LyAVJ6WGrCOyfQQ+eGVyJ7oUYXI/KtN+wcZz/oCkaNqZq0MD6
gvxKjQ9nTt2RHp28j52cvPOZtlMKyqXRttHv2NYO0uw0zpxG+fwn2IA/wrFT
F39/xMbahedgvjnkQjLBYTsxP52wqmFWinofOkiZ9HpKWvsVIMkFILny2lmV
T+fYUDsFyzRsBEyYBdScOGTtGquilQNtZlohh1h2oOKJpm54AuoV7mFFXuRn
opT+PcUAC2vKAmoOA5LgGOCJQHpV0OS1djxSA3LN8bzmcMG+xOVCi9G/yKQK
wXfkY5nulbpR3BD8h2WyNxRVTsKeYlbHcK+KV14cqJHzXt1ai7P7CnADNPj3
wyM1EGCWzD7zjaGDqmJz9lXt6rTtZ2zBcEua+hSwBtBBrTE/WRpwWt+6XFPU
wo1LzFfwTSuFieXOIKjUVziTL0EP8Ao9CL/1HJXAoG3C7BGBH2yIn5kJetgZ
7mKWwMfHaiEqXp4MWFBge2gRSpMFzl8xogENGg8NAzNBFeio8i+dVYybvKMP
3/n7w9X0oiQ6oPiLlt2+ZacEaLn3a1ekeoXy8B++i3aCe2gBtBKGQG/1Z/Gi
mShEMMf9hRhkZABobd/2d1xpVSZLwUbtiuTc2VMhvsr3vNoKxN9LkyL7b0QJ
3v5ZCB6lQKTiWV41zLZBHhs1n7SkbRHTeIaxM//xH71fD9LyTNUNzH+8q+il
vpovUElPmcN/X8MG2omCgyx57BIEAzVEq9BubRv/HV96kRowGZLMyPCZMeF7
dJzSJlQth+kxbkwx0xre9Y9WJuyTWRmYTtuVBKntwMK8OkbGZSzlGAkyo6R6
P/gBfbz985C3h+e4gyv0GKWJWcHgM0c69aheyUwh+VxMA7JqOiHMN8ytg10r
juDgTbAaBElF5S5fRSCRAZgSHek4/tDoxJElw5USeAgtyuVkcw+DAxOAFbR/
/fdYE8eVcKwZelxlaRNQJadbe5kLZW4fkpJVkp+6tUpCPlCrfE1H71X9qbIP
PY1A6tfz2I9aKpic2k7PbJB6uxdJCS5MmJ5qQWKGD7ewjjBwxsP2LQY/Bche
BzxVg8xTjI6OXcPxLxnAxtSH1DUw0tQTkgGATdsVScOKtOd8167INTVIEL3T
VMN3YvE/7yc2dMkPEBWsHc5GmEFmnh+3sfJEfECWBbC3W/0UsazwoEoeNJtv
p0dBqvxH9MhQvAgx4HuMl8Rwq1R/03bWu/A/EQXAmSAsOx1rgjADdVAmhG2o
6xR2FvIAjcFywWItau1F18NYVLS9YVNV1xArBeM3jVQnp+Dwd41Jasy/laKe
Evc9BoUsMWkuAKg6aDqtUCVoYBbVvD8Ua9emTSV4pVDr3lILAt2BqNNyzz6B
RIHzKprTVw5/VuZVe5ql/ljACDCA2gdo2cNiBANfUZ2aPSrUe6yOdYQEIrSq
axnNLY70I8k6rm3aBtmAzDAj/BfExuTXnnDZh2hGZkpLMpxpRSh2YK0ow9tg
HbDMcGn3u3HLwrx6BUE3bsWyZul9eLSmTMm+FjILJZEBNAumJZ3SoaHWfh34
wPRBm1G7Kvte8j7AqHzpSo3bcHGwnra5LyJmrx1rzlb2uY4TwBqGOXDNCKCJ
GFiAkS9fO1DBlxibAJ3GJHLY85yALZ409QEdWb4LtCIPqwqbvDIv4/CM5aZ+
2OoXK09dyfsWQfMu48+48ZDOgmdoBjLJv7A+RTZVr1DG1OxpsFAe68pOJczy
6ukRtAFgP9XSQ6+xpxIJheT01axiqAFVDBNa615DDAL/gorhHf+fghOPPQBV
4INENJyNiMKup68vg44C4NzIiCEAVo45w3elUBbuW5K0Okf+4bHtyvhnOffm
XP9WI5xWvjHbSpadbEQ5WinP3ytv/IV33dsfsdxdrgN6EBsiIVeiyiW//rQq
v6kHhEeXvQBiFzztOalYfcqfVvFJNPNWz6OVNL8RGpNaC9r9a9x8sKrjjs+V
YYzBufjWD1hcNZZ6Gv3YapsAtAoJZ4gYNL43xbEY8jBqmZoOVXcwINqqqlgA
IQmCUqoGKzCCfkllRfbl5gtq0noc+wbxgO9pV615B7KNfWF9icpNaGJpY6SM
WF22ID3zCMoghw/qjmQAVFNLHgU0OrHNnpxMwpPX2tP+E/axp+5apz3tj6DT
v+iHocPM8S192Jd2PCywy7este2ZiGjBWgLS1Bv5xja9NU3OsZlxbo8OXTop
WG52bGeJef7Slr6R8acNNVV3Cf9VVsyKeGLLcy+YhgyA5yA2wIXYAJjhgVG4
unZWB6rR6VyQGodkQFGmhi5t5NNUcNr1PSNXADRWIjIGqAqN42eHYnnY2m5H
YGtol7LjhBJij47BsS/2VWrTuK9isD1DZ9DRoxgmAnb4edcpPgxeuup0Fw1F
x2kza4onKF4mdhzIgpFa3o/l9OVgVQxm4gXiWaeAMwucwYTSQFEso0jYMyjC
UfkvFJEmfWZptNF6MkVhs6HFWC7K5jHUxDhj+SpRQNmHKAv4KroSwsMroIKg
Og9nXfNMFCXcm2XCB4AXhGQ5Y+eiHeLn3mDAX9pXpuBuq/m1JL9BdbQtksXP
0wfaD87KDCnnQLwI4UFN8A0IBhSouvroGMQMW4Aeyas8egScVLbV1n3ahjr9
O7qwNL/hESsi/FFuraIOO/L5q+/YvJ9TBVAo6ufc6yq5eOQeABkK6vHajIAX
i09a1j7+xXhBuwFZM7aUAJVKuF08SwUp6r+yCmhfgOF0H/IPFIiLhhYxdPwJ
5cUInGvvRwXwfOUeLJ3L1NBf+L+qFZ99jWYw7+AYInG2vY92QmjvWVOOtPBS
vmciuks+AOQRex4rv7tm+du4jCHV48IWWgR7RzOCbLGs2zA96EK8eJZX5qW1
MlhCizuO3odawTKSgogc9hykysFrO4qRAzfxvfZIP77Okn3d7eGoo5ZmCtsh
su/H6KwUiqaSp41YbTKUJpIT3vNDpAK1jvqAEniCmrbNf6md/9Z9GFawDmw6
nj9qEY5MKxdzjWrYRY+iLJA3ulxg/U0tulRKQHBjo3yf5gYx1uvvJCfvGyDP
fj3Sy/ig0Vz7eET5+HbKReXB9vJDxpDHUxil4HT8srFvgkt+6nZHT8X88faM
fQvRQUAO7pNM3RUJtjwNsadicvK7OfbUTYA/4UcHQ73j+13aNr90dSToAmpo
3KWk2U1BPJQt1hcamYiM8+WjVPkDdRCGwQlXTxQok6U6iYOaUE+8r6qO0SMi
4RfDitEIZ/AvAKjySVYKwdJEn1PJxcF6+C2ywVIF7aG1+0PpQzE6ecvomgz8
muqvpmsYGGSJ0QwrmF6HWrH6C/V9I2PSRH0hpHe8eoU2f6ySaUKTrlSxXadL
owOWXiZTFSFjx+TJMHJlvKJBXwUDywLvb9gIseG/RfIMPKU6YjWfI5+8Uf5L
zTutpsBcYJalwSAwOHAYpUOMHRdOxo6h2iAttEoh2xgaLTtVdtPMTJrEMmSO
vFYgv8tONijnAzgZOcyKoDueDQMu7VmPVLIB/TtQAzmHSQLOcELInhcpwDRm
6QELQNm8o7Xur4JFCUUcL3ZTtYz2AINy+KxcysSdD/cv4JaOPPrFw4FE1C5q
gscythgp0cFL0rl9IcANvAED3bHfAzPllnDhPew1rmEYC1t7lRhQWUpe7Cp4
xnKGPLJMkUrLeSOcVk41Z1/TnsCJx0BayBtX0rslJxqUX/HE4172gln7UttB
S5hidFBmdQeqRHu2nQXMnWhb5adH6+MDbftorcINNiohCVjdUzaPEaCb8nVs
2ck13KViAZm/oSXx82+A7TD8W5dVAr/cxagqqVfT1lj27YB8NPMW5g4irUTZ
9eu4xmN1dWxR8DRjuP5sq9ICtB1AVTH+Vj5vP4Pj/q6zc6qZI+brl4uqr5/V
2HXqOd/zue/LcmCc2xlnOqi5qF0NsYcwt238d5hU5r0/i7cwnkwTWs+j/kfl
MaJavbd/FoKiw42Za/6kxOylv4cs8S9zhPZ8YseFHWURrDlYN2ZRX80X3DVt
Zei2FarvEM26TT5RhS8o3+9XZYvyVByWAcdIVNhd2wH0HYv6zUOh9h3/cfq6
MmMd6yF7PHzpyQZa6Kuv2lYTH1q/+r8UJnDoV8y+CrpVf8aAx8/MhDko+1aP
at7BBNq2/BWPZYL4hgnFaAIcULW8d0QR9GG6ALWIZf92HAcUcpWfWvJIJkKF
fqQBwAsriFnGqrITGRUpxtrCvvbrPRg/uBPiD0z9N43y+Q+8FGsoDYpTGRfT
wPaaX/5LfwZa92JXsl5YbkgIuIHFxDL/2lLqYYJtudCOoaqyrZEcCCSLkTXL
l0gjE6dtkNY9ikG42M4Sg6V0HL2X73eUKcMDN8Zy7mSVIaWDkSPwLlaxUm72
XACFmB34D1PPxaw732mUN3hPiRLUdJ9V3Flokfc0fvFy2tAlJ+uyIGgHhyg5
hV37Dz1liT2ko72vWIDeANnscsl7G+olXzWrV6VTs5rPn96pwjEMCyDALw1D
Mlm/scN3sq7hrjwNnRLLmoakqVJYaDHDgvAjIbAdvgFnXHRdEpA9r3+atI0+
YIdRBQYxURkZ1bRt3QPpAq9+s6yS9Qjd5XUD7/1Arnd5M9BlszD8s3VuGD/3
Ggu/sKW3r04H7sDRDCUpysLqx1JmgcOWWfvMta2Olanasrza82qaxbEfDYUk
9NWsSuk7tEbQ3dR/6BGQDpyCHnSBkYlm3MLIgI03vNpsMY/3MY/gPEAHfHUX
v8MAYumPuw/1lno8qatFhhfNgoSgjlnmHUfuFT8cHRufuzHLLBTORIVdU+xH
LCckX76XVZUYbj3T1kczVEFj7A/IIQNlZqCyZknCT79456oKLtM2goVuoSM8
2xvXeKoxGknX0Mu0E4VoZ80nkgEO4HlKU99gU3RPCZlJ++H57qMyagkKVCSr
4pMUBVJ/W/ei4vnX3Ic2pMlzOiDYfPk2fppU/xEK5w/0ClxB/OEDKzr4ZTJA
bILsKDmBRWmvu+b6+uONSSNXqd80WjuVLQf/lNa7azLYkSmbJ8nJpDrYgKlv
T30OEsXvGt7R79hFmUr+v88PZj7MyvdAlGd4uLXbvPtcubCETcYawhNObqMT
W0luI6faAM1j9cXknHZG1cTsSsWzdxX2yLuvMdVyrB4rhdBgOceKMy2VMcY1
FFSs8pIKiJ+3vJ3wDXnUNG6BtfINd3lqxOSUGU/j1cGBTRO51DdoBOUY7DiB
vQCu0lPeAqeVRTAgA40Ook2U+sOcFRmWlHcfzAG8pUl0GTMWIn2uvU/bQYmw
SOxALVaJNvYjhwEKkFaJpi2ZIc//8GiNe0xZDYKtKsZUNld1datXlEQGAA3L
qvdpbn0c+ndCB0Ot2uHvr+6t+SyzGjW3RSeh3edHbWsRHFDyVUsPyzdwG9AG
ZQF6w7ehlIOquZwPig54UbP2g15Jp6fso/iZV9C/UKCu0y98XqhjJjQpShaW
4lUpXWswEUrNahwbnGF1f6K0hIuwnTV6Vi+evsOceYVqECeuaJOncTNcUfXO
ButlLg3U8V4w3CunfKSUYmvNb/wTGALXM1YyDcJZNFXeMvmPqwRnw6aOYw8u
PqFqyFCpaIbyCsbPvAwhhGOjuWiwnSGuZ8TgaQ9uKGM8YX3MjrnrfIH9iEJB
Fa4panb7JdOi9uCohXYYiiSbg8pj3Oulvnqrlq48pe1luTCVfQj14vlwyGkr
KuPnXpe3fP4TiuU8+RTafHd5ZHVRM2oOTS2OffAXDEv3hXfEsevW8VhamFSy
04dUB/Pofc7A0W50Kn72Fd5IH6HxEPK9FVG+RHEwa+1b/6Zp6X/16DZtpLsf
zqzMkJK7Rg7TL+QHXbn2TAsEuHXd/8Flv1hY3VX0kh/+0lpY5V1fKOHAqBUq
4t/2bX/XvPK/Z1oV45M9DVMCNYqwMfg0lYnmd9P5Nhof6hyCPDDXSDsKF/YO
p8V26C55H4FhbCH8EGDkeVVhk0KfyudjqkAzGEz0ePOK//buNRW9lar1w9jy
qDlHahAeX32eipwPP3qvQcXX1pZj62nkGzZC4FVFTnbcctadiFPJB+HdP0SA
baKLV9mGEuvRT7SFLdqoyX03qypy8CbHFi+0l0JOpLS/aRsDDldk9fGWjtz7
FT/SqyJBS6wuNjPia4dhTwaQf2RikycNsdM1xdg3zH4Qk/VvInpNZP6z7IrA
Zn3rQ1a2mMk3sOUUrHUMXzJS8Y1vWadwDxgBwx3VE1btUUDXXw1kAWIpGgkx
btK5ZNS3j+RxbW8Z6iryzF1AtEfv8nwsWaW3vfINcASGl1ia+vDAqO8JsAZB
JyZoZPIeVNpIpsH41O2j1Ehauv78StNWcmMwoLad/Hbak7SjyUbffzCg1kRf
uarg7stXIc/STT0X/EQ+u7aTb+TRpJJJh3QI2F/JN9I7LbvtOL7FHE78IHUj
JieLRdmkW/cgoqxTNJHCGHvLuIanKdS065SiCeJFcEVMb0YV6xt4ZF2jXHj4
iKXlwTxhuBDjUQva+uxUE1QZ8NSGTPPXNJIXDbZngIQoCG3atOym457im6Vk
O+3NcHVgGfuR+VJVyvjZd7MqkWeMI2xSnU6WfNBVNHNvSPFBSrms4KZDGMV+
JN1X96XFhK63TDJ7GaKtF9pZsHI6atwMqdtcrDCrstggC1zaqu0AK/rNjBAm
vHy8y+Y192mXdaaKs+yng9tF18HG36va1+kXGUBWMa218hPye3n8a7n/gQNI
FBiFRvvybAvPQfWgsFBVdITuAEoMpuWH3ALgM0p0h7YxoeCP/JoaNzHp4Krn
AF+S38Cj5hyp5mL++56w913kE6Vm9eKnoVMATCyvaMavPeEk+ICxtr0kDJhg
cUcO/JwOxs+/yV0YMlyJFCV18ngBrfeIe2yqSuNaDK6nzZUORcykgypA97O7
Sjyzpdf0YbR1OFv6e96OSsWmg+Eox2Ph80esPBmKQxnDLryn4sinnrv/K9TZ
KxZTvOLOL5R9AiE5Wt+FbICNYDijp/ClTaXyR8qbwXtRajSV1y04XseVDCw0
APFDVXHXzUuqfvRBfbx4FrcgtwwUvaBhTNxQRx7zqHOT820nmrp1QhrLA/A7
P7wOK0YhaTWqVoMQAu+81NcdS9g/RPb/jOahyJhZoFuJFnPuoGvIFXY6nIfH
KiXmvOvgUZjtYKxSAWfcgrzRX4THQyRYfW8cqgjv+ZFDgWfkTmHC6tPNDBSd
ZcxBp22apmliLMZwZtlDmNMRj9yJ5Y1O2WJNTCB2CkPSIJfvEe80KPb0LFMJ
5J+FYzsq+qPqupVgweOMHI2BVqXKH27xpLU+Jo7kcI8eq1AAAihn43BrTXwY
IuoO245ykAftQg/UXByQUtBO9XArViH81hGbGQSaOocvMy+qbKjjsyqgj1uU
qlSxGMW21dzO68rMVyoNq6cajGkK8Vt1Odnis4q3mTqYHvsDNJi+K8VoV6HK
LlgfmXq+QTV71RiIREMPdkQFTXVTGlFHDECDg1VK1zAYzmaskGHVEeg8pcp6
g3VwTqvUAAIXAhd7bd8SMcauQc6VE8BSOqjCWstunQQN1ChcomGTep2IyD0j
EVHgv1wNN3HLurOtICp/FdVvO+i7iIAPY6gCr7VrFDhcMR8yiTrgLY6lGBHw
RtrDApGyiPRvK2lHU5j3yCK5yoSzgBH63l0yG9NDWVtL2j3jLhA3Yc43+Kh6
CN56WtJTDMN/cseF/qbt2maPHWM0sJJesyhF3sviAnXln9m6z/JpzOcbPkBl
H91aAkwh7bAsy6abOUN13r/UjnT9uq6i37F+GcPOgqfXFLUoFrLkA4SHGZGr
yenfJSeiGOQSaQGVsOLH5MP/Vfzsa3JgRmEduWdRXj1vpFVQUO5dd1aPQjgB
AYZOgNxxYoY5ad9vu6kqcVi1FMJ5v/bH5gOVDJeiY4YuuVJGFMGf6OAlBoEG
xxOXYfUQYHT9qAV/IQbc7gPF4LjIAcux7N92FT4H2wd2YLaA5DO7SkBsoBvk
hPsxNdPXiQrCaeWwFD+DHldRy8FLF/sq7RD2bviDThj3XK+Sc/lPpLJSwwSg
3ArYPPZgavuCrqVWR9jOg1hEP19Qw8MZJSwCBKbVXAJUdFjVLjKFbH0hZp/n
8P3+UAxlhGCMjjtOn75njVrYW7m0zDLKptbgBqvy5rThYFVHKjOhN8YzqQb5
Eh/cWVc8vD2DSUm8+QO/HtAIPpl/Pf1UalF79bTgNshIIA9z2s6GPwRxnUDg
SBCBr7krEkTsIN5em2NPzqky9YFpuyXfn2Oz6ISxw83QYMXK9ZYxd6NWVE6I
3ZHHAmSKFYx2+apBsdBMEhs94py5Hr6nLLtNRZYl1avusrrBZJABUiEEixcB
9fIGGWrabxUJa7qGgXGL6v2C7wcjR9CARjJLvKiHTt8UMJj3gVVFkaOaRR4F
ETttA2Tql8GRTKPZYBrSCCxHBi/pXZ0F5gCwnZ4q/WYi5odutBD1RHf6m3fW
WhHzxp4Ei5obQSEgBRtf0f2Nm2EmdAoAPN7QDdApW2zdWgDQ6zjwrv7m7Vxj
NcqVCRyONDun+oU9pXJJbdwMk9ldrsrXC/Pq4EtcEDaPa/619KEF7n/bU7Gw
oKWH9yKlA+0HuR28UqLUS0oU8MnxOr6x6Jvt8GSAGryFcYEqMBZQBdpGxy9E
+p/epSTSFsD+lpVofA/WatFkz9NUr4AAjEAgYTsAkaq6WAFQhg4Y7Dz5JJDL
wod4g36QNzmB86Kaz1GyLECPPVfEWSQHTAbHIPkdudMj+35Kd1hBYshf//1j
ZvjzRrBLe+xVy35/uBoDGU6IJU6b4YqwaE8/iEZYdrLxQdWgeXx0ovYH8Agh
ZFHz5a8WV8MGVVC4bi1dAOKAwevn1PFkiBwIzKtRQ9g+3ma0APgTO3w3f23f
/u+VYLBkNjRV/thf/itlxDp636DVoDzZ1APaSx/FjnExfYH6RvbfCAnpqfjk
HUt6af6WWctPNsKlXdIgzP6B4YLiRvb9hNm5cX6NNzI+9zqaQfeZhc4Tjz64
QeXOWQ5zlENbtXE/ssBzi1bYCSG/YW6dguIvvB/Z+2MdgJ58Sn4yo2PIjyoC
lM5lxDqOPTQOktoxOJKCF+yUlbK/9t2xKvRelqp1hHf+gwqt1q9jbcLVafmL
e0ubP/8fMXAUp3/iMUUMNWxAYFRidbiFB6JqlTChdc+7WaqGGQTVVSnvvsG6
jOoOLxmcWqqATBpSwQBh9aqCPdjwfk4Vk96+9W8YQAgwqja1YN3HmKEYp4vm
OuLMIcjNUOVp28VpiI2BlmpeMrD1EaS+wd/UjSkwSbPlvwuxgwiT9vDknwux
r1x1N3UeFbGNjpGxb3enx9VZIjpsW9apZvvWdFD1gNKWvTNaaelY/eLEULN7
DIInoxZlI0NpdAyqoLJuiZjvA/ANKgBSoXwvlxV5rYK/ELbRsfDgqHv9gRhC
/onk6snJ+jptgq45mGnwTmNUVadXyldEergFA0F7INoXCptQ1bmzyvhcD9Sk
nqYqXVgKPcWQUsPnXPfoG7XMEpgJFndfiSkBloqYJVRlTBy+44Rlav2Kz0aD
98Kc5Wpip7q+by8n9pad1V1DjI/FKMVS+KxE9JGcDm3g1FoXauQNYkldvGF9
tauVyyW0GO25LxS1Y4WzGIZH3ANwuMX9zyHkUNO5R2q4bE1RMwuQh0OJ44kr
C/PqafCcI9VYlELayGEgS67CJbPpaW+VfBHRLHBjkHy4r5wZlMOhbQJgsOQ2
aNcU+5ovmUHF71++Kvf7/krVmSqbC/BiESgwp/wjoJi+v3ko5K6SUO7M6k7t
mVSvALTBYdWIP/kULfT0XCgREAaoBFsAXuXiGLnytu1+9zfvwDCBr8pXpGaV
ZSXao5357mIwB/uFZ6J3TrX05NbHBQKhxWhDzxP+8CblGBfHrvlc2WYq5vPB
OPaCV/bL/Y+BAnJBV+zr5QWNUGXYOwrxYZWzKdh4vo1f/uo7J8AsLYRVHrYt
HTqeVBb6dyD58XOvo0O7Cp5BiWPgvHEoxKCB8PIVqVq+qrD5vewquZh25Pse
r+qHHr2Pp0EJVhc1owQZ4XlHa4FTnsAs3/55SAVEQotvW649dhRBV9FMUYX6
r+610sn0tLCllwbQ4Fj27dhZj1p6LuaaxjMj68+1QlG4kscqV2fRzLaBUSw1
dzpFbXV8dJ3Hn/bVrUPJMmWoFcZ8qDNfeQBadtIwlgMN9qphbVv+6o5VFUqc
3riJNc4Ig8ypXZHSiQJbVmhjGo1ZVdiE9YG8deY9olMS49sItgLby+f/5Flt
FdIX1pSsjJw7ZMiXzsHQEEsfHUPp/N4S+49MbDv7roi/BY6EtQsdQiFiIqEH
ea8832wbgedgX7sjoi/qayD2tXKYBPFTgNa4JQg7yQlvw6nMPMj//+Qf0WOD
6KSlc0zfZEikd8H/yjL0PyUnaC0YIs9t7Xg3fouTCb6vS3XHkZzB9ww5gnQV
Qj0zcOlqYritb2TM77It5drxbCdj37gDHmuzuS9RHhtk+bPuIOq+4T9VtU3q
3Xeguptj8jC0/Xkhnh+VWkHnCbtSLuWpwjfjhS/tje7xAvdGuTf2JnSQ2hdq
NBc7ZUXwnCqJSKhzCIiWOrgYtotbEEUr6Wju370lKlMbOWweF6dV6OHSGCrA
kpPnosJGzD1yxGKURi0ptEp19JbYwW7UmyRH97E/pCREABvOYplgOECovCIk
poHiVS0wodwc7Lll3dnWhebqg4L4+FgtfEz5uy5dZZD5F0WzqbgNyK3vvgga
w7I+zpWCY6VjRKBBaCELnLlWLZvYMWbZ/Ayr6icSawPdUsd2CiCtjc668k1v
zSrf60CbKNK5cmlOrRU3HKy3GPAtIXPsBJ8F6RWfgDazMlXsnteBdUpz17iF
NixQSvD50E4wXAnEOk8B+BhiwA4flLPFHSMxCvqrIKjyaAJeLl1lJOutqq/i
Nwe1Y09r38mq5HXyhgpnSXW27BoMZz6/G/DfCfNHjWrTKf+JjqPTl51ssFxn
C8Bn1bAumwtMociOqgjXU8Bdx/GHMKOUUiBH4aIenSRArlyi6KeKBUpwEVqI
VuV3c3E7CAawywuu7UCml1kcqGFOnYSjOIB6wNyO5NaDydAhhg5dJtfEll2Y
MJ7P3F2AfrevDJC//bMQdhyMnbvuXlPBc3gpFgeQuKMswjw+u1spYlTGLnEF
aURIPEsDg9xbuRgqoryabfLldpxHVz6ytQSjT66DllMFZX2xr/IXC6uvf7NR
ZeksycA9a3SMqDrR62XjoE2aP/+fVBKubJ4yZDZs/PBoDXrQQZvr42dm0iPx
9jMzlUKt7EPahj7dgPobvkTLGd57LW8hFhbYrjJDRS+pfkTDRkDePAPf0dFG
1XJ0mU39EQyHzrwZwu1wBm9hGHkji4KH0wXGXMaaJRhHMlWmbf+NDAXth+rw
HKwPKMTM/eUKtehRBgmejEbzXFhoZ2Z/ZMLlxmEBScBgZJaR87VnWrB/4Sod
uQ/YIZdOi4I4n+Zp86f9WGGg8DglHm4dnfASmdggSmHvpMI9AGwK5x0AzWe7
UdGs7rdsOA+AM7N+O1c6Jssf2PypRs2lapzWgmZ2I5yf0fB4Sbosj26Ll5cT
ck+xlwuZaqokr3UiEPyctiWiNXvpKs1wSEQMvLItpHRkws2e7pjJOZ7DKphx
XaFAwy2qRa6aSkrRD2Q5WIGrfpDKo+RtbpvhDDLt10ZoZwEkHClVMquuQpBh
d3mEVVMc6VemteHWxFAD1yO3Tun9X3mJX/lGb+mvPGvmgJcaoYX5MkBa/SSC
K1nyyK2iL3suuC80jQTKfF99xNIOILFM1kDrPlgT6hKyjSXOK8ClREI17uVq
W7MK+gS2oG6g36xWlhuN58OoRfZZQGgGz+mwTFC+ja93WeI1JcFu2CBPlUg2
rRVVHr7M79L8BtiUB9og/EoB135Ie7xDl8qigyzYoVgeUL/lQvtzu0tUaKOr
EHxQaouaz2hA/MwrdBALF8zprVoaP/sqogs4FJsfEaQO2lnY2gvjHbx8VSH8
NZ/LAb7yUxrMOsJew6bge3FsAdQRvu8dGeM5ynB16lnWFxpk5akmMIr/ituH
FmOFweg8GY5nCoLiWoT+SiC6qnOIAUSjeS6O+21bAyRp7k3QF1CCriXNMVjF
2g4rEIweQacZZyAdDNHp52ADw0V/5dneeYoWwgk7jj0AJeYJPNxibbbSAEsw
sgUyr7ZVLolm3IKOoGuRAz9/aZ+CPTuOPUiXt5eGAVv+OmpZO+gviKdEuM07
uEyFg1t28kyAkclFRz+54wK9wJjFtAHAwS5kg7vuXq38hChHLtDB9JmXgV/A
VsIQLzrd2usFPliYN32iU3vIOdff8EYTIyOwSsT8hBT49QWImPkH1AfP6S6d
jdShXJjE+Lk3+FfzVbUMmUFr0P3w7v+M/oIYo0d0VJF7P61FlfuuC/YRaPz6
xB64syzGJ0UmkSUmHdmgPSxV+Z3m3g8rcyPa4Ze3jI7v0hcFsSVFMlO4MXUP
1r8/WDWFKCa+3Y4Yvdae7ff50bFg33gxC0ZDRcNto8C36CG6nkDPd6ISRh35
Pp64HOoYcjrdYqXY+ReMhSMJWAbrrdJKK5QA8eOBHuJhmw/NqrTbsgu7VWm4
Wno8iBv7GotYrtp95RZdctwdwoHr/qZtKgQczQUTkpMti+AeUXBrKznFGElO
4du8FJqnBD5j3yCffgYKuAFo/GnE8s+Ah6xrptghzrLkVbJqlKm7Iw/IsoIO
X6micTibTnEZ8qmo/M6C443dllVsGXYfo0dPQSewCFzCouczFO5TQzCax/dy
bu8sYMEuyW9413KMg9K2I9QKCQQDWWisDtADnDlhYREQCcT1ZFOP3P8Gtdlo
uw3zwYS9lvgC/IG9wB94PhY9ytFBmLWGzMNtaLxcEQqeBkBmKcD8Qvzsa1gx
425sJ5/aVaYktxLyocZS895h6OijFm/5R8cb4owb8MIa7y55/2ClapSAltj7
HccfZmXJDz+ciVGPVPNYWLEc8Kz0D/hzv5VXABslBo1bWLkQafgzveBPQsjG
zaxWqI4lF32rxhKUebne5ATPUenzc63cBVOC2XaXzgWaUHlwYFBLZUyzbvMw
DTDk3awqM7rrdOWF97pLPgBSaCpIFdn3E6DbQw/AyfZt/76r4BkAkEmUd5lq
3OfQX146fV0ZiklR6pm3onnpwpuHQl5xYzCWi/Hy6ESUep3xeX5mZYRU9GGD
8NxrUkB9IaUMCPgPOnXkzbhvnZKHezqRguaeHVaYiXEA+U/If3v+rxYp047a
tv0/WLGeRz3/MKvS3Xiimb/pyJ2eMm99H9ulfbinBHAGMHkpOmJ5QWNk/89a
+0aAXHTKb5apJimydHHWD+RQkXO75d2qsWyNC1dYzhDUCpMIuWU9ok+3l4SD
dvcXE/vYQ7bd7cmjUheg0NPgiy+XnWyUqT72B97LDEb2/XR8H7thY4ooerLr
lO+672awBtMWu/Ou4G8aPiyZiFKHFga/DzYy+DlFjKeSw6m7IikcDl6TZvun
Hvj9Ofbyk43YR6h+YErZ81p27yyLRC3ZCMOFZne1jhyiQ4fiZ/iv9joGGzyz
7uiECwHzy1pgFct0bdl5sKpD5nnLTg8chgaA3vsthgJ5Ht8zbNgEU0JQUbVY
FkAHWK0cCxfe8xLe2KTY5koqEs5iKflh6DVnJDWSU8cz7d/UjyoVggNnXqZV
vA45ZG1iSGLaIDNoGTQyal38ti8E8UBf942OId4skPESxqeeU1DMtpK2zX/5
sCWUlul6/i3MfKXN7DodO3w3qzt66Ga5JZR8ANjSC8sCmgHIW2Lt59xIjOXc
ETlw0/xjtU/suMDyj+z7MTTyVEuPMoQ07wCFUHwqul39mUXM7Zcj8bB2IHUG
qgL0GSgamAOmIoDAin5xb+mPX1Q2JPk8l38EAtNZ7G5WK7oGnIEywTHAQ0ia
iq0UvRQ7cjez5gFQyANrGbBFPLqLZ43vI01UV7xzVUU067ZbllaxlOC9fuYI
FNByJSeJHcfeBz+hlPK1lqo6iDYHb0EV2s+Vty6Tx9d63lv4/F1fVKBQ0Bc0
Vdsvx2rRCOvOam8BqGfqERWGUfUfEzEkE9g8ZXuzPqFczKPCu/5RpnfjZpVm
OPHol2daFKVoJ7zoemAHhFRCjNBCBpOB0o53w0Y0IPLMl6A0IAOiMuDhPT+S
90vLTmZNJ4+xY9BR3itzL14kFtewiZYoK3XrPvnwIMbVK3zHT/h5sd2LCAR/
mHeUEf2Vsm7ZzezQWSTqg5xqLGjmUcm6a1fzItQ98oOZI9e12LH3s6s8VgK2
IAMqkvOh5Z+BbKDFPPLFhwKtCkH1fH1pyySp4OVKnUb1FDMXCuDtqwBy3at/
+PJV1t2oJe+l1zwBLEXdj1pxVZ059hR/m2c4dnzEEsH1WNRS+q5v6nPiGosx
+GMD1ea3KKlRf7XXmrzmb2psg11LQ9E05Ewt/zRADkJx6oFBEhj8b/CBwYvT
OpLWpLQHprXz+3NshD+zphNe5JqamfUafz5H8kyzYBnw1tZs1DNLgNIW0O3Z
s7WbIe+R2DGd5tjOGEIrD+0+5HOn577TRpDlg9LRW80qd8kAr8ZTJ0UOIwzY
PqwLjGj4KoyIu5TasWm7ZcMupA1ezSptUtIQOzUmwXFOTtbvSavzyJNZbu06
almtfIMdeRintNYzZ4LYrHHHRu5VXY/EFS7m1+juPiXNMzdmLfDGLauLmuvi
F9FN0M6O4ctg1MK8ejB8llVs5HY4DyAMKL2ZEeIuBgoetQETPnZcLgrnXuch
ctCtXKL1W7MKVaXax+asy2JUUd2qZXPMspZ7T0J5qPiTJTbZEx4Y5dfCHF6G
K8qf7dSzG62ikDKZVK/sq/sSNOir/YLmoWrRDt3Fb6tCbsUnnQXP0ACgUrF4
5R9Bhr2qOBcAMiDnfkMb7EeawVCAjRBg2rM0v4EOAnQf5dYC0cpcXbUMtQ4G
AuNo4ed3l/K02Tna/ZBNeuxBNIIVXlGqOhT3jC0l7nMC6/OqwTTMIsGfBtPA
K512lbwPdGsDuVxRP8pNXfGJswikFF6q07TC57n+jlUhbSYfvQ/EhiqA5AuO
1/EEvuFXGapLPui+8I7yi+Y/gSGj+pgdJ1BbUFkUx+NfX4BX8yhewfVKOWWl
e/XGsg+5mG/4K/3lm+nrlZ0VyUERe0jRrMwQl9HUZ3bpSBTpdQsdYUMdt2/5
a9tlfaRp2V8ox9TR6R3HHmAEnL2gu1GdNNVK9nxCj3gXeipy4EbaxlRGDvz8
3i/lY0MLIbrvWLImQNv7S8tV5O7ofTQPyMXsQnt6+qNec8HVbnPeI+1b/9Y8
AB9oW3Tdj1+W5eK1OBk32xd6DoreV7sGY4e5YHnKjVyBq7fMsEJFDDV/wgrj
IctONsCcz7brgNuTHugEJJyJ6mdA1Azz6AMcwBCEfHTCDc8/KLN3wTP0/fp3
GqBJ0DYUJdNNY/gTZmmuzk/XIQY6amR1JK6gu5WBufYLmuG7K/yGB0dL5PD5
cWqxp/xGkiq4edLCjRcyd/AulolOq8s/BmRY78dtfyzlgYZSngrvQRVwTcR2
wyqNPAc1QhDJ/yyILWfjiTM1Pgd1ZXKKkkrBnYNYEAz95FGnYMMtwRtTB5Gp
LyEP49vFRtvGfTAS0fFddIXYVPaNjHm+LxXChjlcvtph28IlkQFLbp8PTAEF
aW1LU5RpwB6E96Sd59LUvlHfWh8/Hu22XGHBvqd29b/d0veUWRYcijrjXlNe
de5V4p7nfiW4jUjL38OKg9Mp9N0+83Ed7i2p6hwa6iyQe3bjZsAZIFUdhOFW
BkT+3ma/+Oh5iJaQdqA25RbireJPqYSKSUUoKKzSU2iqmuHwpYsDde4P78m4
PIhVgtq4GaXAsqKF4LmyoUaPIgC2nd4iQ6Npq0XTnKGRWATKHxjNtZC0pSwE
RSlGj6pK7OgYi0vZMGLH5SFj4aKsUwx5VL/71kYGLzlRRIOsKlROXRR0Tm0X
uKqcYO0Z8FJEwtOPNPUmPlXSkk9955zlphRGnSfpTtepZzzkZOHxOhQKwGh1
Fr5mZApbehVo2bDJdtSzBkbHCq30s3mL7QBJfJtdcaxWCZGGKUrX8iABAvwC
WWfb+hifI3VdJ5t7gE1zsFHiEVQtL9KeRt2X7rWivZ3KpagAJf/HGu06jcIC
1txggdhjsMzLrcVaBME8Rh5sR6czO7RfIxDOxrI4XCs3HphPcbgfbgBbYEiV
HeL0i4AV16MEv7CizDxhlqWPYNiXnmxA6TAshvz3YfKjClcUNIJFvPq3n4UA
1Qetwtc9a8tjObeDmarpvF259zGyeE5v1XJ0GYPPREBuUbt0iqnfXNwGcNEk
BpOReXizkuIyql2nX7AMZktV9f7Ce0Af89W24d+2LbyOJ8/YXEKDUXxKnLgB
/fLM7vLIrcsrW9f/a1U0O/8mehzlBSXgGk8F0FX4AhY9k4iym2llwladbrZk
toctYL8umvHrWZYB0nNcyKvkdPNzu0uQ2F3lEYWXZvwaRuFxRoz8fDs9b110
HSOvtLctu3iLjgNyp2M5wp1oocrXXniH4fXC1lg3qGl4GkNtGThX9lQs8JT+
TjJ5I2+BVVq+R9XWeS+7ypdeWXQ8jy5K533LWzJqKfdPWaYIdKJEa+wbeE4Q
ohPfEQv5L0TsaBqZDyqX5GTCn/o+qMjGYXYicNJPJFOPGg74n0wowfF4HL94
HNITMo78mfLlvtg2vjc19o2f3AF38lXrPo+g+tkcE5e2XxT8maoK0+wUOcnY
aaPbZeNts33aNEsn7d+RVHBowksjRczdZczr7PCE1JVuR7sHji4YbgVCtePd
th8zBHogeIkdU3mUvpA4iXl9cKV8SC6pPqD/6+6X4myjY5O8WSwpbnD60AIM
Tokd2nooE7cMmiM9A5icCGLlw+7yKOLUqnPJE2sVYnn6dKt4iw7WE1c2Fbft
rdAFIJiCUms+B8EU59u4CZNZ8hw/c94yd6mmbdcpnm8pDnQkOmpZQWDapiyU
Zse3H0etnjhLSRnvOwtUcqVtn44qrGafol9jx7ndj+FAIRYRmlGJ7DryMLsA
NGWmatnZV7d2YZ72ulnyMMzM6k7PoOVrmYdb0FPUglDOMpigAV1Ta4eaECGn
UlhA8t4xwxzlpSBNM6/QOFzM0xgT/qvjWmzDjny4Pet6a0n7mqIWuU8XPKO4
fp1Lak+bC0BsFVPLmwGfBFEfdE+PktkC1eFLNNsc8r9mpfMuzx4PNFkdioKh
y1eVZKYzX4fRl64yAnRNeWyav+Yt2ha78C72IJipw+v4GdC7uTehGnz5jyuC
smED0AS8AzhYcNFDv3xhD0hb1nH84djhO5UStus05B+kxW4dMF9N5YRp2MTg
F6iyqka1XyfFJ2kk6xGE9yjaF/eWgYReThSU40NxRP7nNAZ+AjMHlsG3uFWl
BCqhsqoHd+JRlNFNn9RMW6lTSIaup2weU6OK9muUEg3xw/hC7TKJNMOPZmgb
uonBZ0XAheS1WPlp/PwbFq7+fvz8LK8fygjwcJ4DLee/5lLyoVIo1Ch48+Jb
P0BDsbS9FvyjVuoayQF7GU8VSKr4JC4PmT1IpipZZE/jSpQOAwI3YPToI61S
Uaq+CkVZHvzFcHfx64q6UnQzb/Tlg4Z1MKGzL1l2Mr7focTRRQxU7PBdcsNI
xLxeSRrYfk/EZgSUOiMx7rQGqrhIO7cM+WbIUKMztFROKtYgq8kbM76b3V+t
EetTBn7hubya2+y8JhuK5QjvKwg6dLDKvAGHW7xUt9feEtkbuQIRghqBNvr+
8lUgSC7EV4TbTKWnEAxqiqk7VFOZdtoWk/+J1gL70umXxniFQsjjRbRWnuF9
4rT5KkN8mkVEMyCfR+vlzMbqQ5wQM9YLLBGqxvdQiFzLeULzwBbQzKuAySUY
dtGwEbYJrLH8wStp88olqvLTsos/Ybo6yYG8DcUETZAxvlRo+eWrwBEv5Xrg
CEYHxHEL0lJuEWcK3wgtMte1DPm0D12CkHhSOLTA25bBDymFffFfBJ7ZkT9G
Rx58GLaAUYx0IYSPmz/GWxkhBv9FheTsYxnC7oAgJb5o3qFz0qZtfM5tiDN0
sN8X96pcQpZl6uZ1KnxfMhsOA5goPWz1Z1jTINsbhyqYVm0mhzNzlYjpd0j4
Z6ea+ADL6sybQTPAOtiRnGbzn4D40dl48SxRtcIXPKOpVsT5N5/YoZwnsDjW
FzC1ozSMjcAgAOOe3ULLc3OpAupP/+5wXRf9wuRXzCPr/azwFjVkWVzmQXoh
RapZXLlEuSWzb39oU2nkwM+96vEjW7UTHtn/s868R4AC7oKn0S+rWPSCcn9l
T4uff8vw8C75k2eE+C89ZckDC6o4eeIxBJ6VRU89v6XcuY89qNPYsnmxrNv4
L6943Ert0BIG3CKJVH14OVQZK75sLqg73fZqLJZTseHTVlaqfOem0uvn1EHm
VVjz1LMajU3KixLN/M1dtnFhKXoKaBKUWMvT3Gu9tA2UFQjiXSA5iGcpZV6c
c6Q6svcG/qXjd62uWGoWhOdFfHaX8sncsrSqq/B5ms0QQW6Zmh+91wBGYb+Y
uZTDomDMUXaIlko2n3qO1nqGMQVeWYWy8YwWw+MI1lMxX4WbTz2rROibtDMz
TUkC5yvu6fBdsv7iZ1R3tegldCJDBFzsD8V8ayv8yXUI/IjHiahK10FuT0GB
DtrGxhd7Y28CtAGEGUxMKhYscwrbZ53y2ELbWmGZOLK5+2vahkYQVdI2yVMI
w2NHJ++Ej0zedR+dsjH+fX7AojRkS7U5GWDdwc0Hfnz3ILiBHDUvpqlNTaPB
owG/9PH/Bo4Vxq+3/YdUaWPfLRdDu6SAGrfQq7qG5AZpdWAPW9kOBMzzRAUH
Fhhx+86/rItfHA3sKaVhflrf075PBrdWEt92zTZMvrn2uGmPqC1ldPhfIYTI
RsLyt8CQZefGcnXlxfbUMxNDDUH94k8YN0wmhsv/mnr4+H8TEd/t8VZ9VxdG
zDFbZz2J2DgbH252uh63NHSoM8vCcRRFAMPHFt4oF9yQlaXeoiTqA7VuBElZ
94mBpHzak7ZdCX+z6P52N5T8yrr4sBzCh1tRzXSHz54hanTCpd9lAxRV2tVo
LjPu3Bi1xWXm73fKTj2y++o3wPaRATrLA/tEzuvQDjTDk66YE5ScyugmGhMc
G89aY8XNIRjuz5m0sA4WvhJDXbpKp7x8A2IDECmmzB6lEP7qFShilWnuLABS
/ANP4NXcOP+YMgBgPos2d+TDObeVtK881QgDBHCADgWJdxYwmHLd7K9qGxi1
I+ASoMNJEfSm2VyqzD17n45vxN7zVIu8YYMqQkZzVUJ0sKHAEiCwFjDAlR23
Ix+jA0HiydwCeqMpoLuf2B6+ZUG5RSHDylfWTxf66r7UppaKYoTdMtKejEeB
dZ7k7YBe2GrpKgdO7WrugiueaOqGALuHlZKeXQx7DWgYfl/tmrVFLfGzr2qU
qpbp8KW3jLUpb8PjD1s+nLybPqkG5NF6sGLmVJ4wTdsYH8iDyvcojcNp2s9A
QdKQ4edhDu2HmGJabiUSvmDSIRgqxho7Fj/zMvqOF6GYoFsQ7Du/qIDzo2vQ
1Im3fhDNvBVGhL42wnzWc7LBvjbajjr8h1fMO1oLh+e9XKYKqo3dqMh71pbD
xxi9BzeW0lMUYs8IhL8svPuHDKaCwsJZ8CK03nmj2ehQlYasW8cMooO8HOrs
HNkO0cxbIEUduQ/AWBAwVGHH0ekyyXuKvw9iX+yrTMWzyJC8Mr7efem5458O
cyeyw40vUlX9Kx9NRdPYRoF++6s8IN0EL6qgJEl1lDU+ajV5fbi0Vy+sCOtA
3LdbB+tqusbzQFoJs1LlTLMj6cFwBgvH0/chKikdkaZEkpNVWFCbBNVc6gfR
5WkFJnuZ1R1dlrTKXRMdQ9DyqCGvjDYqd02lFhRYXflGBYJ7SgAcUYjokc8K
VWXAa+kqlBusGFTRJW0Ot2dgUPBwhkW7AfGi9eda4TZetVbcuGFjb/VKVTqo
+9JNQmXdt01UpTEMZwNuKgSjMgEfydmjeaeyJgKSGqhzGO+OvdqduHwVrttX
/xWck37xWMVd9srVDanOqe0EEpFMZJ4WqvBu5RIav+l8G+sIY98q5JZouXWf
98rvrx2oMKflI69Y2U14MgsH+JW9XzrnPatlBn6yapDtl6y4m5KBDzZoM7D4
HXpkW+Xnttg+QEl0wOjuayAbr2adwqUVYF61VDvGZq37NqZ8rc+9odj/pu0Q
NssrtUabw4fvBkC4BZUNPqjgWr+iVHiL4vfLPmSVQf5ZZTRMx1XFs/aFYg9u
kKe0nw5jHWNxgOr8VY7oDRvoMjxTaTpOPsXovZNVOedIjYLuN5Wy7pSfsPOk
SsMfe9D3aeXRcWbmnatU7k30uG2/J4fpOPYA6xruKsLvO0jNO+is56r1RCXA
F2aCnKNKZvMoGKMdE7+2tyKKrRQ/9/pzu0v5jEiAPyrllvcIXJd72zb/pUWO
P6rS9qHFD1g5BrQDjDey93qGArCKn3kFuFB1iZZdjAaN8Tpc52zfmIa1rvs/
+YbfyILraAyWAqLC85loeToduRfzhBZi7GDOvH6wglHSdvGhm2dsKblxvjwS
QSRVt997vWXb28SLGEyUBVhKp5j6ntK5kT3Xg3sWf/S1h+2DutgdIxOBJ/7h
njXl4Z3/8JPnWwGx8K7/NO9oDb2jzZBhXgHILzmBcTQ7svfHsAXoPfLMLNy2
opIBZy6WnGjwUN/smk5F0OTcPrHVGfXDcV/szDi8XdnLc+5ArpBz7AUWr1eZ
V4Kv4ctuqSHV7jAT5DZGNia5lyQDHNs/eGKZ4FZw0jYz06z+PyPHRqT3hVQs
BhBgiaHQjzfEBchxJWtad7aFVY/46aB/+FIqaxxijMCjLGxD/khP4gpozDq1
Tf46kIfbWaHMF9YWo+ppkRBs1MGykw1QI8z/IpNqlpLyabBOaz5nXUOTdpdH
LAh3Eesuu7YT5a5twFK5rKSZKskpufvSxiTtT8GOK9JBpZo+re+5yKpR0UYY
Qs3nSkxqAXEfHqnxkyY0BegtH2nLFqLjocLnlbO9ZhUy/8yuEk9SwcR59jMQ
hh7RCzBExVOKZgKzLFVl/27eoTDqunXKoV3+EdbioaoOhOdZq5OFqYjR15n/
uBKylbxP9+287whLmwFUho3SOaAES4BfP6HTq6tX0hEb8zOsa9VnzP4tOIaB
zNOQZxUIKHweAxPhpzG7yiJMDfIJ/bBwrSdfPVDOK1i2cB5Pe856XH26GVY5
c7/OfdoHRt2xxy0yCCSQFdn/M5pNF1gF3Nv+9f8LL4K00PfOvBm/XRm6f73i
i1eeauItSirYslOO3GdfA/r4pb+06vbPdboEPoNLXAxqzdhcgkKHKQEgwCZr
HzAELpTx22pAqJo5SNur+i9alVaR9uHNpZA3rgHcWtb8L098fYEGgGOAmHjm
h9e1bfi3cho5cq97FEOl6CmzY3lXPpN7Q9FMK5j7s2jGr31PRnh44CaFih9/
GMXESgHSdYKWW7s3FOUWtBJT5uWPLZCqeyiWx4R6zg05wVqVHH5WFzX74DBQ
Ar19P4ns+ynIc8NrTT/6fZ2n3bvj81DkwM+ZuEfN11ThpWVzMSuQHKUMLZ7l
UTCwR3rHCDMm2ZLVXUyxlWwQvwVCtYs7OgYfcMdRF3ukmilAm9ASC9tcCMLH
jtwDtgO/SIjqUJd96M+nGbHDdy1EDBDXpq1WF6Dt2d2qMjD7cPX+UOzNjFBX
4XMjllPCkwshpW4pyPU0etTdeHypKq55CqscaNmjkhO2ScXFTg/2VESRN4QW
SZDRET/rCaayLEEuS5KFyaMYFohlCl2BKcAkbbPU3wKO0TzIHk8wcqti36gS
rumbOBKqso3fNBs5Odmv44/vigD7aV8GtxqCkPVnQWyA1BIfiUYqU9zFsKdE
88Dn8cAZnRXWjUx45gvuRsfcmTM5sUPidQoYVZHq4VaPtdHRW+y4RwvyWz+O
9gUDllOIyywyZQ+C3dyX8OBiH1i4KEAt5+eLOgIDnTxtNbYbcoiRy18vWK7d
NF2WNiDBXakgeicVQTMIavl5H+jKM+3cP4+e+qY9tnlZbPBCZLwyjtx6FczY
yGc4AG8H95hurLYFx+oKWnr4hkFgBYkD91dBrkQdW3aha3RgFDtuOf1Ogg8o
o4H2g3JixFZt/lrJ+pq2Q8xQ/X4OyLLlXgtXVwJDIFS08MK7gqymrdpdl2Nw
DNrPvejTo0qm3YopxJU8H/aLiPJAbgfJWQg0WHk/esuVuBU76PLVtzJCxkWz
VhY0omVUYqBuLY9F4dIGuCW/6AvMc1UWu/AuRFSNDC2ikeak/fZzu2GYB/iv
InHqvgRGGC75evVVwIfBXq3HigW0FlUO80Hxxc+/CTrJU65snioaFzzDN+gd
EcvmHWCjcoY3bOJe9AtXqqxMwTPacAgtBkCmrytXEr8L70KJwUlLW/ol7bTk
3is8dkbUd1sJS1tBQMVvg+eoAPkiyjFMNVM+yKlmrlGIaD1uxwQAeAFDEf6K
T+gU+gtMm2Fb4ihWJO2dzEpzmP951+nfWQngJyL7foxiRaFsLwmjQRRjmP1b
roke+uWsjBAPZAoUU5D/OLOJLPG6h2y3mTGxhFdLXzlQDoXWeeWpZ1XorUL1
nZ8yDcJEQEFRNw7vjAOqxOIZH8LGmZVZiQZhTOivV6WnqTfMrfPqG8wCQwfq
ovQtxPs9LJfEkHLJhnf9I7fQU5TX4+YKqOOGbSWoVMgzRBrFqvBPq1PDOCCu
kf03hvf8iPlVcfmj99ESFC7KmnchVFzDXbcur4we/CVTQwd/OLs+Pue6yIEb
d5RFUE80jAfSDHQTPEcRpjTG4g2lHA/c9NOPaiE80Yyb3zik2tAMFw2GBsw5
XP2oOWfSwVj27Tx85r4yVDz0vrdy6UM2LB3HH2pZch3mAMNuxSuPsu7o14dH
a6CRvquD3Yeo+BnB25kaqLu+qFCRo3OvY8iggyD2VvT5bVg6SvBcez/rDiML
y8tTWsWLZnoeeN8cSxWsTEE0A4KBDJWCQqDWQ51DO9X3txwwi1r70sDn+yM2
i05B0z0XwEzmTt4L0SOMqiegoF+24ZZvGFtv+aK17QYThl6qhu/YN5YltVkR
Uo1bBsMZrB2uF/rFiywr0aLB9gyvHbatpF0OdTWrWAtywLb0QcoG1rIL0gL3
Vl3FzgJjoV9CLVSEPZwJVOrgrHmHZ4QYnXyGmGatpO2TBHl42lhBOVj+iy0S
8AkjxtpSqF1NaxkQdA3SxTeWQvCUJfmcbzkGD2OGIE6MFUseesB0QybdKVfC
cOYVGJEKAbTu9VTJSNEOlRdcvKao+atzrRBdLAhgB8ZiiamVwMF9XJWqIrQI
uWIJ0DbsC8CN4UV0AXwQQ2d2hS9gHdBOgNETFoHSlq84H+jWus69n+WArCKE
rD4dOe2Q/a4Ak+Ydcrdo3aus13Cq0EKQhEXXXTqbGzvzHgXTIKUsZCx92Mhi
WaYfYL97ihXfLGLoEHLWMiuXvtOL9m1/h+SzciE/Cuto2c2aCu/5oRNaninv
6+oV0D8eSAOiWbdGs26L5dxJqyJ7b2D0QKr4mZe5WIuo4KmtJe1Auvh/3iMM
1IMblEWQFQ03QGZ4IBCXtCzESePYMuqPP6SQmZNP3ryk6ucLahjP8O5/AjoY
ro68GTe80cT3fOBdDM5WpTy9Wdz75JPQdWUpqVhAw2gSnQItQVG0WDTzFnAP
VskgK5Ck+6xqmieuML8MPsqFQQZCfYo9UYAnVWC6x8Vv4rzGioW9Z7ua0xX/
uKacJ0Nuu+Ze17Tsv2Yc4LRtW/4a5PGi8Ig6qlBbQBXzWZsQA2V3PPMyY0L7
wWQmBYFhidn2oyp4qsR5aCFzl5J8L6PsP4qv6TpNm8Ef1jKzRmNY3SpM2bRd
tH/wEoKBLkCWfv2p0m6DgTXxYRnCTVs9gQNrHK063F2MngI5g9Zu9cSWJv+C
JKmCQeNvn4i9Ci5MuRglVMkOA8GrEo9Ycicg6Fy4fzRwggYCjI7HcFk6HU8H
PZn3Brc9gx/8mlTtyFTm6rQTq+CJTwpe0nYz0oh0EGHSsCUIONeki9/nB/rn
ufSZDsWNWnI5KytwzrjBbCx9gIjJZWwV9hjL473K+mg54REV7CzsFyQW6MBy
fGV/+WAkB+7K4gLuUMRyTKpZ1do/gportrmwfCMVcFSYHnyPi6FtKonVtg+x
GbbQ1N4RZdLrb9np7fSDyORkPZVmcSSnaLEgtqcNuI6HCp9HVJR78/jDS/Mb
njEbn1UJL0oMN8MoZudUa/82dgwUglmBOcCF7ZnUo00s8fLmjqP3XuyvzKzp
VKK2gWrWEd0UjQwtlI9Z93nMBC8fBt+AfaUaxoJKWYsoPnOZO3u8sRsaQJPQ
WawXjU8sjxWEXuMC4MU2Tz6Jn31FBSPOvvqrRdVecBBFgPI91dKDgWBL4NNm
1aDM8lgP1tc9a8uRW27HiEbRpKTIT7oZNKUdGC+EvSYlriOWfyBNZuQ0CNXv
LOAW7QTWrWPJs9CUovnwncgSyMM8MvWD7/5AcJR1m+o5Fs8amcg2o0hGS6Gc
0OdsBlB7HUbUo4duTltNvp+PrpwqAKlvaOorlgMZgw7KfdGsZpUzy7rVh3p3
eRR5g/zc8FqTXElb976wR8mLlPnED3YlkyGfGiR51ELD0MvcBddKBpatm+Qp
iUIYarqG09qTNmKjE3lpvDFFKm32+jjm2E4pyhdQZUGhdtGDyQAUpMHL+NP6
dYgw1VT/IyzOr+H5QXAb37iYOLr6dh8gEUtOpkOjAWfd71pf37WT8F3tCeJk
cspmQlAIRyYfRU3tePD6tN+0kQy+KG2zIviiNPs9eG9wltNuSUPptA4Gu/An
/+jwq2mbZ2wDELQ1YbVUxrenYsf6Rsbg9ihNQEwxI8OiNyqJNZEfW0w7EYUV
HG/o5mksDQTAk/OD8G6GewCU6oMnotDpNUUtXA95KGjugXD6EbYy4PVX88si
gs36QdhwXzlor/yr/VXgWGFrb1DZTR3YtAFJm6Pgn9YqqGGNjtrjRarYFR3A
IPo4t3YwlnuyuWf4ylWQGeW+vzJmQQ3VtAeqA8aKaZR9qFR7FvYIzqDXBlp2
8kunIDnczl+h5Yyntq9rVwNuPIfrMf8BCrQApAuABVswb+FpMDqotScafcfi
tS1SvgxwhgVp/6E9g7ukMuq/Oq40oQfkud1+SF67TdvXnW2xONNaEEk756ee
Q5XAV7HWsV90yFi9kpZYEe2NzKaCoCGfuffzX1h07Mg96F+0FTzNK5hD5yBy
6AIMH8AEoxUshZ55cnuor+eOHmg/yIjx+WOLeeQtzCYdB59pLeoGLcbTekOL
dZAazsS8vXu1/vSIhTqim+i1l9oEsfmAAuVizxSNcnnjUOjeteWYLdxiMeP3
8moGx7aO36RJdFlFyc++qnTT516PHb4btk9LsGVUq73wBR6oWie590ObVRG4
bB6EH+WiMMbQoveyVdsR3I4e/MWzFo8j21xpP+eHd/4nntlx7AGVVzj1rOem
s0dNpxe0nF9MITinkjNULEDpQ+BjR+6mX/x6+SEa6XlxuVHbFGvLUW23fx6i
YY9sLUGbYNo8qDK7a5hi+qWNoLq1Hx+r5cnt2/8fjJfw7h/e+UVF+9d/37bo
ul8u0l4B1gSGQNfpF2jt3WsqfOOda2DpXtMT+w6N44lZRs0FlAbw31uWVjH4
vO7HH9b+9rMQz0TY6Ev83GtYN4wtjWcAn95VgrXF7LPAoxm3hHf9E7bSrxZX
/+idhmkrK3kO3yg9VNmHmKIYoYgHypT5yqzu7Cn/KLLvJ9PXlelosmWn+TBn
I7Q0e2TCWctXXyxr2h2rQuEF12EK0QsmCEbBjfxaTtd3WPXvZlXSUyVZzZ6m
nIfl83+zrMpfsfRkA7oDRZ9h/Jz2j4OqTh5PpEAAYvn7w9UQUaYSHT0rsxJD
dcmJejSm5a1azdKGK45a5m1M2iCST+jTb9K4dxqMgIqsryAmJ63058i19rG/
i6j/i36wxJFVVT6Nn5FfbuNmCBi0ShXlRsZYSlUqC7WWXvuWhbIkJaLRoUs7
SsPOw0OWEBt6ydwpELj099qhbc/gX4AXNNtl6ekAPbACJsM3Xad/x3TzPdY3
0rv6dDOjt8wiuRp7E4yhl/9zR4XEUKMcnOy8IA2Np1LoNLUeHOS02+NnZiqn
0InHMLE98TLNYLUyoSrk1H0ekFmnGO31fFZtrIYN5gZ2BjmZrhRGHyFR0GxE
yE7/PwA8j1iJxsHYcU/+qejpopes4tImlTCoXcMHdBPP6W/eDtRjnHoOiujB
m9q2/BU278Ob5erQ+tW/0WZs+yEl569fD+mCwz9iYV/KNNKwccuFdiuds9vy
WG6CCjJuygxw5J7ooV915s1gLvjAA8H/hXn06HOABVRXGcfOU+4lK8Ph5FOM
PwwWwQbKGP/HbBNYyWDjZ0B4tAy3BAeTn599XAtQ/OSFVqCSEQO7AHwgS3lB
C58viw2CP+gLRXacfGpzcTtrLbcekTgILGN2Aaqg30MW2sAYxrJvRzMqKq3w
eZX6Kp2DdqN5kH/VtIod13lowdOIxKjHK3Wf81Jc/sPDQcLOD68DTLaVhONF
M1nRDJ3OGXPv56+YKqx6dAeSjJqW724ixlwcrIohYxcH67AR0DWwCK7RbH5Z
juJjmvhmxpYSjEELeQvzag9rxQwxXtqc19jNw5l0L9OTWuw9I+mFel/ap80r
DBOZbJHDDAIzO9xdjFTLPOkp5gKe49lWvcIpa0r1H+vW+sirDFO8yHDmC7lZ
hrO9gltKwhOWNoTFcs1l7uFX2t5s2U33sYwUSRo7PmoOor5pwC/syyyarAXH
5MXtSSFSYbb8eqkdfmMT3rzJyXQ6SCzTyFWwPTaV0eCgeY7BIDCmsC74wOQU
F+JkABXT6FkaW56KnEFun5zMvYONSePJaSg09TnBvqch9h8xOv6ZP5a0edxe
86RYqdJmyYktI3MeDgfnxb5pG2+GGVBwYB0UDjc3WEma8XaOfaPUqRfDfo7p
foDhgVG5XCYiLjnaMB9qRtm57x/fdwxfDg+OIpYKwxlqkjvlpavuqIa+mGS7
TZmmqTAenIJkANLRSjzZqxIPdZ7EfKD92hm42D7usjsoV2H3yB21EtgTXovh
oViebu8piQ5eknYLZ7G4PE2Qsh0ONXFNxEIaUVtKVzI6hrFAFxRZE83VrlH8
LHzDaw2D3uh3OxlUBVKILivXkgr+weo8fgORUBg4WqCzQGmoB2oYbbduQA/+
NTNHe3QggNxT675kVPXAngtKkxLLw5bxNIw0NZ64DHTDQpfkN8gJrWnbwuM6
ZJFWHVTFLgcKxVNXLq2w89nFJ+qlQMPZTie4ZYU5bNAddNk8S12YXdMpl+bY
MavHuvPDozWgvW35hvobt9Ieuqz4tQvv0UhAWOmGLrwLJcDKUCLxzpPzjtaC
xowJ3O/VA+XmLJT1zK4S2gZ1R+mA22CdDt1KZgPFcO/EcCsa1pMszTlcDT/f
eL4N0gV/4F53OPTQY9uAPc/gbC6WoymWDvjJIGAMPrXzwvPmVDbYngFKYyW9
n1PFe3VGXPEJCmjm/nL+K5+68o8/yq3lSlQ2qB4/94ayvDZs4u1wV+Adioja
whxQot1IDk/2OAXFhuQ9yjAyFNgm0vWlc145UI7yxcpr7El4Ei2V7Aln7igL
o3Mhljp2LHyBL6OZt6DKdfjbsBGCAZ1W/d+SD6KHfhnLueN3e8vCu/+zHEjy
H+8unQvJgWlAmLl3VAXFTtEA/opGg7tC0SEYDN39X/3/tL15cFzXleZpRUzE
RMwfE1MzHdN/zExVR0VX91TXH11d1ct0WbbUtmzLtvZdlixZsvbFMrWLWqid
FEmJokhxExdxEfcNXEAQXEGQIIh934EEcsGS2FeKEB2Y33dO5uNDglJJtisD
wQATme/de9+93/nOved8p5zGw6+2qh7Z7dwLq02/GDHsL05T79iF+IFfXvdx
NWYXcs7FGQR8kO/PacT1YOhwmSWtE9k53J0PG1c9puqPrv+k2pSrX8O/Y4pC
vLGGWPOU4Uie81+6Tz167Yc1MG1Y4j+9qRRyyaecepSHBYmywha7B5rX37ys
MrexG0rPInrtYE3P21fQO1wwBtltzUDr1mf3VuJipJb/5B9yrWKFr/T8tl6W
EqYQGs9znHOotvPdK6R6kSxSID184MuvXpPWlvxovNEMSB83uaqp6SZpplHg
cWcIXwc1Fqemc/I/y64IY4VfyazbYpq6PAgeNyuRiQHI9BTOgkvz+Phh6FjU
rF9gXAHMZ55yLeWB5o2S8R9u5h2/GouI1bqjUoeJeFsqxlT2JoDDbIdXADLr
i9olol6zGP7G7aTAU/CMRcxuYgIUSBGiG4rFIvX6noBAe7pkXthOZRjlqe/C
sb34KY+Srt20VI4qkxbXdUVBqwvju3iOi/PgAphg0ZrPzrZpEtZ8jHfMHBOR
O3qPEtmyb4A3ynM/es8L+yrpKX0faFpn8YGfsLT5Or4MC0fiIaMdKsDavtcL
DdMYL3dIe+L7rsVThq4z85n2sZ1Xgj9cOVky+8X9VT+ZX5t47wovm7W7Sof1
LFV5CicfHGjdxogxqsDUEzvKaBjjeQfIffB6muQO77xjDdBOSWC1bsYEgPPA
JhgIdWQhsGDpIFRQAhTjk0xmHSX0lgTnaMELKGPx8qyjW/8zi4XPM4zAaWTB
FVe+0ux70bQN1/7q9+rxp+SSVLz33N5KLwP3ocqIP8esUBWD1q1Qaz4M8jCM
gB4Ud6SvQmnCA9WKq+wrM2Wqub6PPWH7wOEzNZwLniADDpKzWukjjxJMU7BH
2Vs8I+6CNek59zzjz/ONrPlL+Y9W5ixx6CZMBuYMp1v+UdVCVoELUvEtD2Nj
TDzeI+13Jzzbd8KqOvI0MX+nLE0gPCczRoxpL+Xe6AH6yL0YQNwfxh/Gy8PC
cuE0Ye/ohQxT3kPjqe3liFdy9B8lASl8bq/SHLpPS5U0dC99frgpUJjJePky
0VZkT+G4aaJixz0V3UpBlfkVlLfIn3oK8Dcxsp765OdK3gZPiObDY+kEt6kZ
IHbZoZg5JuGWT6QFecKYFubV38yxp76GvE1dDi6mpuPG1HSyFybYYfqXwbFn
Ym8GFmXQ9T8nxx6NejG1KavemOGApBQRx5SHmMFU/dR1aiol3w1Rl87exKQV
HElXDRtpk/j/aPvgeYlauODS6ECtRwba78q44a+AhhJ5JrVxpPoCg/XDXRKA
wsH0CiZ8QNI9aSnvqcu5QuGHEgxyRo+CXxSrk844ow20XAHnvaVKP7SjbTAN
FyAYExcP945L+okWdp/GmJ5oSWKDpL9hG2hYNK4cGzpP13wb/3SkzwXGpR3R
c1ZJIu17WDvKl4nnuqgddn8ocYSvsIo9/91lM20PSgfxNEap9Mki/qqkPJP5
5SIgLV8ZHWxwjq2D0fa9vVULFQPQuo0RK2jvh7SrZEl7FgiAqaXlNDtVsb0r
39PYaQnYxYPAZIPSqwraIK7a5O8+rTxHpfl8An5iUhkNvrs4rxlebRv7Sh5X
JZ2WzRh6LfMxvIZtMF6piCh0sxo2qwJtyXMSXKqcl1XTCUWEQkNZN5V0AN1S
M4jn8iexgo59onklr4NdDBHGDpNBq2C/sumtW+BskKVFJyW+IZbV8oWX3eGa
Stxo+pwrMyabSjuUTtK+FzpteTfvnuvo3291XniOxrE3rysS3v52q/LcJcfd
spnrQ1PhEqpZUPPx7IPVKl5cMTdZ/ApAKpWPls1uyuk1X8QG7ahQaKIiFc89
j3FUHHvNIpcPxWTgP/KksIzQ5qQyeuJWv6ZWchznXmDkFUuWLHo+q5Jx8LKY
OypiWBPMHF/vzn9svm1K812YKlMlpUNVu4T+YpEx37QWiwkxxtbQYNtC364K
C1tKfApNKQjt2cShW+CTKvV78LqndpWb8vaxF/ZV4Vlg4FRKrGEVNz0tQcg3
Z2sjKAZb7tjynxRFk3MLVpULKjh/yz/cv7F0sG2nyXMdYIYzPxXO1H0aF8wj
/d60pz+uOO1cKFCwj+0h9Lx455oP6kRFSl+/8qXm7vzHcU8816Dz+H1cGXOJ
XbtxSZVEXbRJNcDjgJaz9LwKqtsape1UzocvTaTFgnwZOghAD+CT2GuFviSO
vHqwZvSl77HYMbV8gDHk35ctS92WRtdM6A4yrzNw5hJQT15kDMMFuaas6vdM
/Lkszv8RL9x2E1mtAV0329a0nyb7VgnDDmQxLRXYZho1rk3EPIdFewVb3wYB
+Zn2OyvjzyvpQzV3/PAF6ggz57F2Dp9nNSnhl2Vb/k5eS++5jgF+h0ky5xeb
8pjO7HoKWFxWk+J5HofEOkbb4VGKDDQgzfBcpqZT6Mty7MtuQLHSxSrrVwIm
EB6AQvsJ9csdSG2HYSvIgzvQYjGNrOW67hEL1DQW2vCZwn2b17NM7MjsIzxN
hu6+DaX9DauZpXQZVonvyTyXb17xPqvgndw6YFaiIh1ZLAQwx2X5Fah8+glw
CT4PUe869ShccaTnrGMmyEDzWFM0mKWnDN/WrXChwY79cF1+54tYNAhYPOsn
gEb7xv/A+3hMkE/u8vBWnfSxEDxKmW4qk7o7H5hlLUC/Wbk47LjAPH24rlRN
YoeEotGDiifMfzw8mLxgwnzMsaK/bpmV0K3FbYdIA6oMAl4Gd7eTx6d5uHzM
tAEPe2Q4A/Wj9+tiu69WsFzpG1c9GcHMKWPFYOfhbSUnW3rxUJgh/Y2rVcu4
8Dn+5PJoPBc/Hwnag+HwOEC8aRrM9MOFVymokw+CTpb4WdPftA7/hfnWW/42
zw7EfmZ3ObPxXXscvDnQvMGF4Hi/+50rwB+PO41lXYN54spaknZ8M25xHfyL
fad5gG2/la91cqsAHikPlGSMGPjDhLGd+ZXclznDxIADrCxoBW2Y889lVXId
nlpV59CG4g58HKlW9hTgFzgaQF1UgKMrj8kA+Hx4okkxlkPngyXgCYDYl4zJ
7y/fhKT9jIyx8WYcB69FwscCJl8eV04BRqe74HcTVjxdfD5dk90BYdwLLHbn
T4Vo0thYNIPOZeBMBtAZSLZeAsahRgAzgxNeYrxpBhjuUcaiziDnwS8p6jg2
TTUuTICnQoCc8X7GL5eFka/j0tPa/+fl2JMXg+64cl0GI81oeconGotmuBg6
KxmNCrrTaqvjKc+uNePr/VZvN+hIRHoUca8I7B9Qkb7zX3liOx9ICS+MxZS9
MlADnmBZADTIRtDy8PiEn1qQeJUxE6Ysk9RTeGwCt/h1XNrukmsTqv5zSTTD
mjRyQRoUjB7eHNCKVfVOafvdOz4msXEWr7Nllw3hRlgl5+H4sPQdGDnS2AMn
LI0PskilBjCm8NFez0syV9FbBY1XTGy6kLQ3SZXLVA0zNYuONydLY4P7ajpx
T1wthCuADMCIJwh73WQtvYj2CXGLPLQe8yodsLG4lSFrxRY414W98xVLCF1N
a6GIawojw12nXOrKi6PxRYZCtmywjmZzccwH2KKtfhN3xeQFaqtAsUdL0oAP
TzZB0ri41xQbaN1c061onDXnIiCb9twY2Nolpux6GCMC8gPyis9pWrf0dItq
tRe/7JKtfKY4OiDhEZUqy2EuSUo0caRvfHL5mVZ9PXFMYggD1akgqOhBNc9k
bGEa3E7UomNfjh0j0iqMKeAGeEYtHwEs1ZmvpSJ+eKIRC4ipWnC8UZK5ncdB
NgwN7bHkne0YKZ1lN6zCYj6zp5y5AV2EPWLWGRbA1jVboAcnmpMqlzkSkWBF
PJfeSXFlsFZlJY/chSuhErctm/hdDLz4Zbq2qzLOuDFtCtv7FdmS9xCwj22y
TMYPluQ3Jw5ej3OBBcR4dR65+5FtJZgV+AB2hwfNaHTlPUzjoak0nqV0Ljqg
faqil9y2jvZXYhBppyae7aex0ETyy96ce7QegwvtH2hah6WL7/+50lTPzvqt
6Zn//EOJeimwP+9hD/BQ5YsDv5QGe/nb+y0rEzPK2mGiSr3KJNBVoO3MU7hR
2EElC3Tsd/rxk/m1vA/nN1HEZ+DtPCOMFHye6XHzsqq2Vf/alL2x8nNstFfD
grDsOCC03OUsbv606pcfV5sI/Lw7PxPz5yHqPKXifaaEtsdnfw+PLJF9o1QC
zs7qb1g592jDqweVC4+dgodEd37f3U+gZiiWvdS4PVdm4fiKa1//N0/sLMNt
AffweuBpL+6viu7470MKrmujdxkY8qcjNsgTRuwM6As7CGFDE1Q/nEpbT0le
G/AG1jYFXJbiFEZLXG/Xx3ZYi1oB9/DdFe3/5VdeKIEfzzPiWzCE1r4x1pcX
404JAlwu+j24Y9g6ZyK28ivjKSFTOxI14vTlpX6NJQKUnkgfbfuVJS07qaLw
djbaOtJXqhiYdO5n0CqWnpVrN4tjW0OjQw0sB7gW4Ca55uQ5LyCrBI3+Cgko
DTXRBpCqd9wRW+LhTA/LcDzTaUmg4QnAwnH1J+81wAvoSR3lwkXbj5J4pqtY
+4l/JE2rlG7ZvBEwxwuG9Smqs+sUw+UShcAC83/duYhsU7J4dWFkgZXxteLv
G1zgms9zFx7lYHtWq22/aLvGGqz6LB37FHDSW0KnWoXYuukXpdFlp1tsK+Yg
qGhCQEe1eXJ+khayTFqlWV2r08PapcrnSp7rq1YlXxYLyAaq4A/SbFU5rPtU
2yA7y1TBrTtfylHR7LdyavlX4DAOCTxDa8Fb/BT6srtK3MDMSr0jNn9ykUbP
95TUYTwX5McHOeU12tr3qvT56Jcw5Kd2lgmxVRd4Le75fYbYTEL6yADiQUDI
VV/g9BOSXGjbDmr59ohK3oy08YvSoyre55OsaKyP3PmqBTSVm8p1VXDRyQO1
nVbgqVEFy47dq0IJFXOXnWntPPZrO2qcg3Vg8gDjpt29x6RNH2BIrTLvUjsb
WoSnkCx5XVmcRS9JJTvvIZDZxAN/tbKgbf5xnRvyLw1j3pq41hn4j4vD0LWq
zmEThspVYMDx+zEWTINfqbL8B27aVHKo5mMmNojdsfnvgdmnd5WbPsD/63rd
0lDCqVFWo7T+Bpo3uawT7cQb9QA/NezEb3A0GEacOCF2zceq+VvcblX2Sq79
sAYH7W7Df5XLPHQzM4GWM80WHm+M7vinH8+r44vcFHuhzaiCVgYznnVNIudW
q5iWy12uW1yNN6dz6vJ3wHw8XFrIpPJ0YOWEvnXF65YU//KBKu7umf6vZddk
WfEpBp+7MP0k5fTlV3tVFG+RwwhG0Fdcy0dXKDAy+0aesgSgWlW66MalVXia
sJfeqoUZfkEGRf8jXi7yHMa98JXDSDgR2pOZqXrq+tgTVoMgTHTD9dkn0ltD
XkfA0c9rZITpsbh6qDJCKk0JNBMFVVUXViVj64UnZrpFGd5BeLjCHR83JTcX
lwukuQNiPzXdV5r46lJpgwkrymDuQ8R8ilYHQx+TgAM7/AK2qZINrkk4ebEi
MSQ9urGYFJn6q8CQ/LZe8DliF8FUgTYNhsPuj0xYfR/+ZFE37S4nnkZs5SGG
z6klE60d9ePYTbd0fhf7YouZP1P9mvyDaS7tBrVMqHmn8tR6VJlUR34XlMfK
RfhXUS69JTqsbFrf2DsK0IGZXmLYGimNL+Xvj13w6sZutmyD/UggRh3Ulx9O
HFOxuf4q3AoWBT3iW4Ip6Q1GpK/bV17XrWA8yK3UAgdqAGfTvJWwm7Sn4odZ
+9Aw/mpVaebChGUasH2xbPCEFX20qYfbWVWvXSow1LiWRXeoXrq1WExXMKPv
Vl++WDOw9hMVKK94D2Oq08COLNYmqGi6W1sZN6X4gb0lr4EJMF5JtRS9hPVh
KvJwcTG4o8d59px7Pru+C1BVQeHWrTRy1p4KhmXV2TZchkUnmxhkO9c+ghVw
g8Vktg2uLEwYHZcj0F/Jt5RQ1rbjtYM1XEdpaM0b8QI0sNGDyZJXGT3ef+CL
Uu2YtW3XJnzrNp0OVM4FMzElSlc/8zR8WBUb+6VIYBXotnF3DxDFXijLoOlz
Rg+QeWJH2caSDrgoI0n7GWRGCXBWsfLaJT2Fz24obucrAJqqc1bOZQ4D49rI
KntTZWs+VwI43QfkVZ64foXC1z9Trj1oSWN4BAMtmwHqOtsGFOc/9TB2BHOA
PZKOUPm7WD34AHaKJkHO5SMcvp2+c3E5NfUrEzm34DrRO4A6tvtqHJ/Iwivw
axKHb1fdiviR2O6rcDEmJPOumrDx/b/AakCbe849x12wDjSgUQfuclLaN/4t
zcOa4NFADyDw203RqL/hM6aZILfygx/MamVB8Xmm+tbyKJjj4MBz9BXHFUBs
LitYa1x9rDnZWzX/ypebWSxgC50KA9FYugTPn/JiCUvXGlydvIgXKbVJIyFO
O92F5F939gM0o/2+NgOE1HZ34phKb7fvUZjfcMvQ+a9su3unFmZf2bhFo3GF
+ccbsGjDieOqOte+h+fiFAhbzCrj7qCx106CODF/mAasFKYoqzhcfyG8fTQV
2lAKD1EYvcOt5R2rCJazz7TmYFOqnzIglRvWi9cRBgzNRa3zzwf1yvn3NaX6
0ua49EhbNusYyzaTwT1WtLn2JRBsVrFyPQqfO1DXxdLAm9tRGYc2qABr5TxI
F17zc3sr6TXz5O3DSjiiJbhjrFN5VWNRlhj3hYT3W2z8WSsFzti6+AzNg61F
Q09HonaWNM11XPqJ5sGBcecBDSyLyh8PNqhUZdZPOzb9HQuZFRFZ+1cWmv4b
HgetzapO4AuzZCA2VhdsrSIS44dhGq45w5xU0TEoX9cpBsEkRk8sPtWskDbj
ZvwXf5AuSNt8sN7YfgfzgdUEC1LFq4JnlEeffaP2jU89yvqiqSwHnZB27PvR
3DrFez8RAXMkilXy2sMmjg0AMhlACdYvNNj1jT2GB0q8plBrn39ZJrSEofvs
bBvPQvFOUglYgLmXRHlHliH2Lkkpdp+htTA3/HeV0az+SEJMVpmUkWGBv7iv
ypUiTFf/jVTg99ryrWVRLgtoZNd1MSymt7lKcnYdWYqfL32Dy/aNT3oMBi8w
AYwC4mgSs0Uy6Q2r7PxuB8SPmSY/InFUUW3nvzJNttVcBxy+c3VFfN9PTY7m
Ez6PdYCCqvylSj1uU7hgy+YHt5So/mNuHbjx+z0VvVbbLqehuyQ2EEx+AAoj
xfQwLYUcBhOjA+pCU6UlVb1Qu0mJo9r2H2pkbe6s1ELz2C3G9kykjyeuugnK
d+tXRptENoqhOr5/wsfGrb4GhlV1hSK7Q4Uvo06EpkK72XuqVVMJh25HRaws
PsjTf+OQ8jWsbt1c7TeOtLEeGXm+UmAna2Omy4cRVzx82uE1KqVA9PDyv+Tg
y+uPu1D/uOfXdJ8OOKrY2liqBMmln7FLLNS/MhXaaggTv5mcNsCiIPQiYyMi
+MCf8rLSA6myyEHdrjAqhoE6aK0nq4bRMl3yIB70cSrNkMNfd/IZvlFQVmw0
fU2W9rhJNIwHG90mCKBd2aEGCfu37YAV+FFvBs3OGKJw0YcM66aEgi+/8v0Z
j5bhJ4i+nvIdldDXwwH/FjcSU8kw23nW5vBIxD9wiVGb2hgU2rm3RK5Go6wm
5oxXbGdpuIQstsPVZbGS4JuE4jtPePc9NsbDrXnTzEpN+OmIeI9Fx9Ip/NqE
6RWf0c5ST4HyWMcnPX47JXVrG8sTJlkGnILhtEfkNnnOqyRIbGpiEr7HMmEt
8wHGf6BtGwAC+z3S1INttcpcByTxOqItR/AKV0KSjyYzO2Eb14C/IkkktHUR
5qxc7LG4F25g+QO22rOt+5RvqfrncAvcUvDeX9XaN4YVAJeyLdT8Q21Nq0gZ
3dehdvQAYEJ7lNxUtwwgVeJV50nbFTmgHciO/RIvHbsgee3IrujQBKySxmwv
j1kIfYnvC3l4j1MIwNCLSMqIx3MhsWJKFe8LPyO7aJu0sErnSPawQoUhoP1e
wZkvchFGA3gB1mCbloym0HTn2Bji947U83SwcbCUZNlbINKzeytoalZNAmii
y1goBo1bWDzPHpYDY37fRhFL3/nBfPzajrbpPoit/fzqRaYffhi89b0ayOrq
wra+uqVAH5TvrcO1OhZv+QKOza0ZVe1v5N6xWKqPCrgFsTErtPw9Vbg42Vf9
oWpxRnZBIXiUQDpDMW5VwzyHC1MoAd6aRZhv0d2GVdAMiIfpSb5pNHuFcewX
+ApWlW52nXiAD6hwJA+9ZrFqurVukfysJYG69qzC16sX3beBLmxQBHj5O7t1
RLtSxw1b/8FLMCiH9IvSe9aV0XKuyaxm/FUBc/fVjPYdVn3+twoiEseG3tM8
nqmqtIwnrvmgDrrbU/wyVhKLrGDvkw/yp7dyamlhfN/PfvhOw6sHa2gkvoNn
Iivy31SIGRzoCrxluLsAwFEWRueJjZYqNaVAstSZ79Ds70FsMKxSIa7+yBTY
5l3/iY5LWB2QtGlw+ufYxw4f3mWICUzNiJEL0CyMw/4xHaOPpexamAOHP5lx
owAV0wYxlgb56HhI68DJPLTQq19tKunIb+v7orTjxf1VAdqHDVwYmYMz64y9
jsCauJ8SbKGPplUcg76H+xh0wY2Lq+D2KnM/YpxKmW6Bzr+VX4wK2y1C0uX0
Xbh+pKeQ3wFG7RL3FJqqfKtDvRmmNgH1ZCqAf9yk/icsv4lZ4fvbQRfSVTJT
jQQqAfyS2CDg7zZ0bLgVyFXsgSVD1Vl4D2Pu2920wY8+gXRPcLOTxwjvQIz3
GEOmkSrXHtlpWTyHT9jRZHF0wC0pNzID0SphRhXr1F4W7Xd9XffRfCOCv6qW
Teu2hh7tmZhu4TbMBAjpg8O6AC4YHwURNa7x4ibAsrZVE0eONvVoL70rD1hj
DoB1kiKpX4H/BSmls6xBJRH0FIK6bpvkUAw1ALO28a7Nh85hFSmYMvVRGtlo
iA3txOGdbQWUsVzZ9V20TdvaHfuVYq8gja3Kpil/+5iVkPZyYGAL1gSjDIqW
xgY9JhDimlPfzdfBZ6B7oHk92Ciy2rpFauFN6xh/cF7WUGV9NvGkbA8nfrih
W6rCVlYS2wqLNszfgh2BryqsUXoCczDQALsygzqy6BfoxCe5lCoLmHga7ew6
9Qj2DjRLlsxOFs/mv8w6L/28r7ZTWxznnv+iNApndhLL6AF6ECEetzIm+isY
BxeL7jx2L96WziXPPgP4YD7A1c7Dik7E0HNTSdbULMZSgKugqJRpj9+nJN+W
zXdZtgJeCZiMJ8V0wpjS4IglVmiX5gupk6W2dJrWv5mjY1aVbar7lM8ksm8A
S7nIrD2S/sNcMiW4RW33SF/VwtjOKxOHbsLKdGz5T9I2P34fs4inHD9wXeLw
7dLj6jzOXfg8DeivX+kSBJ7UzHPH7gDI18yrw4PrKXpBtYD1p/uYSzrXblxD
71Q0vHbJtR8q4HatHegoI75msa/uIBwISOcuWEzVHG/6nPsyOKMvfc9UOErB
cJZGgCe+kP9ExA7XTwkjVRjoxqdvRPu3gjen0rH3KYibvJjBqDO+Hv5i2Kfw
4zMn25rkE+m9ZduAtS1TedYMr4fO8gh4rPOONsCpVMW1Ox/ak2HFMKkqB5mO
GAFGptm7dJzMcPrk0fWfM7B9PJTamfanoo7z1rzWYUsxSIFVeh8byHVxoZS8
uYV5Q62ZABZhHvXCUpYMeCnUZMw2+RV2ZYbPv+uOQMTCQnwCBF3QFndoH1tF
JRQofkb837ZKtLEzUB1UYPTAFf9FwR4jFpIdy4HXuT5kimPHclSPqX0PhphG
KgS0UiWzLbX5ONdULLpnyI5GhxPHTLZLB6w0nma4epupvel0w05O1R0gdKul
dmIsmP/6vacQsPIHIQ3J/kpVWOs8ubKgTdmdQ43AMvfK0xbWYVYQxF5buNrq
2QNcs9DALonYDFTbDpWSK4E+btcMz+/YZzUWd5Saao1Uc4caneMNRfdbrEi5
hqhmMbYDtIEHShQ0emBfjarJC7rbtjNErGKMhUKX44e5DmQPGHFFd9Wq6DoF
8XtxXxXIbxz7oL6u2PIeHaFWLeRnswk24hcw7G53DtR1WaGHM1xTG5KxbKyY
4ksn5BMlS17rKXyWb+E17KlKwF2hfwpc56nFDiVLX1eOatuO7lOPJkte5VKQ
zxUFkMOFH51sMg78WbL45ad2qZw9/+Vn1l7bGO/IwptIhbXXfKwNt7ZtjB5Q
31v5AUMKwjBueVahhpG5x/ex6z51MQQ+A82+204hVSjz+H2JnFtYgPOPN6is
2KFbXj5Q7XUeIVSJnNtg0fGD172vDbQ3QH7GhwZjQZgV9Ag/pefs71mergOD
L4DR3FUVX5SndAOR54q5fAtbA8GmzTgR8GRG4N3cups+rfKtxesXV/cUvYiN
gO3DbMHnu62OzK/WlmNJ+Xzi4PVL81sYDdwNoBgrw3PnUliQyJr/J57100e2
STeSP3GRG5ZU/XRBrcrDWZgKVLx9498yRW9bWdmx6e9uX1kh9e9oNmPIdTwu
V7WPc27FJxrpLYZpS6itYu5VT0ZoW9vyv5DJO3Sz9D+78jGRsHo5y9OFDb/r
65515WYHP+QJmsWRwA4Uixmr/IWiF5kb3QVP379JhSEgCZI+GKhldWA3mc88
dNtZbQaRHthcgg+FqVKRUG11Nqwrau88+itPb8SnwNj5SY3yGWuXcIXHd5Qq
16xmMaNkcqDb+C/rCAboYq3Mc8dMr2YVNigB/o/P2Ky+ZI8ul+3oLx1kr6yM
rPkrbPTNn1bhRTIrWpf8L/hoXSd/q0hyO/3pLvidx5OzommPJZif9T1GzYfs
GxSb3biGvvNoIGO/VlGPpQPNm8Af1r7O9CO7eWSADHNVO5zWYBwH3P/hnrPe
NpaM7+v+eF4dK0IJg/t++lp2je3lPhU/eD3kZ6npGHulbNxAFhrcRsdAFe+z
lqFt8ENGnonx6ekWlvACKXUoyJlHmSx5nQabIOcC8ES5hJiG8UlAaY+V0RxJ
FrFOCyJ9PKa1aVduXGeyX82UqoC58UyZ5zjCHR9cwRSlzSx2bhrd8U+bSjtY
tqCcZIezb7R6kc+oyA7Epk/5jKxKPgycgvYSGI/sUvWHyvlDFhZOf3VOKgMd
DdyE03j8aX28MKPgVWpciAHpb1jtp43STqx4Dza4JL+Fx4ctKI8PMXV3WZbo
XasrtFXbeRyf1yQHCzEofBGoZFigcJ7YC+ZLfyB+BFCtsCDnSxY8XRE7cCoh
dd+8yhhVFTPtKwMzMbIYRNbCiEVcf3a2jRkCzmPrgRGVJKtfGYx/WFPIyZVX
g9Ixrh1+hYfiGzzugE1dUl0YqPVkxmlOtEdtDbfgTXjySNjTnJi+CTk1Ne1s
6Dv5++HdywxnPOP6wWLPuEXGos5o2MyPZVwnfMFpDPPr8zczfskYgfDux9R0
mMp4/9uP0mVfY9PFqS7xt8uFmgd/Hb1w6dDTP5BIp6+G+xIm1eF/Z/brssTb
3w9C7+wQIWqBT/cBO5h4rB7mXudKFe9H+sdfl0RAPIzSCjRq2RxcUJG608PI
ww9rKh10PfMJXnb8g+6Mped2+N+gwcFuT2qlDNYH+i0DRqdN2yQRDvLPUDOY
mH7KEJ5XGQ/Lol+iHn4TxAFOm4qT6TaPSoUgtVHTWyr/JV0AccKSQK3M+klQ
pdcq6+HSYmWKowMwWKtf2epxLB6Nxi9+FhC0J6j5Pp4+zZEv03NWYkRWdx6i
BdXsGdN+fmpkrCwjg1YcG4AGqLb75B9yFAlZD8rRTpU9Sp7zFCdsjbYaLAHK
AlG0PSVxyOFWP5ZVPpH5JqrTYSGOYUAIUlmnVNtiGItgwpIq56EjhoHqY00w
/CaQ3P0Ri/taBKRDkFxA42SLlCo9fpLJj1GG2Zqvd5rPvGxlkbPrurBTqp7c
lYdJZRhxx5QDa8dqyuazwEtaYh1s9YnBz7LTLR5bDtRjXJbkN+PaKCTy/Fc8
BZ2PD1Qr96fygzcO1fABLBQN1gFx9CB0V8evVQu8Sg6sw7YdPu+vX64gn86T
+CZeXIMZ6OrHck9at2H7PD+3d/yCVwTgky5HjE1kiPCMePrcVDs5ox3a5V5b
bhUwl3xySvp4DNHLB6pes1JrKhawXmJceBaKEs+5BbJtJS0eo+8f5zXz+Ogj
niBUBLNI+zeVdIzYDMGydOc/ji1jPK283UdY5HXnIoyq9ugSR+lRZ+4dcBJo
/IozrXAGmMwvFtUoGvzEA8AC9Al3DPKJUYZu8UOrIJDSH1BhFKX4wc3utWKO
2nJpWtdX80n7ur9un3/Fo9tLXS0B0w+hxXm/bnE11O7q9+ohIXhn8441eOlh
hojuvLy/qrf8XawtDgWU/p3DdZ1H73lpf9UPn2nlY7wTVAmJLLhiwk5p/yTE
nhGxHEa8MNKGwdZXaxgufJs0jNVhtMm4WgbaZ9jWDMQOJ4qyNlWD++SDrAXo
E64TTxPuxPxk3QWxNMELTwe/L7i773CGATnDsF4GdWdkVs60RL7zM5NveCpo
oKyVwiUcc0NF+6JKDnluS/hk03ddHPOD8UmV7h3LHKhws8es2qwHK166yHRP
xD/fa7slFk/eBPdTgsB5R2ydbML/TTfgnIVZRlR+3SpOsr5O2c6Skj7sgHgi
fXYcRGmmEDuUORXcWqrpVpteS3L0S0+pC2hkUO4ZTnvSUmJ5Uxq8Q4125Frt
GfSwdC+7Y7k/q4NCnIyMwiZH24HBYEJOmNwcvweI7Y0JT2DghXspUWJikn6p
OtJoB6jrVXrHLa6+v3EdrlNZXEAHXjmC2Q58zGp6SkFLNWobVmOCGaLXFYh4
BGzxepr0VNKXwiJVA1E1YZUYOD0wkTpf6PPyRuktNXoqHOspgOuC23jx/HvU
yvnxRY8XAuSZ9jo67DoFYznRjAXZB+7hEePRAIYKfSl9HdBWudiWzYpFHKhW
kmbjWgkmWPi9i4eoLFRkF4itsbKC0T6GtEElP3Aq61dqiBJHJdJev8IF2e63
41GrzLuir/YTxWnXLQW++qoXYhGAa3BVlKl5Q3/dssTh2+Yfa8DHwYEFM3EG
cUi5fm33sE4fLNVaJw49BdrTm7yIB7ehuMO03NsGWjbxRfActwizjrfFusZ5
x0z82vbAAfabl1Vdv7gaA+Gb54D2OZMpBrTxdnHq8fWUTNq0TtuGiWMjfaVy
PDeW4k+pJE3zxqFYdsfWf2xb9a+f3qV8ebzXOTm1XcfvF3tZ+1ftG/82Ou8K
L9uEpYjv/zmDJsQueGZHRby3ch5Dmjh0Ez/g+ZxDtRiI77/ZgA+OqfrwRKN2
xas/+uHT2radKdTznV5BKRxnVpYJaEd+lkbnO6i9Vvk6TEpT9d3GLgEd49Bh
y8p1RXwFMZ95dsEmqk9OTzowzzfKFD1mYnQWQFjpzQAWGnpGXbZu5MJXeoKW
6kJjWLlwod1VCeVKxA8HDZiazkinQu5PAG4Zfo080M4TVpm3naeAt0gXbO+0
wf0Fr8qtuCADSThnGkUTg+17qhUIUUhfdEzWtI5lKAnxUen5COK+1DDyjs6h
OrKCbDto7cG6rq1l0YbkqHZ+uvMVkRs7xOr2FaqI5cQRqeHFcgBex0mlBk9e
fOtw7WB7lkn8lXt+MW1WpMFAdaAVBmH4zHS/gTXbPTsFiHEvKfh1nuAirAsX
PdBpWt1SlauIH+6rWmhni7t40Fk1nc19Y9Inb90CbkBQh7vyvyiNfpzXBKvk
YY0kiw/Vdym5o3IeuMqIzT5YzY2SZW9KA7xtp6sVvXFIRdNwhWgqw8UwAgLz
jzeyHJjhS0+3wEgf3lbyeVE7l+KaqvFdvxLYLIj0qwR51QJATzEb5e/Skh0V
MVrYU/QSn1ElXDvIgy9xRy4I9x6M7H7rsCilyoiXvwsQPZ9V+VxWpfLf8x9n
UdM8ZcpHD1hqZwwKxFOAqDN6D28t8aA+yYYAL/XLl59p/c0XpeCAKql154MM
tAe2xkoEq/kuiAEaKBEjdoiB3VudeGZPxSPbSnRc2LKJNijRpvaTuUfrfUMY
FIX7dZ95mjelAVs5N1k6R1XP6paraEV3PldOlrzKm75Bfffa8rvWlHtANSiR
yLlVX89/XKlDNR/DVWiSx/tB51RR9+g9z+wuhwH2Vs1/YV+lRP8KnuaC4C1A
zXOH6cV2X9WV9zAQFN15pUv5MYZ4rHym88hdXIF3bI96/pM7yxg9QMZrPnaf
eQpqBAIrK6fwOctqfAh0/d1uaZJ3HrvXmvErLg6z5SISGK9473kLNH1qV5mq
Dxe/jNUriQ0sOdXswHLLsspfLqr55ceQWOl1ezaN6gUfvo3GMCW4BfzWoy65
OzgMJquAaekbwCwjw+jdtboch4JnAb2ntdAMjUDlB+OWFjFlioX86doPa25b
WUnDrpzd1PXuFTQGq9F16hG4H7cA22l8bNcPuTizXWfibdut2FYpUE/XvKqF
aEz/OKs1RVDTIQ08IB2o5dyiYJXoQeYbswhThZkbl6zKkXDOY9jn/aMRmyVg
qVi9Eq4peX2nVdwDtWTHRyJ4HJg/t00jvcWgnJfHZYkxZ4AXJSfaCRdwpDzc
2qVMGI8oMGJ28KldyvYFZxQG1raDa2J9HrTaVUAZC8TCX1fadz9hNbHWWBRv
5mj/nyWPccRxpg1Y2JmhLDOdggyum8Htwx23qnazHtis9BCeoFZZw0oP7qXX
zb1jvCMN/Kr5LElwGJwB+sAfbAez1KO5Xj1Y7TmqyncreGaw3Y71Wzbvqowf
aerhnftM0EORYDWLFdtcv0Kw3FNAdyS5WTqnw9xPmuHVeFmMPWdnMZOZUX4o
s7GkA58C8FTdK5PN761aKJTrLYV0sSiAr4GWL5hjioXIveP2VRUQAJzlm5dp
yeDiQcNUlqtwlrTjKt7jyYL5gOGOyrhPfteiZ83iFGtbvmkdVrLc+OSWsmiy
7K3waPOSqP7yyraV/yewxoj94qMamj3w+veY/yw3h0cWgnMVTMa8o6olinH0
QC9WHytIWQ/NG7kdK1EVJMvftc3whS/uqwLhJePZkQWZUTJL5Vyo2rN7lZ9I
H1k+Pmj+4gM9517wKPdZeysAmfb1fwPT+8FzrbyDZcffV1WvHf+d22FcWKfY
YtVWtuxFJ42SEK/5mLXPiMX2XqNI6Y594C1wwZxkqox5ApdNdSaMUxTaWR4f
gj/AHoNZh5vj4SjhFx2EsPF8F+U1mdf8q8TBG74o7WDcblhSxYNWymHTemAZ
s6LUIYkYtEDL5x5t8H1LLAu+JMtqnknNrCmMgIR+5O0zXLWcrMDoZZc5f1X1
7cE6rJuK4ET6lSxjh8V8hS6Yr9TCymWqwwYBOh3UDlTDZzzE1O+iU10PfLJ6
PcHECKPQt0GkCUuMDRCsMTnKHL6suz0+Pi31OHyFb75F+BWk7GW0cOa/4R59
++vP3D2YuY2Q8flvf/GMl+LSv0y5t+H0w8Cvn0lcp2z3O4jKGE/rimgP2XSz
w+0PvOOQy98xOtgQPCzfuwsCuScsaEQRCOnt69SegEXCw99U0R5uEz2g87V0
KF24JeHR6E2fV47P2JGGA1u6kEJcAuEL3xNw0+CKK75jP56OEvcr4JepchYu
7WgHAG56eo1eBtFF7/0ivAM4uF6WUkHH4iMXLvJdVqL2ckdUOAYjqEQh253r
H5+MmTD4YMd+ZXaPJ1rsX+1OQOw7sup6Rjwy0E38qB1d2ZC2e8N8oxjLzsVZ
fe7XWx5QvffUz/L0yc7jMGGFEyfPeTVhj8GTWN/5r/gul1Ji0dAELTERkg0Y
rCONiseGzxyolUiXFSCu2VymI8ItkhErcsV7AB9D09g7Sk+laNSVbxqzUewU
hp4uay86lo23CEBhlMEKZbt37Kc9DCDvgNhbrKKxbQjknbVNYMwQHMDS/bbg
+MOxeyvmri9ql4BY1ynLc/nAqxdpf7h16yrLoIGQWGLLWoUOJouxdAwpnghe
s7a4x6Lagq5fCcvVVjD+crIwR+VZa0HI4cRxhm53lYKRgDg/TfbYA0uOW6VA
+p4C7oKh4UYYblqIBbRUxG3AI7ZV2XB1y7Biinnu2N9T9IL2KJrWYV9wuDy1
0wryruZHBVK7T0NlYdRYNxgv3o1KLZS/S++8/JDHdcN5sDumUbwBjuqlyeky
Vvv9I/UwyZcPVEOhVamnvwoyfP+mUpVTLHsTw/rs3kpz8LMVElPXhZ0ConnH
w8iXnVFB0s7h8yKiBU+z4rC8sw9IxwxahXGUEFlPAdb5thVyZHgfu3/j0ipY
972qpPOYhYXfKbFfCybB5lrO4yY+NjpQy1y937YdnPlgWPHyoBa0vKfwWYwX
U0v1f08+6Bnx920ojaz5S4WmHL5dpaMaVkFvOrb+I59UQHjxy/dL8mUzM+rO
1WLjzEDfUkscuimy+v+GxkN6o/OuwG3B12Am8F+sEqSiY9N/oMs/eLuBz4i8
tW1jtDHfHvCTLHs7tusHkr5p3WK6Iofg2w4OvjD5xcsAXfVkhDn/4Ykm7USV
vRnb8yMWBRNekU5pHDM4jU/MQO/vjNjaaE1teH5zBs1MJA/DuMJF/KwtHc7n
/wbmIEBLlnCQsTLhKdhjqU/6HbUzM3mx07YmHLUmgkDloSaWKh43/izUyM/o
M9A4zK5d63KmgZ5yJajRDt/2CaKao4OXkr49M+WS6MpI5NJ+bF+ZQW7Ecl5U
1cWwUURrtL8yGBwFMyeL0roi2tBWBo0Q9bBlA+lgqyQ2iIMDsOe32YGUpdVI
eMSIjZsziURNqgIjaKNsnXSFCNoGgxXAnk/NCpDNQ3E6R86fsOg4pY+NSn7Q
N1IUz2bTJrexG44nWcLkOZYnQCF0HYubgk1kKJajqjFtO1hfFoCxU05WXymY
BmAK5CM7YZigKyYGxFCJk9ZtqZSZsYSXJzM17JPcXQUWR9UM49iLVKMndkjF
KKsWSig1sis+fJ7+gpDaa+pTDJLw0Kr/gOoq4tZb6tKgrCOlirduA+j665YD
aCZFeEJKsK1b8MT57+rCiEcaW2DtGcj5F6VRUykpBqK93grNwwRIken8V2CC
pW+8DRgydB4RBCqC/KCZ70srh/rsrIHm9axErqZ6ZLVL+uuXm4psIfbilQMq
UvDY9lIvYw100x0aSftNEnazdi1K53BxwHxVQdvKglZA1SW2GGEwkE/KPJlG
Cs4LyMM1AbTeqgW4GE/uLHOtKiWHVs7zCnSgOmCFEQTcaExuYw/jBlRiO5Il
r756sAZIpyXMIug9BJ724wJ3HvkVAE53eJRgLIj02A4VI1P1hLOzmAx4yrbp
LT1G8BnHBHDmgr3l7yw1DZOnd4tgALm3Llc5Oe3nlLx206dV+CaqvFDwOzXj
6D1AceLwbfjUmB7J17Rsxi/wJGKJgeTeyaVofOLQLcmyOcniV/gvpsGtRmz3
VVyh88jdoCuj0f75v1W4YO4dVi36dcA2uv2/YY8U3lb4rH9FxctWy2TwfIst
3xMA/8kHtVA7Pnnl7CavSo9N78p7mLkd33fttQtr6fXV79X7FzeXRrXdVPMx
4C9V9vJ3QGM+OdC2DTRg2WLLHByC4qcq2bascujV7zGBmRJMb0wYbuPWciE2
xj1QwJgKRRn9KS/xNIPKKZN1nbkbPNNPcVKXsf/geGUce1oFJd8VD3B+3E7Q
Ao49bgJ3Fqsc92v6xRVOPNjg/3W5njFLORk8/xXTo+fcc8xeJgmDzKI2VbdF
MEDAKsOd4VH6aeNUKlahIBgxVXW32NcJ26NOZSymCf+UOZJej8bbnwqNsOvX
dg8rWGIcjt3eYVvrvo0f+HruyvEOK9qPxnhw5ng282HA0NXqQCcXzQDnaWdy
7AL2Szoe7XvBbS7SbKZcVadHo6nN856zZmssbnzyDzrxH24NwkKkIwd57sjS
gXjskG/OmxJ4mZsAUXfzj4BKOA8NAKthHYpw6DoFtgCPmBVayKSFUnqpnaNN
PQCg1PAkAJUH0G0tj+2olGsMP4T2QJs36qC/sDzhHPs0a7awvV/q/eMXVGpt
qKF3/ALr/e3DdcA+SAj4vG6SO14J1OzCbj4J7ANK/Y2rWWhcTWUE44eB2WNN
PX3VC20zbR/34pdFJ5tULjOyO6+lF5zElDMlLAH8M5oNGHIFpkSyZDZIxXXs
5OKknbglaPMRlQc6yXN8N7ceVATtwVjJUnVk7avtZN1xcUwDQ6REtqr5z+yp
0ClY88b+hpXMq/eP1kvVqqeAB8qggTlitudegGBDJwA90eamdfBq2r+ethW/
ovz0jixF/9avgNVzEW4BDWOE6TL0DDtikTBH4KLQZk8nZJS6jt/HlbEI2COe
mpfABqNASLCXrqlWphWF76te1F3wDPYFwgxzplOAObiB2QL65B2IY6tQppeH
g6ZmVSewHVyBqz2gUNXVHhjZ2j/mEoJcDQYO8j+3txK74OiNFYOyAnRWc/Ml
aHAi+0agtfPYr1Ujpu5T1Xw/Y8GlVfOf2FmGEQHJPdNHmrRFL3gZTeCR6zyx
o0xWQ5vhD+FQMFyQZ+yUooXzHvaCNb7NzpWxMtFt/5nbdZ16NLL6/1JEytF7
vHhofN/PvCgP7hgTTxXqN/x7WoshaPn4f+IzcP6TLb18EnBWAc3N/5Eut634
V6oQatvvuBXRbf9VFTqO39+24v/4/hs6efHiOzpQyL4RiDjZkvRU1imLx47t
vebKF1uYJFgE0/i9p2Pz3zMyvodPL5geOhFLFvFfJ3J/CmLLres6NXJBx/eu
3oNtdaLLX6XzaYGpxs1My8icAtcMcXD2U0VIFI8Y9lVoIp/OYIE7nqwfuvEZ
xx94oKlb1I4NN8EtoQpeSFF00bIasY84NYcbuu3ArpYVLZm7XqnHB5ns3vgM
d2AqtOkR2Jep6ftsAaTDbOEJpivSAGOsNnF+JXH0KTbeYCefZrhHj6XQweJw
s6j1aAcry4UglLzWnoWzaXWO9vAsWEcQTrir6hBFdrOOXGyHr5fGBnXwV/Mx
S0CFNTtPcncVsk8WAYAwGZc5WlfULmX+ls1KD2/dyr+wLwaHaQO06oCyKw8+
zIPASLFIcZB1mjasFP53c+uAROYYV3bBFibSLlOlVkGEvgqNdg9INM5fWbNA
Hxe8b2Mpt/g4T+qmh+q7gGUwQeyu4j0gi7bxEIFWI72q+gTg9Jx9Bm7DowE6
WNfgD3ROtSwbVoE/Yn0nfqOeVi1gUu2oiNEM7dIcv1/JwuXvQpNwpXFawQqu
swf8admM1+9ndkxs1cA68RsuCwioJZUfKCChbulDdkroA8iteZqMFZwTkKEB
UL4Ht5RYgNB2vsjtYHdQIFaosq0bVvKx+ccbGntHwQF8XtrA+oW5sb7wl1Wn
Zkcp8CLZ8EM38RmGSLUjraqCdMtP/pZ3IKuMMOwRaLK8y+WWvr3mo5NNSgCs
/URV4ycvWrnzgz7rQCGaAWEDtH+xqIZVDIXGr+cWLPB1ppcCcD2wWVlyLsHH
IIAbStDIvgkouHFJVeLw7YAw4GPqfLOBGqtQP5uuMQhgBRwVWMZAM814oFvL
ZNYdWAAoSA5wygV53O3r/jqy5i8ZZIgxnWXcGLSud64A3wBAHf8d+7XpjXwE
/oO9DGB05/fjB37BvSClUFyAHcsuGbH2vawLRtKOmPfSd2Ygn/fCdjiSWFuM
V3g9ago1rbODyxfAYXoEowb3Oo/e+8Pftf14rkT5WIbMIhYFi1EJ9b2aq3wS
P4VmuKMEGljNvmwmwHigJZL2hXlBEsqsVikAi3fTWzmXOzLaMApt4vWWwtPw
yLQtP9QUSZezDMPITACZuSOtKKBQZHtATQO6Oz49UutPgesp49geyTM+fmlP
INy8Cc83vHApNVLTIJ3WPZXelNDQmXseDnzlR1vNk39I673LKYD41XWP+F+B
dNX4MzabYukmA2injUXuv+Pz8nUsZqR/nC8WWHW5/rplkMAgrC7sC4QHNpyo
mDHUcHhLwZYPlZLFU/mbYg9p5gMqHD/clDTBZ2/2pa2e7nwsjuJbhho9XITr
eGELYNlSwiMmmlcJM1S91NEOGs9XMLU0HmbFHbFfADu9ABVNQWsvY2iyePnw
KK4z5sFXKkidw4waaN5gRe2Pd0onp9UZuzIvBqrHLCqMH1gTpsGScAu5oDS4
sHQK6z2pssJffoWV4Ymw1qA6wOCIbVbj/Wl3omM/w47x8iwSLgICY5KgkWDR
yweqcbp3VMS1kxA7xJ+gqVYkVwVcrAaBTqJxfrH+rAWWLeCPa4m1hbEzPhh0
aCo8BwxkBDAiYA4XkaWw4C7gmtUHn1cKXsXc3++pwGqzWuk4/NnVM3A8FS+H
LaicD+Qqj1tbBDsh7V58QfUyqhbIcahbPvdog8eKAID0UbIhHfstJC8KYuhw
EyM7UCOZu4LfATLa0G5cg4V1BWzIrQLzuvLezKn1yITnVTZ97iPbSgAx/HrQ
wzc5wXPARHXhPy+jhdhN+L8qOe6pwHROWFlJQJtr0mugFcLJlcFGhs4jbbBH
yZLX3zpcJ+8jsiuRfQPwDt/DRgjQdv2w89i9/M6w0zt+l3Zr5QfwyfiB61QI
cv/PvSgkN3WRVe1ynHqUD9MS5jPsFJzHnNFZVa5Zp6b2N6zGZDhXTxy8AfBU
WYqqBWApj4AxjO+7FnjEdF73cTVWRpohhc/esERF7ZedaX1su+q/xw9eryLy
2TdyU4BXVd2zb6QNmBKa5LWbeXBMdbw/LJofwSh2Ze81qiINp93xT1yZliiO
GmNx9J6FJxq56U8X1F7/STXXtP3wW3/wXEtk3V/TRxmmjaWdR+7mXjSAv2La
lDvQq949u1chZ3746yExsT0/4ut3rq7o2PoPv1xU8+K+KsZND/3Uo3eb/CB/
Gnj9e9Ft/wXmc1Ah9NqOY54zSbBcEjrrytOOYm+pJ+9PmQPuMMLsko3LvuFA
back5dt2MG14B1+Jr7AEpm0mX05J47u+wmHAwU9gCDJszVQQfW2FesPvOKBl
XHwm4w3z4QBLw90Jk+Gp6VbJPxDbc3V06z++cag2vu+nVz0ZYQ5r/VbMzapR
FOtYOrXH//3FR5rYQGhqZ6NuWfh2l71XxgfCVinci2k2YvLizB6NpxVIMsy0
Nk6D3SczhVImsU2h4Ou+lRTcyy2XnzJkjFjw+FJPU4JUMZcvuCRK5top6a2e
8bRK1Wh/tcZkfBLLMqJwxIg/x3GrUQJpT1UXMiknF4DlnfLEkOdxBIZeYrNj
l5S7fFJ5oQqPpQ8a6Y6SZ6nY76dpalpDLDGSLHRzadklJyQSOxYbiudaHYcG
RgnjgplT0fCesxIkiR3yDHQlZprmLY4PhEFHCSZU7gpaylYePu8HjgF5oCNj
6eZhIzBMqsTUXxkfPk/XaJupYxV5JUTaDCavKGjlvpizys4heTqJ4x4g7TUI
NpdFcUOYgZgAPrbESqAOJY6Ah6DxUOKY118zKezD5jNqZ54vuhpVi5lvadCZ
J6vYxZpFORLB3qu6DNWLVMG5ZTP8GdIi3fLkufL44Md5TUxpvNp5xxqscHOe
b+CoFmTjOs89eWGfKz+r3qjOUGKHsClwAMBkcGISDsCDU9RW6zb+5Ccgo6YV
wHCxdpIlr+KdKbI0shtH8kBdFywauks3hcZ5D9NlZaZULwKWcc24Cx7QyZYk
PoKETPMeloBk8yag7xOrM9Vz7jkmwAfHGli5GCzG8B2LZWX0aLwdIuQw9wA9
XDz8AiVQl78DtOJb4WFh/TGR/FUbLPUrJAxe8zHuD2h/8zJtpD+1U5n1/JUZ
grHDFkAJIAn4LzqtqJzL0Ilmd56QXcu9s692aSLnNpwmFV9bUem2r6dwVmTt
v+G7nYdvZ45hFKI7r8RMWyBcLh3BOntRA+wRdwH8ITO4LbG5V9jey633bVAN
1ljWNVe9qxzkA1arFPPnkm5/CtNmAeqwfqiJBYv3qolk8olek3GH9hirtXea
OCo2zqqx3RKmNH4WffdNS5VFGInwaHCffa6yEll6fAu6wnRVRNmXX3lRUZtO
a5j5UngzcYb8tj6VVWpcW9M9DFM11cp9DCDuhpsqptaRdInkr3t9V7PloW4Q
qsbkaLL4FdsY3IJTXxQdONXWy3JedrpFYY0Nn8EPq7uGJSLXeYLlT7Mxo2p5
7VJ4KQ/RzuvX80TgtI/vKIXysb54ssvPtLJYYGgMKfZ6ZUEbXesbn0yagt/c
o/UKBrBoFgbEK3Fsloznc0wDZS4ki6z2cRGszGWEVUTjC2m1wVGBet7kk4pM
q/4IUg308Rn8a0iOdgnyH+MDUgeqXmQe6HND8SOMNlSnJDYgYEmeU9Xgwud4
mhBO7gIgaC8lslPFpocFUF4VN2PoWGL40Ux41cBq3vhzRfc9Y+V359KLYtPw
/NkCFVKRZH398mdVOW43S/K0FcAFB1gCnUd/pUCymsUwJUa1t+xtxooxwcFn
DjCAKl7csQ+I6KtayNqBkE+Zgaix08mgMTwdK5X+HmRpoOULLtK2/C8G23fD
1m5YUiWt49ghNeDV73E15codvWdgYpKlDbll/Uo8wRTX+2o+4a+qnrb/WtPk
X6/6hgdvYJ6w/FPenyG8V84auXBRwfCDtQDpLIs89OZhH5khGSMGeuCk4CnA
6iVHcPD66M7vs+7wIKCOGBpQ4qld5fEDv2RGrS9q97KqLD3a42YaqP/sbFtp
fJCvsKwURH30npEQP8FCge08suCm4fXi2wW0//2j9e67wYE9YYeVrjBpM/GA
s25R/AqDaWdMtVzWzZbuMilA8K/wZnCLcVPRmUnzvuE1bnlSAf0rtrTKsL8c
fMxoSWw8xKyCu3zzLcKvoK53cNkwr8sgpRk3+mc7Er7gzCv86dsgmXec/MP4
jHPGqenhzRmse9zCYjNG1VW1w1w0+FNw/eC/MxlpeBco+HdmS7BQOErXfFCH
93frisr+17/X37CSVQ+E7pOAdrtzyOBbLYv/Z2mCpTntvKMNU6FHE2bLlx2B
8MhkUP1LDRtLTFPtDv0+kVYFDF/NNpwbnVX6lpSEGSel8hFQ4u50reTxkPys
3rSkpDDzD+tOTNlODl9vT6vqBYPmgZdTIdFFyKSzO+g02Mj7vaY96PmYQGJs
6DxWgJXIdfhFyhgXvsIkmdJg20hfhTN53ShZ6Nu2E+mEfaU+9ZzVZtdwUzAI
E5burSNOFRiq9rIIVq69dDx1njtiFdCg9BUYcVX9nrwoHjvU5EGP4g/9lVBc
vqh4v479CjPrOgWLUGr5YC30jE/Cusdd1H2gRsGriWMQfj7vYsgusVijkJsO
920hvZKPbt+jynfDreCt65PotMiEl6skfrITRsEvrouFZVcDYodsC7SBn/XF
7dBUaK30Q3pLF1n6UrV/sWGVgvE69mfXdUEveYeRhydIn7a/2gkS/7WcrHPu
dmHcJRiVOO6RMIo3i+VsLY962inUwva7ivuqP5TYbPdpuCtXG2zPkhUoflnb
hg2rVCagagH8E0bBx94Sczg1FD2ofMzogV2V2mlU8vv5r2gSthJLtCN1ZlTs
u9Csnd/vqZA5q/7wiInB8nUVRY3shJl7/rtOalq3wAokCWvpRVjPgkgfDBy2
CfnkRgMtm7pO/GaZF3orepFBxgq/ll0DG4fjSWILjl2dwDugv7YH2Ii5h3Uk
y97EmtAFzJPyF4pnMxp40/d+XgY5oVPi2HVLMb5wbB1YbCp9cqfiW2gMD8tO
Tu9edbZtcV6zF1YDNzDxYl89BVyTry/Jb1HeUMX7dFaViDf9HZYa2tD++b+1
kjp30Gttrey+6q7VFVZT4wicmT+1ml3W2ejJBxXx2PLFzxbWfv/VJmcvOBd+
9PA/3q/nQbgKa/zg9dLo7sr7UxDb92zD+wNh1ArDafj3kekxe/yO4zk1w7xO
TN9mCXv0GXg+E5zDF5kK2bLOI3fhdEAyH9lemjh0008X1F45uylZMpshAsPb
F1zBxINYunCQq2kB7DrbHYvDJ5m3lwXqcEsy9jEy+jUxfavk6z4fvlrYEjnC
TxvqyVRsyaWLjE27ZvDFDNP2dfY0tb0fOpKY2eZR243xj3WHJEF8m9EDCF0b
ZMKSVYPM+lTwT6guZ0r+MS0C6c0A3sN391srcMUyWxVGiCGwQmnBDAysDyta
cnxmEWxnw+P8o5aELsj1vFQuBbx4pQmXcKmTWnjMy5VaYVDt9rf0jQW/B1Mr
kD2ZMpbeCDj3nDUJQRXNZHqn838VHapCtF15CvmzvaAGKwSjDFbfaZGsbtzL
rnnemat9+rYMwA5QcwuvJj9hB1UezK8SZhcuuqHUdtZIa3AGlNPQvVvFNaqU
s9ZbqlPj3lKPMZZQs1k9voLDLrHZwQZ4vuQ9k+eA/f6G1ZYRfxxwy23sAUnc
GRxo28ZwgWMArMpTdp8OymorQSCy20xhPmPl2fq0amdl3CvHDbZtl43oOUtH
1uusvHDCVGpf3l9l1S5ywXCcTZwO3FLwGXcP9xBglJPYW4JNFPJLnWafwmbK
3jSl8c3KT+8rH2jewGr1rSeu7CnwgLnCOJs3Kke4PAbSKrnPSnvTeAuVfCOn
vvux7aWs940lHS4h0leziAWOm4mxuGdd2csHqgDwoVg2931qVxmeF7jhScRM
G67JmzwyqddGdnJ9rADYgn2ka/yCacO+MBMwN8ruPHIXljS250dzDkl70Ir7
VII8GKmeopdwGMF/KX7XLaVVWB8LOP81+HPd4uqr36vHhPGBm5dV4mB6Gco/
7sUj80MupmtBpN/3GCdsA9Yns34fbPBgj0vrelRFqcIKSCwxJTJ0n86SqHKD
skvGYpClcPSFWNN4YkdFHKOjKi22XYn5c8l6KJOmujZP9ihLoulzpyJQaI+y
8I2RMPhclpmHezfTmQpeLAeaqnO6iUlFpvWWaiXGcuw8scmoYxEPS1n2lkqj
5Wmy/OPa35vPRGK90OzVhW3JkldhNZpOA9WfmDooriWTtr9uuXTkquaf69DB
Ig4+t2NqSeehaf3qwggTsq/mY8aqr3phsuQ1aBKwsLsqzvSQRuJgA1yI1S2V
zr5yJo+CkBtWMhq0zZ5LvR95swz96fCZR7aVYLy+KO0wLUTVlt1U0gEbkfy+
6n/tUpDP5EXlI2TfhCHj/fiB62btqdDk7DyuSL+uPCYkzEHLIbKLfnEL7sgK
clLKKqCFCg+L7ORJaT+nLKp00aZ1PFk6DkYxJqrJ2LSeCcaK7hmT0AEm9Rcf
1fScnQU36z79JNa269QjTONNpdp9em5vJWvqUH2XKeHrXAm2Bkmbf6zBtxkl
81j9Id+la6r51V/hRtnKWs1ijd+iOq1v0BIegcT8K+eBotILtRqCpQob2OXJ
s0pt6CmALTNut62sbFvxr25Yonha0apj9y2yWrQ8uxf3VXl5HRfHuG9jaXz/
z+9ZJ0L1W8V63aBSZU3r9lQpWpLfT0cUdfz4Du2i4J4Eznhsz//Qydfm/wgI
MG7zjzdAKmBcKghb+BxzTDqrjavpI44GIwbfez6rMnHwhuj2/+8Hz7ewIh7e
VhLbe81gR9a8Yw2eD9tX9ymIJwAsncOt382tgxBKHHLSKqV2ngADg8kP+QeF
ABmeMq5o95mnaQZNBT0gqJ5lAxfloTOwcEhGYNwqYH5oh4DwZJ64hrfkNVrL
U5ZJ1VaqyiIzhsxDBwomCcjvSZQpCmGUIGP1KeY5cZRR7a2cm13fpf3ts79v
7h3D3Px6Qxmmh2Zoq6Rm0YTVJJ1w7bJkUXFsgBnrKSR+Ka3NdNXFjBeOJDOW
8cRlGzfBTNwQz+/wqtbjFjIRZmVhbPk2+BlwlakZp13hLYXLQtAf9xpPF3UN
M8YM5jnt8yndp0vpJP6Lc7BwR6Zm4GeYDU5N303K6OnMiwTYi9PRnf84mKAk
qaP3qMzES83J4le68h66fVXFj+bqtJ0H7QWb7jcNrpFXvicp8smLmDnWQnDx
8Khm/J7xgTDH/rqvhK1D+L8ZViOg05duERKSCt90KjSLMp5Ohs0Kj1iY6IaH
MdyecT+DS8f/TGPCxv9TAuAWkWKkt9mf7+D5SS98EG5JuGEzXZIwx8Y4esqS
fyBc8Sc8FVmD2gax5gWlhMVj41CLWJ+q6jSorq4K3p0KdNTHbavn0oD7XlC6
kGi4/NNUWgAtNXWlplgbVOdx38QzQN3jcK0kMUmL7TQVVssntSNOr+B8JtKH
mZConWlJqWKCFYMQOe/YT4PVI4v2N/FzP/xtdGAPWuuJUfypsKP/ZIsKCYE2
eN8KkbWoJG+e52RZhYisHMsYdUMsZyE5iu0rVa12SXnDjbHy0o7rPu3KgQwR
rNgar4x7p2c0iXaa25IuDmjDxRVUGGhIezKePgDFVWiudWThiUZTDjypkenY
p4zUWI4XJlbFPa/sU/kBnhHYmyx9HcdhoHVbf/2KVw9Wi6HFc+FgSo2PZeu8
eKBG3bSB4uLYI4YUU3VKNTolzqyKb5Hd4DYfeNHk8k60JGfZps1O01u4d32Z
wrBrP/mtYtFf6jrxAJZlwXEpWQ135394ook+KtjDshgYChHyw7U0D97C4Cic
+Ph9WD1Il6xb7l3alil5HXOg0JRj97oQKPa9r/ojjPKv15eB+dxu2WmJveDf
3W9tgKXQwf765c6x+Te67b+2r/8bqBR4ZRHjtzBoU3/sK1yDZub6nUli09+K
Z+C5R3FPhWD2G3AseH0dPf4Gk7S5NIqnZpHP2zwKqPPoryBplgw1pzP3zs53
pZcY33etpOGa1sEKYHHxA7+8+tF2fCIYGrMo3K+M1oZHI2Mowm3LsJ4ZRnlm
+2fi9j+DqDM2qWbic4aJCY9qxqMMY2m4p1/X2nDHp1J4kv765LSdlsu2LePW
QQcz7Ff4nfCbAWxOpeMz/dZBNpY3w1Kx6jIumGHOwo3J+OtMsxh+HBkPvXf8
ggu0OkRn2JopyyBzOUS/FDxT218SUK11JYHwEIUnWPjpBxcMKim70UkFcxqK
hj8motuvO/rmhu/qmBZZm3Io+iuGu/Khl/Jzv0xFKPHju2EZ4zAU2ucM2bIG
71EqEMjPQy3pjL9aWeEDLs1qcdEHlf/VV+ZxJoct6mNPNYPQpOKt9SuxOFZn
cx+En5FR+KsdfQabcuFsu3MdA9g+Lss4cMfgv/4BTJW2g4YagXTZ7j4Jvaoo
Q2Q3tnKuMok+wpsQVlteGPgMaOsAZahRLbdjOLMaRxhqJZ2dhwbUp4MtlZU8
R1pzudqbunARFxgQ7i1/p7C93z0sDAoIjB+H789dCnRKEsc/BahVFCN2iAZj
UyRMVPHevZYKhPuAy9Z55C7+e/vKiqk/9gVF0eMeT6lcWmxVzXiaB0rYbfyC
nzRNpLIdtUlogcQ5Pm9xyXX+MlCDw8I7ZjdbfbcW/93l0XwHTxWprGyWCS8r
Zwcr6eFb3Br/2mhJhf7aVw4z4VH62feEorL/Gav0DSB/2RetwmIqZ/DCRWhJ
eWKIpjIJYR2qmTKu5LKCSD8OryFDPeDv9WIwysrU7pWChKZK7Se4k8yHgbZt
2pasWqjkmvhhZg4kAXsNJ2HSalZEdkF4UsM43HKgruujk00++RWRW7eMZY6P
+fSu8kCCWCW6RttVXCmyGx+fWWqF+U54eVmapK2P5g1L8puZzDArpocyUAqf
VYWj2qU0lSXTX7ccG4ePD4PCa1Y+Y/SAVfhSNnqyeDa3oPsSPRuLd595Cprk
Kos8LNrDdTKGDqKC4ZPoXOIYA6LTn9qlKl+lIiaLWImQDa9U4kpWlum2ks6y
ohlbnFzc8LvWlHdY0WERmOHzA61brOyIDoBGLlxkKIbOf+VZ+YzbAyY5FczY
2nR1gymjHPjpXDO298c8BTz6xOHbeDpYaojN4ztKPZgkkX0jnBwO5nUAvRgx
nEfVBBJHATeQ5O3DdYrfPv1k4tDNrOX5xxri+3/B1E0cvN7vlUIqq9M9YeKx
FlPU2nXqkaA9xs8vhbL4C0DYVNIBcx5JFjNbus88ffV79XXdCovCB+TZ0Xge
zVVPRqC1PILUJBmLQS/TzD9+rDkJQ+5vWCUZqKIXb1tRGWZTfJgPMG3CLclY
IBPaH37bqTUAkjIHY7FkyatmBBX9wijxKLveuWIiVfku7icFfgWQin/xs3wj
4pKJCVVEZe375vzXtcTfCTbtpTzTfeaxHaVpgxjPaLO7TlMzol+mvsXLPzbc
XRD+bwYLnckYZzb4617Bdy872t/pUt/yVRaXroUX5JLW6GBD3AQ93CKn9ksH
aiLpoFnvsiWbnEuJnNjDUj3Z7tNuXwTyFh6AaQYc8NfcCnhWER8YaN2KQ8Ed
WXoDzZt0KNNzVmbUxDcsT+RYNn7lUBM2cWu5spi9POKfcQSGEke+KI3SPBq5
UqG2hVYx6mBrIMFhBlo21IrqWiRDKk4DIw7WsboVVNC+Bx9NtV8rYgydFyvE
HPj2uNWFb2YVcB3f31aMa9lbYiDRA6A6LgOjymrtLngmqzox2J6lbcb8x1YX
qtojDiYAqCski0ASCz5ffNayWiYsuR5zT7NdKop3wHMuhcsGquAYqvBr+25F
U7Tt2FIWTcgjzrV8pXY8R6l9Nq4Fsjy0de7RethRf+MaQPKdXNXE6av+8HSk
TwLCJnXrZ1UM3W++KKWFcgCbNzKGXSce/OxsmzIy6pbh6dT3jNDsx7aXuvQr
qGsKsSqDq4yP/T+XBEfpG1g6kHCWKSjSKkyMqgd2nlAK/8nfgmmdR+5eWdAG
k5FuUv1yYGq45yxDyncZQ0yeB0ZKC6h0TtfJB3uKX/7J/Nrugt/REoALNH7U
anh15z8KOvF+udXsZu75gOtgq2Uz17lrdfmtK5RGYQUc33hyZxnjDBfCoVZo
QW8p7zMIMFX+ysWB+qNWzQezxfLBpjPI/GKnhCUevjiVCqhr88nWuux/u3V5
5dDs72GqcPdez65Jlr7OpTAKvMPj662aT9se2qr95KHofqYNXVZ+yv6fx7N+
AoWDNILtrBGMI1/hgb5/tF46vbHsxaeaeUx8BduHI29kWIJjTM5gtr+VU6vM
kewbcfyZq49sLwXwmX5KC61dcv+mUilxte/2DW2V0C16iemEccGmwArgG5iz
RPZNmGnp7DVvaLfTEJXGsyAxz+6Ehrn5k8poyOtxmhd+qZhv4+pdVXFuBGta
erql+/QTcGltmBfOau4bk4x8f6XqAI4nYHoTqVgjNY+lkeETBSofGa9GSyLg
0YBs3gw8Dq9AbR6QSmb7oVUGsHx7+pfhJwZvXrJff+7oPlcfGg9F6IW3+JSl
7iGR6QP9wHC4kzgV7HyaQju+oXwlq07IWAmWE0dcIm/cCn/zYfBZtVxHOzwu
1MK3GsC0fBfNHmnjr8Cjez2awDFpREtvp/Nk4OFmDMvUd0fyqEqWn3Q/S1QT
Hw0fkKFInyMw4fmMq5pMuJaIBRJo/zCys85qpHoi+UDT50AxDVZZmeYNNd3D
dKfM9hJZ7CwERkAC+FbwdPmZ1vmq9HeKhbOhuMNpNmjP5ATT8HMlEXaq2bMd
q1WeRvq30FFghLtoX3Gwzo+0MA1gDmOlI13bCJ21t2KZBYFDlhTC1H1GQQLN
G/nYijOtdMfl6HHVQRUWizK8lHI+C8PxWnYNE4ClxPROlswGriF7u0wNXpZ0
JGKRGJoGeLizD1SDIXBa0MaP45UeCPlv36uiw61bRbkju1lcCgZo2ayDwt4S
sE4a+A2fAcigxD2qWvIxBJV+bS2LynA0rsE8gdJ3WfIy43yHlfMDLp7LqmQB
cn3n25hRrkljaDztmXe0gfYrnbBqAf3CucOrlZJePFfCdxXvgwP0K8t0OZiZ
GDUuvq6onUcDvwWf29f/Ozoy71gDDaMBkTV/6SoZuDPQde1jx3Kw1D1nn8Hu
4Dh/nNckBt5biqXD2VH1bZUwzuH5OuWesKo6PtmUFpdzG67xnEO1iYM3wPlp
JG/yvDCd4OGrB2u8vBo34hEDZXByfCUXKTohnfB3YODMIkyPShxWzcfYMSXw
47i7XxAQZnCckHu9mGBdDEWzmW+/31PBaNBIpZysqtigBMzfcuWuEw+0ayZv
wWwxl1SdfIs086UoVfoGt+MrL+yrhHhjpHKUiDoHmuf8zVXdmEVO8ySxFT/C
v+PpjVOp96THIXgpIajp89zGbtYLrANTxWiw2LHIiZxbKixLC3+EWcRdPjPc
HpMLsB/q8szu8p5Q+Cu/Ax1+2QxMGEsfZLAcDOsi6xkoy2I2F0mO/0i6cl8Y
Wr89mIynBfQmvpq25ZuxAfhnfEkRqHWrKwWxtFnj0lOCQlsJVxYIWDHclS+x
REZ+qNEPeuTbRnaZxlHCyzapyicOph7WemFCf6UHwbIGGU9X+4d+QPCAqQ+O
NcAWgEQQA+vPg+NZqGYQzRhsAD3gM15LyKJbi5nS2hea7mrNHLrv1HFuByFh
fdFIBSZFdu6oiAObx61etuKvmtazuj2jnDbAYSQz0lPAyOCT0i8Jc7VngSes
0L66pe/m1hVFB5Jlc4AFZUMnjkodougly2XOZtYxORk0BoElqRIhtUslmG+7
PSyEu9eUv5lTC64+saOMNcJcBW0khpw4JjHJ5o28iefYc/b3Uihq3sRE9TrU
XAc2KD+lT6chyqdeo6qL4KGkgWoWYyBwex/fIeU9BZSaHIrSheqWvXqwGljj
MzCc+zeWAhQs1X01nbvhjW3b15yTzhL98unnWli01qlyPOunyeJXuFF0239R
JvXeH9O2B7eUHKjt5CIdm//eC4XAAHmf0aYLbxyqeWqXesoVQB5g845VFfF9
P8N8AMiduXfwASBiUV4Towq4we5guSqWfephLjKoVVxI31nswb4uI09jJLh9
6CYMAff96YJa0OymT6viWdc8tUt1ASJr/82VL7Y8YAhMq/BupPl27gUwOae+
m+vzmLRJkntH/MB1t1s2t8vU0zwsyD3rpDvNc1cMc80i7S8N1HhNc9vieIqx
7TSNRPNEzqyw4qRToYX/8n4VEuWav1hUQ0dosNcIuPKV5ui8KyQqsrqC5xvd
/t+AYq5WHBtQelHtkq68h2kMpgo+QON5jjQJjGWEOw/fAUdKFXdLFnlhTUbG
14J2j03V31/axEsckeyJqldkM2Ee2CyzCFa3Lf8LXDNXu2XcGPBE9g2MHuuC
uZpV09lb/jZ9H2zbJr2phlWAwAGTTwyfC3jkoe+sYgS9MmawMGcCoKr5dJ44
VN+lfePuMytVGXYhVITbsV5wByZMzJPpN2GVVvxGchLPK5Ys4/gDuvh1mKCs
h/5KiNBUWuvSy6BPWO6A+wUZRyFTlztx+7rXxFfTDuzC7/8L7YrAmoJS4+GU
54kZp0tTocEfSmfQBO+MjbQqLXryYio9JH2RIM9iynKmJuxQhsngOwzgc4GV
vfPk4rTvU6yC2l15sDVuxPqCAHsoaUGkfyIdw+xXm5qxGZUx/hMzznqCIfUs
sCk7NvKPBZWwgjEPn3wFv4B4KiM4dF5qV31lqmw1WJeqCZgsSof1SllrlxSV
D2ICIWAWMVvkJ9FQKdOIzoF/wsMxi0UmdjphW9yqjOMV5E2Uz2X3WMKMbVv/
NL0aP3gKtv5U/tts3+hANdbBKvtUaUMpnXDtvELHT+XvYHdYkqZ09PyOihgW
ijXugZeLVXVF1Uw8X/WpnWUWy6cSw7LmySJYn3Srzk/SZvOGGrBKDEhK/8cA
DSbveeJBLLepXrxo2xFfQPB6il6QTF/DZ3wes+hFwTD30nw4/YRx7F2QQCwU
HrTUNg7eoHyoqgVgiOqznH4SD0iy2OMXyhNDMA14vmlzKRiMBihjZSTCvexN
hRm0W6mjKctM98Hkk0AEd+wpeAZvAvayujACIkHdTUJwjboWO3Tr8sprP6yB
bEu7o/gVbb+cefrez8v4CgDI2AK5t6+sUJHrmsXgDwynv2E1EO3ekAVFq06H
sl0sfMLFlkFRHd9cuEjjFQLakaW6eKNf3mlaGVxKSShnnlaF7vJ3uRpzAEvq
Zxl0wXdaHrSdFiWYlLym7ZTGtXbyLskOLxMpInp2Fn20ZJbNqrTV8gWfZyiw
2tJBbd4gXcH23fgL2t7sOsXQ8S1syq/WlnO7+P5rX9pfxUMx0aoX1hdL0/ut
w3W+0/KD51u6jt8Pj4Vs0GwIxmDbDiYShJnJs+x065uWBMH4t6azQemXBFeP
3Ut3+CtTgqePLWM0pD0y3MxT6M5/XBU6Vlb43hQXVH5uUrq+PBd4RU/xy3hn
2vI6/bgT3eHE8ZG+imD54y/wgCSQHtnNmNNZaekkixmKA3Vd8BNVtaj+CObJ
uDHfXLugPD40kT5HcD2Eb4Bf0MlywfKk/GbCqvzCks9A8j8j0waxR9J5gn4i
HKTFTVl2p9sp34kKWs5nLEjJI8E6DGcUiMvcY8WNp2tHAuPlOs3scH2/0cFa
x/CgTpmJMBSOWNARI2lQfFG7VUOqFz9mog3ltj8Ah/dE/q97fVdbpj12CTsI
qxl2k2iuVNzUpMzBlOXvS43Qst4mTCNd9cWsqprAc7Ae08/vIAOTxw5MT/Ax
iQEO1LQPSu2wumt4e0VM8D6m8PUqK65nGg5becqFSprLhttz/VxLKNOGv+1d
w5QAAYbdd/7BqzomVeNa1jUARTsbbUOgmEloBfhYlWN2kohzKmWnynnOornL
OZPL5scKALXhv3ALkJwFooVvpQeUBBc7xPWxjx9aXb8PTzThCkEm6ZTHr05Y
orQPMusdqiyATRbxVw/8VpGyzhM0nieIDYLC0QsrmHKGReF+FvwZYKQLBi+v
wk5xPbgUNgXjxXrcURmnnSqMdfqJZNmb4B4kEAC0fd0VLGTls1fM5ccPRmkM
hNyFVT1poq/2E75b0zXc37TOdto34GtgfUB+ntrqwra+umWM1T0m2QRW8Mlf
rSvHHglsqxcpuKjsTUwVyJMsfZ1r8i3QjG4yHwZaN+MFsLR1aNi6DcRm2oCB
WGGmPbyi3LTs+LrPMRfA5NVb8Z72XnLvpLXt6/+dlAmP35c4dAsuz30bShki
rqlQ8MO3M5Je3YlVz1+BYgFvVx6sOLb7aj7pQkbvSdn1eenT9pYAd0xgxWMf
+3X3mSd9LZhzWhLMdgyiBBKb1nNB5oDvt+DrKeOjZnFs1w9cA/yqpyLHmnoU
JL+unDW+qqBN4Vh5D8EueKY4JjSbiYGp9VD2iXQNdC7lsABnKIkNejnsqdSR
6LSCNf5ijvEQeXB42bilWCipTMdzGbrud66Q8hJLXiGCS23+r3EXT0rsyXO4
Y0HRrnGLsqZ5l8UBJ+rSkav71Mak5Jnd5apHYyHiEAy1JHkuvLsbJmbfBkbE
0tMQEX7zXwKr/dVnwTnOsSWePJYIwremDI39bNGTZYKO+OlVuJHCFku1Dviq
E9RUVRe/WjpUyRNzJtJR8VY4IB4UK5QmyUgk+AyzVKfY5ycVadBncftjMVc8
yBi6qcsd2n7dy6WhlYjtnNkkVaXkLDEiS5qzCCsvzB0YMr+FHdHWyS8YrK/p
HmYtgNguSFhmMcNjdpG6npETLUl3KFJpegPVu6sSX5TCzMs9z0v1HCM7cTmh
muAwS76qcwhPHxxm2GUm7ChWcch1n3o1WBUpMLDiAwCFNpnTT4dLgSQsTG1x
W9UY4J1uShradKF1KYu1hpngIEP5VEuxcp4VN9nDn5QJPlgL8eYiwAvzmWEH
jQ29T2bV6LHyPotIB4XdpwXIdZ/iN70qtdhclT43qz3QvFE3tWKd1V1+BHDx
ub2VKs4S2bUCEDaBaNYsNiLSP+4iJyqXaVp5YPusvRWYVMDBzk/3DrZngd5A
LgMFgPdWzqXZ2CBgzUT+PwDrYJsKPz7WoKiYsrcwGYyD7tK8EYYmH6en0E9t
gBRP4uN31+6DT/KmDovrlg20bNJBav1ygJExBFVAMOfPwBpDITwve5MvKlc9
nks3vQaBqpa3bsN88OhpMOjqThyexUNbSyQt2LjWhKkVJm3ny8qiYo1I9q19
D72zsGdJLrdv+Pd8pevEbwDzVGRL7p3OXfvrlgOYYCzMNrbn6tkHqgH/eUcb
uAtoz6VotqH3U1ZaSIEr2sjK+gmu06sHa2J7fyRgzH8caNWGW+vWOYdqO4/c
rf2rwmdZjzxlRoAHDbzHdl6JuQHJaS0GEY6dOHwbA4ulowuS1c17+LYVlbDl
rWVRGnD7qgoeE0+EQTvS2FOtFMutPM00GqSyIbyA43WLq5W3fvb39KiveiGu
BIaJXnsCPjB+06dVXe9cwQWPNSUBdoYd5455YjuWm5/PqjzZ0ovlxSg7S2S9
cMdgjSspqW4pz0VZjW3bpRl+9ves1kTOLVyfm/KAGAHoCkge33dt79gFj1Dy
bQewneUpr/lrxEN40WDmAP3VfqmF9NN4RjK8q/Bt4Ojbv1QFo24Z3WRu99Us
UvXSWA744HvU9A5QYrjkrw03m/BCs9Gtxu0mGzWRjr2BjSuNtOWLj22Z15jc
NOj6wbEG1p1i4y9c9L7TnRf3VymLtitvKHFUg9m+h+8qtHJoAvoHZ7BD6s+Z
9qx61dcbqAEkv9lafdeReftwHRPJk2eZqB75byFqewHVvvFJnKZ15yKSXrSc
Td4XBx6sBckhISpMWfcpji3t7DxyFx4irroUn+qXW7bCMcaK6yfL3gYN8PUM
c/YwzVSoq6/cauhIEWXkgmjY3WvKmfZQQRW/LnvLVItfoMt4oIcbuiGfh+q7
bv60KqUJ37hWKoXDzfjUlmC7WxUhtY+qODpYkzSaGtdqw7Ny3pycWveUWaTc
F2OBgcbWgI2HrR4KsMONaAmYANLa7scuKCVd5tEzOJA3H7Fg/GO7r8JXbVv+
v+N94whbcuL7LR9dweRncdFTUBRn+dm9FbRccYZ1n5rSeJ4yBxtWaYs4+8Z7
LR9BsRP7f8FX3smt6zn7zFD8sJTuYjlD0Wxsk/JhO0+I5p38LbcYN7EUeuHp
Uf5iybAAfzS3DjxhCQMy0Z3fn3u04aonI4nDt4MqdId23rq8kvFPls55YmdZ
vylBsZyZnF6YjKe5NL+Fu9AGHkSyeLbysEwQFROMD8LSMw3DMiDiQG2XuYfV
IFJJbACDEgRt+jxMjmUeuPBMuZcrLDEaXttlU0lHd8Ez8ayfci/ABCCCwRbH
BtZaugFLzIq2L/VNezlf7Xu4o+ZMT+GuyjgmQ3ZwLHX2J6jpKQxYfcZy4Gla
6Yo1Kqdih/vS2av7FEeMR7Cn2sUBWljm8FXAH9MzZixXA24Ihged09Dtmi1e
+f2yq+9bbt6KGg3WStik87ghwznfnaYvQD0P3eeb9mynJ7VZFERm5MnXvS5t
HqYpjdOVmXunX9eRf/YVXGHmPva/EMdWKMLEpF+5Z3po/dT0XIxwMwI1reCT
2iSZvDhuwerBIPsJ76VrmuXiA6565BuwXm5sIiSa5FtSvgE+kc4+cweHR2yO
QFxxCyZ9kDF03/7FijAJa20Re9W2Cat3E2wL60giLcg5ZSG1wX64SY/GTQtC
Uf1nbCvez6AbTQdjIp2cywz3ajIKfrYdFVg38AvldnUjxRDaZqMg/fykahH2
apPBmyS7yYh1nRqzAAx6rXo0aQVvK6GYZwHzrd59YV08VxWRhnSQRAO4I8bU
QjXku3nRSX6xWi0qU6jStHXLQFTViR6LWxhPu9cTVHWYwTp+tpXHVKO5rwyc
n7CU5DWFEe14Y316S02M6IzKcvWcLWzvN7co38D2ZF6LrhZwbJBcJ6rRA1w5
ZR8juwAo35KSOIaK15cvO90CNXr/qPadoF4Mr0pCdOeDeBIHUJmYfVYqYh0N
7il+GXNPX7gOfE9FkGuXAKcA4KKTTYqKzH9s2ZlWyRsmixQ42nWKFqZibJKS
TcB29xS9pMCSWM7uKskWAcsPqVDjDkVajn4JB3tgc4mZGNEbHARFvNQtxxdo
NLUofjCIXOF3Vk4LAJTeQtcpOuJTGgOBlTdJwM+hzWvOaf/KaTxI3mh12YKh
YMInsm+C8rn2ES3BDGH+us88DRPAAs6xMMjcxp6uvIc6c+/g0dBx8J8+wjGG
u/LtjODF3vJ3XDV3ymIgf7awlnd8E77n7CwaAz3rPHoPj5IH0X36Sdh+z7nn
UvsnrVsZGUjvHZ/Js7hZ6f9zsO/YNdi4JM37Kg7Ve8Tj6zAEjLXsftVCLguv
oJFF0QHRrSFlIvRWLZhKh1X4amr99H+9dYWKbamwy6GbLf3tDewjpP2RbSXM
NE9Xj+/7WWzvj+lmeXxQdW1WV+DNaeuvYz8PC+7HvIWNcHfHnEaLtgrWOGTD
HJCbu089CgeYtUfdwQ5akbWVn5k2Ow1g9rrd9zixQKhfaNZ5MsjSmrocjDOk
qi5X3yW5GGezg3VY8PDZ2XfCpX/2NTz9DDHjFsGfMvA5CIELPiPyaTDuOs/B
n4LakVNBctnkHwImwHVSWcZjicF0scJB2/Tu9IxjhU02+26Ytiku/P/tndlz
VVd2xuP3VP6CPKSSqvwJeWjH7U5XteN0B7fHeKYNTcptPBvTnu1AHINxt2ls
DB5kBmNmECAQgwAhISwEmqerebq693KlKwlJSCJW26X8vrXuPTqS6IrtTt7O
LpVKusM+++yz97eGvda3vnGnDX+H0yh+wMy4sM6FJnblXB+zvqywLJ4J5VBP
5dK+MpNfm/Ij3ZVRedFJd+Y41IOWY+lydxM5dQ/7kSVnjEZxRBIIzINGwbAI
qAZz48t+GR+s9Mvl2F2UlQzg8G8il+U9k03WqLaDzqxbD7WZaRHV82ir8qEk
EMUmxyCd/0GAb2XBRcvTm49Ko7qE3fs7LBVak993VFEovYfABKf0YQufVi0D
0W6DElyFYZ9uH3CPDZc2JpmYe5bcVcUV9aLx7Kke8UCFc7NgU29QpZuKka69
aLZGcIfivWPCiolsNMyvtKyfVSeb7Xir0biGiora0qjcmfp1F3qGdlSJa0hs
t03rzb+xU2z5V84rlzn2kdUcOaCyaMkzTuMMmKvupIqrJoyDWpk4VvqnstpK
mQDX5v1+Em0ZC5dvMbb0heXbL6v4L7f2fkn7yoKGpburrH7BXq5rpBw7ATFF
LyTPIEfAGQDWIxJHunaZcV35dlGLP0ErcLAa0YA45nJscMajc4SB8j01UiMB
ScmdtjwmGfGq2jSnH3SOOKwPjDisBgCN+eG6XocX2QHIgGaIv2ThIoypl442
KKs6UyWylwvLkRF+Ms4AluxS9QHxt7R9/sj2GqStnA/DdWApYgu05I6AL4Ve
D5R73CMz4zjvAX6KwyxZyuA96J2VxlzJCmh8/7Gd1RYrPgyWet0cPgyAY7/w
mysu3lHtOy7gofX07VTR/cgscBig5uoYaMpVvPgcWgTPF+UfYAdvwXZW42uF
TSA8C2ap6L7z+ENBU2JxqU4U3Ob7VFSEyTMBTHmsi+zWyleK5f1bkzx+B3YE
FgSC8s0TTQomPHGX+/BvWZnjPRvLkTOMi7YFJWrWJx8CN29YuHSC+FDst/Ak
6UVzsniSU6X+Dxvb04kO6NlVxyxL50Q2TXXGTidHclUOczp2PEhWzWLLaCuv
yAtnrhJHlTGZVJXu9PZTVD8pEJ2asUakxq+L60lsbO3KNLRsaE9NdcVMRdXR
MK/FPVk1kClGmH+DhPfv3gBAcUFcOc+eOm3BHuiicmtMTXtovQOdc1iJzGHg
olJpJvq5HVU/t6gG1WdMnkGj4F3xeU5/k62uOCruLNVU6itQ1vBYp7ymRuCG
vppX0WM+3ossFeWEjrZ7dUJAj58jTUlsYRYbCG85j32CF+VxbDT6qX1SmLMY
XkFXY+kLcnqbdaNChJ07LRalBN1DHG7pCyAeUCPvxOTX2QCSqy06N69dPZY8
C1xbecS9LLz+0esMQ1q3HClydNsUlSIF0K6BTccf+ke1AB/o1lzNL/HdFUas
vadWoQ5ADTqeTgxjm0BLoxYvYX7QVMGN94zQGwwEOhT7wTAscWb5gRqGV9CU
euVYI9CBygqIyX3RmgdAoUmChHwRBLOgizLPhr5S/CvAUFEol15UQRbjbUOy
ONUM2qzKgV18HiwF2bgvxoYOADhoGE3rEZegh0jbTtzpjPdiAWVrFy4S4dXl
laq/Wf0m4ABmAg6e67TqVEwuoJKlDNhCSracbElvF/314XXFKh3uToaq/qu+
2Dz2426rY7vog0bUfkADxVVk+GVPIB/p80rxYw9trVVgTGyzCgFffil56l6+
+NCWWnGeFy4CuFab8+2BvFrud/l+zSSfRPdGNADRzC33DuDUSELt4VkEwp1H
xnze+3E9HXLRX6xv6tnyN3TSf/AfVdFss0Zy23vNiXduAjCNy3SxwvKr3xqo
eEGx8TurweHE0Z9zCV6R4h3bxB6Mpcc92IPnwrpCqrJmMvXviozrv//o1avF
eN+50+chgC8uzWQimHq3/z1jvu+TusSRn/EoGcDNr7UzVNbtuuI2D5XhHr3a
Jt1ixSSO/Vwuu5FGbATlL8SPsRS9W8X+XZ8O9jiXxlxilpgfloRSDMqfZVa5
ix//Zyur7nx3Zs2ZFnpDWCOyAyUtcGgg1CZCOZgLQcY3PmPwRGk/8PJj2Znv
EyX43Vu4/tc8B8jMXE6G8ADC/FH+SSf3u6GWHmjvkzlahkAnnArIdhbwLwUl
HbOkoFlGzT50AHCMyRexTOdOHhkdesWueT8zyrIvuhaqdzZvwm9wX3OpJ2Zu
5Gwx5Twe7nNO9eHp2Zlk/SAIhqcCF1DSQ+MUZGL0oYhLcSda3F1A8OJ2Svgp
5CR+z7wbWXhHSAqVdzE8n+VcskhIn+eAJre0K1Oo4DdluFjZzVib0WX7USyW
NRCt7NSpae0CMVHvjo9O1SZGgVYfzGDOh+b+Kw80CgacK08/5/ydlYw8Qg3w
QEdlAw03IMV8clSexhw+nls00r2XW1BtskxVnR1ivnG8CRPbAuZPeGUTIDc7
mRZcCvwai5RiAIzZVWaLbIGxzoCxLWsS2lu+GZVq2nNA3uPhBosOklX+mdVE
wxoyyXhJcX3lzyJesTV0aFj+jMUlfoq05fOME/USKYbYQs1jZT4u2sN8AFw0
v8bGgBwUgcO1Pt5lPHFLcxCt94gqAZnC08zD80csqLy0wuhGt++2IheivG7Z
nK1BgwQfEv+zIz8y12teMB40hOTJewD2t4t0TAMKoWmjV3xY1rFWB7L1TNeG
8x1NKrJ8fMpyx+QEax8c6fjCmJfyvdi0x0BKDla8wFJ5TAeUez8u78KQYWAH
62W75TTwt7jEYOWrP3u32dFek5AqRnPO6tvNHzBjZd0ZlO0g3FEnxe3bMnXv
gHhDjeuN/bUMTZsN6+GOfN0LgnALILYIGBt/xzBUcqj3kDwqlkCaPHG39Ie6
NfSG1oGyjQAS0ZN5wgcurXz6YC3Ci2nxYFHEPU+ZhwVW80ri6O3yhxQuUvoS
gs94RdC60bdHE6dXFkjAodR9Ut69qybOjkCemqYd96pkM1aYDCHC/COvv6js
VRzOxedTxYuV+SWHyS6nmzB9u9fZFP/M5vHYub/7Z3F1AXFQGNmE89OzaZiT
TlpoLus51d5zzGlTOT+2K95BKiU7OiDVCQqCe8lFdyZM5aKRxbhlfmyeJtuK
HTovVuT7Nk+w9dEGZGjh0crtHGJvDvhzTP2utrI7sp6M96zMCOVaco7ihKMB
ryhz2TrPRgaOKaHYqFc6kuaxZAd5hSylfAp2UKcr2dTZAgHmEfLQdHm/h+sV
LTnR7yRv4m1OFRujTjZrlWWmkpE9+XRuLC6daaNJaTWE5AP2dQ0PMGGRM5OK
U239DG0QfZsHhCrCMDyJnlXKMLgLtFN5rYeqPTYV3f7Lqj42DlubGVOuE6a0
K/8WK4Xd4YeGxmXXDTikVPmrjd3x8rEGcxfLm6F6N72H2c5eqYod7STSIjFu
2qA4w8FLbEbVZ0ycZuOgdqKBA1DyY7dtAUO4lw3G3AKMo9IDL2wcFHsv6Mz2
FCpefA74RcQzsUw+RgG34ERzx2NXeCgrj9QDTSJv6Tsimt+uPV4UBhBDIe+1
o3AV/N1W4yen2O8owwAR92LO8MvsZWz2ZXvkGOGJ+EEwT40h+UaQJlz2hMIg
O3emzj7CmFFKzXz4dO2ZVh7QH0rb0QMZBsDF1ZMn700U3M78MPinDtagfyqN
qHQZDwUAB0nOdgzSFYNEYwToHrMKwpn6tUwmE6Wo6cqXQXjWj1dwWLyjWun8
la8wRbf/vil9/nFugclkVPL/l/xazLclS9He+Ze5Yn547slT9yWO/QJ0veOD
RhUFNgLq5PE7Mg3vVfaPsEq5UzGtqeL5MpW+rVujio3nlox07ABaVVp08JKo
d6vfnJmb6pIq+jfwvOujvwI2f7mxAdhXFPfrf8EkJxXiuFvem22K7u4/eAvW
B2jM9ALUyNYXDssDw1SwnOSWadqgWBFb/xjmTenZWBHUg7etwD0fcCiO7/8R
t6YA8tJlLCEv6AnMDla9ljhym53EfeuOa3ePsHT9LGnmT8SKMFSeHeCMPagw
tmt9jIFXXKednP5+hv93aWFy15kcJoc97fPeDV6f7cHe8gq2C9+ap7ffUAmf
mWs+hGXEzFz2Nn6MpGsNS2u4fatidO243GPwFs6n6KlDB/foM+HrBhrXPFa0
G+rY4XsPdOzsv+Nd4X9n+zdLIVy/QCbD5NeB9muB7nGnsvfUGPeltxkVW3B1
167Na5SYV0sirN7rk2MdQS6S0wgEE+7DCPg8Xd2SlnX9j1mGfDuicmGqo0DP
fzGbCJVYQQLyincZx0udAiNzyTgKX5R+WxGUJ+BjetESo2yfdvgnz0rHTnlt
RyfqR1S5g93rPHrykSfEyZs00e8EAk7bDlb3KmS93uL0RMmlwig9B+mNTlRK
tfUzaeOWM8K/TobA3kceobw5U6tzfZRajpIvG8QTOPBldR+33IXYHKplVCLb
z1TVZiXUZTBQvJ3YR1fK0JQwpcdSJUg3tqTZ/t3Iuz0iLdkdt3rNQJbA3PLW
GYyHlK8rbqUHL4fHINdaIhXyiEswXZ5RxQRi13iB3ePmBFMhucsvmZd7C2oM
y0BesqFa7Mp1qJf1a+nNzyLBMe5L57l9R4ra0mA7wnS9JT0Bd0CTFezb8qgV
jkH5Z6iAM/c41LzRxMdnq04265A3dc6r9WUafodGzSQvERfZgV3i4SkE8w+Y
jp2+sDx15uEdVX3K049tshPJdvam9wmSD1Q8D1qeNtJXRi52lNhHvrABTMWf
n3lo++VeD5vnu8iyDyTL1o8P1zk7wW/2Kcl3xeF6z6NBZMgQ6DuimKjPaxmw
s5sCwlhSXBSN97lDdSwVP1TqP/RPvVv/FtNs+YGanry/XmY5Oyz7h7fqCDh5
4s7+Qz9FYvbn/3iFhOOzSAFukwlMnX6ABWMnCA/aQz9v1RxqkUq+fUZzlXlv
fbslUfDPtz6lU2+eMiIe8YdkuXtTfX6DksuCwHWdbS3I1v8BLahyFfyEkWfe
i2E0C6DJ3wqCumd7XsCREu4n3NvMjYAxeH2eCEDZ4LlgNTP/dsaRBfDU2zex
DpHFk8YG5h/GREJlevVYoztgeaxuhM7MlQuBqyEssOaNf+Ef4ZlZeF/zpFXw
mRvVoPkmLBnDomfhU1g47HmXmMrlad5QSga/wRmH0z9Rg6ZPssaQdsqCOd3S
AdgD70f46gsHtnDNTNlZbSBHJnLmVVYbCfma2N1gslsZTcasYrKgz5lnMmKA
iQnz2UqpcwGrg8bpyZU5V8xU9kw8Fgis2RFOzI6w15jK7EK5+CVjv1HFMduY
so/Yy937uXfWuegEu/dpAFahw49fy3uGnc/K7ZqDaFwjjexxCYu+o3E7O2gz
kkzPI5u0wAZ3lIUXjE/FaPwol3AOcOwg/u4YmhATl/FpKyxhoh/ZzYLfarWA
h1s+abSyMryFSiwe0f4TyAIEB7gN8pT3DDl08Chl4o13e0yF57IxJI93Co6K
fAkpHrV9W8/IpPwwwxLTqtNhXGGM5PF91UAo9o6Ia9q3m+dkt+rRxzbF0uOr
T8Wes5z3cmFsAdB9qDEJvGca1qkCUfyYZ41xF0bx3SEOonghU+c6w7P5yJ0C
FP6Rji9BUSO/2qfiX+MqsqzYm3OP7a3tf9ToyMD5B/KUcMrlnsmvtbr21Qx1
qPlDZqMhNSaOi/p3ze1zeNKydFGTPinvTpc/wyyly36jM462PAC8d9vf/bag
AaEGwosK4OyjGIwK3Tn6L5gbKuWWOofJhsRh2meMf4D7tdpqx5In78EAwfhC
AjKGnziYP6nKxQqqqXoNJGck4XyfH9BYFTLkbbU4b6qv0uxqN9fExEQ8KEfu
rzPPwcmj/5ZhezUmglyj+8vuWav35zkpk7mihMYTck4nj9NyNTAhZte3Bkqm
uNmH6zzVcdL5fificpUYmIQv+uc0Bnauc9BHYqWXpHKg+YzYyaM+MFQHTHkx
RB92UING5Y0yVTLhRUFc+nF5F3qX6lwoM/2UdEIL/CvtzKAPFNguVu7PcANz
K8u65WNP3omZPjNpRd6xKFEaMdstC+w/dPJ4TUm+/EY8XRtuHKxZbfndX6r+
oEUhsmY+97LaTkc2mcQ0pit5A9JfIcvoEPXAPNInndTFOpT3iQ1l1HbHeF62
HfZut0g25VSOtn16UXUGlUGTqaYTP9b0izIzWOuDlS8jMYEFxo9Y5FvqpOfA
F5VCVNZ/+sKTHsOGzsYk6DT2akxk5qfuQ+tjSaOJYdF7soy7AjJ175RZihAq
5cClF9lH+Q0qYGHBZrvBBLncFSb9PrqfXENGS6WsPamCL7Jbf/mh6jexnc93
Z9JfPT1QsQKYunNjw8DF51HGVOelfSu3xqNRAn68EAxBcj28reb+vLoHpbN9
yr5edap5OLb5Aatc83R+LePPq+hmo1ks9B+W7qrih9GyMRd/UaO76znIrAK/
LBUUYObkLauaMWnR477YMO3RLro2/iXK3j2b61kwKB5dv78JxLtS/CtGgqbH
dVXHMF0mr3LnTnl9v6xOFi5Sud7ufXw+UXA7n+ThgjMHFdCYZ4VvTn5YphxJ
44pfwlRMWkitRa3Pkr7yKFFEmfBHttXIP1B4R3/+raAryiE6s3ApUQRSAXr8
AajyiOkEwBSXbOm/y81S8YIi1WtW8YxQbrOZsNNyWrJoMQcM+ZW7wSQUtQ2E
1Yyx3DwELVP3XyjVg9VvMC0IhSU7FcqilV/5KmMzloYOub4tm4l7NFnTzthQ
1FlUvg2DEyLPTF/YGKTOPTt2qJaTVcTwRA/+BdiBrIwhz6QFRdDzwh7+V5xR
Ka6xrolQ7NxMyC3w/9HGQzV2F/4RNsDD/wYFcIO3vB7HVM7VEHw+qP0x28m8
k8ecZhW+hKle3wYjnAn0SUuiZClioCnWdG5I9sLm2dxBm2MCWDyhq16znOq5
Y9CZmdm6irnPJ4JOAt+7aYZ9xiefjdwOAgWnrBrmtautgyEHuK2uWhdqLhxR
23TaJcur1APaU2PX2YAeJO/Ggkd0g41aYMYwH4zQ+PQSwUGwx11bXny/FS78
1pCtP6ghGLC+YIb7ySNAKu/ESHP25NGULgZZLddEicLpVUu0hEUekLCdN156
cfqN93AJrBiErAW9ZJk6mizTrdV8F1NBHuj0N2yWodjGOkvAPC/Q+9Dq2x7n
XZBT+ZKj7Venpq/2HVXFsa7dibHrfsoGCDC8dy3nnd48/Qf5NSXm2xYbXuHV
3vzl+2tUi7yyd1S158xRPzTxlBF3o1Dp4CBT1WT6IQqVhmH8sfvrEhYl8q6c
+akS0Zsnz2RqVzuROOsTjdfY/1YARAyspHMwXf60fCAd21mEru0Pt2xGBgGY
igJKq1qil/f1J4V+BeSCtEyajsCMZQuZovPEti0IdM9UBUKdGAFcldUPXqmu
1lqkUqbhPUBGDyV5FjgdTZw+1nwF2SFfR89B7xN1GkTSdfsKkBpvHG9iTTpa
Jk/c1X/4p9wm343v/QeL01jGzeqLvYd/vacqvv9HIvooXswE5lX0gMnjX3+T
OvNQ8uTdWPpomMhWoBJpS1f0w0yOXSkDS5E14nj56qmxZLFLjfT5x/OVBVzj
UsPoZ9cEm90XKmI0Ufivt6xuHax6PXHkNqZu4PJvb36zzdlakLPoHukLTyBB
7vukDoEiFtbKlxEZHk9In4obbP20THxZG0F7xxzWSZjLQsfBDe89aIRXPN/7
P6u7a1M99sjV1xUHDpKzDFTCz8gDFSJosWrGfVfKgxORRaLID4Am5/o8g8Yk
M4wVR+pvfqsNjY1lzHeRoQBU2LaNWtSiFrWoRS1qUYta1KIWtahFLWpRi1rU
oha1qEUtalGLWtSiFrWoRS1qUYta1KIWtahFLWpRi1rUoha1qEUtalGLWtSi
FrT/AYd7sWE=
           "], {{0, 485}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Left eigenvectors\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{522.5, 
           FormBox["1", TraditionalForm]}, {418.5, 
           FormBox["105", TraditionalForm]}, {313.5, 
           FormBox["210", TraditionalForm]}, {209.5, 
           FormBox["314", TraditionalForm]}, {104.5, 
           FormBox["419", TraditionalForm]}, {0.5, 
           FormBox["523", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {104.5, 
           FormBox["105", TraditionalForm]}, {209.5, 
           FormBox["210", TraditionalForm]}, {313.5, 
           FormBox["314", TraditionalForm]}, {418.5, 
           FormBox["419", TraditionalForm]}, {522.5, 
           FormBox["523", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 523.}, {0., 523.}}], 
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1WXlcDGoXHiIuukZFljCyZblUKLI9KVS2KUVpm/a9pmapppmaokJJtpKo
katCGIpEMYRQtLhEXQzhKkuprInP9+tMf9TvdOa8z/u873nPNhM8Qm29+zIY
jMG/f/3/b+9P+9LBBd+uDnRJXUz/AHfsVqcq/emLesWB2JR7s1jP0plkJuot
vUYfMHu3sFfWRqKO4qvV6nKyH4lk0497NEankV4X49deX/gf/wDJLCwJd6jY
a9JGsh7Mn1vOO93XgNafhPezVulL7DaTfgrE20UpFfqOJOtDw2rMCJOp9vT5
6XhRa8H3WxRG8kx87SdxmGkQQp+fBYuPbQNL3geQbICyxntNpd98SDZEkT6z
qlIjkmQjLOwp+ZB8IorkOfBb4j5S5+QvkueioO7maIs/+hHePOyrLFOWag9b
0isb47nCKPvU4tv0eRM8VvviOXFULsnzkVzHfjNfbk32C7C98nbjgjWq9UxR
pT5KZ3FeJZ3nQqT4vb2e8PwkyYugurfev4uh3FmxTCNzLtkvQWnSruCEEVcI
byn85Zv5+dM/kgzkHOSWvix+1StLgadd1Y53K7ikN8PgtZ8YO6K3kt4ML/kT
b8+0zST9MuSdMxtxq0LQiyddhsM97af/1eST3hwpxw3jn9aEkb05xGdy+9gH
/EN6C5wscbx75d1J0lsgbKTJta8JxrT/5RgQ+bFiueFj0i/HqX3yPejqQ+e7
AnOe3TdI9DhP+hU48d+IzxU782j9lSj+dVK6u2826Vci486gbSe0d5PeEjVH
5t/4r1OT9m+JA+u5WkeKM0hvBcXBkNNb2hPI3gpHcjVCdv6dT3prSGL1c/+Y
QutJrfHrc0Zuar9HpF/127/ytAzmFZB+FXyF5YffZ7gTv9V41dU0ITH1COlX
49dfM882Z28h+zVQRHXzLtTHk34NzjMnv81sKSL9WlzOajF++6mL9Gthnzzt
rp1JMunXYU3Yo5t7HqWSfh1Yz263GB2Vk54Nc83l4/KPJfbKYIP1xdblyDha
X8qGCD/8pPdoPQUbRQUDHCLKyV8YNvh8P35RjxXdD2xw7hfWdGjQ+UltII3I
Ceyj40X2NtBZO/mP6YFfyd4Wfbc8zs2e40n2tiiYrWPzTV2L7sMWwuIDzPO2
CrK3hf8z3vpByfvIfj22HFZc0rtgS/br8bineOWp8xpkvx6N72dtcDQOJPv1
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
FCaBv07oO5N/K0KRaHe0TmglJfxQ5Dt4HyvspHqWwcXehcrgzvXFvTKTC373
wY9j35F/sbjQ7Whx9XpE9gZcGDEKT+Zm0X2Ai8lJgbMnzKX3xubC1rvj9PJp
ZrRfLt43NNRuraN4zf1tf3D9sa/eqvjxe/3zy113ZtF7SePC8WXc9D09lG9l
XPTbbeVxZwPVP3Iu9PtsGLzzD7oPBRfnnOeKb+dQP1LLRfPWrmibedQvKbnQ
XD3EcjWP/KWdi+Pn/Q7+YU/nxwiD5vmMXHYp9TfMMDzbL7k99D7lH1YYtLQO
SbqsPIh/GOa59z+8tusl8Q+DmjHPYt1E6gfZYRievm37+iay54RhjKWsYZ46
xVtuGILjF0S9W7eX+IfBN/XVp68T6T2khcE0oP5F01HCk4XBsbLb9++DxFce
BkM+o6biAvFThEHWLcxL3OvX60+1YXikk/XnHucdxD8M5+K251m+Ifz2MEhD
MhonPqB6hxGO3f9us0iaS+szw8HIrtesWUH1DSscS8vari7Kcib+4UjpWndp
E+8m8Q/HsJYoDb0bFD/Z4XhyJt1axKJ6lxOOUJ/Sjhcak4h/OAbo6d4NGqyq
H8IRZ/oo22qRdu/+08IRqKt0/JqnqqfC0XSebVpqRf23PBxf/RU/OjbReSnC
kfpFZ0PhP1Rv14YjWRmTOCislviHQ1P9nvjVBLrf9nC0Thnflf7hCfHnYZ7b
qGSd/TQfYfLgq3cvWDqQ4juLB6/JRmeMMlYQfx76/XjvpH9mBPULPJhmbNcc
O4n8mc2Du9roLJciwuPw4Pj2R+yTgdQfcHmQF90olPZNIv48bO3ku2alNdD9
82AmX8gftlqVz3hoLi5WD88f2Isn5+G1fFfzr4NUnyt4SBlr2vTdVpv48xCv
/ro2qC/lCyUPM8WHbWvO0nm28/Ci9Xmrp1g1X+LDx907/dMh0jP5sJ25bVfE
cfJnFh+R+/UUCc/mEX8+5L46iy970nwDfDR7NBy5nkv9AJsP44eN34+V0Hvj
8PHOfs4O21HUf3P5mLKoJadnXjvx5+PiwxL7RGfyrzQ+oh+Ztc04uIn48zFk
768Bl75Q/ynn48sX4Y5AAdU/Cj6S/Mfl+k6geFXLh8npfJf4LKpnlHz0bbj1
T91weo/tfFx3fHbr4h3qFxkCnPkjZ92xZXQ/TAHKAuUpFzopPrAEyPWTf1hr
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
2UGKM5OD5tkvurPwf8bc65c=
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
          AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["P", "i"], TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Steady distribution\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {{{1, 
           FormBox["1", TraditionalForm]}, {105, 
           FormBox["105", TraditionalForm]}, {210, 
           FormBox["210", TraditionalForm]}, {314, 
           FormBox["314", TraditionalForm]}, {419, 
           FormBox["419", TraditionalForm]}, {523, 
           FormBox["523", TraditionalForm]}}, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 25}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 523.}, {0, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026062551729*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"a7f91f43-582e-4ea3-abec-12d80be5ae62"],

Cell[BoxData["\<\"plots/example.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026062894717*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"f1f93fe4-6cdc-4a56-8992-09de161a17b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6", " ", 
    RowBox[{"(", 
     TagBox[
      RowBox[{
       SubscriptBox["\<\"O\"\>", "1"], 
       SubscriptBox["\<\"H\"\>", "2"]}],
      DisplayForm], ")"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      TagBox[
       SubscriptBox["\<\"H\"\>", "2"],
       DisplayForm], ")"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}], "+", 
    TagBox[
     SubscriptBox["\<\"O\"\>", "2"],
     DisplayForm]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "1"],
     DisplayForm], "+", 
    TagBox[
     RowBox[{
      SubscriptBox["\<\"O\"\>", "1"], 
      SubscriptBox["\<\"H\"\>", "1"]}],
     DisplayForm], "+", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "2"],
     DisplayForm], "+", 
    TagBox[
     SubscriptBox["\<\"O\"\>", "1"],
     DisplayForm], "+", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    TagBox[
     SubscriptBox["\<\"H\"\>", "2"],
     DisplayForm], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "1"]}],
       DisplayForm], ")"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026062897047*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"66f7da42-fff2-4cc2-8009-26287b91604c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1500.`", ",", "1500.`", ",", "1500.`", ",", "1500.`", ",", "1500.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026062900733*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"75d65de4-35de-4793-ac0b-0d76f284f530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9, 
   3.768756832892391*^9, 3.7687574296069736`*^9, 3.7691841918238153`*^9, 
   3.769184523097341*^9, {3.769186503577681*^9, 3.769186508905414*^9}, 
   3.7691901752399406`*^9, 3.769192059751072*^9, 3.769194248188353*^9, {
   3.769252407820739*^9, 3.769252436764079*^9}, 3.7692600388506937`*^9, 
   3.769260702932487*^9, 3.769260767238983*^9, {3.7692735630710793`*^9, 
   3.769273565845196*^9}, 3.769274806797653*^9, 3.7692768929890003`*^9, 
   3.769277213104787*^9, 3.7698618963802023`*^9, 3.7698621766639757`*^9, 
   3.7698623049941893`*^9, 3.7698623633895187`*^9, 3.76986258071555*^9, {
   3.769862616539352*^9, 3.769862641542247*^9}, 3.769862799078601*^9, 
   3.7698632956711617`*^9, 3.7698635293839827`*^9, 3.769863632751523*^9, 
   3.769863696893968*^9, {3.769863775401814*^9, 3.769863788272069*^9}, 
   3.769863886735591*^9, {3.769863945153203*^9, 3.769863968975011*^9}, 
   3.769865459664406*^9, 3.769865605999967*^9, 3.769876899146102*^9, {
   3.769879053378628*^9, 3.769879060217395*^9}, 3.76987910390924*^9, 
   3.7698800735391808`*^9, 3.76988028334269*^9, {3.7698804470026207`*^9, 
   3.769880462887238*^9}, {3.769880508451845*^9, 3.7698805384064913`*^9}, 
   3.777118804896386*^9, 3.777118847964774*^9, 3.777118965193852*^9, 
   3.777119211491653*^9, 3.777121572478427*^9, 3.777121665145686*^9, 
   3.777122206423203*^9, 3.7771327614032927`*^9, 3.777133970132495*^9, 
   3.777136851835554*^9, 3.777136990725556*^9, 3.77713704848143*^9, 
   3.7771372374142513`*^9, {3.777137402546033*^9, 3.777137415070888*^9}, {
   3.777137874511747*^9, 3.777137895002378*^9}, 3.777203687855483*^9, 
   3.777204841142975*^9, 3.777205799645072*^9, 3.777206201928589*^9, 
   3.7773019610789957`*^9, 3.777315135291142*^9, 3.777335606521514*^9, 
   3.7773758150621653`*^9, 3.777376263693839*^9, 3.777381317514081*^9, 
   3.777381417611382*^9, 3.7773821919320517`*^9, 3.777382653839967*^9, 
   3.777394313693439*^9, 3.777396289703017*^9, 3.777397830824548*^9, 
   3.777397988055641*^9, 3.777399706868784*^9, {3.777400120191785*^9, 
   3.777400149719611*^9}, {3.777400195341308*^9, 3.7774002682990713`*^9}, 
   3.77740041959167*^9, {3.777919197565349*^9, 3.777919256488391*^9}, {
   3.777919322775941*^9, 3.7779193300290947`*^9}, 3.7779808379183397`*^9, {
   3.777981226939167*^9, 3.777981252771734*^9}, {3.777983524756351*^9, 
   3.777983540645379*^9}, 3.7779839556689663`*^9, 3.777984275204699*^9, 
   3.777992356751233*^9, 3.77799247046315*^9, 3.777992517303397*^9, 
   3.777994784352865*^9, {3.77799482868373*^9, 3.7779948426394*^9}, 
   3.777994886390593*^9, 3.777994989477564*^9, 3.7779950771225357`*^9, 
   3.777995256877679*^9, 3.77799535006019*^9, 3.7779957112708073`*^9, 
   3.7779964781122704`*^9, 3.777996633752246*^9, 3.777997325944129*^9, 
   3.777997993531309*^9, 3.7779980986568537`*^9, 3.777998209076545*^9, 
   3.7779987257004147`*^9, 3.777998762843318*^9, 3.777999200594103*^9, 
   3.7780186795482597`*^9, 3.7780187152926407`*^9, 3.778018905371563*^9, 
   3.778018945179937*^9, 3.7780196457265253`*^9, 3.7780206218935204`*^9, {
   3.778020995331189*^9, 3.778021005465176*^9}, 3.7780210364345016`*^9, 
   3.77802114122654*^9, 3.778025702049398*^9, 3.778025775426902*^9, 
   3.778026062902732*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"47a5aeed-5882-4388-864c-3cfcc7a4442f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"temperatures", "*", 
    RowBox[{"evecs", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "/", 
  RowBox[{"Total", "[", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777984334564754*^9, 3.7779843362811213`*^9}, {
  3.77798437409603*^9, 3.7779843930896482`*^9}, {3.7779844345167*^9, 
  3.77798443508995*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"8a8d3be0-5716-49a8-9864-37f800e1f28a"],

Cell[BoxData[
 RowBox[{"1500.0000000000002`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.777984336471521*^9, {3.7779843745070333`*^9, 3.777984435565138*^9}, 
   3.777995183235824*^9, 3.777995264021819*^9, 3.777995357399585*^9, 
   3.7779973553125753`*^9, 3.777998009107601*^9, 3.777998119266532*^9, 
   3.7779992062212963`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"aa8a171d-6347-4284-8b28-7f8f47d16261"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ind", "=", 
  RowBox[{"First", "@", 
   RowBox[{"FirstPosition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", "7", "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", "multiindices"}], ",",
      "0"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o2norm", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}], "/", "atoms"}], ")"}], "&"}],
      "/@", "multiindices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2norm", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ")"}], "/", "atoms"}], ")"}], "&"}],
      "/@", "multiindices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2onorm", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ")"}], "/", "atoms"}], ")"}], "&"}],
      "/@", "multiindices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicalnorm", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "/", "atoms"}], ")"}], 
      "&"}], "/@", "multiindices"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"-", "1"}], "/", 
   RowBox[{"evals", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "10"}], ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"h2onorm", ".", 
     RowBox[{"Transpose", "[", "evecs", "]"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "10"}], ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.777335687003652*^9, 3.77733572981126*^9}, {
  3.777335765011054*^9, 3.777335770848137*^9}, {3.7773361405516977`*^9, 
  3.7773361407742853`*^9}, {3.777336201373818*^9, 3.777336211637321*^9}, {
  3.777336339292384*^9, 3.7773363415700417`*^9}, {3.777375833759655*^9, 
  3.777375855735011*^9}, {3.777376274533022*^9, 3.777376291932516*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e7e4f7b3-54c8-4daa-bc68-19ccecbba9a7"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.777335690964987*^9, 3.7773357305494547`*^9}, 
   3.777335775680439*^9, 3.7773361447264347`*^9, 3.777336219961336*^9, {
   3.777375819362714*^9, 3.7773758562841997`*^9}, {3.777376278441402*^9, 
   3.777376292252534*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"99db0095-d3c5-4c40-bbe0-2fd89ea34aa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.4795456716101076`*^-6", ",", "2.809915865950567`*^-6", ",", 
   "3.132336441884955`*^-6", ",", "4.761807343689877`*^-6", ",", 
   "6.571366288131918`*^-6", ",", "0.000017378820476480416`", ",", 
   "0.14785017080189708`", ",", "0.33226679735950865`", ",", 
   "1.3261435904405081`", ",", "1.1327099593917821`*^8"}], "}"}]], "Output",
 CellChangeTimes->{{3.777335690964987*^9, 3.7773357305494547`*^9}, 
   3.777335775680439*^9, 3.7773361447264347`*^9, 3.777336219961336*^9, {
   3.777375819362714*^9, 3.7773758562841997`*^9}, {3.777376278441402*^9, 
   3.777376292273196*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"2fbe9283-e0ef-4366-b420-1a10fe8ca99a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.10543962719786987`"}], ",", "0.021621466285247238`", ",", 
   RowBox[{"-", "0.06530298728598881`"}], ",", "0.028073976539943542`", ",", 
   RowBox[{"-", "0.0010000116349023758`"}], ",", 
   RowBox[{"-", "0.04130688156516649`"}], ",", 
   RowBox[{"-", "0.18970242019569689`"}], ",", 
   RowBox[{"-", "0.11568484098298992`"}], ",", "0.06734353749600644`", ",", 
   RowBox[{"-", "0.28571428621910283`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.777335690964987*^9, 3.7773357305494547`*^9}, 
   3.777335775680439*^9, 3.7773361447264347`*^9, 3.777336219961336*^9, {
   3.777375819362714*^9, 3.7773758562841997`*^9}, {3.777376278441402*^9, 
   3.777376292333232*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"b0da05a0-bb7c-4e22-aab7-10684471df4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eind", "=", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"Abs", "[", "evals", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{"multiforms", ",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"evecs", "[", 
      RowBox[{"[", "eind", "]"}], "]"}], ",", 
     RowBox[{"u_", "/;", 
      RowBox[{
       RowBox[{"Abs", "[", "u", "]"}], ">", "0.1"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"evecs", "[", 
    RowBox[{"[", "eind", "]"}], "]"}], ",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"evecs", "[", 
      RowBox[{"[", "eind", "]"}], "]"}], ",", 
     RowBox[{"u_", "/;", 
      RowBox[{
       RowBox[{"Abs", "[", "u", "]"}], ">", "0.1"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.777336382320553*^9, 3.7773364238791323`*^9}, {
   3.7773364665296087`*^9, 3.7773364690465097`*^9}, {3.7773365308158293`*^9, 
   3.777336727192333*^9}, {3.7773371309539948`*^9, 3.77733715234282*^9}, {
   3.7773372673639383`*^9, 3.777337275658244*^9}, {3.7773373547914*^9, 
   3.777337355180211*^9}, {3.777338179753381*^9, 3.777338231562849*^9}, {
   3.7773382627315807`*^9, 3.777338291744638*^9}, {3.777338334728064*^9, 
   3.7773383469419613`*^9}, {3.777338378394433*^9, 3.7773383785612717`*^9}, 
   3.777338456132115*^9, 3.7773387976726923`*^9, 3.777375880729363*^9, {
   3.777375916216649*^9, 3.777375978784753*^9}, {3.777376306432068*^9, 
   3.7773763206550627`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"c7a9da43-a19e-4960-8df0-c661eeb6ea83"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
YLP+jIDcjTNr/g+6hwjy
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., -21.44212385638058},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 523}, {-20.76262048630683, 21.36658845826546}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"1000.0\"", 1000., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.7773363917177553`*^9, 3.7773364242534237`*^9}, 
   3.777336470126773*^9, {3.77733654699575*^9, 3.777336681596656*^9}, 
   3.777336728066169*^9, {3.7773371328077183`*^9, 3.777337152666706*^9}, 
   3.777337276438373*^9, 3.777337355878644*^9, {3.777338183292489*^9, 
   3.777338231796755*^9}, {3.777338264181117*^9, 3.7773382920743713`*^9}, 
   3.777338348548028*^9, 3.777338378763341*^9, 3.77733845863201*^9, 
   3.777338798115185*^9, {3.7773758628419113`*^9, 3.777375880994031*^9}, {
   3.777375916525013*^9, 3.777375983037582*^9}, {3.7773763145491877`*^9, 
   3.777376320941162*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"a5fe347d-b896-4cc5-8855-83e506c83285"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"(", 
      TagBox[
       SubscriptBox["\<\"Ar\"\>", "1"],
       DisplayForm], ")"}]}], "+", 
    TagBox[
     SubscriptBox["\<\"H\"\>", "2"],
     DisplayForm], "+", 
    TagBox[
     SubscriptBox["\<\"O\"\>", "1"],
     DisplayForm], "+", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"(", 
      TagBox[
       SubscriptBox["\<\"Ar\"\>", "1"],
       DisplayForm], ")"}]}], "+", 
    TagBox[
     SubscriptBox["\<\"H\"\>", "1"],
     DisplayForm], "+", 
    TagBox[
     RowBox[{
      SubscriptBox["\<\"O\"\>", "1"], 
      SubscriptBox["\<\"H\"\>", "1"]}],
     DisplayForm], "+", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"(", 
      TagBox[
       SubscriptBox["\<\"Ar\"\>", "1"],
       DisplayForm], ")"}]}], "+", 
    RowBox[{"6", " ", 
     RowBox[{"(", 
      TagBox[
       RowBox[{
        SubscriptBox["\<\"O\"\>", "1"], 
        SubscriptBox["\<\"H\"\>", "2"]}],
       DisplayForm], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7773363917177553`*^9, 3.7773364242534237`*^9}, 
   3.777336470126773*^9, {3.77733654699575*^9, 3.777336681596656*^9}, 
   3.777336728066169*^9, {3.7773371328077183`*^9, 3.777337152666706*^9}, 
   3.777337276438373*^9, 3.777337355878644*^9, {3.777338183292489*^9, 
   3.777338231796755*^9}, {3.777338264181117*^9, 3.7773382920743713`*^9}, 
   3.777338348548028*^9, 3.777338378763341*^9, 3.77733845863201*^9, 
   3.777338798115185*^9, {3.7773758628419113`*^9, 3.777375880994031*^9}, {
   3.777375916525013*^9, 3.777375983037582*^9}, {3.7773763145491877`*^9, 
   3.7773763209580183`*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"61498ce8-1322-4f77-88a0-c087fc3a4ce0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.37521355049698507`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.41441984297871115`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.8285389534487203`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7773363917177553`*^9, 3.7773364242534237`*^9}, 
   3.777336470126773*^9, {3.77733654699575*^9, 3.777336681596656*^9}, 
   3.777336728066169*^9, {3.7773371328077183`*^9, 3.777337152666706*^9}, 
   3.777337276438373*^9, 3.777337355878644*^9, {3.777338183292489*^9, 
   3.777338231796755*^9}, {3.777338264181117*^9, 3.7773382920743713`*^9}, 
   3.777338348548028*^9, 3.777338378763341*^9, 3.77733845863201*^9, 
   3.777338798115185*^9, {3.7773758628419113`*^9, 3.777375880994031*^9}, {
   3.777375916525013*^9, 3.777375983037582*^9}, {3.7773763145491877`*^9, 
   3.7773763209597473`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"141b7102-d95b-4208-8191-42f21ae43e84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concentration evolutions", "Section",
 CellChangeTimes->{{3.777919387358829*^9, 
  3.777919401179955*^9}},ExpressionUUID->"28eb6b29-ffe7-4933-a48f-\
f62c4f958e62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temperaturedats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressuredats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"filebase0", "=", "\"\<data/h2o2/\>\""}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"filebase", "=", 
        RowBox[{"filebase0", "<>", 
         RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"dat", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", 
          " ", "level"}], "}"}], " ", "=", " ", 
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evals", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", "*", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BinaryReadList", "[", 
             RowBox[{
              RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
              "\"\<Real64\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"17", ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"evecs", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"I", "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BinaryReadList", "[", 
               RowBox[{
                RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
                "\"\<Real64\>\""}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"17", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
          "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spatoms", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiindices", "=", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
             "\"\<Integer64\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"17", ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temperatures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<temperatures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pressures", "=", 
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{
           RowBox[{"filebase", "<>", "\"\<pressures.npy\>\""}], ",", 
           "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"spforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DisplayForm", "[", 
           RowBox[{"RowBox", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"spatoms", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"elements", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"spatoms", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
                "\"\<\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"multiforms", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"multiindices", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ind", "=", 
        RowBox[{"First", "@", 
         RowBox[{"FirstPosition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "7", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", 
            "multiindices"}], ",", "0"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"initials", ",", 
         RowBox[{"multiforms", "[", 
          RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"PseudoInverse", "[", 
          RowBox[{"Transpose", "[", "evecs", "]"}], "]"}], ".", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ind", "\[Rule]", "1"}], "}"}], ",", 
           RowBox[{"{", "dim", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t0", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num", "=", "25"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num2", "=", "10"}], ";", "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"t0", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t1", "/", "t0"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"i", "/", "num"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "num"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"o2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2norm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"h2onorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"radicalnorm", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "7", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"Total", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          "multiindices"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temperaturenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "temperatures", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pressurenorm", "=", 
        RowBox[{"DiagonalMatrix", "[", "pressures", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"o2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"o2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2norm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2dats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"h2onorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"h2odats", ",", "dat"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"radicalnorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"radicaldats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"temperaturenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"temperaturedats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"Total", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"pressurenorm", ".", 
               RowBox[{"ParallelSum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"evals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "*", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "*", 
                  RowBox[{"evecs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"evals", ",", 
                    RowBox[{"u_", "/;", 
                    RowBox[{
                    RowBox[{"Abs", "[", "u", "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", "2"}], "/", 
                    RowBox[{"times", "[", 
                    RowBox[{"[", "n", "]"}], "]"}]}]}]}]}], "]"}]}]}], 
                  "}"}]}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"pressuredats", ",", "dat"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"ListLogLinearPlot", "[", 
         RowBox[{"radicaldats", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "\"\<Radicals\>\""}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "initials"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "3", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n", ",", " ", "p"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"temperaturedats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"pressuredats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "\"\<Pressure\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.77713438694239*^9, 3.777134429198846*^9}, {
   3.7771345229764013`*^9, 3.777134532571751*^9}, {3.777135122271962*^9, 
   3.777135139764135*^9}, {3.777136408612295*^9, 3.777136409407316*^9}, {
   3.7771367184030027`*^9, 3.77713675225874*^9}, {3.777137543164104*^9, 
   3.7771376435400257`*^9}, {3.77713768719775*^9, 3.777137828845704*^9}, {
   3.777137861869976*^9, 3.7771378880460567`*^9}, {3.777137921929947*^9, 
   3.777138049446335*^9}, {3.7771401298750153`*^9, 3.777140130078288*^9}, {
   3.7771401639670477`*^9, 3.777140173261187*^9}, {3.77714044244271*^9, 
   3.7771404466792803`*^9}, 3.7771999300508823`*^9, {3.7772007585293713`*^9, 
   3.7772008043513317`*^9}, {3.777200863193564*^9, 3.7772009418878202`*^9}, 
   3.777200985976596*^9, 3.7772010391198606`*^9, {3.777201126737507*^9, 
   3.777201175644846*^9}, {3.777201571213813*^9, 3.7772016782844133`*^9}, {
   3.7772021113041573`*^9, 3.777202154664967*^9}, {3.77720224993499*^9, 
   3.777202317099625*^9}, {3.777202415296564*^9, 3.7772024329521923`*^9}, {
   3.77720248674479*^9, 3.7772024946344767`*^9}, 3.777202587267193*^9, {
   3.777202773824875*^9, 3.777202785092458*^9}, {3.777203054512124*^9, 
   3.777203194268839*^9}, {3.77720323600662*^9, 3.777203264285142*^9}, {
   3.777203298926938*^9, 3.777203309568652*^9}, 3.777203391733837*^9, {
   3.777203550679158*^9, 3.7772035625034657`*^9}, 3.7772037591874943`*^9, 
   3.777203877734586*^9, {3.777203942085187*^9, 3.777203993915225*^9}, {
   3.777204033123383*^9, 3.7772040608133183`*^9}, {3.777204160429085*^9, 
   3.777204163323791*^9}, {3.7772042764940777`*^9, 3.777204328393935*^9}, {
   3.777204375179188*^9, 3.777204419607378*^9}, {3.777204677694272*^9, 
   3.77720470453329*^9}, {3.777204779583888*^9, 3.777204805872669*^9}, {
   3.777205081294611*^9, 3.777205093698765*^9}, {3.777205748533635*^9, 
   3.7772057487982492`*^9}, {3.777205791133944*^9, 3.77720580912246*^9}, 
   3.777205882196479*^9, {3.777337373484276*^9, 3.777337406871092*^9}, 
   3.777337457093985*^9, {3.777337577040579*^9, 3.7773375921035013`*^9}, {
   3.777337810284005*^9, 3.777337863353664*^9}, {3.777337896094151*^9, 
   3.7773379447183647`*^9}, {3.777337978920733*^9, 3.7773380271779003`*^9}, {
   3.7773380750040083`*^9, 3.777338094159894*^9}, {3.777376026740171*^9, 
   3.777376212010378*^9}, 3.777376243179214*^9, {3.777376360865407*^9, 
   3.777376364775722*^9}, {3.777376621053227*^9, 3.7773766278529863`*^9}, 
   3.777376802319796*^9, {3.777377296884919*^9, 3.7773773072147093`*^9}, {
   3.7773773548476152`*^9, 3.7773773750954103`*^9}, {3.777377983125379*^9, 
   3.777378050516939*^9}, 3.777378317730064*^9, {3.777378453136273*^9, 
   3.777378481741498*^9}, {3.777378838335648*^9, 3.777378858925192*^9}, {
   3.7779194376298113`*^9, 3.777919462294487*^9}, 3.7779195092886553`*^9, 
   3.777919563148247*^9, {3.777919688401195*^9, 3.777919712937598*^9}, {
   3.7779197459282913`*^9, 3.777919795815201*^9}, {3.7779198842916393`*^9, 
   3.777919910057685*^9}, {3.7779203719088593`*^9, 3.7779203749555483`*^9}, {
   3.7779222628823433`*^9, 3.777922278512329*^9}, 3.777979202639451*^9, 
   3.777980570098295*^9, {3.777998669053709*^9, 3.777998673171689*^9}, 
   3.777998708846861*^9, {3.777999047757468*^9, 3.777999072595841*^9}, {
   3.777999136031116*^9, 3.777999151539747*^9}, 3.7779992301319237`*^9, {
   3.777999465194914*^9, 
   3.77799949164638*^9}},ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-\
e8947acb2d3e"],

Cell[BoxData["\<\"data/h2o2/\"\>"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, {3.777999214936088*^9, 3.777999244628015*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"6.146431192650619`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5249526126915332`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.562385800342559`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.6806325798894224`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"6.014696302740776`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.2986445267482552`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{RowBox[{\\\"-\\\", \\\"6.146168525650117`*^-16\\\"}], \
\\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\
\", RowBox[{\\\"2.177120375823306`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"2.1557026927636236`*^-16\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.5668516658042383`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"9.606836972768348`*^-18\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1604\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1604\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain significant numerical \
errors.\"",2,40,1,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999256190572*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],

Cell[BoxData[
 TemplateBox[{
  "LinearSolve","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"LinearSolve\\\"}]\\) of badly \
conditioned matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1.5792011895868414`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"8.178771836284908`*^-17\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.683693761390964`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"5.83127571424801`*^-17\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"7.336547157159226`*^-17\\\"}], \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"2.1389795480881101`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"39\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"1.6272132967668222`*^-16\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.1948363128199665`*^-16\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.8081217598149095`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.149369412645336`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"1.0029741873701589`*^-16\\\", \\\"+\\\", RowBox[{\\\"0.`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"47\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"4274\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) may contain \
significant numerical errors.\"",2,40,2,16737125790674609689,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777999322912217*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994499606037`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHaic3r/jx/769vIhe58w2rQMvS3wq
PwL58zTOVKzI1jzwSuDs8cdAvqxtVsb2AI0DRuedlU8D+bMDOSKOmaofMNkl
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pv8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzap7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXgvJ
dL8Hc7/UAZutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/hAwJ6X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NJ9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ypafXl3D57KTD/4X7xDUVlx/dttGeAgrYdG5Z0di61BwDSWc2j
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9i9P4vvy/769vIhe58w2rQPbJJyD
nwP58zTOVKzI1jzw58n13+eAfFnbrIztARoHPrzrNloM5M8O5Ig4Zqp+gEf6
4awwIF8qbZn7VSm1A4rH14dc/HfffmaVi/mT/yoHVBO/FT3/e99evP+R2ucn
ygfmclsEev+5bz9tcYMY0ymlA4e2Xsiu/HnfXnSHHJvgesUDhyZ9/Dzhy337
yWf2fJWfonBAiztdn/vNfXuVQ1tPxX6SOxBk7yDidPe+vdLrjyur98gcSBIR
7ll8GOZ+qQPf1hl9Dp9+314a7F6JAxvec0Zwe8PcJ3bgLdvhyooT96DuET4g
Fa1i0vb6rr0I2H7BAw7aC+Oe1dyxVwXbx3dg4YWr+scMbkHN5zoQy7Xi8vJt
1+wlweaxHdC9u2j9uU8X7cXA+hkPZNcVPdp37YS9HFj9r/2fkrIbwtn32QuB
5T/uf+GQ/aDo30Z7KTD/4X57329JLdUr7BmgQKJ+QndxzwJ7AOCdzWM=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.4999982495922309}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH9H5u7//5/7y9vIhe58w2rQOJbcVW
n4H8eRpnKlZkax5oD5/25BmQL2ublbE9QOOAzhK17+eB/NmBHBHHTNUP/Kg3
TlgG5EulLXO/KqV2QOTHmWnRQP7MKhfzJ/9VDpxb8PrRtX/n7cX7H6l9fqJ8
YOebX7vf/T1vP21xgxjTKaUDciJ+XNF/ztuL7pBjE1yveOBUtMCWuT/P208+
s+er/BSFAysmL59y+8t5e5VDW0/FfpI78D900Y4Zb87bK73+uLJ6j8yBG2uW
dzjfg7lf6sCtl9ERuUfP20uD3StxYCfXrZlVs2DuEzsgasydXh0Ac4/wgbwN
Z2pOXzxnLwK2X/DA5tAtwS6/z9qrgu3jO7DYj3/F1WlnoOZzHZAN3nLtSOQp
e0mweWwHPKNeT/z76Zi9GFg/44EzGo+LlBwP2cuB1f/a38RRsMmvYqe9EFj+
4/4bLYvZ359bZy8F5j/cz5uQ/OPwvoX2DFDQpvSMr7Vzqj0ACfvSEg==
              "]]}, {
            
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHluh/mPD1/3l7eRG9zpltWgf+Fu02
fQXkz9M4U7EiW/PAItETdy8D+bK2WRnbAzQOHJfsy1sF5M8O5Ig4Zqp+YDHv
Yd54IF8qbZn7VSm1A83cnzqv/ztvP7PKxfzJf5UDzh7TWl78PW8v3v9I7fMT
5QPBd6pFPP6ct5+2uEGM6ZTSAbdW/7aSn+ftRXfIsQmuVzzgVJR1pfvLefvJ
Z/Z8lZ+icKBgQi8/25vz9iqHtp6K/SR34KvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCkj8KDoOnn7aXB7pU4IGhZHcDmDXOf2IEPzS9bi0+cg7pH+MBW
tWWJja/P2ouA7Rc88Eei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgYmHCtae/nTQXgysn/HAvbV7+3Zd22EvB1b/a/+EV3+eBrKvsxcC
y3/cH8Pqb5X/b6G9FJj/cP+awwKG9dUz7BmgQFc17nd+zwR7AKyMzCs=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999923245918282`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeCY82L1wZpe9vIhe58w2rQO5Psd5
rnyZYT9P40zFimzNA6c/OCT8mLPMXtY2K2N7gMaBJcnxa/6KbbafHcgRccxU
/YC9rEf4wr699lJpy9yvSqkdSOR7+KX+zhH7mVUu5k/+qxzYEsS212XuKXvx
/kdqn58oH9AQ1J7C2HrOftriBjGmU0oH1O+cyLjKeMFedIccm+B6xQNnJuZw
+8pcsJ98Zs9X+SkKByInyBqFS12wVzm09VTsJ7kDSw22Pq0QvWCv9Prjyuo9
MgequxVes/JegLpf6sC2s3eNj/w5by8Ndq/EgdvnpzWonDoPdZ/YAcauyFUf
i85D3SN8gHuDkvLOu+fsRcD2Cx74yVXy1PbhWXtVsH18Bzjq71yJsjsDNZ/r
AHP1Ap5F807aS4LNYzswZdep5jfLjtqLgfUzHujesVuiweqAvRxY/a/94ml1
Jce/b7YXAst/3H+Bud1kYuAieykw/+H+NfNzf7XndNozQMEF/zbZFL4SewDi
88E+
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHXk0Mv1p9Y4q9vIhe58w2rQOncooj
0xSX2M/TOFOxIlvzwIFbd1+cl9tkL2ublbE9QONAfP4Fh7CivfazAzkijpmq
H+CL7bl/qPGovVTaMverUmoHrslzRn6oP2M/s8rF/Ml/lQPWO9ZrHg66aC/e
/0jt8xPlA9lXmyqWxV62n7a4QYzplNKBmWteN72Vv2IvukOOTXC94oF8nu+T
c8yv2E8+s+er/BSFA0pSxQceG16xVzm09VTsJ7kDmkdmnmZQv2Kv9Prjyuo9
MgfEr2u0KItcgbpf6oCqxJdzbZ8v20uD3StxIMj4snbs7stQ94kdOHZlY7dn
9GWoe4QP6D/pW3FpxyV7EbD9ggdEfhV39q++aK8Kto/vgLvjw2zJn+eh5nMd
KOXSVF/z9JS9JNg8tgP6a1h7Hvw7bC8G1s94QEZcPy7Rboe9HFj9r/0n92xt
qFi51F4ILP9xf//spQlN3L32UmD+w/2xNbP/vTxebs8ABZE5f8sOb822BwCs
jcSD
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.3158828206034689}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHrr3Z8t3cbIudvIhe58w2rQMOzUE/
t/04YjdP40zFimzNA9fMWA8qTbtqJ2ublbE9QOPAGXGBCzvPPLWbHcgRccxU
/YDQj3t2t+Z9tZNKW+Z+VUrtwEzri0szdVjtZ1a5mD/5r3KAR4pfJ6dOxF68
/5Ha5yfKB4yuzPFfWqtsP21xgxjTKaUDIveX/FITMrIX3SHHJrhe8QDHzQuB
x0Md7Cef2fNVforCAS2Zheq6bL72Koe2nor9JHeAjVPrO0N7pL3S648rq/fI
HJjYfSRie2CaPcT9UgcucLO9DSkotpcGu1figEHKonUbHjTYQ9wndmCB9t0Q
RrNeqHuEDxx+qXnskOZMexGw/YIHLrl/UHRuXWqvCraP70CgyiLjNfqboOZz
Hdjstj1YSWGfvSTYPLYDR5sLeKyUTtiLgfUzHihcMcNyafAlezmw+l/7g2sF
l61ff9NeCCz/cX+Hdt3Ui0YP7KXA/If7Z5w0sjRKeGTPAAWXZKd03ut8bA8A
LPm4wA==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHijmdte9/PmAnL6LXObNN64DTb+k4
4wmX7OZpnKlYka15YNEqNZ7AW4/tZG2zMrYHaBw4csi3TnDaF7vZgRwRx0zV
Dyid/X2i8BiLvVTaMverUmoHfrzn/i2ZJmI/s8rF/Ml/lQMSoiceqzYo24v3
P1L7/ET5gH5+5NkNhkb20xY3iDGdUjqwqj2cU2+6g73oDjk2wfWKB/YcZJ3w
fY2v/eQze77KT1E40LanY/084yh7lUNbT8V+kjvwlvHKsqCvafZKrz+urN4j
c6BtvfO9dywl9hD3Sx14+8pCvjql0V4a7F6JA0KM15z5ZPqg7hM74HtlffqO
9zOh7hE+ILxPUGqnzjJ7EbD9ggdkSjW7j+3cZK8Kto/vQJs065opv/ZBzec6
8OVK03yuwyfsJcHmsR1I4F5xjXfPJXsxsH7GA84adf8TpG/Zy4HV/9o/b4nH
eZGQB/ZCYPmP+9tmuz+bEvrIXgrMf7hfc+UMLU7vx/YMULDJOdrG+8tjewC2
QLvC
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6235710314596103}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHotiAnILpDvIiep0z27QOMHJD+PM0
zlSsyNY8wCcM4cvaZmVsD9A4wKgI4c8O5Ig4Zqp+QNcSwpdKW+Z+VUrtgHoy
hD+zysX8yX+VA0xrIHzx/kdqn58oH2jUYgTzpy1uEGM6pXTAmo0JzBfdIccm
uF7xwNNmZjB/8pk9X+WnKBw4JsUG5qsc2noq9pPcgfkzucB8pdcfV1bvkTng
miaE5H6pA7yv5MF8abB7JQ4UepgjuU/swLyueCT3CB+wKFkC5ouA7Rc8UCEj
yQjiq4Lt4ztQd/kWI8J8rgNXfwgyg/iSYPPYDux495IFxBcD62c8cM+xmB3E
lwOr/7X/HWsWF4gvBJb/uH8bhygv2D1g/sP9Jfn7+EB8BigoXJ7GD+IDAN7a
l0M=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHgnr///+fP91BXkSvc2ab1oFFFhD+
PI0zFSuyNQ9kL/0H5svaZmVsD9A4sGDpXzB/diBHxDFT9QPZL3+D+VJpy9yv
SqkdmPvsB5g/s8rF/Ml/lQOl6z6D+eL9j9Q+P1E+ELPoFZg/bXGDGNMppQOi
H26B+aI75NgE1yseWLB+P5g/+cyer/JTFA48TpgA5qsc2noq9pPcgYcBdmC+
0uuPK6v3yBzYpr7hH8L9Uge0S3b9BfGlwe6VOBDfJPwH4T6xA797HH4i3CN8
YOXB6i8gvgjYfsEDj9fPfAPiq4Lt4zvwyov7AcJ8rgPhu/zOgviSYPPYDqy7
nrUFxBcD62c8cL7nzEwQXw6s/tf+fevCO0B8IbD8x/1N/9V7we4B8x/un6Ii
uBHEZ4CC/w6dLAwF0x0ArDraJQ==
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Temperature\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 2999.999087085801}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHwliAHIYP9vIiep0z27QOtLJD+PM0
zlSsyNY8wMwL4cvaZmVsD9A40CEG4c8O5Ig4Zqp+gEMdwpdKW+Z+VUrtwAZn
CH9mlYv5k/8qB3JKIXzx/kdqn58oHzh5GsKftrhBjOmU0oETiYxgvugOOTbB
9YoHQtKYwPzJZ/Z8lZ+icOC2FguYr3Jo66nYT3IHmmzYwXyl1x9XVu+ROdDT
z4PkfqkDuSdFwXxpsHslDqTtVUVyn9gBUUtHJPcIH8h2KQDzRcD2Cx7Y+3w/
mK8Kto/vwGNVF0aE+VwHJvRJMIH4kmDz2A4s2R/FDOKLgfUzHohjFWMF8eXA
6n/tD2SUYQfxhcDyH/fLub3jALsHzH+4P2WdABeIzwAFe1uawXwAMy+UNg==

              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHspP/A8F7e3kRvc6ZbVoHzr7/B+bP
0zhTsSJb88AZNQhf1jYrY3uAxoHJJ/+A+bMDOSKOmaofEMj+BeZLpS1zvyql
dmCN3zcwf2aVi/mT/yoHovXeg/ni/Y/UPj9RPiB/5RGYP21xgxjTKaUDV1LP
gvmiO+TYBNcrHlhusALMn3xmz1f5KQoHimamg/kqh7aeiv0kd6Cp7/s/EF/p
9ceV1XtkDmwuNf2HcL/Ugcf/nv4B8aXB7pU4wNm55BfCfWIHdpac/IZwj/AB
k1VuH0B8EbD9ggcuBjc/BfFVwfbxHeicHXcFYT7XgSWbTu4C8SXB5rEdcP58
dgaILwbWz3ggV7usBMSXA6v/tZ9n7YIYEF8ILP9xf4eRcTLYPWD+w/0dz62m
gPgMUHBlvwQzA8MHewDRmO48
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"Pressure\"", TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 1.999999391390534}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.777205871987626*^9, 3.77720608308245*^9, 3.7772064071650753`*^9, {
   3.77733739441107*^9, 3.7773374143281307`*^9}, 3.7773374613107023`*^9, {
   3.777337582101864*^9, 3.7773375969376497`*^9}, {3.777337815430974*^9, 
   3.777337867990445*^9}, {3.777337926520392*^9, 3.777337951812708*^9}, 
   3.777338005109683*^9, 3.777338099732213*^9, {3.777376229366551*^9, 
   3.777376253069272*^9}, {3.777376345572755*^9, 3.777376375022718*^9}, 
   3.7773766383046017`*^9, 3.777377079929584*^9, 3.777377584618264*^9, 
   3.7773780624089003`*^9, 3.7773784333259287`*^9, 3.777378491819269*^9, 
   3.7773791360473537`*^9, 3.777919465509639*^9, 3.777919509893545*^9, 
   3.7779198046967697`*^9, 3.7779199118220367`*^9, 3.777920375343012*^9, 
   3.7779222825594597`*^9, 3.777979206080575*^9, 3.7779805751001472`*^9, 
   3.777998675554864*^9, 3.777998713930532*^9, 3.777998777172489*^9, 
   3.777999175731359*^9, 3.777999214936088*^9, 3.7779994508146973`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/o2transient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "o2dats", "]"}], "]"}], ",", "\"\<Real64\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/h2otransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "h2odats", "]"}], "]"}], ",", "\"\<Real64\>\""}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", 
     RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BinaryWrite", "[", 
   RowBox[{"file", ",", 
    RowBox[{"N", "[", 
     RowBox[{"Flatten", "[", "radicaldats", "]"}], "]"}], ",", 
    "\"\<Real64\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.77737719579126*^9, 3.777377203789566*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o2dats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/o2transient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2odats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/h2otransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radicaldats", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"\"\<data/radicaltransient.dat\>\"", ",", "\"\<Real64\>\""}], 
        "]"}], "]"}], "/", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initials", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"filebase", "=", 
     RowBox[{"\"\<data/h2o2/\>\"", "<>", 
      RowBox[{"ToString", "[", "m", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dat", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
       "level"}], "}"}], " ", "=", " ", 
     RowBox[{"dat", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spatoms", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiindices", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{
          RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
          "\"\<Integer64\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"spforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DisplayForm", "[", 
        RowBox[{"RowBox", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"spatoms", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"elements", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"spatoms", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
             "\"\<\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"multiforms", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"multiindices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ind", "=", 
     RowBox[{"First", "@", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "7", "]"}], "]"}], "+", 
           RowBox[{"#", "[", 
            RowBox[{"[", "8", "]"}], "]"}]}], "&"}], "/@", "multiindices"}], 
        ",", "0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"initials", ",", 
      RowBox[{"multiforms", "[", 
       RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.777378504069335*^9, 3.777378511832087*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"o2dats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "*", 
                  RowBox[{"10", "^", "4"}]}]}], "}"}], "&"}], "/@", "#"}], 
             "&"}], "/@", "radicaldats"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"\"\<Radicals \[Times]\>\"", " ", "*", " ", 
                RowBox[{"10", "^", "4"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"h2odats", ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"spforms", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "}"}]}], "}"}],
      "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", "initials"}], 
       "]"}], ",", "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/transient.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7773764217499638`*^9, 3.777376551135895*^9}, {
   3.777376646046295*^9, 3.777376649152425*^9}, {3.777376876353582*^9, 
   3.7773769577868843`*^9}, 3.777377089434372*^9, {3.777377126378562*^9, 
   3.777377143488243*^9}, {3.7773783744819927`*^9, 3.777378375675869*^9}, 
   3.7773784473213673`*^9, {3.777378498912328*^9, 3.777378500646846*^9}, {
   3.777378689105578*^9, 3.777378726734768*^9}, {3.777378765672946*^9, 
   3.7773787747723007`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHAqTTrv77f99eXkSvc2ab1oE9LyI/
/AXy52mcqViRrXngivHd2D9AvqxtVsb2AI0DC9e0TfkJ5M8O5Ig4Zqp+wPXx
rWlfgHyptGXuV6XUDthyr+x6DeTPrHIxf/Jf5QDjuRt/bgH54v2P1D4/UT4g
etF+9x4gf9riBjGmU0oHbm/pcG8D8kV3yLEJrlc80FaXF6AG5E8+s+er/BSF
A3rr2tXq/923Vzm09VTsJ7kDAW/3Lov5e99e6fXHldV7ZA4csz7wKvk3zP1S
B/J9uUW+f79vLw12r8SBO/oceiyfYO4TO8DJ2Ba44TnMPcIHROx4Dh69et9e
BGy/4AGr7xuUd2+7b68Kto/vQK0uQ6FgI8x8rgMnN/ptX65y314SbB7bgbOv
UiIntd2zFwPrZzyw+xWPpVv1XXs5sPpf+/mv+p4IOXDbXggs/3G/2Yy8pvbf
N+ylwPyH+3tPL8u9cf6KPQMUJNytkljpe84eAHou0RQ=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHZNWqeP78v28vL6LXObNN68CUTLee
H0D+PI0zFSuyNQ+8a3/n9gnIl7XNytgeoHHgrHOJ63Mgf3YgR8QxU/UDKg8T
XK8A+VJpy9yvSqkdMHorO20zkD+zysX8yX+VA/+ONG+oAvLF+x+pfX6ifID9
1st/okD+tMUNYkynlA7si7hVkfzvvr3oDjk2wfWKB5iYf5/U+nvffvKZPV/l
pygcqFqyjJn79317lUNbT8V+kjvw/gJ7ZtT3+/ZKrz+urN4jc0ByqT/vpw8w
90sdkGSI/X3p6X17abB7JQ5EB6xk77oEc5/YAX77jUfUNsLcI3zg7MZFPxrL
79uLgO0XPPD01YLVZSL37VXB9vEd0IrcfWFT9j2o+VwHGvaVpDkF3LWXBJvH
dqCirEvqR/1tezGwfsYDQsFedbnLb9jLgdX/2v/gwsI0gcYr9kJg+Y/7Y7fd
+evld85eCsx/uN9ILeeH9J9D9gxQsHMfY63lr832ABNYzgY=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHuiY3r/jx/769vIhe58w2rQMvSnwq
PwL58zTOVKzI1jzwTODs8cdAvqxtVsb2AI0D2uedlU8D+bMDOSKOmaofMN4l
G7MAyJdKW+Z+VUrtwPdFmXVhQP7MKhfzJ/9VDliIG/tc/XffXrz/kdrnJ8oH
7pn8Ovvh7337aYsbxJhOKR0QNQzfEPfnvr3oDjk2wfWKBzaq7p268Od9+8ln
9nyVn6JwgF1xafn9L/ftVQ5tPRX7Se5Aw7vjs+a8uW+v9Prjyuo9MgeWXAvJ
dL8Hc7/UAeutNWaFR+/bS4PdK3HgbM+k4rpZMPeJHYjQ0rasD4C5R/iA/56X
jucv3rMXAdsveOD95sNMHr/v2quC7eM7cEo+2+jmtDtQ87kO/NR9qHoi8pa9
JNg8tgPMfqvaGD5fsxcD62c8UPal9KWK4yV7ObD6X/tt+ZkLgipO2guB5T/u
t5ipafXl3D57KTD/4X6xDUVlx/dttGeAgrYdG5Z0di61BwDPac2b
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6pWT+b78v28vL6LXObNN60CLqXPw
cyB/nsaZihXZmgecX1z/fQ7Il7XNytgeoHGA8X230WIgf3YgR8QxU/UD3NIP
Z4UB+VJpy9yvSqkdUDi+PuTiv/v2M6tczJ/8VzmgnPit6Pnf+/bi/Y/UPj9R
PjCH2yLQ+899+2mLG8SYTikdOLj1Qnblz/v2ojvk2ATXKx44MOnj5wlf7ttP
PrPnq/wUhQOa3On63G/u26sc2noq9pPcgUB7BxGnu/ftlV5/XFm9R+ZAoohw
z+LDMPdLHfi6zuhz+PT79tJg90ocWP+eM4LbG+Y+sQOv2Q5XVpy4B3WP8AGp
aBWTttd37UXA9gsesNdeGPes5o69Ktg+vgMLLlzVP2ZwC2o+14E4rhWXl2+7
Zi8JNo/tgO7dRevPfbpoLwbWz3ggp67o0b5rJ+zlwOp/7f+QlN0Qzr7PXggs
/3H/C4fsB0X/NtpLgfkP99v5fktqqV5hzwAFEvUTuot7FtgDACGYytY=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHph3WFnv3/769vIhe58w2rQMvkn5c
ugnkz9M4U7EiW/PAKT+FnM1AvqxtVsb2AI0DDbcm9eQB+bMDOSKOmaofEJ2y
qOfrv/v2UmnL3K9KqR3Y5XZUWQnIn1nlYv7kv8oB4UgJofV/7tuL9z9S+/xE
+YDv9Z5a5V/37actbhBjOqV0wPaHtfnGr/ftRXfIsQmuVzyw8vXOv1/f3ref
fGbPV/kpCgdurXvo0/3gvr3Koa2nYj/JHZiyp83M6+R9e6XXH1dW75E5wP9p
jrPAQpj7pQ5c9Fau3hZ9314a7F6JA1lHTV/cfHIP6j6xA5ls3QFG0veg7hE+
UNI1yULw9B17EbD9ggc+MN/9sGT1LXtVsH18B+bOOeSjnnUdaj7XAZ+uHQq/
b16ylwSbx3Zg6bHvnKw7TtmLgfUzHjCIOfcjKeuAvRxY/a/9V/jKd89o2mwv
BJb/uJ9v76adGmKr7aXA/If7DV+F5CSHLLFngAJHRfeEFfdn2wMA1p/L6g==

              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"", 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.49999972190601216`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHWC1Fc/79P28vL6LXObNN60Dp1c/O
f4H8eRpnKlZkax5w0At1/A3ky9pmZWwP0DjgLcF6+DuQPzuQI+KYqfoBpUUP
NnwE8qXSlrlflVI7wLVXXOU5kD+zysX8yX+VA7NdNp27AuSL9z9S+/xE+YC8
8KxPW4D8aYsbxJhOKR3ImmUxtRbIF90hxya4XvHAvKXT4mWB/Mln9nyVn6Jw
oHDXfYOyf+ftVQ5tPRX7Se7AIYHIjcF/z9srvf64snqPzIHJW198jfoNc7/U
gRdBmgrvvp+3lwa7V+JA5JoL1r8/wtwndsDirlHS8ucw9wgfCGvYe23P1fP2
ImD7BQ9I9gk7bdp23l4VbB/fgWNnM+dxNMLM5zrAFjDz3zyV8/aSYPPYDtgl
fDnT2XbOXgysn/EA57Ky77bVZ+3lwOp/7bfffJDJ98BpeyGw/Mf9XXvimxt+
n7CXAvMf7l8uMXXmpfNH7BmgQN7tyewFvvvsAd1yzmc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHKswjyv/8P28vL6LXObNN64BEypuK
n0D+PI0zFSuyNQ/c5nx39TOQL2ublbE9QOPA6kfBpS+B/NmBHBHHTNUPzLpq
d/EakC+Vtsz9qpTagTe1Emu3Avkzq1zMn/xXOaCq0vazCsgX73+k9vmJ8oEI
f6nDwkD+tMUNYkynlA5c0nXZEf/vvL3oDjk2wfWKB+znXtmt9ve8/eQze77K
T1E40P1u2ie23+ftVQ5tPRX7Se5A94zwiLDv5+2VXn9cWb1H5sCiy55/336A
uV/qgNX3ujfnnp63lwa7V+JAhfOZX62XYO4TO6AywWe30kaYe4QPuDXbfK0t
P28vArZf8IBcf+emIpHz9qpg+/gOHOCwfrku+xzUfK4D5gyT59gFnLWXBJvH
dmBaZHrjl/rT9mJg/YwH2Jy9jLKWn7CXA6v/tZ/B6EUPb+MReyGw/Mf9R1kz
q9z89tlLgfkP95f8+n5a4s8mewYo6H8jMc3012J7AHq6zT8=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDv3c3v/z/3l7eRG9zpltWgdWtRVb
fQby52mcqViRrXlgWvi0J8+AfFnbrIztARoH5JeofT8P5M8O5Ig4Zqp+4Fu9
ccIyIF8qbZn7VSm1A8I/zkyLBvJnVrmYP/mvcuDsgtePrv07by/e/0jt8xPl
Azvf/Nr97u95+2mLG8SYTikdkBXx44r+c95edIccm+B6xQMnowW2zP153n7y
mT1f5acoHFgxefmU21/O26sc2noq9pPcgf+hi3bMeHPeXun1x5XVe2QOXF+z
vMP5Hsz9UgduvoyOyD163l4a7F6JAzu5bs2smgVzn9gBUWPu9OoAmHuED+Rt
OFNz+uI5exGw/YIHNoduCXb5fdZeFWwf34HFfvwrrk47AzWf64Bs8JZrRyJP
2UuCzWM74Bn1euLfT8fsxcD6GQ+c1nhcpOR4yF4OrP7X/maOgk1+FTvthcDy
H/dfa1nM/v7cOnspMP/hft6E5B+H9y20Z4CCNqVnfK2dU+0BYCLS5w==
              "]]}, {
            
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHbKw/Tvj6/7y9vIhe58w2rQMfZ+w2
fQXkz9M4U7EiW/PATskTdy8D+bK2WRnbAzQO3JTsy1sF5M8O5Ig4Zqp+YBHv
Yd54IF8qbZn7VSm1A03cnzqv/ztvP7PKxfzJf5UDjh7TWl78PW8v3v9I7fMT
5QNBd6pFPP6ct5+2uEGM6ZTSAddW/7aSn+ftRXfIsQmuVzzgUJR1pfvLefvJ
Z/Z8lZ+icCB/Qi8/25vz9iqHtp6K/SR34IvCwm82d8/bK73+uLJ6j8wBjymB
RfMOw9wvdeCEj8KDoOnn7aXB7pU4IGBZHcDmDXOf2IF3zS9bi0+cg7pH+MAW
tWWJja/P2ouA7Rc88Fei+fDDmjP2qmD7+A6smj7/7UGDU1DzuQ74sJhJLNl2
zF4SbB7bgQmHCtae/nTQXgysn/HA/bV7+3Zd22EvB1b/a3//qz9PA9nX2QuB
5T/uj2H1t8r/t9BeCsx/uH/NYQHD+uoZ9gxQoKsa9zu/Z4I9AHWszAg=
              "]]}, {
            
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHeJY0R374f95eXkSvc2ab1oEswySm
e0D+PI0zFSuyNQ+Ylp+22QXky9pmZWwP0Dhw5b4gewWQPzuQI+KYqfqBg0k7
pv//d95eKm2Z+1UptQORO9f5awD5M6tczJ/8VzmQdSnhybo/5+3F+x+pfX6i
fKDfPLFb7td5+2mLG8SYTikd8FNkrF319by96A45NsH1igcOvYxgf//2vP3k
M3u+yk9ROPD27tnwlgfn7VUObT0V+0nuwK59nW7OJ8/bK73+uLJ6j8yB28/z
YjgXwtwvdcDzgsri9dHn7aXB7pU44GBjp3X5yTmo+8QOHCrZvU9b+hzUPcIH
Uh7FfOA6fcZeBGy/4IGba5bIz199yl4VbB/fgcnhnEZKWceh5nMdsNi9n/X7
zUP2kmDz2A4Ef6ux/r99l70YWD/jgSPhytnxWRvs5cDqf+2Xco5rn9K02F4I
LP9xv1nnqkdKYrPtpcD8h/sN6jSZ40Om2DNAgaz6d89F97vtAZNNxp4=
              
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.24999981191144385`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}, {
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5Kdot3XrZNjLi+h1zmzTOmC2dM00
Oc8S+3kaZypWZGse4L36VPLh1wZ7WdusjO0BGgck7+QxVnzrtp8dyBFxzFT9
QG2y8/aglGn2UmnL3K9KqR0wE9MWu8uz0H5mlYv5k/8qB17umcag9He5vXj/
I7XPT5QPvHg5UeWn7Tr7aYsbxJhOKR042ObKvvrZBnvRHXJsgusVD5T+/jxr
acJG+8ln9nyVn6JwoP/WyufcWRvtVQ5tPRX7Se7Av4lnT3dmbrRXev1xZfUe
mQO3dswUK8/YCHW/1IGEHUzXZqZttJcGu1fiABcL08eY5I1Q94kd8Fu99/Xe
2I1Q9wgfMLd90/Q3eKO9CNh+wQNXt552kXDeaK8Kto/vgPASEebHqjDzuQ44
9K3JmPZ5g70k2Dy2A22+6wq6526wFwPrZzywuKzvHh/PBns5sPpf+6+c/FP9
wXSdvRBY/uP+zJavDNFGq+2lwPyH+x8/lmOQWrHMngEKxN9uKdxbt8AeALFD
wKc=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH+u65HrolV2cvL6LXObNN68CMmOc7
n9/tsp+ncaZiRbbmgV0/g149XTrdXtY2K2N7gMYBv+oFMnm2S+xnB3JEHDNV
P/Df5sA5kZ4N9lJpy9yvSqkdYBTJUNroudN+ZpWL+ZP/Kgd0Ks47rOg8aC/e
/0jt8xPlA0euRL7fUHDUftriBjGmU0oHfqh+fq+jf9xedIccm+B6xQNdB60X
fq4+bj/5zJ6v8lMUDgiJfDqgXHvcXuXQ1lOxn+QOfJ3eOvNf5XF7pdcfV1bv
kTmgU5As0VJyHOp+qQPfv8b+Y8w+bi8Ndq/EAdHtppNao45D3Sd2QP1yn+Qf
2+NQ9wgfSGjsEd3Nc9xeBGy/4IE0p53LVHccs1cF28d34LrrZmYNjWNQ87kO
nPyUP2+n2VF7SbB5bAc478ZJZq85bC8G1s944MCTkFe8rgft5cDqf+1X3bHv
P8es3fZCYPmP+yfEVerev77JXgrMf7i/YdpmASe2JfYMUCAh0v1epbHPHgCm
J8LN
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH3Jsyjiyc2WUvL6LXObNN64BTyzO+
K19m2M/TOFOxIlvzwHKOioQfc5bZy9pmZWwP0Digr+W95q/YZvvZgRwRx0zV
DzCouocv7NtrL5W2zP2qlNqBV7wPv9TfOWI/s8rF/Ml/lQNbgtj2usw9ZS/e
/0jt8xPlAxqC2lMYW8/ZT1vcIMZ0SumA+p0TGVcZL9iL7pBjE1yveODMxBxu
X5kL9pPP7PkqP0XhQOQEWaNwqQv2Koe2nor9JHdgqcHWpxWiF+yVXn9cWb1H
5kB1t8JrVt4LUPdLHdh29q7xkT/n7aXB7pU4cPv8tAaVU+eh7hM7wNgVuepj
0Xmoe4QPcG9QUt5595y9CNh+wQM/uUqe2j48a68Kto/vAEf9nStRdmeg5nMd
YK5ewLNo3kl7SbB5bAem7DrV/GbZUXsxsH7GA907dks0WB2wlwOr/7VfPK2u
5Pj3zfZCYPmP+y8wt5tMDFxkLwXmP9y/Zn7ur/acTnsGKDjv3yabwldiDwDc
GL/j
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH6ht5l3fdmGIvL6LXObNN68DDsJCi
dMUl9vM0zlSsyNY8MOXT4e/n5TbZy9pmZWwP0DhQ9V3cMaxor/3sQI6IY6bq
B6Sieu4fajxqL5W2zP2qlNqBa/KckR/qz9jPrHIxf/Jf5YDVjvWah4Mu2ov3
P1L7/ET5QNbVpoplsZftpy1uEGM6pXRgxprXTW/lr9iL7pBjE1yveCCf5/vk
HPMr9pPP7PkqP0XhgJJU8YHHhlfsVQ5tPRX7Se6A+pGZpxnUr9grvf64snqP
zAGx6xotyiJXoO6XOqAi8eVc2+fL9tJg90ocCDK+rB27+zLUfWIHjlzZ2O0Z
fRnqHuEDek/6VlzaccleBGy/4AHhX8Wd/asv2quC7eM74Or4MFvy53mo+VwH
Srk01dc8PWUvCTaP7YDeGtaeB/8O24uB9TMekBbXj0u022EvB1b/a/+JPVsb
KlYutRcCy3/c3z97aUITd6+9FJj/cH9szex/L4+X2zNAQWTO37LDW7PtAfKn
w2A=
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH7AJi9dk+zbOXF9HrnNmmdcAjSsx3
Re1a+3kaZypWZGseeHVT7/ufUzvtZW2zMrYHaBwINHoUyfXlsP3sQI6IY6bq
B3jyGiyFZpy2l0pb5n5VSu3AIbsmrtsVF+1nVrmYP/mvcsBnqt6db5uu2Iv3
P1L7/ET5wOYA77Sr96/ZT1vcIMZ0SunAUdO+dx9XX7cX3SHHJrhe8cCUuWkX
cg5et598Zs9X+SkKBxaryMnP33bdXuXQ1lOxn+QOpN3puT170XV7pdcfV1bv
kTnQNE9n5d/661D3Sx2oiVu2JdDlur002L0SB5Y4XloqfO8a1H1iBzqC1nJv
NbgGdY/wgWYX65q//FftRcD2Cx5QsHz78o/tZXtVsH18B1T/3gjOLL0ANZ/r
wOl1tgF8miftJcHmsR0w8F697/b9/fZiYP2MB65UvJ77V2GdvRxY/a/9JbYr
ubRip9gLgeU/7q+Pf8+Y/KLWXgrMf7i/tMKxetaXQnsGKJitt0mF/3+aPQBt
7sQK
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{"\"Radicals \[Times]\"", " ", 
                SuperscriptBox["10", "4"]}], HoldForm], TraditionalForm], 
            None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.37118072845120165`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHOJ7xsKw72WYnL6LXObNN68BittyF
JtFT7eZpnKlYka15wHTKTaP99xbbydpmZWwP0DigZjE5eN26TXazAzkijpmq
H9BZnTyN8ddBO6m0Ze5XpdQOuM3sCys4c9FuZpWL+ZP/KgfCetOMnzA+shPv
f6T2+YnygauuNnMzLT7ZTVvcIMZ0SunAl6nfA/Q/MNqL7pBjE1yveKCirXHW
g3cC9pPP7PkqP0XhwI5i49+Jd+TsVQ5tPRX7Se5A/sorL+92aNsrvf64snqP
zAHhDquIOA8Le4j7pQ7UT7lxN9/N1V4a7F6JAy+YxXsOTwyyh7hP7ADLtx/P
yrUT7CHuET7QI5P+w0g2x14EbL/ggdkLpH1q0yvsVcH28R249nxbTYJqK9R8
rgOpelsf6LpNspcEm8d2QHdDZ8Syovn2YmD9jAfYtHRtW+6sspcDq/+1vyJS
Imjxim32QmD5j/vDsuPTK7YdspcC8x/u/8Nnumrp1bP2DFCg2Pc793bZNXsA
8Z279A==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHpN/6qrx9tcROXkSvc2ab1gEX16m3
k+ZssZuncaZiRbbmAdeZYZFx9w7bydpmZWwP0DgQJ7qeVeLRJbvZgRwRx0zV
D9T7LpjrfeuhnVTaMverUmoHPM6X3vrO/NFuZpWL+ZP/KgcKJs3n21XFYC/e
/0jt8xPlA3ZbrYMW8ArYT1vcIMZ0SulA+enzebHr5OxFd8ixCa5XPKD0cSOv
TKSO/eQze77KT1E4sOXg8qXLGyztVQ5tPRX7Se6Ae7dMX+h0N3ul1x9XVu+R
OfD9zNHdd68F20PcL3XgxtPgX22hifbSYPdKHHiz+bv2S4M8e4j7xA4cmbBM
aa5lFdQ9wgcYjm1YHLqjzV4EbL/ggcJ1azM05062VwXbx3fg484XgSevLYCa
z3WgM7AiymzZGntJsHlsB85or7mc+H+7vRhYP+MBn6kuai3TDtvLgdX/2t8h
+lSyb/k5eyGw/Mf9U59oH0wou2YvBeY/3D/33vSQbqZ79gxQoJ63589nhkf2
AHotwko=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHDmUw/jA322InL6LXObNN68D1xsif
234csZuncaZiRbbmgfLAXweUpl21k7XNytgeoHFg4hu2CzvPPLWbHcgRccxU
/UBT7j27W/O+2kmlLXO/KqV2QInx4tJMHVb7mVUu5k/+qxxoe86nk1MnYi/e
/0jt8xPlA2mH5vgvrVW2n7a4QYzplNIBnitLfqkJGdmL7pBjE1yveGD7pQuB
x0Md7Cef2fNVforCgWViC9V12XztVQ5tPRX7Se7AXVat7wztkfZKrz+urN4j
c+BU55GI7YFp9hD3Sx2I4WZ7G1JQbC8Ndq/EAYWURes2PGiwh7hP7ECG9t0Q
RrNeqHuEDyx9qXnskOZMexGw/YIHDrt/UHRuXWqvCraP74CnyiLjNfqboOZz
HVjjtj1YSWGfvSTYPLYDh5oLeKyUTtiLgfUzHshbMcNyafAlezmw+l/7A2sF
l61ff9NeCCz/cX+7dt3Ui0YP7KXA/If7p500sjRKeGTPAAUXZKd03ut8bA8A
0km6/g==
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoH5hTUHXz6+YCdvIhe58w2rQOb51zd
bTzhkt08jTMVK7I1D9xUVBcMvPXYTtY2K2N7gMYBp7yoOsFpX+xmB3JEHDNV
PxD64PeJwmMs9lJpy9yvSqkd8GLj+S2ZJmI/s8rF/Ml/lQMabCceqzYo24v3
P1L7/ET5wLO8yLMbDI3spy1uEGM6pXRgW0c4p950B3vRHXJsgusVD6w6wjrh
+xpf+8ln9nyVn6JwgGdvx/p5xlH2Koe2nor9JHdAn+nKsqCvafZKrz+urN4j
c2DNeud771hK7CHulzrw8pWFfHVKo7002L0SB/gYrznzyfRB3Sd2wOfK+vQd
72dC3SN8QGKfoNROnWX2ImD7BQ/Ilmp2H9u5yV4VbB/fgTZp1jVTfu2Dms91
4MuVpvlch0/YS4LNYzsQx73iGu+eS/ZiYP2MB5w06v4nSN+ylwOr/7V/3hKP
8yIhD+yFwPIf97fOdn82JfSRvRSY/3C/xsoZWpzej+0ZoGCjc7SN95fH9gBP
FLuJ
              "]]}, {
             Hue[0.6142719099991583, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQveB//8yuhdoHUt5Z7/WbdcpOXkSvc2ab1gGt4745
R7/etZuncaZiRbbmga7u7Q7fMz7YydpmZWwP0DgweY/+8yW2jPazAzkijpmq
H5glIHdFMl/QXiptmftVKbUDOif08hq/K9jPrHIxf/Jf5cDaGytn3vyhby/e
/0jt8xPlAy0Ocw1fZdjaT1vcIMZ0SumAyJM1n851eNmL7pBjE1yveKDPP+cQ
y+Rw+8ln9nyVn6JwIFTfQihrd4q9yqGtp2I/yR3gfnvwpbZckb3S648rq/fI
HPhx4XDk/7Z6e4j7pQ4wqeQFzg3qtpcGu1fiwO8yxidqE6dD3Sd24INrRsRq
/SVQ9wgf+LT7+/q5EhvtRcD2Cx5Yl8oiz5q9x14VbB/fgQkHnd44PzkGNZ/r
wNX15tHH2i/aS4LNYzuQ8iRSqP7WDXsxsH7GAw2FG3Yz7LxvLwdW/2v/IT7b
6scij+yFwPIf91vMUXKrFn5sLwXmP9zP1mrPsXDxY3sGKLjgJ/uZUeeJPQD3
Bb3b
              "]]}}}, {}, {}, {}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-14.323698283566477`, 0}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-14.323698283566477`, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox[
              RowBox[{
                SubscriptBox["\"O\"", "1"], 
                SubscriptBox["\"H\"", "2"], ""}], DisplayForm], 
             TraditionalForm], None}, {
            FormBox["t", TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-14.10333369458853, 0.}, {0, 0.6303720234231722}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{
      RowBox[{
        TagBox[
         RowBox[{"", "", 
           SubscriptBox["\"Ar\"", "1"]}], DisplayForm], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        TagBox[
         RowBox[{
           SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm]}], 
      RowBox[{
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"3", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"4", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}], 
      
      RowBox[{
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", "", 
               SubscriptBox["\"Ar\"", "1"]}], DisplayForm], ")"}]}], "+", 
        RowBox[{"10", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{"", 
               SubscriptBox["\"H\"", "2"], ""}], DisplayForm], ")"}]}], "+", 
        RowBox[{"5", " ", 
          RowBox[{"(", 
            TagBox[
             RowBox[{
               SubscriptBox["\"O\"", "2"], "", ""}], DisplayForm], ")"}]}]}]},
      "LineLegend", DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.922526, 0.385626, 0.209179], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.528488, 0.470624, 0.701351], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.772079, 0.431554, 0.102387], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.363898, 0.618501, 0.782349], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 0.75, 0], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                   NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.915, 0.3325, 0.2125], Editable -> False, Selectable -> 
               False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               Editable -> False, Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               Editable -> False, Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}]}], 
        "]"}]& ), Editable -> True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379156663431*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],

Cell[BoxData["\<\"plots/transient.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7773765525894957`*^9, {3.7773766400084677`*^9, 3.777376649726403*^9}, 
   3.777377095410503*^9, {3.777377139070513*^9, 3.777377143777725*^9}, 
   3.777377590109685*^9, 3.7773783790477667`*^9, {3.7773787003287277`*^9, 
   3.777378727460445*^9}, 3.7773787756744432`*^9, 3.777379158209385*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Runtimes", "Section",
 CellChangeTimes->{{3.766592582520748*^9, 
  3.7665926070101557`*^9}},ExpressionUUID->"be75ae60-b525-445a-a2f8-\
07a7bd6d9534"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dat", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimesout.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat2", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes2out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat3", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes3out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Runtime(s)\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Dimension\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive calls\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive levels\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Python\>\"", ",", "\"\<C++\>\"", ",", "\"\<Parallel C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
      "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/runtimes.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.767467469483581*^9, 3.767467519058926*^9}, {
   3.767467556456477*^9, 3.7674675579975157`*^9}, {3.767530949583584*^9, 
   3.7675309707708282`*^9}, {3.767531004631811*^9, 3.767531101524459*^9}, {
   3.7675311405548067`*^9, 3.767531141762246*^9}, 3.76753130045408*^9, {
   3.767902448613002*^9, 3.767902458418908*^9}, {3.767904719279963*^9, 
   3.767904767322049*^9}, 3.7679050738828983`*^9, {3.7679176371929083`*^9, 
   3.7679176384770203`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.011509319999999934`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0813438649999999`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.5962182649999999`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "4.287848875`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "24.673300776`", ",", "22616", ",", "21"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "133.293162891`", ",", "50049", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "644.16902838`", ",", "102480", ",", "27"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631484823*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.0016663130081724375`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0026924300036625937`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.01155992699204944`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "177", ",", "0.02193124999757856`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "21", ",", "298", ",", "0.06308137100131717`", ",", "22616", ",", "21"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "0.1508594839979196`", ",", "50049", ",", "24"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "0.3248912150011165`", ",", "102480", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", "1277", ",", "0.7218115940049756`", ",", "200145", ",", "30"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "33", ",", "1888", ",", "1.3522880889941007`", ",", "370476", ",", "33"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "36", ",", "2803", ",", "2.493587140997988`", ",", "661388", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "39", ",", "3965", ",", "4.547302400009357`", ",", "1135106", ",", "39"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "42", ",", "5612", ",", "7.907720365998102`", ",", "1893255", ",", "42"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "45", ",", "7663", ",", "12.99118743200961`", ",", "3063616", ",", "45"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "48", ",", "10450", ",", "21.246270654010004`", ",", "4844184", ",", 
     "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "51", ",", "13862", ",", "32.91214892799326`", ",", "7477740", ",", 
     "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "54", ",", "18348", ",", "51.23924410699692`", ",", "11324874", ",", 
     "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "57", ",", "23760", ",", "78.78004793499713`", ",", "16818920", ",", 
     "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "30688", ",", "113.30796434900549`", ",", "24581466", ",", 
     "60"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631488085*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "19", ",", "0", ",", "83", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48", ",", "0", ",", "245", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "89", ",", "0", ",", "598", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "1", ",", "1369", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "2", ",", "2827", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "516", ",", "1", ",", "5561", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "807", ",", "2", ",", "10248", ",", "9"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"30", ",", "1277", ",", "3", ",", "18195", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1888", ",", "4", ",", "30873", ",", "11"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "2803", ",", "3", ",", "50876", ",", "12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "3965", ",", "5", ",", "81079", ",", "13"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "5612", ",", "6", ",", "126217", ",", "14"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "7663", ",", "6", ",", "191476", ",", "15"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "10450", ",", "7", ",", "284952", ",", "16"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "13862", ",", "8", ",", "415430", ",", "17"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "18348", ",", "9", ",", "596046", ",", "18"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "23760", ",", "10", ",", "840946", ",", "19"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "30688", ",", "10", ",", "1170546", ",", "20"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "38940", ",", "12", ",", "1606694", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "49274", ",", "13", ",", "2180000", ",", "22"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "61446", ",", "14", ",", "2923048", ",", "23"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "76411", ",", "15", ",", "3880353", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "93864", ",", "17", ",", "5099087", ",", "25"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", "114989", ",", "18", ",", "6642312", ",", "26"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "139411", ",", "20", ",", "8576593", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "168576", ",", "21", ",", "10989255", ",", "28"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "202029", ",", "23", ",", "13972160", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "241515", ",", "26", ",", "17643841", ",", "30"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "286488", ",", "28", ",", "22128615", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "339030", ",", "30", ",", "27584561", ",", "32"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "398493", ",", "32", ",", "34177030", ",", "33"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "467337", ",", "35", ",", "42113553", ",", "34"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", "544800", ",", "38", ",", "51610691", ",", "35"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "633763", ",", "41", ",", "62937086", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"111", ",", "733337", ",", "45", ",", "76372469", ",", "37"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114", ",", "846870", ",", "49", ",", "92260201", ",", "38"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "973333", ",", "54", ",", "110957124", ",", "39"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "1116588", ",", "59", ",", "132897080", ",", "40"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816314924383`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, -4.464598137055273}, {11.5, -2.509069863034937}, {
             14.5, -0.5171484625147089}, {17.5, 1.4557851794440688`}, {20.5, 
             3.205721718753769}, {23.5, 4.892550934728942}, {26.5, 
             6.467961158094638}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., -6.397141872829248}, {12., -5.917311146054348}, {
             15., -4.460210731324506}, {18., -3.819842718743159}, {
             21., -2.763329782796962}, {24., -1.8914064449660575`}, {
             27., -1.124264875758159}, {30., -0.3259911242743334}, {33., 
             0.30179803849721}, {36., 0.9137222926554756}, {39., 
             1.514534178021714}, {42., 2.067839543782565}, {45., 
             2.56427123774491}, {48., 3.056181381333915}, {51., 
             3.4938418579366193`}, {54., 3.9365057249095132`}, {57., 
             4.366659766009154}, {60., 4.730109459905931}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQYNRg4MyKDB1OG95a9/TnrP7CF8CzR5azR5Owdu
5rVVryZ/hPAPOEDlv0H4Dk5o8s4Oxr1vvzse+AmVd3VgUtD6xb36D1TeDZXv
4OEQHmW0rkjpP1Te06F4tbX9pkUMEHc5eEPNZ4TwD/g4iIVu3b0xmwkq74fK
P+DvUDvv8h6xh8wQ/oIAh8AeQ22WVhYIPyHQYfnu62KnZFghfIUgB3kPX0ux
VVD+gyCHqvpfB7NXsUH1Bzu0Tcy2qpZnh+oPcZj4uLja6TuUrxDqsHFd/hS9
aA6o/lCHD5sv/q0V5YTqD3M4K/Xh1RQBLqj+cAdlr2nXolZA+QoRDrOvcf9c
ZsoN1R/hkH1ix77LO6H8BZEORz/zB0cV8kD1RzmscDx89JgkL1R/tIPfmj7X
1K1Q/oNohyUnF5dxl/BB9cdAw5cfqj/WgUf4UHnBSyhfIc6hUvP4z1R/AQcA
c+GaRA==
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -7.403909194843006}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Runtime(s)\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {-7.403909194843006, 6.467961158094638}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 2.9444389791664403`}, {11.5, 3.871201010907891}, {
             14.5, 4.48863636973214}, {17.5, 5.176149732573829}, {20.5, 
             5.697093486505405}, {23.5, 6.246106765481563}, {26.5, 
             6.693323668269949}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 2.9444389791664403`}, {12., 3.871201010907891}, {
             15., 4.48863636973214}, {18., 5.176149732573829}, {21., 
             5.697093486505405}, {24., 6.246106765481563}, {27., 
             6.693323668269949}, {30., 7.152268856032539}, {33., 
             7.543273346705446}, {36., 7.938445551164788}, {39., 
             8.285261134068948}, {42., 8.632662441222351}, {45., 
             8.944158830970403}, {48., 9.254357257392957}, {51., 
             9.53690656247793}, {54., 9.817275855717062}, {57., 
             10.075758773476581`}, {60., 10.331626977683165`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDjqbWdjM+tgdIHxNh9LdATYWP/igfH2Hb13r
xGO/CEL4DUYO1llFMxK2iED5pg7Zer/vXzopBuVbOLi7lmQy/5GA8q0dqngO
L/52VArKt3PYmv859s1sGQj/gIPDul7lm/46chC+g5NDXODde98PyEPlnR0O
egXv552kAJV3dXB4dSfkjbMiVN7NYWud18mMx1C+g4dDF6OPrHWTElTe06F4
896sp0LKUHlvh99WCr8LF0H5B3wcJN/PuXVSTQUq7+ewxfY+0+mVUP4Bf4er
v7/e2KmsCuEvCHDYpzX1js0cKD8h0MHkqtEsF141CF8hyKH4sqTEvRoo/0GQ
ww/HeU5Gz6D8BcEOCs9bGhX81KH6QxxiXMKW794A5SuEOrRVbVL4J6gB1R/q
UJCtmrg2D8pfEOYwv6giVeQUlJ8Q7nD/asCrJkVNqP4Ih5bPDUm7yqH8BxEO
r88VnS4/BeUviHSoY/jZwi+jBdUf5TDPruzk1CwoXyHaoey0nCP7Dij/QbSD
Gc+jBfuYtKH6YxzOnnsQX+gD5SfEOswJDLq1eTKUrxDncKSE7QXDLW0HAK8M
rAk=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 2.0850860858989155`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Dimension\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {2.0850860858989155`, 
           13.925788164890385`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}]}, {
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 5.805134968916488}, {11.5, 7.110696122978827}, {
             14.5, 8.185350223178686}, {17.5, 9.167745974343763}, {20.5, 
             10.026412899373426`}, {23.5, 10.820757804523783`}, {26.5, 
             11.537422936570616`}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 5.805134968916488}, {12., 7.110696122978827}, {15.,
              8.185350223178686}, {18., 9.167745974343763}, {21., 
             10.026412899373426`}, {24., 10.820757804523783`}, {27., 
             11.537422936570616`}, {30., 12.20679738284463}, {33., 
             12.822543944292201`}, {36., 13.402095936032913`}, {39., 
             13.942236596607357`}, {42., 14.453808127933891`}, {45., 
             14.935106475617856`}, {48., 15.393289368069954`}, {51., 
             15.827441165260032`}, {54., 16.242512103443666`}, {57., 
             16.6380150011729}, {60., 17.017503302309006`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDk1PknqfrBF0gPA1HSoniFz1ZBSD8vUd4p4n
lHBOloTwG4wc9h63eqfxWAbKN3XYrs13Z9NJeSjfwuF6let+e3tFKN/aYQJP
ySqbCiUo387h/IIbWRrzlCH8Aw4OaXMWn763RgXCd3BysLvxsXLeGlWovLPD
VRnJAKvZalB5VwfZz0t+X65Vh8q7ORT3PW8zDdaAyns4+F++43FIThMq7+lQ
mb21//h9KN/B22GFTiLX3BlaUHkfh6iL0h43PbSh8n4OJ/mcerQ+QfkH/B3y
GB+rBE3RgfAXBDhYLFZ17TPQhfATAh0e3zH4svMYlK8Q5NCwdFnPsXA9CP9B
kENiB9vneY+h/AXBDpHW04z/ZelD9Yc48DQwqN58C+UrhDpoR2ZvTzQzgOoH
8lN3Sd8phvIXhDn8PbLo+7T1UH5CuMOiM3/vT3wJ5StEOJzqkmX8q2gI1R/h
wJmbaHozAspfEOnAb7tJ068Pyk+IcvisldIcewjKV4h2aEwN9NH4CtMf7bBC
yHrJBjUjqP4Yh4IL/4KFwqH8hFgH3pr8A/5tUL5CnEP8/Vk1DVuMHABNvKsC

             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 3.3008608660431737`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive calls\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {3.3008608660431737`, 
           18.705085552035026`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 9.}, {11.5, 12.}, {14.5, 15.}, {17.5, 18.}, {20.5,
              21.}, {23.5, 24.}, {26.5, 27.}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 9.}, {12., 12.}, {15., 15.}, {18., 18.}, {21., 
             21.}, {24., 24.}, {27., 27.}, {30., 30.}, {33., 33.}, {36., 
             36.}, {39., 39.}, {42., 42.}, {45., 45.}, {48., 48.}, {51., 
             51.}, {54., 54.}, {57., 57.}, {60., 60.}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJw10clKw2AYBdDQlUsXXbhw8TtQVMQ61lqrxg6iKA51aOtEKLj2FfIoeZQ+
Sh5Fy38aCJfD5S7yZWXyO/ipJElS+39nGZ+1NOaC3JSLsi6rMfN9XuIjXuYm
Bz7lVT7n9ZjTlGsx0w5v6Lu8pe/ztv6Kd/TXvKu/4T39LfuO6R0f6O/5UP/A
vrN45EbM7ImPY4YBu0M594n9M7fsX9idwiu37ec+s39jd8yGfGE/YnctOedi
rL+0f9dz+NB37Dnn4lPvv2Rfeg7f+l76B9xNOq8=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive levels\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 120.5}, {0, 60.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{"\"Python\"", "\"C++\"", "\"Parallel C++\""}, "PointLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631713992*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],

Cell[BoxData["\<\"plots/runtimes.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816332767353`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temperature - pressure sweep", "Section",
 CellChangeTimes->{{3.766592615367303*^9, 
  3.766592626251006*^9}},ExpressionUUID->"c2959b04-1b75-4321-a41f-\
acca99c56f61"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"press0", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"press1", "=", "10.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp0", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp1", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntemp", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npres", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sweep", "=", 
   RowBox[{"Import", "[", "\"\<data/sweep1out.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Median", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
            "sweep"}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"press0", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/sweep.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.76797441972853*^9, 3.767974432723997*^9}, {
   3.7679745105405893`*^9, 3.76797455934306*^9}, {3.767974773725747*^9, 
   3.767975020078126*^9}, {3.767975052455942*^9, 3.767975204700876*^9}, {
   3.767975249793244*^9, 3.767975265357834*^9}, {3.767975501386704*^9, 
   3.7679755024689083`*^9}, {3.767976308001234*^9, 3.767976342670101*^9}, {
   3.767976424351769*^9, 3.767976427222715*^9}, {3.768735103503188*^9, 
   3.768735130752122*^9}, {3.768735177807578*^9, 3.768735240765869*^9}, 
   3.768735887133437*^9, 3.7687369854116898`*^9, {3.768739517138527*^9, 
   3.7687395177520933`*^9}, {3.768739819874299*^9, 3.7687398338631353`*^9}, 
   3.768756048051762*^9, {3.76875610678244*^9, 3.76875610811451*^9}, {
   3.768756149752689*^9, 3.76875616713223*^9}, 3.7687563512518272`*^9, {
   3.76875638245875*^9, 3.768756398025935*^9}, {3.768761363033943*^9, 
   3.768761369263657*^9}, {3.769187041101717*^9, 3.769187044627632*^9}, {
   3.769190357182425*^9, 3.769190384467431*^9}, {3.769190775863057*^9, 
   3.7691907769403667`*^9}, {3.769190979483322*^9, 3.769191093948797*^9}, {
   3.769191192278215*^9, 3.769191204420977*^9}, {3.769192172115891*^9, 
   3.769192173115179*^9}, 3.769192844668851*^9, {3.769192909982746*^9, 
   3.7691929197983723`*^9}, 3.769192988228796*^9, {3.769194123012789*^9, 
   3.769194124818673*^9}, 3.7691941754909286`*^9, {3.769194355125226*^9, 
   3.76919435686584*^9}, {3.769194708421194*^9, 3.769194711390852*^9}, 
   3.769194892749398*^9, 3.769195161669457*^9, {3.769195213740037*^9, 
   3.769195231962879*^9}, {3.769252452905332*^9, 3.7692524547796183`*^9}, {
   3.769261394229494*^9, 3.7692614190987177`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
RUH3k1f7cst+jG1+HJUkOoRHSWcXeH2lsGbTNv7miwNIu6HtasXPhLrotscD
PRQ6/m3/cTNmEHtyHJfKdTFxx45hfH2SwpXCe+36GUOgqo2Knr0dxr7GOxdc
FtEQU/z28XcxE42pakeUIljoXmmYaapJI+bX3sSsrmE0nVwxM+MEG6fjfg0o
76KhVlt80/UHC8Ujy5M1tnHw9M4LKSE3Gh/Pn/+S9YUNPuvYxRakL7hHW9nK
BdAQ6IjW5p7nID9DcEm8Hxe8+ojGwHAaXc9LUxTUueAfDl/CEebBcl39jn7i
hdPii2TsmVxEvl0tu+ERD7Nd5n82fE2jwissLPYhD6sesWSvqlEY2Gutk0Tm
7eBWY4tb0hQYS/J9Z0dQoLoUb72+RqNvs04jh/SUk42yPpPlJN/cByxPz6Sx
M23vflOSd4+9H3rT02kMJDnIqFyhUHgmvj3pHwVD5havfl0aHyyCe4emkb5v
rGw3YyeNRV3zPVu8aGh3GiQ/CeTh4lwbb7crNGxnyz4ZeUjjcK2G78JyLhL3
Ve/oi6bxdtfiM0rEnV8s56ilEl845h6WP0hyZHemot5hktf1kykDm66zkSaw
4lfNOxqXE7cJPSDvs+qfQ0y1Ewtb78pVGRNHyUsFtDeQvIo9amDoaDiMxapL
thW2kuMYKbldSvIt1SNsrd1cJh5MxI3ak9zba/rd1I302nkhsSpzVw/Cp+T3
w3/EadLDzdNFiQ8jXqyRyt7dj6OFKqaPKmisTLb+kPWUxr8/b77befbi+FP5
MT3SQ7dNd/DeR/ZNQMQmVwm1HpgnlMV3k95v87lgzW9y/Y45VKe5nOvA18Je
3fJQGud9WwaZ7RS29e6IdLrbhiPF7w5hL+nPD5+uqZKksHrk5LrdrS0oOOfk
ni1FY4b41QNZ+4iDfx28pSPVjBDZP+eVyH5pHn128G4UF2GazjdXWDei/FCy
Z3wShdFPAgp+9RzEXcgSEHlQj1PCuqeCD1EoMsnZPfSK9Pmhk5ohn+sQ7JM4
JCpAwYm7RKn3FAtzfv00ObWlDmMfnVRi3vHwfnv2ug6VYbRfthW0+FCLd5JC
qouPkV7A267RODwE6XBVB02dWvw4zK1PWMCDld2PiorEQXyIm22qfKoGm49t
PiZVxsW7U57JpqRnLeyPu23sUY0s2uMsdYmLjBAn9buS/ci5dyDfOagK+9Kv
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
9U0pYn0AlwvhLeeLqyNpXD1546kZ6WfLYy7zxCs4CC+Ve2BE3NZhHud+7Tlx
Vtivx89S2Wid/vtM/n+uUizGR5I/xmuXW6y/wYKc5MJtml9p3EycKzKeS2OH
4ORUmfMwHszc52PURvrpbdOzAyT//I0K9//bysRyya/LB4nT3t48oHqD9NaH
Q2NmaU6DsK+QqLlSS+PZ2QVDKiRH20dbNa2C+/F3WPX8CrIHEhWdH9WQ45RW
3zSDL70Xb/ZPV/hCnPZms+IBjwc0fIqunbFK6EFcd2DNEdKLnczWiC2KoBG9
piUsbbgDBu6v/RPI+20vfrBz8huFkNDLa0Ir23Cfv+XeQmsasynODcZaCjMx
kOUt3Aru2ydpIWRfsPUPPCk+yUPDsuEhB/NmZA9UpPMxKXxTKwlLe87Fs+7J
zO23G9GVOhnvlU4h4lKE7m0WB/NPutCatfXY08mu2OBEfL6lTnVnKxuP53AX
yzfUYXTo3NqPEuR5JK5kGUezsGxJv9iM3XVQMXx3wOgTDxnXJSy27BlGw+s5
yUOVtZDcK6tVcYYHG/ZIwQZRJs75BhZ9Na2F+hytF7uX8jBirPBgbeUg/HP7
3S3DahCSFPniBbk/b0qXdm28PoC4gL05g7erMdm/+VRgMBf9VkVS19APQZEo
3oxHVbglb3fYiuSy49WTmdW/ejH5sMpbPqMS8h1h2xQnOJiqavCZl8lA4buc
czofKnA7N7Z0IpPMy3SBlke13XBnRdeaV5ZD+uCqo7Ykx6ljQxaY6IDy07Op
fW1l2BQv9O2xEgfXvOKlxBe2Iv1huy+n9ytu5t173DvMRmdFbkuORiOWrt5q
wWKVYua0No2HB9ox0fphWdkfBqbd6626akGh8frzH6NLO2EZ5dj8+1MvZjq+
DJ7tQJHHV5d4rO7GU5ERH+/4PtwUn+M1zYOCb8tagRNbGGifEWCuEN6PVV86
/rmTfTP65rearGsvlL+LrmgMHEBi8subvQmkJ5V83V8b2Yffvk8ngjwGEVFx
eYFFLpkvkQf+QR/6UXpCp0bdaQjuhgceF9ZSOGKxL6+xdwDHivHu+y4m6B6b
7VdYFFYdTXocOjEIhaEV1j7KZE+dEwlwIv3rUvC/q4biTJgvEZ+amsGC3c/C
18byNMKfHXWbUhyG2YtZ8YE9LPgneQ6v2kyj6XLb7uwtLLiGztkyi/Ry1rDS
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
2Vw3/t3Efl3TJzC3H8JfWynjk+PwuK1/36AsBsQLPIrtlwYhQO/+QwuPSRCP
ejJmq4q4cWTup5jMMHzk8dtsd2MKwrT8ckZ0MXD9/v7ddZT/7Kz43qXANPjz
o1KyRrn26K3gjvdj0FLy8Uotywz8XePkmnDBwHydqZr51wT0PHxnwoXPQLno
N8PeG4iHisYsFU+mQJxNX+Lz1Cxsk84ZOH0bgzMv98i5dUwDPXrit3fPHCSH
eF0qf4Fy9r6f5gLLMyDCEdQl8m0erh3VpIvVYXBKuiuodd8ciJL4i9oqiVDp
x389YwiD03Uc43tgHtj7Lg725pDgos1oYvcPDAJqPL/2WxNh1cks2NafDAMx
t2rLduBQNDb8LNWHBALrRsLjxhRgET7z87YsDrmPzqdqx5FBXsq25tIBKrxN
+S19TQeH9ws/r64/pIBbRKADcTMNTviV21s5oTqRt79Wm0wFOb9gWVINDUy2
eb4pC0Y5AAqJy5po/V3hkjtqSgf+5FeSG/uu+le5zimu0GD2wTe5yCk6CCYv
PLiG6saY402bxxs6JJ3PO9jpxwCQPrlrAPlQaE/SqUIXBtDmX8kLM6M+MZiU
fPwzDpOMPuHSzRjKD5SbJ5C3/4yMTBZC9Uq4wZu33RRD+TY6VKEKzetErfmA
PPKkI2n7Pe9jkGNtGLIfjQtfadbu268w+J1i97QZedEXD9Mb/HI45DPPjBnL
IV9Vui0rhfJZXkNB8DbEa43LIY/ZixlQqv5YaAl5c2+QTOsblFuMMw+Yp0gw
oNbb5rsX8qy23jM5pAIcrmy7x7yXmQ4WJtqNs49xOKoc4LYPcWx7tk95GcoR
z3JCH5xHPmn269vRcxv78EOj7bW+UGDlxS5/wjfkX+/VmG8jLl1NtGQafIRy
tOlBA70BHBzVKIRWdP5yxrP3r9wkQaLhWaFaxLE57pNqtoh7k7q8rpQ6lMcI
Ng0XNjj2yWHxDxqXmMMVB7PmUf8U4v1vHXHsSR3pdR7y3agqxf5T7DMwOeQt
9BBxjK7z2PUM6itevwosKQdRPzfX/6aGjkc8y0CEhDhmuxc/Kf14DFR7F/c2
PkIcHGyZzdiNQ/DW7+z7xEdguiD54ElXlPNkNuOBqJ+ss6nv2eYyBA3j0rKl
aHxnyO+a7DIZYJ5++NPPwgFoD2bdJYnmQ+JB3wUNAh1CLtbXjc33AduBydl7
HzAw2yn7QGLnxnXGJde/SfWCjojwpn/XUJ/ZXWsxwE8DxUCJ7Gg6AcTn83hi
xTEQmT+W2dVLAYMFAVa3KwQoIX7q2tbDgAc7tsU2pZPhp5wqpkvshu99d/ak
RzBA+vynmhqUa8/eNBSXce6G4WAzPvHLTfB7m7SoW1cvbAnUHOedZsDIJ/K1
qXut4BB6qUjyZj8QEyf1PtAZoBEU2fewrQM45B8cnJcdhJt5NyvsVxhgfGV7
7uuwbtBQHHxbODQEtu+F921CHLMOH9FP2d0Dr57wnHSJG4FDPVXJRag/e+19
/tujtBcUn5l8FT86Br++2yzrI/9YlgwZLA/oB3dL7MLuL+MQfjtY96UMBp36
hrls6oPQ+lGp4YbBJPDq6jLLq2DA6BC5cJFlGA7IqPP7ekzBJCvf5zc6yLf3
f99b0TYCB05Nt+Qfmobg/pkbh9H8EEYbZtgzx8DCPu5mz69pyH5fqlzujIHc
1auqC/UT0N/cREgZnYHt5JezWBDisHFsfXHyFAyUn3t2smMWfs6G+1xMxwCW
Lan2ldPgF4uFUmvnYPsBy98dzzBgOy/DvXNyBl7Ix1vcK50H67YDMeqfMfi8
xKxSh7yUPCtxQK+ACML09R2vB5BfM29SSjgwDzl/dWUOxZPgz7YPOunfMdhd
dlFAQ4MI3z4fb3t7iQxJ6x4hfpw4iDW0rC/bkED5t6K3ihoFdursLbU4gDgT
rTNbgjym7Z/qzhp+KtiZ988paeFQkTLS7B5PAR4VyzLNBSqQ36QK8qG+mzii
83PrTSrE4+mjcuU0EB785m0QhIM2nuCqqUSD9X3iY0Fn6PCyYcv8y0QcphoY
gzcoNLjAThhr6KMDlcXAfjvigbZPhEFFHvLKG0/GedwYsFhwu9dn4/o3N01r
GFYMeM33dMJhmQHDzNMG3TU4vDhr+jJ2jQHNeeaGj0MwYH3h7ZOE6pg+E60w
q4fmM2xO/04FBu1Y9VEdFRx2+/4o07iDgePDAr1E1P+3cD5f3fQe9SOv18ce
TaPH2nu6N1FeuFTP86UG+VDJoY6qP4h/BVvHdPwcEG+IPTHBFQzwbvU7de4G
qn/nSB3XHOSxcuV6x5QYUB1GXWROQ/l0XN7CAnEsqSPc7qYQHe5cam+7kY/y
ksH5fckvEE94RDi4flNBbfzn4wXEr+WwJ1g98ufl78rvCgYpsLb7etBllH8O
F/LUrCFPdLK6ZHfsHRm+avmbblzvmqnjbfIxxLE12/crTVkkiHA/miaA+EbS
uPZO8CMODU9D2BzI8zAxq3XiA+JYcmS5bw16/847R/rZOefgxI+d8zYdODho
2h+49AyHm7EuMRWHZoAUHJ62jDhmrX56igXx6b37K06Hs1OwdC5Q9S7iGEFa
6u7zjfsxxJvW82Bj8HAmJ84T5Uz/Y+9YTkmj83skoqaqOwJ+4/l3pq6gfFmj
ICDuikH/ew8n8YQhYEoOzLY6jF5Pq/+z9QkDLIo9hba3DMBtozsxrSgflyuq
5NNRX0tZZNFcYu+HE95s5wHl6b6L1xa6RelgdvT7swmDXuCXXpTLRPPN+9Q6
lHaYBoSc+V7BZQIctDxjKIhyionZ9Z9zDApE1LCfX/MnABs5RShviAFiDufk
x4vJsFf4isPE926g/j0fIRHPgKmcrQ297iToOcxe/dm7GySK7uwSlW6Ckud7
C0+87oUxrn2zUlMMeNInf23UthUGdp6XWz3fD4EStSZtNAakBzb25iR1wN63
WeVVbINQqmr/0Ret00eDJYJyF7shv6hLNfjdEHCZr0ruQn3YdzC0hR0dbzkT
R52Kywhoe+ZkfNiBvOy8QTA5rRcuz+vorXCPwbFE5XV7IXSeOgopYeb9UCtD
KajOHwfOiP6/0QdQf1b8a9InMAjbHBS27ZWbBMKRJx+3HMdgyqOLW3ZqCFjt
PqrUnZ+CU9//C4xHuZjrQkFf+LMRMNe+SP+xdxoqqk8dYbfEwD/r+t1+nzEw
k2POl0Be+OYeJ5bkhPIPdYw/N2sClsc/OFs1z4Apb9Eo93UMDJZUj/zznwJd
MwNVlo+zkMsc7BZ5C4P742znyh5Og1DsxI63L+fAXcV44XsRBooaY+HOTTNg
eSFw7tLDeYhrEgt1RPMqnFz5lG9hFiw38X7kSiNCeccSa3cfBnfOiqQb8MzD
Q70e6AoggeGtVy22yJfkhq8HbJYlAn7+y/RZMzJM6zv8Vd2G+iX/1PmPmii3
2X+IHpKlAKbPqySM6tib/5zG1XNk0AiskbywhQoVi83ua5rINw6RJWX9KBDT
29s0PYm8qD/iwfgFlEdYJ1uTfKhw5stjnUdPaVCm7FhEDsThWYyw+jcJGhy8
eUiXdpwOPQ/yRQwSkH+sB5Wsj9Bgd9ygrkoLHU4cmMt8eQ+Hy9837T+eQQcf
1QK92PMMUBiW49j+EuWbI9+y/tNlQG5ern4PWjeJm4KjfD7hwNrDdcZ/iQHC
63xbhND4lmtIPSGg+l/aodbYfRqDBPJj5h2lKH8bx1xJPY2DpfkjfYU0DEbG
rDdvpmAgrhJ7SB/lW6qwfkfyKOr7FM1NS2I4qNlxLLJoYKAUc9acgurzqPY1
Jup5xJkneNWXWgZYr4z261xDeauAhWkC5ZMnaX9vhqozIJp440Z+Kg47/Wnm
n1H++sK78DBCkQ7G98zNdufhUA68+1ae4/C0TseEl4sGjlYeUrcQXwTtrLHD
6FGew3q1CKPAoujIGstX5JWBNZ+uII6pFH7NV+lA/af4U29ILw4ft1gmF9Qi
f3Svg7aXJHBXiHzihziW8S751BDiWPlUW/2pHURY7n1gwt2D/HFgejkE8fLs
fc07G/9P3pcT+LsUcezajpele9Hx1P6sMMiymoEPsb+fmLWgHBj38XI94pgA
6eToqeApUFpmN/mOOLa2r3+v+x0cIh0OBvaojgMPjdr9F3Gw86jGjtfKOPik
jb5v8ECetOfkjL8PyoV+njK3UW4yI8zhJS+HYPcCD5GM8m1rlNTu6+UMSIrR
/nyPPgA9CweGLvzBwMf/T7Pddzocnn/DEi3fD86eA+U9aH6GD43IaSjQ4cdd
lSxPn17Ye0mpdHsUBhfwmJ+5BqgfnrRrjdvUA/YRF8cyD2MQzlb0MGsrFQiJ
R1yvhBGgYOnBJ8FJNG8adUKp38gQHTAaa/inG0JsGlTyUhkgeHUHR0wkCV6J
XtsiH9QNjYklgbtIjRCreU8nM7kX6rlUb6qjv8ef6g4QBFqBPa+3w0K1H4Qk
BsnTVAZsUZw6lmbQAa3HdljxkAZgXSXAMg6tS5WiTwZSp7phcrf+GCFrCGim
vF9kkT8cTE9cZRkkAPOFGOeM0yOQcKVMrms7BvXL1sWzvr0gLfmFavZ9FMrj
TO/6C2Kw4LX15AAaDxnWx5LDkePQ7Tkid0kaA07xwXW5xQGI2E5MUeOchDmR
56QZ1H8H+J9/ifw0BJt28a+aGk7B7qGAJy5aGNi8vhE9GD0CdweqXkdyTUNB
/hkHogUGTp6mOvKGY8CecPHS2/5pqL3BLXz5EgYnC16v/XadACHbas3LlTPw
vnVlq1oABlebxSRL7Kcg57zR7t3PZkG2tP32yxQMjFZxw0tx0yC4NklvyJmD
NwP5e4QLMcj2/nqVtxTlOZ7rX68lzcOSRcDzpGoMZkNz7zUMz0JvJU+OeCgR
DDQMlFZ7MNjW9IDqtDYHw0Uu0eUuJHi/+n5Cho5Bmv5Sl9AuIrRLmkseBzIs
R3nwcrDh4DppV9kjR4KKXbpN1YIUsARRPbo4DmGOhNykM2RQ99e/ovGLAlMZ
vaEdgANx3C7itB0FXijbczR0UmHmT1LZGzscVuHUM21HKlzGC+3V79PQ/BGO
pgTgYB4XIBiOcv+WaIULSQfpQEvmfsWIw0FZtD35QzsNHuwkXBisoYO1r6W4
Kco1Gv8M/y5E0eFzfNZFCVOU40/fzy1F+UXIeLOfnCoDElyjHfxQXzTQJXHz
VOMorzLNueAoBwW9dKz1w+Ce+IlEf+RLAb6tg/1qGPS8DoeclxjIFCtPvzLC
IfW4mJ1SIgZNPAdPpcxhILbZ8NnlNgyapz5NpPdjEDHAoR6xB4eOOqqXhAEG
S9ZvnTDENS2LQ2rXrHEY7PiuONXMgF/hYiRDVKeuvK9OXkb5K/vkwaX7iLNJ
uwIunE7BwX6ROUkBcUyYrYMoq0cHVUtNpaqN+5f4Stu6I264z3bdrZGiQZ++
Efth5HuzQy5S+eix7Hq9lhnqG/epLyaffsEh1u/br6F3OLgxX6DPzJJhJvba
uz2ISyQh83puxLHWCHJKwFcSzN5ydmhBHDueuzyficaFIp+zM0WJCGKPE7dd
Qa+XYHXJO16OuHQrdF7ZZg6YJPwq2ToRfwoMbEfR8cw8a8qfvjEDsQqsjs8R
x/RGIrg2rhMX7bJZNeXRFGRFKmzTa8CBN7GzaX82DvFrW3W8Y8Yh+amhRwTK
y3POuR5T2ii3Cvt8bk4dgfnYmpuLV3HoNltKaYhGOYBzK9vbziFQKHGJ8VDF
gWtSLqa4jgEZ79UYD3YOQvtPhRuT/xDvEsJPp/2jQ2Odt2mcWT+w3qg9Z9mI
QfrqQKW/Oh1YJkgsvhm9cJx/m5RvAgbxblW8JGca3E665tPG0QN3SSoXF5Ux
yLkfwpjah9an22ORNwkElCeMTULmGVCU4fRieJwM/cxN1v9XdObhULZRHJYQ
SYmshSxpsSsqyUkRspRSqGwlPksbZQmFbJUWkZLsS4qSSLZQSci+L2M3Zszy
TiKSpe/4y/WO65qZ55lzfue+met5H3G2wAyH5SBbDBMG2L0Yzc8pkF32Z/Zq
cDP4bu4eytT7DoK1gRsqy9qgz21FxGOsu6ZLlw84etUBubgk/pZrBxzwT5rS
RK88TuFKls5qgJHKaRlAPtK5v9+uD3ksw7jpFsu9GVaSlV8vfeuGVUl9dbeQ
x5IM4lUaOVvhj7KLWrlnL3Tm+WrKoVcaejoP5iS2AV92WlGANAnYqkVSa5DH
lgp/PPzp0AHUO09k/77th8x/FKnV6JXPueKOH97eBSsCuu/a7B0E+YQPffeQ
x+IanIRe/OyGz3Q+3yGHIbimc/spH3qliZpG9+THXhgk5SoKbB2Gz2PHTjxE
HrtyjiPe4BYJfssfHzrEGIZnUZLr1qNX6ry8wL/x9QDk9DydX9cyAizvffdo
yAvfr86+rbg5BN8LZFvKv4yCR/9a4dPIB4P7P3VczRoG9tB3mRcLxqD49Ehy
bSYB+5+ELMi2joBcrI7/pkwySM1+UNhbTsD6X6aynfOjYGfcaP7j6Tjolt0p
zOpYPm/LvN1xExm26/K8yg+gQO+x1Y9Os7AfPzwu3rRrHPj7R47ssaKCyJWS
qn282FdHuhPbjSlw+0cFo0x9AnrnXec2IX8oX5YNiTxPBVGBlAe6fDQIFNqk
vIQ8s9B13UXPbwK4uSJUqyk0iKE2nBu0ZQHh75EidZ0GPfpnivqz6XB7L9Pq
jjcLDhe6CFor0OFndV7RDqzDAxxbm2nIY09vuIU+HqaDxDv+Yu9GBrg1OxiY
PEc/Y/Ob/fGUAQuPbhRX2THhKiOh/A3y2O7rL1w4zXBuVvwqXj/JBLfyPo11
6JUCJ7tOaMwx4WixxvNtvgRoafZ4yqNvNZyK7HyMHB3o7fJs03sCGBf+aY3s
R16ZNrf+GUVA37NXsfx0Ajh8eNgTy9AflZRIpgPL5//PxXDIsWB+hqix3kfA
jgA5u+wdLMjmtov+cxY9kZb+UKgE89TwwAg3ri/i8mAUA/lk4yaJUy17ls/t
pkzqPsD+5VUWYUevrGpZfL9mKwPkHih8L8Jc2LVbjKyFuTxt3uKexEmHI+1B
L1SQkwKpvPmeyGN9x723qI9NwHQG62om8tjJU9xBOchj6pufkqq+UIGH6mcg
gV4Zfnr9UTLmGL9veZRlCgXqo2uVjTDH/BWiC4OQx/x5eM/zLpIh/oR/L7Vl
+T52ile34OsIW1VcK9w8BhYfJcMikMd2Nqcq1CJPZf67ectBD+fl+hy15fsh
3JRlkN2RxzremASt+W8IRJ0l+78jj/W+nU/ix/Ve4NJmXRLpByHv4B30DBZ8
rhrIyVZB3guN/Jd6uhd41Ghn7N1ZEDlxZFfUReQGC6bqg/huGJt1uduhzgK+
uxN5XtlMSGUWG/uSOkG0QOPDkTn0/J2rZc9OMODs80ojR4kOMOA06auoICAo
3zBEF/fxRqqa7FHbNsi3t0+TvEVA6PV8ozkdOvg9PrWjcaEF9AQ8IjOUCCAp
fR76PT8B277u+J3ni4+nrfxPkcSE10GGB38VUeGjqv7rJzPNsO/lM/X8u0ww
MfC2J9Bfeop59Hw9m6GYa+jWQk4tpP2ePP6SrQNmhUJHrSaYcO+g92DxQD2U
kBR6nd7i+5aXPbo4zYSd5uFJ+7ib4UvnBQf5s93wSfNzSQobAXOiJ46Kp7RA
z0QSlczTC+sM7eQPr8H390/y35+9bZAu0Xs542Mf6J1ejKKJENBcWbJQN9kO
l0S1rbtM+6G3Q9/TewsBtyPDKzYXd4J+3M1Kre4BkL8sqDK3k4DCTItgr8Bu
4MsdEjyqNgRTq4dpN9BDqFtl9OvR7wV1gr8HzgzBqtdvMxeOEcBU+blKZh0J
AlbJ+b0vHYb/TP3P3bTDfHDanOclMgDz1jyBd56MwNm7HSNyHgTwhpy4dVFj
CA7Kx5zcEz4K8R1ZF2OQA/48F8mUshuG6GgpBYrPGPio+v9ZmUJAwQdSfUvE
CLS2ZbPFupKhNunobc8i5Gm5tKnb70fBfdveTr2z40DZLrt2tImAGxwLWwO7
xmBLScfnYQMKrCtTL/CnEuCdsodvD4sMwi+zzzvJUGHp3AjVhgM5h9fnF4uL
Aktfb3PSF6hga/5YAjazQF+ytOulJBUEP9m+vNw1AdsTDh7frI35MM/+yU5z
Aio89xtN59Fg8/mpsBVWyDlLXWI6hjQQ7p402BBBh7gCbW9dTxa4+3+9571E
A5slHUMHMQYM2l8nUkNYkEt8WHxXQIdd76IM375mwHTh2wscOM97ruVdprky
YG0S3XB+HxPe0aikC9hPwm1Fw7LS6I//zIwMG5iQDHIW34tYwJPWdMKmiwll
78qNntgSkMPn8GNbHQtoHAGjX9UJ+HlQIUEI+XVoQDi3CD1X8PIOJ2ms8yRL
63iefqx3qpHXNRIB1lvHqTeRvwJFHsctCrFge6njftUzWD9+BW4kERYEF3U/
nTRD/uKz52D0MOHPinhiryMLvjiqxZLDl++Drv7jpRUTLq6srp++gx6lu/mT
VjILbBlvQ09eYkDvg98pbvEsKCPY73nierq+dR6gmtDh60417xHkFuIFzSrn
LXKkuOb8DQUarAjzN7HGPCqv7pYnf2ABPTGqgG/1BPoCSbq5CZ/HomlaAvM6
oPuFezKVAkJlPhI2XSxIGo+mNKFXp+qP0s96jKOX69QuIHdFbzuZ6pmPubc6
gpM7dgzck/9ce4HcpbC4dFbkNQvOZ4aI5xePQM5C+mZt3D+F9Lsipfj+nR4F
bbftH4J2dajvQ+7K9GW12D7F3FZ54CDAPgAH45pOiBTgev6VHbthh/vwnedq
ZU0viAjGRkTeYIG1U/ioXQLWcWtcWTZPD6THXyhdoYu8p5t3Wb8P+VVt/E/s
kS6QynlP91rFAiva+akdYkywaHsvHXyvA74V14syGpAL+ozd+S0ZkLQmXe1i
fRs0jaQ0q0QTIAHn/CIe0CFsfZW8mEQr2Bh8rC3UJcCWyjQPNaYBKdeGdzGu
BYzd7xXv/4n1ZFSzMph7ArzjBIaHhFuA68G7hKpEJvSYHAu/+Y0Cc/v+plVF
N8PQqc2exqbof7PhzTeCx2H4pubRLP5m6GtLCxpnrwcPyemzQ1qdUOjJvomE
81OObd9w2q4msFtUGkuidkHi7eTwwEUmrJd3SVbdiXzHcHazi+2Bv9E6U3I8
yJFDu46tq28F0V8pvyT1+oCRTrKt3YBz1M0267x3Owy0dh5sHSVBb16fZJQ0
5tXIDrdinU5Ys1rstcalAbhq+KpXAD15/f1ZpXVc3aBy6cz6uD+DkDvkFRuj
Q4CrX9VPx4YeCOU6qn3z8xAI++kdFzZFb/0alV8S0wfZ/j9Zueh5lqICa59h
nbvuV6L+590PGpvOmUdZjIDdEw2hbjfsB+X3Gg11gyCxlyF/4PAoJDRxJxss
32dE8MVn0XXDEFPptUDsHgPVDaQdH58TwF5qR63bMwKNbStaE7aTwdwp94M8
8oKRnty6gHOjMJNw/6XJxnFQqQs+EFtLwKvpCQ2VyDF4ZykeML+GAob6p35w
DhNgvD3ZkiudDPv7PtlmUShglXnMYPnc+bnHfdrlpeOwqfsxmxLO7wxlNv9K
URacchWT8WqjQHqJS2reiwmYmM59l7KLBR8unV6lTKeCqeghPU1vGmiusScH
H2OB7PMkBpmdBpcLpMZLzOngc59f3BHn61chdzW/BhoInZibNP9Fh9YBw9aZ
WyxIj7ZIK7hNB+oGvV+JtxnQoRtkZBWFviF2SIjYywDFzOhf9A1MkN9TUlmM
nCIduDd8608GsG5O/NqTyYTPxNTujdgnnxW15uzxWvSOwVQo8rFOsnKuP/bV
FSXvKG1JAkT57HdVxxDgrLP+sU8gclDbhg3PXQmwsQtWL8E++P7H1noX+knS
irLY2ULkrcZs1bdcy3+3ebH5ZwABw3GXxU6uZEHyzQHlVPTkfzLfKNkLTPCz
2vni/VEWJGpJKMX6IKfYt7519mNCngnPr4OhyKESHz8ZIZ80Pzl2VraMAe0u
Ct+LMY999sfcC0YeeclhKVr4nA6yySdfqKKnHSq8Zl2KuZWzv6vN0JcGzpZ3
r74sZsHKcOut05gz+edfPeiznACJ7PrDkj9Y8PrPod+K6IMhs3GGlzSpILwv
3vBuN+ZYRbuABfJl3VPKAZfl7zsT7tPbkccC9d81zC7f55dRZbdBmAxuB3cn
12Lufebwj4jH123wveVXsXcUJAT+GLvg83e57DwEaSx4ZK0c7WozDKeScma5
v7NgXWzz4kgcC2JyTI0V2Achw8k8LQs58CmnSVHYI5wfqzvOBRn1wRPy7tsc
d1lwK3Oy7X4LASvLtAz6gnrgStpYkS/WS3hdlYsnelFo3/e46i9dIEn0MQhh
5NWj7XNWmBPz29YO5q3sBM796ZKOOFdsISxY5x4DVO1sBBP02mHXxzTTnjT8
XNPaVsjV0oFv22r1iNBWiIl4XplgSYDb5ir+M6k0GJwd49b+1AJGluvK5bgI
aB/L+GNpNwHWbBHTUlot4B3smZ9dwAT3tQ8qLTZR4WSoatvKj81gNf0yUf08
E3y9BO3Ne8bhSdS1FMrOZogmrQooXs+EmG8l9aaxZJie3VIY69AE9pEfNQQN
GkFSLrWh2q0L+I/V5kj+ZcLMyZdH/itrhtMLfRZhYj1QZ+cs+pWTAJ8pj7+H
T7YCx6gQSf97L0xc5gxxXo8cWimYunEKueswa1LnKgmWOoy0TksQsOHfoOPV
kg7IMFWzTp3vhyZXkZk+BQJa7HO2fg/qgg8enpWcYYNQykbOs9FC7mL50DYZ
9YDHYG/0rgjk42fvLw4aEiBeov/Gg78PTKT8DZxMh+G0WuB2B9yvK60CV2q6
SDARKDH/VGAERBpMySMXCHAJ3s9slxiE2qDXtTxso1CuszbHx5+AEA6HhBdF
Q3DDc1dS0eQo/Lg2rEnF+fGiRLbKbGQYrL+UX3MeHYPh/ILPltkE8K+i0NjW
jMKRe0ZHhDvI0LgUbvL9C3qraPb6fI0xWJxql/pWPQ57rM90afYS8DK9a8/X
42Qw+3ezWTGLAtc2ObV8myag9Cq/pJ/rOPRNmnvkBVNB4pwQ10t+FnAOHFm5
M5gC1dvkN2jaTMCOliqtCEWsU5dwKi2OCmLcCx9KdtPgrNe1yy6G2Cel1Q2p
eRMQKdBuCQJ0cDgnl34E+cNjvQ7p7jMa/DXqfLuxhg4WyUKqNJy7MWs2m1WZ
0aG2d2Puf9YMsHU0fWkcyQKj9VyVixwM+JTmmPuBhl54N1Ry+b4cY2cm1XaX
MoA/JS+X3Z8JZ9XLn6zNxeeJGE27chXrbSPHu6N8BDQGza65Uol8tDVzKx83
Aff4xoO0QghYcZjtFFcmC3S89r52RY//94otUPkTAWcC7SS+oP+dVWhTrEnG
fFuz+abMDAGT5PyxAOyHK5rXc7cwCXifoe8vjL5zROVv9l4ZAigbZdRv72WB
i6XnjdX/seCBmLLn72QmKEVli6su30fbcFWa6gsWxO55ErqHnwkc3VWsTMzj
qsqhKy6YA1EblQ/+IOgQHj1aJYHXxjfKdFKRc/hj3JdsMN8NHHmex2Aep0vH
r+lDj/N7rVHyM3sChC/sucxbjfn5JKBXEPNsf4DT9dt3qSBt5qkXvHwOz4xj
lgmuf/hvi4qwCwUCGQcvXu5ggaRAxHTu8vnVwQ+XrieTgatSRGwdeuKjw665
J3AfC0crJaWrRmGD1HjV23rkpxwd11nM1Zjcndr1lGEY2p5zxayGBZ26K7bE
47peUzee8uYdggkf503EV/Tb4ZxBnWj8nIopnXq2JKglHvCUod8vnvbNnuRB
fmOrjvq0she0127RVXNgARhXGHQZEHD3ktJUll43PGp+6J25lQW3/xMcKgtl
gg79pnFMaCdU7vLL2UjgfD552jP1KwPu1yg9u1XdDnNR/oOPCghYNFBki1jB
gOPHFztcV7XB49bEjUaXCbDUEndUZ6ND/3AZ94nRFsgSMpBpxr73iPW6ovJp
AtzclVfutm+B9SFWspb1TNim/NpJ8QYVnjunTIv3N8NqjZMSAzeYwCDVHdi+
G+f7/tzeJetmMNS1W3thOxOOUa/Obpkmw6aSN47f3jRBuuqZ1vheBoiSWHo/
csegoEgx9OObRvCo4xYX3t8MSXMe3/Kju6Fo7Z9/MuwErDrZXjvd0QJO9Tkm
nrq9YCIZ6/Yd6zeJnuTbdqkN6rPH29RZfbBHeVeXmxgB21tiN75U7ADOv2PP
WgP7ofRz1G3LrThfV54fWJjqhITf8myavIMgfcoOejQIMDuhknK8tBtqQgvy
648MwS264vxpPfSsH/Pns4J7gSv1pPMS8pFM8N9C0nECuH1q5JeMSDDbPiOu
2jEMV8RrPGwdkLse7kq+6DgATSmONt8LRiAjY+Gi4nUCvqwnzVDPDAGfGqHu
lTkK8q1Nf+IjcS5tT5SIDx2GuSVv7i3PxqCUI+02L/qNaYa9nmnuCDAk2Qfa
7pBBH7zW+pUSwJYp6/avexTOvo7MD/Ybh30hRnG0VgJSv/TkZ82PQURxympp
Rwp4fbQ8KsLAdXXzx9kL4hy28MzJ0KGCRQtXyB/kci1Oo5uiChTQrdM32yE2
AatWFRb1yLLge1Lw+eaDVDhuI/bz7dQEKDpcYJYgdwyJlhtGnJ4AbSciamcj
DVbSN8i8OMMCvpz5U/V2NNAt2ZtCQp64KJ+RGnidBRU2PTWcwnT4N+iXsl2R
AXVBJLGRMOSommItqKeDrlplitcnBjyX2hB16BkLOioTcnyCGeBgtSr1qxnW
8wYT7oxX6A+2YZLv9zDh0s7jqfxDTDh8I+QWF3IHg/f6IzrBhLVjKak2V7F+
r32accY+9Nn9bylVm4Ai+2cnPDD3OVYfmGI3ZUEv16MgNvRy4c155k5jBGje
SispRz/c5SvPYdtBQIJg49HTEizodlkMunEE+fxQVVipNAt2B/00NTvFAtXx
I0aatUx4luDGI3YJ849f3OTgQxaI7Yzg/2WA+So7VaKJedzgdaJkewruo6ZD
Ed2QAXcOrX60nMdreRUjziFnvamQuH5zKx1uqctfkMMc0X/BdSoefxrF31Vb
z0WDADtDrXjMo6NfRmXbC1lgsfIRM22MCi8yPNYJoPdl6FZNrilf/v7+ulea
XymgevSicX0nci5zcstz3BfreIZ43a5x+LrZaNatdfn8/9Gh/e9ZcINfROe6
1Rjcurs5jRc9sb6tLn44a/l+dA52m/1H0Kt/mWXXYn6ezzwVmsSCSgvdmz+S
hiAztezvEeTZOm2P9duRH/+uY9/FDOsHrr35Si+R2+g50YrnD+Pv1e8wfj/o
BYWMKKdNnizI5VVqMMQ5EupIsRxu6oZNG1MTozD/o7PWuSl/YcI9S85P9fxd
UGr4uoOLjQVNNV6cG9iYEEiTEC8y7wAlph2vfzX60JRz/Nx+BjSq/XRPe9wG
x+vf/X0ZQcCIloFjjSPW0UTbiPyaVihkj12lgvx9dNb2zjdpGnBbHqWsvtMC
pmee8heSmeDlvjrpywAVbilGkAnOFlD3eLlhfwwTPB5KpFTEU6CAXN/XGtwM
ncOeAlUHmTBbfvpumdU4JI/NPbz4rwmYUxbcxpMMcBVXtygWIkM6k2SmMdcI
NecYD+hZDHisujVMoXEUIkLVpAZXNcKlU/4TrmYt8Efldcri+x7Q9Qhxp6Mn
FpMM4oworaC9NLrtk30fFAbJdD8UIkC79id/4ZN2OJ1uli20RALPLveLETg3
/+sra+O16YSgkEcCvhED0OmqtX21GgGn2e/EOsh1w4l9E9qXeIZgdGkV+R5g
v+udtP5I7wGRA3d/JjUOQX10RzKfGXLRK+lNfPl9oGChkN4SPQwd29POPjxL
QF5T8e+1Sf2wN/eP5yvHEeh9GhbvfJGA8q/ahzx/DcKtRfSiU6Owttxavgs/
z4389jV0mWHY5sUrtcpwDOyoinmHXxDwlV2GlWAyArbyT6Y/7CWDoCibdmE+
AQtmY0LHvJC7pKTqHBXGod2srXoL9l126vF/ROIYrDh6YPbdRgo8t/E90zOC
630SMZZZSAb2VevjNGYo4HN626OSJXxcv6LWtnEc+o+PaJU0U2GXa1dVvDgL
HJkzb4XHKeBpX0DSwXmf9Thszl8T67FHJaZxkQo+buE3v4bS4GqfhrLtcRa8
veTqGyZEA/EvZzYb2tPhjhn5HGA/c1o4vk/oocGX4JyFpXk6cKy1lZIKYoHy
Kl25rod0uNvPXDC+zwBx8yexgY+xjuU2x/IfZoDRFrXFZ5JM2NpUzzeCXPLN
hZ37yAID5Ce9Fsm5TNB9zhF6CL1nWyPV9/Z7JjgirqnrYo7XaS+kL59TQci5
HZclgNZ0SirqGQE7NF4Nkbwx39pymbk4l8Xk3SRC0V/03ghnPUPO+vFQ5wpf
GfKsdfBG39UsUMoMuGyB8+WRSesvV27MBYMEsYuHMO/kSZr808hXD9yv11iw
YJfAJxEHfxYkJKos/fBgQniLYvby+Qw75q/3VaEnznMJmfdjHYsO6gSOPkVO
8zJ5tYg8o5CyZe2VcDq807A4eRrz+KqpnLfmG9z32n917E400Gi5uKOlhAUX
qYt6l5G/FlSjw5/oTQB1NvKfAeaxQWOPQBbmkkRx3aFtslRwT617A+iJkYUX
AgswxxSPVy+8ax0HHdls68E2zKUx+31WuF/VrwjpszNjcCMhgvMWeqLR85Mz
89kseJfToL9KfBReKJ3LW/bQcz9185LQzxcT2f97v38YPr7VtCnHfb17Tdb9
EHpiIU2av/TLAFD9uOxL0EurWr9aluK6wyKcQnbI9sE5iy9xKngtvNFwPrkK
91s8YEbIsQeUc1mt6Sbo16X0F2HIH91RBxxXZHRBTv8FXnFBFjj7btF2P8AE
id5r9QxyB3T/+nnwYQ8BcwqHu81vMkAlKEypW74dOOvNfDmQkxXLLl3ZXUYH
gbeeoV+dW8Ggml9QDTlCPinFrSeSBuEgfTSooAUiDwRIF7Fh3zytie00moBi
c4FTF9Ra4G+JhyJgPaVS1QvauKhwYPGypdHbZlDqZNtZbcOEuqitlc1fx8H3
ykdzJYVmOHF9bqfpGib01//50BBIhtZFjjCZY02wtULWpauSAYXirKA6rTHY
qa2YV2jZCBVbiu+99WFA6tmBu9JTIxBV2NTd79QAVgOLzl2WrXB8ZXzjbG0v
XHBe2nUDPfFfWV3WzO823L9IqSJPEsjHPA65irx4uiTWzeRTBwTJNIZtXOqH
QXn7A1PoiWXfzimnhnRB9cI64mbEIPCWKC1cQ0+8OKo8OWvcA55TWTuu3sG8
Mp3/OIOeeFZsPt9UsA9WThkNpJoNw4mRGk8f9ETGpe9eab0kOMxGj2oXHAGS
d6zKX/REQ3bjpkfSg1Bxzqbh/opReH9cxiQRPdF+wunBjZIhiEkdT9WeGoVA
79+dfDHYT4HbPiiODYMR9xUf+tgY/E2qcQhAXnCxoPUN8I1CSdKc6fNOMhg0
xDMY6ImxPjnsUbvHQNbntqxRzTgMsV32PoueyBuzzjTEggyWna5p915R4ILq
7+hf6IlbD+ura7ujJ57Zp88fQoVW+fSaNvTEwBQ/kenbFHhyYQ0lxnYCJJVP
LBagJ/r3vl/IjqeiZw5EiO2lQZAxu3osemK4Bn34fP4EMD6825EoSIeG0Dwn
b/TEDwwH19w47L+djr85aumgTtwX4fJjQbycNol6lA7XotN+m59mwLvpqgfO
yCXXV4qayXAx4Jfe2O9EOgNCZRc4a5FLZHhnKs6UMUAnV36Gjp4oHL4zYAfy
yAFyp9oTzInn1m4ze9YS8EDFbfoecknpm6TP4eiJ57uCJp/gPPB9WNqgiTnR
nCCvR0ZPJO+NZt1BTywrUXnyC3kyQeVd9cEUAvofZzIDML8eXk06+zaVAC3V
/UbJ6IngV0a/ip5Ya8Uj5yqNXv+68ccicoJgScfEBfTE3Bw3+hb0RD7yMTkT
9ER7B4V92uhTLa9c+53XMmHyrt3cF/TE7dfYeK5j/k7m5T//y6CDi+eVxr14
vdOrs/MNemKYfpfl/R80OGMSkvYOc8ol9036OHpiikzdhs2vkWtn4322Ym5w
BoR5SKEn9r8LaHkfQQXRZ0WmieiJDZYOB6xw/ercg/f1nSnwNKza6T/0xIdB
lcxk9ET7Y94Wvglk8BHNEuBGT+yd/ZSlh/uYWyl4Q+7zKExNh5W/rF/+/8aH
81TcrzH7O4lNWH/ax865GqAnajZlSEbiujbeC/p8gxvnuexeYQp6Ip9xZI8K
euIvC7FvxlYkqK6sy7VDT5zL1ZEvwbyXClNa/ZOtF4pSiyfa7XEeSF+uSzpM
wKWU5oA+3W4I690mewQ9kcT86R4awoSB9mhmdXAn9NCnzlTg/nezG/G5fWFA
YMYZq/df24FflxG9fO6Ymnbv62NsDHgvXV6WwNEGbJ/nvaovETD8++BlxSUa
tLSsrQ8caQHeOKk7ptj3zjVbXm0vnYBPg3+7He1aYKa09Vn7DyaI9Jzpkfeh
Qlri3LAhqRkaWl0yzqAn/unZvyirQYGdFrNkRfTEvi9r3o5sYwKN3XO99C8y
8PiqfpfOaYLVV756bkNPPPcNnCvejIGHVpKnZk4jJK7dk/IvigE+c5Epwk6j
MAuRFTalDfCyOeZ7pxED3KvTSy9KjoCNb/1USF09/A8Ye9xO
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", 
                 RowBox[{"-", "1"}]]}], ")"}], TraditionalForm]}}, FrameStyle -> 
        Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999998, -174.99999999999997`}, {
                    7.499999999999998, 174.99999999999997`}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999998, -105.56844547563803`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -105.56844547563803`}]}, {{
                    7.499999999999998, -24.361948955916468`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -24.361948955916468`}]}, {{
                    7.499999999999998, 56.844547563805094`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    56.844547563805094`}]}, {{7.499999999999998, 
                    138.05104408352665`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    138.05104408352665`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999998, -166.4733178654292}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -166.4733178654292}]}, {{
                    7.499999999999998, -146.17169373549882`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -146.17169373549882`}]}, {{
                    7.499999999999998, -125.87006960556843`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -125.87006960556843`}]}, {{
                    7.499999999999998, -85.26682134570764}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -85.26682134570764}]}, {{
                    7.499999999999998, -64.96519721577725}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -64.96519721577725}]}, {{
                    7.499999999999998, -44.66357308584686}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -44.66357308584686}]}, {{
                    7.499999999999998, -4.060324825986078}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -4.060324825986078}]}, {{
                    7.499999999999998, 16.241299303944313`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    16.241299303944313`}]}, {{7.499999999999998, 
                    36.542923433874705`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    36.542923433874705`}]}, {{7.499999999999998, 
                    77.14617169373548}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    77.14617169373548}]}, {{7.499999999999998, 
                    97.44779582366587}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    97.44779582366587}]}, {{7.499999999999998, 
                    117.74941995359627`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    117.74941995359627`}]}, {{7.499999999999998, 
                    158.35266821345706`}, 
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    158.35266821345706`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -105.56844547563803`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -24.361948955916468`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    56.844547563805094`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["24", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    138.05104408352665`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"16.28599877318526`", ",", "24.91024755009402`"}],
                     "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
2peXLxm+bIRriMqsD+BA8ERUsjbhm33ezhoHdDnYZ75iv8ASLrJTNCM6n9Lg
HxTK/zTNgWzngcsdGVwsKdR3CCE8cvhgualyERfW3259fLOP5FhFuYEC6c8X
gYxwVzUKzhtHNeLIev1XtuO3vT3J25hftw9cpGCm9jcxuYdCdM6B0ULCZ393
/nqpRdYpSy5XOp/k3fcikfplhLfns84WyqyiIR9mHN9I8jrUpSY1mHCAtoT3
AK8vjblDm5cySX8vviAX1LmJCwezWTGh12lkOQWGRJD7vml7apPSQg7kW7Jt
QY5vp+jsMiKcNqfXM6KY7Et/6/7Nf7JpaHg0LuQnnKZ22/Kq9fNRKO6dkMgp
ozFzvKu3OJdGoke02g8PJk7K3WEsaqdxv+6JfUAB4TrV2QdZKuQ5+UsdsSOc
dmP3LJczJA9bKZs7c1WHMGWlV55OOE3dW8HRieTo8NYjzmpqA2idzdo4Qzht
U0SehTW5L7EHrw6aqPdD/kf2/X2lNEL4PsHsLg3mgviQdrseiO2NrS0i6/3Z
2sBUxpFG+PqbjbnNHXjuZhopQvL9242P21m3KeRuvvpE7WcbtumOXjclc29i
5TNGzhcupNNkxB4vacWleVOp8X8p8IvWup//zkF9+m4nYe1mvA/ffLfrM4W1
eQ+Y21ZyUGxX6njySCMOFF67yPGloB8k1n6W9LeXyJ73m8fqcXu7y8oL8iT3
tnxc21o2Csefc9WjHerRxZbtF6vgInOBFP+6U0x074qxbWqtQ/TQ1oB7Z7lw
5n9ywWPhCM57/dy3ZE8d2u+f3ycnxUWk4/DyO++GcLDbIOleUC3m3Rudn1vG
gUoKq0TYchBWQ0033njUwDhuTZYS2a8LzVM/9P5mIHRuelqDWzWSxo/fj1Eh
5y9acMz3P9Kvhyv+lbtU4Xp+06k+su/fp9f1ftzUh/O7FOlLjl+h4N7iLnWT
jdnLPjmopHWjpdbBkmtbCd6jVftTdrEx59qc+5hoR3DVwI56iwq8LzBtSuVl
42pvvPve/GZoHlYSz9tbjuRjd/ilP7KwSKz3ke2leuikFAw7bS2D4qVTR7M9
WVg370jlRzOSmyIZ9xetLUV/WJhG08JWiIi+j+Ss6sWlXN7KJi0Kxz3AWDPV
hpHV+ulnnfpQHad5396IgmXLpVuBAx2oaTwhw91McqzZ3X2ccJqxXeCO2q9d
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
5Ax7ddWy7FFMx6yINyTr+HTQRuJPFrmOW8qOv74xgqdltv6LyDoMGFqsXJJz
QS4j53R1GRBSFpO/0UZyxP2f3PYCkjObkx7uYQ+jSL0grorw2/t5krLKxMNX
cpVvPkcN4usNBq8E8U11wdhl68jfda7aNezP6Yd3lqLTBXL8gCc+fyVIPk1u
HBNPHqPhZ3ZR1Ycvs89t4jQIRpHzeiG69OpAN97+1fAWIDzJmnD9I3uIg7hF
Z3awYzpQmTUUdJT0K9cXCbHfr1FwFAtNPZHbhkNDMRkJKhw0r7ytmZvGRnHj
op1lHS0oWaKV3v+Tws4RpZkbHSx8shXvWD/dhL0r6+TWfaDw2KohQ3MRCwEf
pcq9JBphT2Xa/HOgiHfAUPLXKIoGT/Wn9NbD/1h/w13CI8/CHHsux4/ghM+r
TZRJPRzeRgesyGfjhtCprFwtBr72Pera/LUO7qupxUnWbIzk+EoyhodR/vPL
Y3uNOqRLqNxfuZSNE6rf3/93ZwjmN9u4N5vXgjvzj9V4HgulpQs3pCkMIiq+
NFXAoAaWiwXsLZ1ZCNnovMq8uh/5IzXSyw9VgzdLvyh7NQuOi5NKCh36sP6B
wjrm/irw2tpFFtR+Q4v8K2GWUDMWVwlFthKO3L7o99K8ndW4xbJg1fS24Ivd
+M/DhP/rdrfs7TatQ/gCyS9vMtrw6V7T4Tpukifa5XMs+RrAm/pfQrhHB9LO
v8/SW0qhbl9HfkdRI0xYY1fd9nWhd22M4DcJCpkuW+ok0prxnH+Thxe7G0f0
WZ+PyFP4PbTT5+KDVtx2tzByDe+F2x3xu0PbKdzkilYuudaOKzUM4ewEGm6e
PXDy8kEK6z5b9Ymd7YTi9QZvZZc+OKZ6Kc89Tu7HtsfiT053I/lUmvKnQ/3I
vbYi948dhYPWrts30XqxcVhlgmUwgI6DV35LBVCIntmjeFypD78PaX6WMiH5
VNmlrpVA+lmNzO5HTv3Ypj7hZ2Q2hDheM/ez7ynkFIsd7s8cQPrD+wf9jg1j
q/HAh8BaClbzkqPs6IPg/9X02ciUjpJnO2uERgmvPw7+z1p4GP1XHz1J02Tg
jsqRdb95OVi7/5vZWdDBxYe78zaQumpLv9ErS+qzTfbjSXsG7JL0rlkJj4L1
0aj1izbxkMOxMpZRI3BoD7mQ85dw2mIr5YzTHMRnzGlMCh8F957SV39KmSiV
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
ehtw6Xk36i9FyJuRutBU5T7/XKgDtln3T26414PTmlNXGV4U/Dt3lq0w6sIf
1Rg1h/u9aOHszue/ReHDAu+2Q0HdeNQ2NB4R2wfJVUkzKinEJ0yV2MlFPRgV
z/38LYGG205c2POZwvjUw3+0BX2w6pIIGHvYjwwDr8unia8H1w7fl9hKg0Tb
1ZfMyAHE7yihLIcpnP9uN7zCuR8af/dHGlyhQ/xgiqGmIAf/FVtZiEQMYMt1
54sPXQdxlfEkUUKFAw+XPS+X5tGR+mWR06Q1A0mHW8fmmXLAVpwSEGAMos3r
u7m1LhMa8/6zYMzef+j5Mv9qCQNur37/+8Vh4kWp44qXZN3XD5cZU6FMsl72
bSy6xULOuhVje0hekWpqb7Ldw8JEY4dznBwbhS0qtb9TOFhSKeH+czkbz1xv
JnkUshEgU5gVS+r1qq0St2YTG3HnHnbqHyHX6cl02Oz3n3zbdz5LI/16UNB3
1YWnJD/vdXDNtybe6BX4OTSEeLGE070wGoVExnPL1YRfDK9tjafbKESWrBF4
TLzTUYhP2U+XAvdul8kDZNxbL2+4+/4IBwnWIn+b3xC+Fjc87Sf1/HZSweXp
7D49V98a3Cb1IHHvgl8y8ZWdeb0bXAgfjgZ/iZIh4/4738/GjozDKuvEH5nn
HHBtPPUg7wMDoi6b1UTJOILdLX70EZ45c5sY7rtG+ob7KdGanxxk/DGLfkxy
4o7zXd4cEzrOpGy1uE04Zli96vh+4mNuM8UFBiP9yPf+md9C8ubCWhln83cc
vBB8VOBC+pYdJakiX0ny6Zr1tjvJcflT1o8F/e6BesJQ1FkyTyGnD+7cSnir
6Hyv+slYF4Ryg8a+E36aFYqtVo0mPrlym4Y/px0+D763lpDcm6IfmRRnxsER
g0LVqIctYLdmCC714iCz5r9G50ukHrKd/3ETj1jCOOq1X53433VjfdUMNs5d
trb17mpAQRkr98FvUmcFxtxjxHdCXArM6+fUo/pUVGI36cMLbe4veM/PQl3d
dUPlNbUIcfS7xeNBweqH3NltfxnQz9ilaNFdjRsDnv2xJK/2S7TkRicN4vaf
Y+PxNtWoqvxRKfuFjRoeS6ceAzp0pGsTun9UoShnPZXhwsaDdovlIsx++LmV
ciS2VWHHgtEryoJsOMzVb1C8Q8P0pQCtBLtK6IpK3O/PY8H45cFbfzb2Ydd3
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
e/DfM3Wti/w0PLtv7WOdSaHt/bsvija9yLO4O/1CoB9X3e6+9SH1emf+Svbq
e33Y2NEY7Lt0AEqSW4afd1PgveS3c+UXGmJdg92rpgZwxOz57ogZClz+Mgmi
zH5sava2UBigQ/SBTPI5CVLPeUqjy0TpEKI9UQuoHoTAnvSJw9tIPSzNMhXc
MQj9Li2Rjk8MiDtqWRocIOs+e+fp7EMMaJ79wFSLZcLlg1O2mQ/JVw5iI+vW
MPFOnya8UIMFwfzVEb9IXlFPSjl9t4+J+9ue6LVWsZB2lHEyKo6DM/R1v/+l
sdD+T9Y9k/Divnr5bq0MDtxUes+6u7GxYjAt5joPhYHgCpn22ftyHg9tEiTX
OW7ztbDzJJfEabnJsGf3Y3Y4pDlmR6Eht2citJAC9y11eRMRDtasmtra9pLU
21k5p0dzODjb/1sh/RYF38fKel/Jz0LxMVXZhNe/3JcoLOSi8O2w166nVhw0
K0TplpK8GnXmicwxXzYcHRQUN5Fx6MQtshUlHAt4slBkJJ4Fm1VbRymS04wC
HCUbCDeKjY8Khx5j4pfh4bz0FxxE5qn0zT4fKfpF41y5DSSXb6GCncg47Fzu
pFsTjnVb5Dflk35S0GS3T7KGg8tzP3guJRx7Mfk8/ODXAdTIKRWfJRxb+M3q
KI1wjMk/faJVsB8BBiM7igjHHpVq+rYSjvH9p1nItbQPvlvS85aXc+Bxuy6o
mpyP9lKzNLllPfhfR/cdT9X/xwFcRiqKQilla0gkI2W8KbNSGVmFyPgmZbTs
lVVZkRQloiEziSg0yN57dq97XVz3nlspJOX39vu37sPjfs457+fn9XpwzhHv
ndt/Dh27XO55r+7h8v0baT+OCZKgrP1i4St0DBY2Z1aiY7mCzKkx2WHok2nI
v5qE37PTJNj1OwEnnppU728agPMnRalVp9DZxQXfgxIEJJ8SlCyf7gN6myaF
W5gFXPOuFbwmTNj/idynxtsLvHu+PDg5iPtN/hzXaAgDfKHQulSuGyxzvn67
/xD3p6MP+QqKpmHvGvbZvcadYJtWdtoD80KdvvegkiMdVM3NaIpZHRDzrtaT
5xsTal5HPa/gngIFj9Rf8Rs74I7Ooumz+0y4qrSxRCN/ArY+Et7EuNkOE8fm
MgE9fSo9G/rWlAY7k87a315oA0VwcPWjM+BISkjo4BwVRn+dVCwca4VwtTsy
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
         "], {{0, 0}, {51, 
         51}}, {0, 1}], Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
0Homltnptizd9AW6i9+eleQrx/8A4XvFVA==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -175.}, {7.5, 175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -89.48362720403023}, 
                    Offset[{4., 0}, {7.5, -89.48362720403023}]}, {{
                    7.5, -1.3224181360201512`}, 
                    Offset[{4., 0}, {7.5, -1.3224181360201512`}]}, {{7.5, 
                    86.83879093198992}, 
                    Offset[{4., 0}, {7.5, 86.83879093198992}]}, {{7.5, 175.}, 
                    
                    Offset[{4., 0}, {7.5, 175.}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -155.60453400503778`}, 
                    Offset[{2.5, 0.}, {7.5, -155.60453400503778`}]}, {{
                    7.5, -133.56423173803526`}, 
                    Offset[{2.5, 0.}, {7.5, -133.56423173803526`}]}, {{
                    7.5, -111.52392947103274`}, 
                    Offset[{2.5, 0.}, {7.5, -111.52392947103274`}]}, {{
                    7.5, -67.44332493702771}, 
                    Offset[{2.5, 0.}, {7.5, -67.44332493702771}]}, {{
                    7.5, -45.40302267002519}, 
                    Offset[{2.5, 0.}, {7.5, -45.40302267002519}]}, {{
                    7.5, -23.36272040302267}, 
                    Offset[{2.5, 0.}, {7.5, -23.36272040302267}]}, {{7.5, 
                    20.71788413098237}, 
                    Offset[{2.5, 0.}, {7.5, 20.71788413098237}]}, {{7.5, 
                    42.758186397984886`}, 
                    Offset[{2.5, 0.}, {7.5, 42.758186397984886`}]}, {{7.5, 
                    64.7984886649874}, 
                    Offset[{2.5, 0.}, {7.5, 64.7984886649874}]}, {{7.5, 
                    108.87909319899245`}, 
                    Offset[{2.5, 0.}, {7.5, 108.87909319899245`}]}, {{7.5, 
                    130.91939546599497`}, 
                    Offset[{2.5, 0.}, {7.5, 130.91939546599497`}]}, {{7.5, 
                    152.95969773299748`}, 
                    Offset[{2.5, 0.}, {7.5, 152.95969773299748`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -89.48362720403023}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -1.3224181360201512`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 86.83879093198992}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 175.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1:eJwsm3c4Vv3/wCVCQlbKViijJauUt6wkhBJCJKRhVGZWRkZpoDJKRoOEFBLh
MRpIsve4b/dwz3PISFa/z/e6fn88l6fznOvc5z7n83m9X6/n8Si4+9l6rufg
4Djw/3/97+9N3P52Tzh3wauF0/F7m4agU2Pl5+mNGOwN3D+yYakXblqriP09
PQZv3ig/rVHCgOcc08NJoRe8vIJnLTNH4aoq7tcji8HJqIcMgnY30CSOX7Et
GIaH4m7spM0YyOyXXsuz6YVXbhsdZZtHIbv1yG4XeQws771U+FDdCbn7cquL
twxBRZr76XfcGPB+6T05qNULHVu/9216OwotDjVJN+UwWOB9XnJmpQd4mnd9
OBI6Co/5PWNfyWBQsfPLhjPJvUC7uJWwMD8KDh+eLOhtR58retzefnoQrF43
lDedJ4Dz3kEvflMMBA7e6WOKDICGZTHnOuUJ2GjSc6dPGwOurSox8k/7QcH/
Tax+/Ti0uJdGch3AgFzxWY3/4BA0Hc7ggmgCWIy0uzibYfBpr3YecXUAxJ6F
1cXOTMDROleSjT4GH7T+NgTlDsGlv4Fs3lICaM2RxwpOYLDx2k/eZ6HDMCEa
AaKbiFBg8ZaRaovBx/ovV/LnhuGsDLn47FEi5Js7W0eeQc/nTdOLvD2DcPaC
+OtxAQIcdWVGTgAGmyxI0g09I3DyaDJ9KY8IOI0tmOWCAfGXpjDt/hCEHz/h
4fuaAA+UuN9uRZ/76Vr4k4OPhyB2QZeq+oYADJGMAxboeO6A0gV+ygiEr2cZ
hLwhgkLpitTOcxhcusl93bpkGNzOTmQFbyfCp9WAHN3TGOjvTHvjUj4CRJv2
+Lk0Iow8z2WnOGPgzlS7+FVxCGqG6wKDQwgQkPmLu+oYBvWOBlLFO8dBm9N8
QObZJBj0zGi3XMfgqtfYeIz7KFR/4fbsmCDCRd5/V5TdMVCtK5uP+jYOnXdc
0p+MToLWMY03vKEYPDqouqRpOwCGF0/ldjlPQPUxqYohXQwO8QQ09jYRgb84
N3OolQwOkne9xgoxmJDt666NmYDm2bNJ/3aRIPpkZNC1WxhczDgyH+I2DgfS
+yzUyych6VZlClcgBrFHpac2po3DicpWx/Lvk/Czcp8SZzAGPjw7s9SciXDm
21636CAyfH5beqMlFwObrzaKdCsiCJ97kll3hQwGP+FQXQ4GGYoUv3p0XFF2
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
wXrvp78MzMUMpU/oDGBKcxXzkmwNhFU2BgeUM5DUGZTBsO7HohQJlw3u1ZCV
+vXVI5z03aCN10vPPmzrZVsKUasQ6h02TrVmoDL687XFxPul3hI52VyFuLhT
bT47GTA69GvLnu896G1a3JbvXYk7LtojSYsYeKagedm4vxv8EVrOCX0VuOf1
bp96PR1mXkMPnbm7YaPqVcR5oAKfkvJ8DsXTsSbj0IXdZzrBp/Duen9MOTT2
nFk6f/13x6rLi76S8RvEXvI90GcE/5XQbyt+YcO1M7c9hHiUC+fnLt99I2A2
HBV5Td6fZyPfFTmR//esJcL3/sQwfEo0eyTJ+/x0mu83LcIl8/px1vWkYVxQ
EmCGzJ8P8GNHyzriP793q0nZWAzji+EBfT4yrnfuXLRylvyeFufhpBMiw/gR
UCf1kHBjdavbnTriUYoPXPh3Vg5h1aPY76cIxzZGsORohGM128bHTDsG8aum
1OsP4dKawyonckmH+tWFVy65PADJNeIafwiX1i3LjL1KuEotcZtTC+3H7gTT
hk6yfcneFwsECIdtkjgbXVf3gy92l20B4dI7Sf9zycSXnppPiKXE9kFKjevA
AcKlJQ/KnI1Jl8lSF989/awXjOUC0jJk/zl4NI6PEv68lmzOObyK+PLuHT8W
Ei7FakSkPCJdNjdWdUfsZQ/KBOLX9hP+XLorf0maeJHryJu7FbI98FHVEy0i
/JkdijiVQ7rsSsIStlFSNxa3XwuII8ft2KzuzhPEi1TM+te/3doNi5Vq5+8T
/tiOrE4dJF1GiU/RsLPrwnDmGlML4kX2i/lNbhIvcurqKy9z6YT1VJ+KOuFS
e0pQ/FLiRRobHjiq3erAxonfb8XI67UrrKYngnjRganZg67323H5iKP6T+JF
n98mys2fb/624UKMqE8b1ISl1MXI6/okjzdkzoH0ZvKHF21DrRAKoMWlES6f
SV04uEiVTThy5tTmy60IXfkyXpjw0SxQ5voZ4i8qyskTfVMtEFDVDNn5iI3F
eher66pZ0G1N83x2qwXPy16pcxJf+mKhcGMT8aWfHn+vpRBfCpYy2XrelrxP
2ndVrrRg4YpWvqfHf83YS/+op0a4tO1i4mk1wqWImoGV6tNNkDy3/pnDYcJz
4WZuBRoTVoufKo04NOGo2VbZOmU23hz5FeFExv1TFes31u2NUPy6uuaUOBs3
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
vjWWGMRrQ6fukKoa+M9WLpGcYUB6YO5V4bYBGDHflcvz16A876MfjXT4kmti
R3Yd6oeM0J4bcWerwcjQ12b6M+D07t8C2VN9SFYNlJdMr4Luqb0um83I48ZB
EWsde+HxL2PHmUVVcBFqjkncwMCdiL4Bdc8eGHMljbqcqoTxCNcLhwk6TCz2
BgdHduPT3Bcdp3cVuPc+Qv/GNzoY5u4Lr1p3wbV6c+a5hRV4MulaVO9PxyKl
lGW+kR3g5H8wYWJaDqEdL9+Zn6NjyrnAWFy/DUHOc/e/vi/DMTcztr8yeR98
bb5o8rIZAjwXvq1dVIaIJ04aKxcTb359teDVeAMyTSz/FZ4uxeZkzurxFhrE
Vvg67zpWh2CNum05aSWQ1bVbcZtw6YlFZ1Ia4RLPVo3w+yCc5mRFnSVcynOb
ntQlXEqSOqWXXdyDielq6f2ES9MJWqpDhEtBR7Vv0nR7cPzpdLzU/P1GNe66
3Cdc+m14LU6ithsLtJjrFhIuPUq+Gi1JuAQN9kadU91YW50Z3E+4ZJk5/OkT
4ZKXxPZLtNwu9ORX/ikmXLrS9SDXkHBpn9Eyp91lnVjg0nXqDeFSaYdMLCuU
jONvE57uDR3Egp/G+BAu1Ua5Wsyv//yGeu9XYk87Di3bVGtHuCRivYsuQ/jB
6+U2+oPZhootGs/z8thYxagWtif8iM2/Ze0t0QZblyUf/xHvTDKIuZZygo3o
k5/aJt62IrH4M/c+wqXAPKrbAOFE48X1ucd2taKq/NMnd7Jdp5BHuwRZLKTG
Wp7xLWyBqvWVN6lku9ytq+iKuSzwX2pfFqvfAr2lM+c6rxKvFQlM3uXLgsuo
5I1HHc341Ogyx2VNPJjxdrnMKRZcJ++1Kdk346/wU04ZEzZufr6SS5cjPvZZ
caHPVBNSejNY30gnJu2i6giSTuwc1BLIWdCEgX3Toq9I9x2+f3XJjg2kHwtv
rG1MboDR3XZ/8wkWophTUTlk3qY8O9e+croek6Pjj+MGiHfJG7QIvGFghHNA
IMOrHlbGS3xHGlmwmHbJsbzGgMhSXh9NwXrEnC0vScpmQYl1mefvUjKePl9U
9lxbhzRla1PdGMKrHTbC3gV08KYy8f5KLRIqNy2WCmRh/JTErO19OnZ+CHHZ
IlYLAa54asxNFh6fUIxU3EJH8e2rTiGTVIyF8tfMr9cc5BRatamJhr9J594m
11JRy/fU6/dxwiWf2q2yHjRsZqfXn3pPhfKY8McPhO+cPV7XajfQ8HnKKOru
YypoPV6xi6RZWJ8jZ9tWNYLjOVpn56ypkMz6olHFy8JTSmp/zZUR/Io/zflS
g4oZ2x8RzJ/z60u92bVRaAQrSi42bZegojIs2lK9lYn+c0dStdKH8anOgf/G
OAXvK1eY+RcwsWOrdoer7jAiO3fslC2noNLxo0BqAhO1d5SqB7qHELpLZG1/
NAVr/m2RrnNlQtg+g1tdYginF4bZJR6ngE/QXFGXdPthv2HdtUmDwJ9Xfvnr
KNjf+udziwQTKyhz8q55A3DqtqVsuV8D8ZTNXUd7GVAy5zr0qbaf8PHcC8uS
aqyT7lzPlUr8Kus03XCgD1J3PCr7xapRIN9R/fMGA/ErBcd6ZnrxbwFbWuwS
4VXxyd3imgyo3Yrbfn15L+zv3dyzLK8S5b/smHcFGfh05/UZOZkeDPr+06Ss
qIQTfU+SfBcdfv53exapdWP53108V60r8O+K5rFVKXRoNF7MPxnfidC+xuIl
ueWwk9pWa3yDjnZNszGzpnbktEeteS5YjtRr4s2zunRw6Zq9k13fCpW3Yql3
rcrw7aJyLd9aOuzkLu0LdG3CsaSgUcfPpRD6Q1937SfxLmeWG7O4Hl/YggFh
fKXQFJYcV/pBQ1r2xzf/Sdai76dRwDKrEmi+aRXUJFwK+eXBGCdcci7o/Hb5
eA/cpUOjNxAutRQrqwUQLrUriv5JqO9G5nXxDTyESy6shfc2zd8f/plRa4tp
NzY7nU+mzX+O9Lwwrzhqfh2znfWi37ugNyy+qZJw6VlH7KgF4VIl14I9btXE
l+48jnlHuGSsxxT8TbhU92DBZUor6ThHZ/6A+evpesvXhREuHSje7S011I54
n/LLlwmXnki0CCkTfng8qxu3GW/DLK8SS4z40k/mw4JIL+I/97dvOLSmDQv/
RBqdJb4kbrEilm7Axp5rfxbWJ7firLKydizh0qMNX17tJr60wOnly1PElxST
Nxj3k+0qe+9TvU18Sfa68J1q4ksPDFjDMmS7HDRp1xziSxpMm5VKRi1YszNn
j8W1ef4EfmSQvgmNC3S42dMMH9n24+GES4talyUImLIgHvC7INapGTs1btSX
Ey4Ndto3S8mzwGueN/pyrgmh+XNiU9psvNUwfiY+xUTJ0nuFF32aELmPd1BU
jfy81vlz44VMPJ39yd0t3ITggL9mWzaT539/yePYp0wENZs7zr1qRMfA2/QX
gmw857hRXLqPCQGrk/HrexsQnT3WemuQhXbjzfdpiQwMDSZmHiA+PpmmTi0p
Y+F610iL6BEGpspHVZBShwahc5HLv5DxXnuF216UgU06n4RrVetwIlj+z4kU
FuZEt9/JHqDD6flxAdOSWhT+l0vtCWBhl4DoRad7dGyO0MwtEa2FW+67nGW2
LFTqJxve76PBTN9lVWoTFfXNP5OiDVg429hGf+xPg6n5r2SlD1TcVX9fukCd
dGuxZXOXCg3LmQr3LgVRcer64/HNG1ioj37Fp9M7gmUOTjc0nan4oVoQwrOC
heSoG1U+voQ/x/f2v9GlIvxuIc17lgnXk6/yjiiNYFX21EmnDVTwcJ9T9yXd
t6y3aHJ94zA4RWudL5Puy92xesdEBRM+AS/k492H8f1Fa96tdgqe+XmYvMxk
YrPJ+koFsWF4vuCcMfxAetAtV9qC+FXyUJGxcNYQDu6cEswkflVZNKm72IOJ
arWWk1G6Q2i55WKqe4EC4XOKWx3MyHzzUnPqds4gVtKPPry4gYL04NCO1zuZ
6JJpP5knO4isIaadSkMNrn2unn3JxQQfs2DnSesB2PoKWSeo1YAuMZX5uJp0
Yu1Q06Ib/ShynNK7+qAaa+7f0t8WyUDy3ndbtR73wf6UUktmYxXkbTN8uK0Z
KLFO7HSN7sXkkEDcS/kq/Mws+C6mzEB3kHNndEYPgkQNzTVvVUIwyOeR1V86
5GPP17SXdCPby0Axu7oCvrNXAsbL6dDnTOP1Jp7hP2b4g1OmAtuk9ZNLwuio
viM0Xk3vwCatTbq73MuhHZwZ2GNNx1DAG8v0wjY0KTyJ8q0sg+v+g+99Vel4
NnUXGbwteMyvGdC1pgx9lwv4PJbREVm74ZSWcSMKC5aGn3IphSXjndCPLho2
eITuyHpdh3Sx7Y8Wl5QgcerquEUmDf0fsx6q/qbArezNvV+rSyCi1tGwlnBp
O0OEy4xwKe607ac7F7vx3CXtAmcpG7J8a0/Or//saS/VYNvQhQznaEYv4dKF
osnop4RLl7nlCqk9nWhoKXIpmj/fgP2xW4F0nH+O5c3drA6U/GKPJxAuBVtS
REsJl/Y82z4ZPtuOA8EvnB4SLnEv4tawJPzQzFlPn1jcDnfHglHtAjaER8vx
3If8u4qi8p0NbehY/ikoMJ1wVks/ccKYjPsjn23WfmhFQFimaxPh7/ElrQ91
5NgY39fyLedAK44cUzGRJL/P8rAV/4txFmz43tgfp7Rgsf5h9nnSh+n6tSr0
byzESAkvaj7TgkG+1vr464QbFe/ebicesSWl0dGI3gx3hZR7AzbE9+x/RVw9
y4JT0ePgfPdmLPywTlPm9Pz3lKdzkxXIduwpMsKLm7HhU+neMzps2N3v4mkk
4ynakFtO91kT7nF9Vgvaw4aAv0oQm/SHgkr2A7N1TXh6uOJzgQLxxShDpfFQ
JsJX+TmpvmuEW5Vj3qAk8V4r3t2tF5l4cmbYrUG1EeKforI4+dnoTZoajVJm
QjM8I0LiRwN4dU0O8XGw8bQ/VnQLBxNFN7e1jJ1owOZ1uv7z92U22ttQKPmN
gU67LakZBfW4aJmerUae/95+mgcUGFj03jqv2q4OpuWbEpeS7jtV9SFVj3Sf
R9118zmbWojX1yQ3ke4TSyvdrnebjv+0pp0lRGpRTVE4O3ODhSsr+cr8N9Hh
kKWY5zVBhYV85eP/CMdlTkho5b6jAca1d1u/UfEbK69Wb2ahaNs92aSJETh3
W7d8uU6Ffyj/AU0RFn6foa09+nIEnMPhZ1YaURF59mSJDwcLw6k3WsWPjGDW
66H0KiUq9IoPs7xpTCy/JundOjYM21u9PanLqeCKcyzcUs/EGoYrx/6IYfjd
u7X60wgFq8aas62+MnGgsqiXuW8YJk+XjPAVU3BdxnRkxWsmeO89T7zSO4Sz
390qvV4SLv0Mfcbvz8Tq08vuaHgOod+fVdfjTkHpaj72zmtMTFDpGV/WDYFr
U+q5fn0KAl5285kQXslbb9ixifBqnQinzwHCq5ryh1oH9zOhNFO/gHJ8ENZq
DQrnpmvAkpDS/8nPRMsBQ0WNgAH4LXH70mFWg90UX4mgUeJRXl83tgsOYPe6
2nW9U9WY/lMvX/+FAYkLhwOXyPbDpEk7dE6zGj46ti0XHzLwbd95F/ZO4mPB
zjEzYVW4LUZT2mDIAE+RdfUn7V7UqG2xixqpxOYAduratQwY/C5Z6G7eA+0l
UkM/91RiBU90vwGdeNe3yXaNK93o6gyw5AuoQJHdpHdxNh3MRzz2JnxduLxE
4Omf3nJYV9y3/8+LdGJp+mTo3g7EeXf4U3aXo+yDxpT7STomM1qfCX5qxc+j
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
GW3cRs1lDOxwjPRkmfNhrbZKo9JnEK1F4a/bRAnXRRSERpB52mw0JHRNdhCj
shfuSVQ2oHBINYEEDNpb487FfxjAhkHHqzIXG7C3IPtC6FcyTz9LpqbLD+D5
5w7ViV/1eMGSC2AUUbhsrf/z5fp+3Dx8JyTeoR7Rux4sLE6nsNneVUW1n4Nc
hln9VMV6uP5dtfLoIwqjVoZxzjc5WBW0WexiSx2WOluGM89TaHa9lOwnxsH1
wyLcaYFk3cTEtcWaguBHfY6Udh9sHrPNbjTWYtUBi4T+tRQi1pkUf6ntRY/a
PMn427VY9qlmqe0CCn52OQL6cC8eP/hcEL2FrB/42/5HnPBhcWt01PReKP9e
pSj7pwZi0/IV+8d44M3sVs163IPwqWYKk69rcDHxniOrgYc9fX51RcPdUEiJ
1tmkVwPO6u7BL3k8TP4zkxZf0A3JvF1GG7jV8AoNzlgVy8PJw4/OtIl1YWRX
R2vc5Wo4iDbf6j7Gg62Knept4w6sMgqNXMyrQsKRprgo8HAzXcg50LMNf82+
WE6uroK1vOtGr9k86GX8s3OIbMZIg22ZbXAl3pTL3jvYS7hLxzQ3tZANWfeZ
CsZ1FSiXXVwW+ZaLhPZOQYuAgce6skUcpQqcnaZx6vtlLraGXM2KJZ//8yB/
gZNnOY5kJQ3d383FDqv0eY3vyvFgvp5dXnYZ5Cop7bOLuZB1NmXLLCuGqVT2
UcXpZfgfXt48Yg==
         "], {{0, 0}, {51, 51}}, {0, 1}], Frame -> Automatic,
         FrameLabel -> {{
           FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox[
              RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {
            10.5, 
             FormBox[
              RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {
            20.5, 
             FormBox[
              RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {
            30.5, 
             FormBox[
              RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {40.5, 
             FormBox["0.40000000000000013`", TraditionalForm]}, {50.5, 
             FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["600", TraditionalForm]}, {10.5, 
             FormBox["880", TraditionalForm]}, {20.5, 
             FormBox["1160", TraditionalForm]}, {30.5, 
             FormBox["1440", TraditionalForm]}, {40.5, 
             FormBox["1720", TraditionalForm]}, {50.5, 
             FormBox["2000", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
          Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{{}, {}, 
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], -175}, {
                    Rational[15, 2], 175}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -175}, {
                    Rational[-15, 2], -175}, {
                    Rational[-15, 2], 175}, {
                    Rational[15, 2], 175}, {
                    Rational[15, 2], -175}}, {{
                    7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                    7.5, -175}}]]}, {
                  CapForm[None], {}}, {Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.499999999999999, -175.}, {7.499999999999999, 
                    175.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -143.8427299703264}, 
                    Offset[{4., 0}, {
                    7.499999999999999, -143.8427299703264}]}, {{
                    7.499999999999999, -39.98516320474777}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -39.98516320474777}]}, {{
                    7.499999999999999, 63.872403560830854`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    63.872403560830854`}]}, {{7.499999999999999, 
                    167.72997032640947`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    167.72997032640947`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999999, -164.6142433234421}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -164.6142433234421}]}, {{
                    7.499999999999999, -123.07121661721067`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -123.07121661721067`}]}, {{
                    7.499999999999999, -102.29970326409494`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -102.29970326409494`}]}, {{
                    7.499999999999999, -81.52818991097922}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -81.52818991097922}]}, {{
                    7.499999999999999, -60.7566765578635}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -60.7566765578635}]}, {{
                    7.499999999999999, -19.213649851632045`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -19.213649851632045`}]}, {{
                    7.499999999999999, 1.5578635014836795`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    1.5578635014836795`}]}, {{7.499999999999999, 
                    22.329376854599406`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    22.329376854599406`}]}, {{7.499999999999999, 
                    43.10089020771513}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    43.10089020771513}]}, {{7.499999999999999, 
                    84.64391691394658}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    84.64391691394658}]}, {{7.499999999999999, 
                    105.4154302670623}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    105.4154302670623}]}, {{7.499999999999999, 
                    126.18694362017803`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    126.18694362017803`}]}, {{7.499999999999999, 
                    146.95845697329375`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    146.95845697329375`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -143.8427299703264}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -39.98516320474777}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    63.872403560830854`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    167.72997032640947`}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "22.999043443834854`"}], ",", 
                    "10.735320819945859`"}], "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422153275*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],

Cell[BoxData["\<\"plots/sweep.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}, 
   3.76875605179644*^9, 3.7687561094099216`*^9, {3.76875615287789*^9, 
   3.768756175589034*^9}, {3.768756386174459*^9, 3.768756399130397*^9}, 
   3.768757482007062*^9, 3.7687581820400267`*^9, 3.7687608938429337`*^9, 
   3.768761373638096*^9, 3.769184349721862*^9, 3.769186523576092*^9, 
   3.769190330844111*^9, {3.769190368915901*^9, 3.7691903852426767`*^9}, {
   3.769191068405466*^9, 3.769191095329156*^9}, 3.769191206163826*^9, 
   3.76919188883489*^9, {3.769192165012001*^9, 3.769192175758622*^9}, 
   3.7691928635508833`*^9, {3.76919291096529*^9, 3.7691929210757227`*^9}, 
   3.769192989106598*^9, {3.76919411929678*^9, 3.7691941252708597`*^9}, 
   3.76919417579814*^9, 3.769194357763418*^9, {3.7691947050197906`*^9, 
   3.7691947118671017`*^9}, 3.7691947680842047`*^9, {3.769194874193845*^9, 
   3.769194893232473*^9}, 3.7691951050843267`*^9, 3.769195214296341*^9, {
   3.769252449094241*^9, 3.769252458050481*^9}, {3.769261387409387*^9, 
   3.769261422416079*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Import", "[", "\"\<data/sweepout.dat\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.769252501113154*^9, 3.7692525252988234`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],

Cell[BoxData["1365"], "Output",
 CellChangeTimes->{{3.769252504152606*^9, 3.769252528136264*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"-", "9"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
       "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"Median", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], "&"}], 
       "/@", "sweep"}], ",", 
      RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Temperature (k)\>\"", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Log10 Pressure/(1atm)\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"press0", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"press1", "/", "press0"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"i", "/", "npres"}], ")"}]}]}], "]"}], "/", 
             RowBox[{"Log", "[", "10", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "npres", ",", 
            RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"temp0", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
              RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "ntemp", ",", 
            RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.769261460062886*^9, 3.769261496895557*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
kbz6XvEi8nrqgjm310lWPfPzJiXG6upD70ImTpUL5Q4Vmtm4iOx9UC91ui33
BdJk48WbXZ43VO9PkzzjLqW3Ol3ApFvLjY49W/vMKiFdY1Z3nOhRQr9+pnON
el1e2GquGvfzXxVsymj+u93Xuj1zOGvWv5/9hEUj8hWTzen+KfNKu0KPlQt5
95xafLWEhD+pkXD4PueoGWWC99YG6W+Km1ikWc2nU6r5FDP9/CK7+no2Lz3M
fG478laZ2fNPlJBTxztWOH6PdQ/Jkranqtuky+r7pciA8yEdLv+nvl+K9DPM
jqta2MSZn38T0k7aDggx+yTD4HbzbstScnL/g4n5HNW/Y1vZmW/lFuPQ/JrV
n+ucZDgbkmatX9/fLHjfsS/WMqJvgxz5j5bVr7t1HtjwhouTZp8+q513b3bB
9/OWg/3Grb23xEaGBXUY9G+ql9afH9pYe+NJb7w/WsbvPP2l3ttS8vrz3tuV
P3BOcIxsml6x9pfl6t+9QVIL/dHjeLTpczfz86ds+4/eM+wyv95lyJhlDqhL
zMw/4xtX7jvzjXp/kow99bxQ2hX1+1qIt2ebcuW+2Mrc/aFj7k76aPpcUp8T
VtLZ8fmxIqI+160lvkB5v48j1OeMrVxd+u+d2EbKdw4ye/eQD3keKHYRz5t3
77zeqNhbvG56HpnVUXGkzH7SKe7Mu9Ky6UTHvTeqcO5+lKy3qtTvRm/1/gR5
feh5yOq7pSVn442t2kyLz/r+zM8Xr9A1OStPVu9PlOdtLx2Zlar+Pp4bPULv
OW6MUnkoTHqVsruecrislLY/OLXJNd67FC5vAivGZLio90dI76c1L5f9xdwH
vaj/wml/x5WVS21nGGfGoS868/OywasqX4vtMfkw8/NxxfU5S9YnmvcpHGuv
LTnhdllZsqlVwpoe3OdLk26pEWktD5r+/MzPg/lje54uO0P5OkSaz6na2H+x
s7zZWfxQ4TG8hzBUGoy7+q3A3+o5VeTaueRrj8RZFsxMqmtZRPD+OImsu32X
30/mc6x9cz5tq3nHWbqn/5L77WOeA6fI3IpFgnwj1OdKqlR5d6XdkAnq6wOk
Tc5qte2uu8rE5R1yn7Ypb3pd5fFAufnf3kaOGepzJ0gKhvr/XO22+nmCpduy
tCpO6YpjpantPz4bnrrKA+dblav9xzmMRrm4uMWw1Fzq+4m06LWyfA879fXJ
YvxUwftTG1fp9rel5JvHOqlkCe1QcP35Ber9LjJ9U0bk0Vvu8uCPo3/fj1K/
p4f+usrWVUOGLHTXr8/4tuf9ofqKPaVtqQQLVxvF3hJUwq9Z0BX182bm15DG
3daOVOwv9Z++nLfCRXGMLDvd+2WfJ+7S5eLDHr8+4RxjgzRcFnHl3mNzHfGI
JYsed37nLr3/+rNCXD/UFWd+Hiz94+nkGyVMP0/m58GayQNDP4SYn6vuPyrb
cuDLctLnt5ZG28+fjer3+B4tpcHUJUOGrSxnYitp03zonysaK7aWaq2bFFpW
UrGtNCte8nDng+rPd5C/n5Tr+dMAxU4yunl3m8GBiqOlUtWUQYu+ekilXMvn
OpbAXPNMf48a4Opd+L9ykmtPaceR6ejDyfT7wv8mtb7xTH2/58aGDa5Ud4hV
eqSEnLxyJ0S8pGK/Io4fG/IejigJiyj2NtZGvT9BymzI+c3um6dYDu62peSo
eLw/XLa1aXd2+0of2RLbt9m3zbwnKkJCrxmHGnqY+7RnNdh0pk2Sj1iMWbB8
yjrOOYiXK+VHe4wvZd438RiVePBrtI8crr2wpf1M7jumSfHksSNeVjLfG7q/
9nxjzW9+cnLtiVoVv/Ke3RCZ8Vd6ZO2p6rk4VL4UPrVgbznFYdI9dfmIu+vN
c0pG9X5Z+fdDfuLzenmDvx9K1u+X+fn3KOxwtfiB5nODKoVkZNckP1kypW5f
jxU8d0uVLQ9GOxQKU+/3leoeR3od/VBeLDuvr/7xmo/pdfP98zZ39/QqMb28
ft3ul99+ahqqOFCiXOd0/vuU+R7hNiWHdFjd3jyHqPKuhIM7XMtLXJcTNacH
CL5/inyuM3qtzaTy8nBM0gPns6w7SZH266IaVmmhvr+LbFze7IPz+wAZ+GZj
w+er1eeB+T7xqDITkhIOqe/vIX1HBbarMVmxp4zyHnLKtYVibxmZXmriyPLm
uWJvXybItZQA2WRdtkWMJebyZX4+vWh45lSOnwKkYrxhsL0V68isJEdhm8d2
XwJlQ9Fx94xji+q/l+/RWkYP6/r0v8Pm+9M9F61ut36y+f50uwdJ+3o0M9+f
PvXEcy8HX/MczX/3pa/973Sg/PKtV43YQ5xDa5SPbwtWGprXXAd68emXImkn
AqVgVOH9xxqzjjpZXAtO2L7PxnwffJ0Cjdcd6WC+z7dSoNeGTQvM912Xbznp
5KNg89zbXR9PeDsvC5JWC4822DWdc6OTJNl/WUrDCUGSkDCoWq9t6HPI/Hz9
umhTnnyjgqV7/+k3pnXHXPbMz9MJIwyPXzQNlsKr+m11dUZfRObnxZ+7V+Rc
+zBETsTkbd59K+8JiZazhTs+nN3K3HfkmntFg07RIfJRjjZtNgl9e5mfJ1PS
+17xORcqu/Osqn+zJe97ixCbhm1tl40030MyckuPmr9Gm/v+giMb5YxwD5W0
s39d/lYEfYCZv/f1pEWbRr8Kk4fJ24d9Oc37tULkRp9Gtzv/Yb5/bsSiYV5l
25h/jnv2szuGlDH34X70urfjb8cwubZrWlD+SfFZv1/m59OjyrlG/rI+TDqd
cysRVYv7rgHSzL1V6cZHwiW890rfIf1531GgPMhbtZTzEPN9YO0Ppw5tGW3u
k58TaWmx0itcKlyc0m6VYzy+Pk16u9f9OHJuuFTZ5ZvT/jjPET2l+cLLr889
jZCLLyd0dB6h8pb5vhnr5z6PWy8238+0rvX5mSd03vCXxnNKVM5Z3DzXIq55
mfG9UyIk7U7K7Ej9+W4+d5kzqcSrfbMjJHfujOHPq/Ic00X+PGBdffrZSLky
0vliywvqOcp8/8esbvGhnsPN9+U8WTt049Io89yZtt67Dt/rEyn5Cm/pXboC
5zalyreJg7fkWxMpKy7VrTriCutybMX22qVZW/ZEZT7nF35S7QzvY3AQH/cH
U4p2M99X0ulO2f+aOZvnQtk8bNLr4L4oKRXaLvD4A8n69Zmfp1/677gQfzFK
3A+krbjTmXVAVlLP/h/5Y0m01A1Y/bxKa7VeM8+7rzJk7Od7dtHiG5k75tEY
0Xrubr1OJuU310VUnX3W8dsita9hntsWUWTLrDfuMbJ6zJyOi5wlq56ZD+b/
GdlprW2MRAfu7Ga1gnWultLl4NyTT4MNMijs+pN67dQ+lHluYp3udVbMq2qQ
UgN/GrurPOaQZn5+N96/ec2CXgY5+fvZ1KHVWDdrISsDuj/bkNs8j3bsvv8m
fm5mnvvrVu79SZvpsfKi8ej8Pe0479QojTv33zChjLkOt0n9kFvlXsdKmTsf
jjt9Zt9HtCz2+/fF10dG+S33x11jj3N+ZIz8s7jArKEDzPNVx9fx6324oFHy
n67ss3MV+0Yixebzu+OFW4ic3n7UvlEXzt+Lks7163UK9DXXyed7U+5piUoi
Tt0XzN3QnH0n4fLaaW5YgRMidnVWDDhajPPLIqTd78nNLk0TKVqn6fKzpdmn
EiKNz746Vbh75nPM5xrPT+7m/KdQ+XNQDme7aPO8pw2nfTb8m8vc12I3NOho
oeA42bNmdpPzF9lXGSxvf7q91rgiTg68LnRlRBPz/Jxv/uu6dZrOvstAWVi7
iUVQ13jZs3Tc+InXOF8kSGbN/vn6sxATZ+afOTvP53odHC9el95M/bmRuQ+t
U9dZuSP3mect1Pg3eutaV3Nf2qHZFmttu7K/PFEKek5odb1Wgqyb6N//zX/s
h/aX5MruVYteSZC1h6seaHmO/bgB4tr18d6/ZyVIyIUN6wN3sD/UW4o1Llb+
VcNEqeK2ecWw2+q53dyvePxXY8UvpRNlU+H4L56j2S/nIT41zvoPvJG5jnE9
3bp6EbVuMver/Do2PHbjHHO/XfvtM952m5cofWrebhlqZD+Ri/h4NEj50i5J
dq/5VqFnLdPz2v/qj1m35f7aNDdzv4X3+ymdH8YlyfWwMYt2novH+x2kjnuP
YyvfJMk//7jdr9JB7YOY66VX72691GKNuZ/jwQWPOQMfJUnk/tVflrWMx/tt
xWuL4WiR2GR5OHLXyn+asD47Xjp/Sm0wqFKyXBpw6n6pbaz3TZNP7++FNs2b
LJVnzXccX4fnblbyweOv+gtPJ0tzQ/6eby3Vvqq5Xm9ywfi/Hv9qrh+2spg4
yy7zcy/Ytnb+6Lzm+sg/X34LX+LHczwLyd0jrd3d9inSLGLZLwtafUL9oKVM
Kv5bnFMZc31Z0rq9xrGNU8Rm9ova/vWy15v9VOnJjT65U+RJvbHjf86Xvd7q
eqdt7923psiOgdvPOgay/iZNfkq7fv7KzBRZ0vX+xLA7rE8R8ely5t2nBqlS
6zffvfmmmOsVqtneGP/vfp7PG8Wxwp25qzakymG/cSPiV5vPb8PG9Z80YIn5
zx0+5nzI77+bz6uKvJPdyWPM5zH/XAmLtO9pIeu3dOoe9ui5cY/R4LnVzlq+
fX09/0ab58YNe7q2uD7LQY7l3D9yQJeXxla78+QP8nISt1d+qePTXhiXFHr8
plNrFwlpXW9NF59XxmkHamycnsNHtrpNXXiw0Huj9+9bot4tjc/UX9e5//W1
sXHeP5a9tk+UBUfnl5wy8JWx7PPuLTwGJcq1XE2qHHN7bsxRbcmFxWEpUs7i
yLnt594aQ+ZuORl9oKh8j/nEcnEZY3xlNyk7Of2zZWgOcXR7cLthlJ/0HT9/
XJeHuWWIc9i1Od/ixNu2xe2rH/JJgZYt05f2jZf5AWFteq3IJ60LPzg67Vq8
VLuQsbv/wzzyxWtijU+BCXJ2novXprK5ZN+MhM1DdyaI3ezIVhUP55LO5Tus
u1YmUe6+XWjz+GoOmRWacsG/opWEdxy7qvFUS+lhf3x7txUl5V7YzJ63axWU
hs/Kh9Tzc5VOu/481WxTIZlfpX31Ofcy/z08mmxzvn0RaTI92adipTi5Mqz9
xvUHCkm5S5W3J6yNk/TBVxdF5y4oBdaEVRraMVWWPe+wP3FrEZnV2Lg+95lU
Wf/PG9eKToWly0XXXXUj0uR9uuFMv2EFZeWgXjtW5yyu46PLfQt12VXKFEvI
OoffEt1L2JtiCWl77/d+BWs7mmJxeViu+PJtvzjJ6apuNXp8sxK3g+3Xndjn
IqmjzraYM6yYOI2uH9b0q5sYbTb8tPtzMYk3SuuG7w1i+cViSqebJeTRgguX
B+2MlWXDG3TM97K4FPiwfmTHqUbxvnPUY3X94lLo2/CSF0qLtHhvXLX2gpW8
MaT/W/k3kcXP1t3u3MFKctc/tMXqU5KUPRy0e9ilEjKnzZDffFoky4MQ+58a
FSshnvvyTfE6kizxxWKXVapeXMbWr9qndlCKdDvW98jKicXk3NKnSxfOSpHf
Y3saS161kkFH+tevmydVcte6d3S7t5W0u9U2YN/7vBLyIti2ef9S4uNysVhq
45I6Nulefmb3LbamaC0VvraPXL+5rCmWkmPnmhVv3sVZpi/f67bvmo3YPzno
7OTtKmGXMpNELRv5+963sulbPGXi8W/GJ51LSp3pRQ72/xol9ZpHWb/6UEqW
jtjS+dS2aJntcm173H0bubCpxYw6g2KkzsVRrRvksZFS1cbUM8QYpLEEtnjz
3Fqmlgn/mNE+UdY82Xo6X6VS8nafYVnx44myqtTTuCntbOSXahneOQKT5POQ
nLXyjygpu+aWWjp2SpLcf7Mzoucqa3my+dFir7xfjTv+6Nt+1CB7+dzD3btj
XC75uq34lE3z7eRC0fFLyz0sboqlZbJ9/n5LS5cyRXvp2tH1ZvggOx0dWoSP
KdK1jCnaide5vvcCmrpIzWVvjjXfbSuOIU8dfQ55S3S7fw11xtjJhJ3FtjY8
HSFJL5NvdE6yl+6JjVs/GhUpfxfrOWW5T2lZ6m4YcCYhSmZPff06raidvNv6
8fisu/Gy+a/zXa752kupEX5z5yUlyA756cVn39Jyb/t/cbZLEiTwYqei+wLs
ZKf9gTXX8ibKzatOA9+E2cqLuLG/9xjwxth//O0HjZqWkVa/FhxY7U2oTLTz
fx93vqxUrp/wouaaMAlqXfhg1V2OUmZErh3NmoVLulORJ4MHlZGqyyo+aGMT
IdEL/BfMqu8g1T8sabC+c5wMPRJ+fmLPshJVrVXJDUfj5PQgl5XTGzvKy5wb
Nxz0jJexpebP8UsuI6sTZ15P+jVeurqf+ewf5CCxhZeNjhqQKi/aS+NzD8vK
le3H5jneTJWLF1p/fW1ZVprPHldtXVKa5L7df+goP0f5533XrX43g2Xdi5td
G+5zlu7v7Mf6jg+Ru0/DHeo7OYuVVZ7id5JCxcmpgNvh0U5iKHPhbHQTkdc/
16v6rLezfDto2Xr+VpEvpVwnD7rlJH1zvd/sViJOHhS+cWViJSe5+mnHzgsf
k6XHs2cvGzx2luJLLA71bpAiadNz2t5u7yy2bf/127A9RZrO7rbl2CMnmfht
wfUx9qmS9nX4wODOTnLc892u3ffLm6KrhFQ5tX3TjgBpN3t+z469XKXsob8m
n/s9UIxjxnktT3GVbc4hfV82D5LuCe1e39nvIi47qh6fWy5YktLnzTRUdZHJ
Y8PTbD4apFyZLhN9X7uKW7OT1QzLYyV1z9wFfWu4yojdQ5ZY1jeK1YB8lYut
d5Gie37d1TS3SKyF/duBxTL/3Y0s79//TpJUdN+99fkEV3EYv/K/JZIs3WT1
5lk5XeXGh9dtas5JlkH3z86q3NNFmp8I2e78wNkU3WVDw2HHKq52NUV3cbwx
Ib9TZ3O8N/3vSD+vcqboLjG739nWe+dpim7S+u/d9Vrt9TZFN7FYVKZxiV6+
pugmXSvlLBLj6G+KblK8l7P3kA/R4vY0vlbeV+7idf+fw2d+j5HqJzZMWJzi
Lj6Ll/mermKQOhWq1184x03en47vMWxg5r/vlILHS350l04r/vAskPl8v2H5
5oWejdzFanP3kc/LJ4nx0hH3fX+6yeEqt1rFjUwSl+iRk/K4u8nOVY0fVF/4
zThtU0FDhdfl5LWxbe165/LKl5P1S9psKidR5RzSuh4qLCfypxSf3a2cFPfJ
+2pN2+IysuSQDxeDy8nXgrMPNbpXUr7lqdLS/5WHOM689I99XTspWvnJk99W
eohf7Wn3JlxxkGkrKr463MlD7o3L2O3o42SKHjL34rUiO1ZFScyaXWXS65eT
cSO+Xv69RrQ4FvuyKWWxh9T8qeLQC/0TpMI6v2INXpWTIud+mdf2TEKmz74N
mJtWTtonfLBO8EyUJYXv1iy0IPP9UW8+jv3jhbHC0ibX14V6ypJOXT512x8h
Fa9ce3v7Vy+Z5C7XQ1pHikfFjN3tj2Q+16/9NMYyX+Z6sdk7u2JFPKXe8lu1
m1yIlxaLR9XtU99Ldm8+vL2tV4J8uOzyeO5iT/ndcU2+bXfDJNnQpGj3oz5S
q9SSWneHhcty/0rLjxT0EfslQyI7ukZIWKV8PS4ke8v8zvdfbb0VJxnb55y8
PcpHCjVZvtYpcx1UvvfifYOPecv9e4PPbh4SL3NmFaxypYi3dHJp9cvha6my
YeT4L879fGT6yc5uK0LTpGnsjgnLLnjLruPr4rZ+C5J+s1oO6frNTxrf3DKt
8rlg2bavS/lZy/zk/MSEAiOXhshK9+HWxav6Sdvi7u3O9w6VE24VTq144SvW
1kO3tEgOEy9Pyy4Hx/iKcV7DvinvRD727/ywzFU/OWA74nRIUubzc0un5LPW
fjJu/P2IpElxEhM/97Z1ZV+pNzPi7OqbKdKi/a1KO371k4L5ol7mDE0VH4cH
hwtmrrPenLrw7NqIVDmb0PDPfq6+MiOyw+K/PvqYYnnp3b/uu6uZP+f3WF7u
OkwP7lbHHHfcXZ3RalCApB9tnOPvnOWl1KP1M63qBkr5c61DnVf7y4uFPbrc
8gmSW0n3rx2o6y9DgqoX7dVUpNCRRMO/A8rLgAWGfW4rRd4Me2s5aZW/nMs5
OCTXs2SpXtDyTKGd5eVocsvK+Ywp4m3/W2iZz/4y8lRyy77jUsQ93v63hwZ/
ud8yxObsS2d5FVh6dPsPATJiT8qKlvNcJfGG6/l1JwPEq47fmVMV3cV6pU37
B4sDJP8oq0FF3ntI7qQRkq9/gFhPKT7AapGnjKowMtayRoA4NSszvk5Vb7Fa
WyR1ZbkA2VBvh0ONzOed7zFAPKo33bnYWqTiwt29K3oFyM8Vj91sVDNZ7k+d
vn/bkgBpsHPP/mXzk2Vj70HDq8cFSMF+q+bsfFJUmo/bNGnal0Aps+dMs1xp
JSTf2pBLciZQdvUt02DMLBtZ02S4ze0lgfK4+7H2BZ7ayQ6HHjMH9wuU/Z0q
d6grZaRbw0mXS1bL1Fc8yhuT5iTptXvmmusWKKUq93zZ6J7BFAOl++r98uzn
WFMMlG7t6zxbmMtoioHydErQwcndkuRfn9ajvG4HyuCD7okfdiRJ7tEVR7zs
FSg9I/qsW5q5rnvU9WWLqoUDpcpL64g2Nd4b3asOaukxLEiKb0xflf5nThl8
Yez5p3WD5L+fK+f7UDu/zF390OlP7yD59cri6UNOxZhikEQUSc/zsoHBFIPk
UNXyC15lrrPHzGsSf39vkIw9GT3glmeSOMzr9fFA9SA5dbZM2dL7ok0xWH7u
uj+pf2qMKQZL9N1S4aNqJUr6kfKdrZcHS+W/nlZ0mJkoM8denRYREixfH7bv
VuZZpCmGiOFbg97jV0SZYoiEzNteoGlwtCmGiHyNc6l/LEEGfR6SuH56iPTf
nv/b4qKJ8uHnEl8rlg2RuHJHx969GmaKoXLy2kLrFYvCTTFU7sTmrH6vfYQp
hkpM+rulFf0iTTFUKhVNLt4kNUGmO45x2zk+VC6MWry638gE+aNkxcbviofK
kJ57V4e+DTLFMLHd7v426c9gUwyTFK+yjY4NDzHFMGlf6kD7JVVDTTFM+nlV
q7HCxhx3lT/SZ/LheOnbdPIrzwlhssQixn9avgSpmKN3I/+iYfLscq+FLTum
ybVNzxL/uhAmOxemvcizqrw0Ob3ofc4L4dJjf6/SDecGmGK4HGwY5Nq/TaAp
hkuXWrPs6/oHmWK45NkXXuJtpXgpMLSLx5MZ4VJi6rApz0fGi4dvQZ+bJcLl
ydWE3gXvp8o/O4Y/tzkRLicsCi7b7pkms3PYVOtZPVz2jslTtNrdctL80OB8
y15GSCv3nh9Ce3jJ+onbP8/cFiESbx/zwcJHnBYUnts/I0Ka2py+OH6srwSM
ftAxNSVCKlsGjn1p7y/lhtqmfCgcIQ36dY7odz5ONr79t+vbFRGyrqv31oFW
mfnhZq2uX5wi5OODJYNHtE2VV6cr5yl2MkJuHDlW6K/M9fSeKTPsxlaOkCIy
6dDMHc6Sb35ay+NXI+WFnWf43SRX+VBo8qyXCyOl4BfbgS6n3GTYwELGYu0i
ZdXIdUurNPCQCwcu1SyX+f+9wrLNxexbxMmUap1cww5EyrOASU3CZ8XJ9eYe
uzqHRYq/R/qrQ09SpFGlJ/d++ydSnN40X7nWK1Xk0f46zWtGyoa8uZ4+jS0l
f+zN2LHjZJSUrd4s+HnF0pJqfanQ54lRMrFeUsD9emXErU6xY5F1ouSQZf2h
D4KcpOVQ3/if7aKkfaLVhaMvRc6McFo17W6U7Jh8qG9R7zjp5fXbG8daUfLx
9rSpa9JT5PVf5f2a/hclN89/qtV0XYrsXflu+e4WUTL/j97jSjUpIhtLPnux
72i0VKuz7/7cc8Vk8pTn28r1jBbn0h8Kpoday4jkr4MbF46Wr8sGVvy0M/P5
tPqXqW/7RMvuAYMrbDWkSP9Puad07RctX2bYVDnXx1Lk7L6RUUVj5M2u/1If
VhN53O/KhDMLYiTRWHr06uEiIweG2DTO1P2KTc+YdyJZGrgE5DDOiZFPPdfU
TsuTIm8fN1k5sUCMrCuYuD26YF5JH5Taq+1eg1yeMXTKiGOWEj1pbfEJdgbx
//Nx+5zrjaZokGk1u3fMUUzEf+mdCzldDPIlyHnJ+5bJ8qF1fKUXfxmkWlnf
T8umJ8uC2Hpvqwca5GOoR98FP782Nmu5sFSFlFhZ+aZa/FJ7C9nkWOHBz7li
xfMXp25HtxpMMVYqTcr1x+C25th11Prme0oYTTFWHLyiHy/9kiQRNdIvVP0U
K/UbeW/tEZAs67bW6nq/WaxM/zWmZNiLKFM0yqxHNTbfWRRtikZZ4PXWObFu
jCkaZVSu87Z2lgZTNMqj4V8XjDmWJOeKfkmwm2GUzu73J246HyFbJvb4+3IH
ka4b204IzlyfRVzecNguScSv+kCrt4YomeZptPzkKHK8hX27Sz8lmaJIx9/G
XHOZnfQ9OmRysQyLFdvCZLOlWJz/V2TwiP8+7u4ULnEH0gdc3yzS5/HRQV2c
I2TXm7t7towX6VvhyrmzsUnf426RAwlvnvZ+Eiy3FvTtFZMeJ9XbHkmaPy9E
lgffdTlVNU6GHBlWf3aNUIm/u8+3ilecLNhx9mrLPGFy6urDp+tyxkmOJ5Pe
T76b+D22jpOe5SddG18syRTjpOjM9KZFRwaJZeUda4YfiJO1Od9unhwVLPVy
9GtYYU6czF7jVnbt9kRTjJM+1ScsbPUoQHYuS60e1DNe9kX8Mrv5jMDMdZvx
xNrMz7Gh5xYlNUkNkvgOZ1zKu8VLiVfVX+1pm2iK8fJtfWC+GeMTv8fMz5Wl
82u0v74pQGpWW77x2eXMz73De8JzSOL3uCdeAg/7Trh5LEBsW0093LVNggyd
6r008ZUp9kiQvh090u3sEk0xQdZZxVW0muMnvomniifeT5Avh8/tPP7KX4xB
oV1e7UyQV3uPlvNxD5APN+5OmjIxQW7XetJr3QlzbLOppUf1+V7S4L/padbt
EuXX2y9v5HjtLTe3xvS2MCTK0jfBt6em+EqHL8e23i2WKM0enSmYY2XC9+iT
KHOjR5zx+cNdHhRZ+LrC40TZ9uRD4OIvHuLfb2Cl9n8myqs7r74VreIphg+f
vw2ZlCh7R3UfN7FFwvd4K1FatXWdEDUiwRQTZeBPxRfZHXAWp1m52+fNfO64
WzpqSVqxzHXkr2Pb10hMkrIupT92a+ImI0b8OnB2qSTZHuKU6Psg/ntslySz
x5we7uKSYIpJMmrtydb7jthLsbfbKtX7kCRnH6ZNHtbEUaIMI9efOpokt/d2
rObUx0n6PC9tnTo3SXpMWD/jWo/47/FVknS3efm5+9Z4U0ySbRcMzYassZGL
2/P99Lx2skz2/np8WYyd1Dz4p92Ucskyq+rPCxtkrgf+f2yRLL/mHvZphk+8
KSbL2Nm1A3I3TzPFZKlSb1SfcT5FZNji6e+23kqWJa83BTWbXUym7K6Td8yG
ZNnTvuOTNy7WEtHpt11NhiZLRqM7idcqx32Px5Ol/pvxpZtOjzPFzHX9gGYl
+8elfY97k+XS83NLLid9NQ5fGnbev3uKDLt+paeja255v6vx/cD4FNm/sebi
Sq75pVJ07SMhxVOkxtP8u4Z2FFNMkROrq26sv0W+x/AUed7v9vY5mT77HlNk
3o2Bra1c00wxRaKONd5+tu5rY4unZ+bsXpgi7cL3v3njJ9/jHylSNeThJ5dH
qaaYItWMgcbTedK+x2EpYtNrU9q5c0YZveOyW4cOqTJuTY0SJ4PEFFOl7pbO
T6+dNMWqqXLgZZPTcxfHSos+a9qdPJMqx5169MxjMErb8du2D56bKrcL+NsW
2WKOZVpcXGvcFitF1nW8NK9RmgybvWXGuXmp32PZNPkfJQriWg==
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1k8tOlFEQhP9hBiT9Dw/hE0hkLsSEBQu8AHFBosFENiSEAQ1uJXjdKigs
5WJMfBVx5TAkBJaA8QUI6Fq/SpeLStfp/5z+63T1uT7/bGalryiK+6AKKqAJ
GuBtFEWdxGviIusdsA0WWH8mnpac4XsPfqiz8C7xAPwp8+wb9jbBGLkRYn89
86rdZc84+VH4MvgK/0XuNziGPyH3t8y6z+E1zg7CX8FfRvJNYpX8APwFfAg+
An8Pv+TsEXU68FFiDfSD1Ujd68R2pIZp73mq/7oHSzoLfpSpX/do+C5TxMfW
fML3b2AQfjPyP6rVdq2211XzFrgFBsA18N19kJY19QhtF2X2RflWpAfqm/ra
sC55sm9t0jVlbdJ7J/IuE8Qbkf+7HXmnpjV07LPWk3xbId4lDkfeRXeatgZ5
1TKXXvldq2Qf30V6JK80E5qNB5HeS/MW8cxeLEbOwZi1S8OuZ0va9rx+xJ4v
xIfET5Geyts591y9Py9zj/ZqbpTX9wPPqWpuROqs1NNv6S3gH9znvnrOkGZJ
87VlzZrTQ2uRpp7raf0xct40d13PvR7Ojj3p2OeqZ27X7+N/jZ7fyFWZ/9Us
bzunevfsxSzxp9/CUmSdjvv0D+jaZF0=
           "]], 
          PolygonBox[CompressedData["
1:eJwtkskuBFEUhm/1pHOrXsLW0HTEEEszS3PYSQytpC2N8QAET0CEJ2mWEjqh
7cTwAsa1+P6cu/iS/69z6t4z3OalzclqxjlXghwceee6IgT8xc59Qh6dg11i
X/hCZN/28Lf4HtJ7YQDfBlln32rEnuEMfQ7LxFqh2453LegS9KHzcE3uLP4C
vQGj3r4pVoB2/BhU0f1QRg9CJdynWhbwl85yJrz1oMsiOMQPQRrqeSQ24u0s
5Y+j58L9D/BC/Aaa0EXo9NajetUZOmvKW3+qQbVoRppVHb+CjhLzmtcJPpOY
1gxP8fvetO775q4PuEPfw5Y3pLPk7KDXvOWqxldyp73NSl61qyf1pppU24w3
r3obxA7wRc5q4H/xqTetmb3HVnM9/K/dzYd5K76IHg73aWfaXSX8rzN/YstR
rr69xXZnGvapWl1ivWgmx/jV0I9moLdVC+9Jb0RvpRz2ox1oF09wFerRrre9
7VYz0+zUg2LKWff2ZgrhvXSg/wFZmVVV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.44697442364361184`, 0.5615685129975149, 0.9497017929239753], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmGuQl2UZxt93LY3n/0dYOYioKGZ2MEkN8MBhz7vsEqibJsVMNc0kBCwL
LIcF1g1wNa1JZ6ovsSBCuJxKWaAsppP6oSlUDiIuhq6QgH3qOFN9qa6f9/UO
fLjmOb33c7jv+7nu+3nHf629dXFFlmW/y7PsEpXfULlZ2CQk4YT63hRKeZQD
wj9KWXacb1OWDVX/SdXfEv6m/mMq56n/8jz6/ii8r/6DKr+i/lMqdwq7hBeE
R4Qe4W337RZ+KqwXNlh+h2V+5j5kfiE8KjwmXKG13lE5KFTmMVfR3iP8WHjX
5U+E94S9Qr9wTtgn7BfOuo/2iDzkkTttueeEPwnPW35YHvvjTGc8ztjwPPqK
fez2Ph7S+Y+qXKPy5z43ZzggrPOZ2cc33T5qWzwtHLFNaB9z3xbhuPCMsFV4
3X20Dwu9ljkp/T+h+WZr3VF5nIf9VpazrEXt76v/TZU/ErYLa4RGoUm4Mo8z
o7PVqjd47DVho9cYmV/Q06uq/9Bj6GKt0GV9UT5sPa3xGLru9plPSGab99Hv
bxk7aDt/S3jDZ91m/+qzf+CDz7qNj253+7TOvlXlXJ1xUPUtqj+o+p/tZ/gU
e31ImCectw2wySUVoUd0j03rhbo8fLtWqMnDL0/ZTxdZ99hgoUvstMAltvu7
9nCZyi7t4S+qV6jemeKecd+GCKtT9K9KF+4eY+yXfb8v/LMU33anWHuY9zXf
Nu+1nbAldlsp7BZ2CStc7hSWu9whLBWetQ8scYktFlvfW21bbPyK9dHJPq2/
jR6nvcfrzfNeGGv3fMzV5vmesR3Z+1DfG3TNeQ74rOftr6PzC/47yn6HniYL
kyyPTarzuHfwQqV1N12YZj9FjvvNfb9K5RjhU+hc7ZtT+Dt+z3ofroh7yJ3j
Dozxnfiv9D9R5XdS2KfKawzxOlPzsPMU4e48OOAdc8J+n+mceWHQY/vcd/Yi
zho095x2+3lzUME3Zzw2aM7izKxRmV/QY539da/vMfL9Xuc96/iA70OvbTbf
tllkWxU+TbuB+dGv0OhyhFCP7TxWi03xS6HOJWNzhY8LnxCaLDdSmI7/4+vC
i6WwxafVUa1SNJUNFeh8xf5XUREcxP3MK6KPdpXnQOb3qnySuVPw7H1CK+uX
wz93pODFB4QvZMG5nxNmmXdahJlZcNNMj8FBnxfuF6okP0FldQp+avUYvH6v
13vc37IGcesej633OrOziGmzPTbD+hjl9Ufji57jemE8+tR6C1hL5fFS1OtV
bxLaOEsKn1mdBc/iS51uw4tLhKXMr+/aVX4phX+uFFZlwZuML8vCP1dZvs99
HVnw3nJhRRb82+H2BM11l8oGla+Xwt7TUujiWmEc6wk32Q/Q13U+24PCR4Ub
rS/OeoNtc4PHmq2b0db3OMuj02u8Bnq82m30OtZt9H2V29hyjNszrWPaD3uN
Fp8Vv8Sn0NMUYapwW4r6jBS8Wus7ts1c2W7+nGouWGZuqDLHTnO7w33V5sVC
jvku992t9z2uvIiXmaPBfVeY84Zaps5yyCz33DWee4r3tNicRLvTazSYj9s8
vskcQD5YxDDu/2b30V7l9ZBf4XVq/d0dwp2e7y6vhxw8PdlzT3R7gfvuML/c
aRl0BHeXrMO+POIT+hviMfgYDjtrH4WDGuz3cFOT/b7B7Q9VRDyH09/ynMS+
AeuX+bt8D5vt+3We96THkVnrufnuD6XggZoUd6jWMh32nWr8rxyxuFfffKQc
ceeRFPkXcYaYMiOP2ERsa3bJGHnYCI8hx1mJE422P2NFXMcfi7i+wmfrcHuP
bdbpeYkdxILdllvl8y29SN/LLP+fUuQebSnaOzy+yxzAues8B3P1pcg7xuqs
m31O8s1NKc42vBz5DfGbPAj/W+29fS+FXS/TN486V2P9DSni5r9U70kRt/6t
+sYUuhum77+dwq+Iz0tS5I68P9pTvBnOq74vhb4+pu+/7pz8bfXfYu56SfWd
KeyF3WYKtxN71PdkCv/My5HHI/tXfb/YOf051ReleNucVf2pFL5coe/Xpngf
8U46ksIX69S/N4XNbixHnkQcI57BV+uziEvwJLHnMXNTt7kKriOuFDFkg2Xg
W2Jej30YHt9tn0auy5zZY/kiznWbG9e53eo1mYsY9Lj38YZz6QdS5NPU70+R
Z29VfU4KDn/CMrX2C3yS2EKM2W6O7XN7pfeITxFLiDE77F+73O5wX5/vNXGO
+DaQwkbY6lbz88ul0CP5QeZcnpy+yB0oc/MBtmAMHuYtxFsEPuS9wRtrm/to
bzZ/FG8ySuYmN2Gd/5lLBjxXn7mm4I+THrtX+/yiRI6WIgYTY06ofo/qc1Q/
UooYT3wnzpOD8cYjF/2qcxfedpPLMX+/+mr9/SH135ci1h5TvTVFLCYmfzmF
TQZ4r6t+qfbcUI5877jXmJUiHh/WNwdScAd50/4UfHGT6r9OoY/bVH8thT5r
VF/g98wZyf4yxZy3lsM/tth3jqbIrevVfziF7mtV/00KPd+u+m/9Lv2s6i+m
0NlE1V9NYbfqcuReE8zBNzuHJ3/EPsyPXdEXZ6T9tPXH+NQU+SF54ndTxB8S
x0Mp7Fil+sspdIuOX0phu0nl0Bdz/ioFd8ADvO9/kIKj4fgR5m54Gk6BW8iP
iry5IZb7ID4QJ8iJsBc+MdLxoMkczxxwJHGSeEksne77w336jLnrFp9job/j
DnAXyFmIYZ3mA/LuJu/jkHPIOnPbIss3+I4hU+n9Mket7yr3sohV7LXOczN2
tbkJTrrUNsCvqh2LiCHkIuQz5CbVvvMdvuu8YU75rvO+5Y14vTkILpxiOXIV
8si51l2v7yL3+26PFzlIm882zrwGR053jCPmDff5OEeNuYq9lmyfD3JB7x0Z
9EceQK5RvHPQzTTPx9mqfCbsRMxtsb6u9fpw8HU+E3sq/pUU/04oi/8lz5nv
4GviC/8u4PJ+yxD3yKt4v13jubEBPM6bk/flJPsO31Xap8jfmv12aPRbiVhJ
PHvX//rmp7jP3OuFKfiafy7FvxZK/lVs8L54S/Z4jhfsQ/A0cWi9x3lzdntf
nGGd+9gruT78Q+7Pe2iG/bXe/AbPkYvzloE3yd2JW8Qx3g9zLE9+P8tjY+2P
tIt3BTGK+HbQZ+Zt0ez1eGO0uN1oG3AfrvQ6jI33HPhln/30pOW7bMP/Ay8L
fkg=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlElsT1EUxu/7qzbuey07w06UsDJ1olU1tuYhQWuOhJqqJCTmWcyzjSki
ES02pphinhOqA6osDEHLTsw7fl/OW3z///ned++559xzzm0/o3zsgoRzbg5I
0r937gX/x8GH0LluETxw7iW4iVYEctHKwVDsQaAXdhkoxM5k/WvWvgH34Bnw
hsC+3YVngTTW9gc52I85ozN2F5AH78n6V4HtuQN/i16HVgtmwh/CU535kK/6
0GJZCCbD+7E/QULNQDV8GriGthm8Yu14b7EqvxLsdSCVswpAc/YWgCBhPp6h
5cP/oTn4E3hH+Cn4aXABXuotvmPgHf4HojdnbTKoQ+sb2V75rII/Yk0Jn4pB
b3g6emVgPs/Dt+vOsEtBKlod6yeydhIYi/YA3gIb0/XkpytrngdWo+vwTpHF
dgZchHeAVwR2xln4SLCVvePBM3x1j6y29eAWWv/I7i4J1HiLQbHMAge93bHu
+gSYgr1XOaKFYC12H2+xqqaqbQr726C1BQfQekR2lmp8G74SpGD3Bs3Q9qi/
Avu2Cvuct15SDsrlHz4zA7ujbWgbvPlu5LzfaGvgr53VVLV17MnGzgI74PdZ
k+esh7t5O0Nnqed/oA2O+0M93dVbTsqtAf4rNB/ylQDLsJd6sxWTYqvwdvdL
lbN6CeQEFsNOtMNgOXYhSEObpx7Gdwv4z9B6VL26BUxFawjNVs2me4tBsShH
5fpRe5z5mAv/FtqsqCdXwJvgV53NwEJ4I/yKs2/l8NnxvOsOvqN9Apfgl8F8
bzEq1iJwCN4KPgR7KDgKbxmZpm9H4Pu9aa1BMtrn0HzpzAVotXH/q6fHwFd7
yz0PJLG+2NtsqgZDsJ+yflE838PgVfAl2IvBcPgNb7OmGdAslMT7ldP70Gqg
WiwDJ+VPPZiwmdZsl8G/OstZuWd46w/NmGatJrRZVcyj0arhE+L5HeVthjRL
+jbC20yq7fJBJkY2KHD2Zunt0p3objQT+3z85gQ2Q5olzZRmSzVVbXUnuhvN
hGbjL9++OIt5k3oPvVdgPbYL/ge9ydmajfBx3t4m9YPeUs2IZkVr1usuvOWq
nDUbmkHNonzu9vZG663Wnevu9WYp93TNiLcaqBbKUbkqZ+Wumql2w+L3Qv51
t7l6o+L71FvYLrLaaCYq0QZE9vboDa2F/wf5jcoV
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7728642530128351, 0.8224866955302859, 0.9779955439793904], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vvXu7PUPWn/s95DvBH1qroGuz/4POAv2Pg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlsVlUUhc9/Eduee1QUTRDkwQRwSIxDS6kGZRIThaI0olFwoLaFB6UM
QgItPqgUUNDEAXDA4QVkMo5AIjgyOTImUFqBFym0wANTUQH9VtbDSvb3r33P
sM85+7++ur5qUhZCmIkuQVemEF4ohDAbLY0h3AAfJD6AvoIvooouIXRF9XiD
UX8GKEO/4w2ByzP/9gc8DK4gHoB2wEOTY+Vsh99EIwqeU3Nfh+YQN6EVeEdQ
K7kr0GN4I9H9xA+gZrxByXOXol/hK+BGvm1A78KVybkjUAvcF/4TrxV9AT+F
vmHfJ9CRPIR78e/MvOadeOXw5cSXoZ/g8+ScJbcTzYf7JI/Vgj6DZ8Kl1KYM
FZH7DzpN7hnUhD8afxZjNaADcCd+L77tiV6Eq5K9RnQIvg0uJi5CG+BiuJLc
kegt+Ge+f4Kxx6GBcBl+IjdHP6i2cB1xLdoH/5t7LdrDPHg4/l2Z97wLHoVe
wduImsntl3z2qtmXeD3hNcSr0TK4f3JtNOePcC/404JzPoFLk9cS0ffwL4xZ
zdjj0WB4efRYumO6a0fxN+FtRlPwDqI1mWum2rXiL8F7B9XgTeS3lsx3pBOe
A9dQ+1rUPfeZ6myPo8n4V+E/zFxj0AdwtWqItwjtJ3cC/v7MY57Fq4H3qnbo
JHw7XJL5TL6Fc7if1o6WwJPhS3X26D94SnJcjALj70Mbgu/ck9E1Vq3129Pw
1Oi7pRqoFiV834ex+6K38YqSz15v5o3oN6i3qDkvwHVwc+Y9nIHbcu/9GKqH
V6L1Bb8xvbWr0SPEj6KP8dbqzRF/jW7E+xCeW3DNVLv23GezBU3DWxT9rdao
tbbgLw4+o2fwapNrpzWdjq6xaq2c8XD35LPQGj6C/8LvwGtHz8JNyWdZh67B
mxtda70pva3DufembybhHYO3Em9D0+GO3GvVb8/Dx3N7OvMZcEyurc5wMdyg
fsZc5SiSO1v9qot7XoKn6fzloQyugNsKrtkWvv+b33qrtqoxPAD/cME5m6Jr
qtquVY3h7eS/GvzmKvW+c+9VPUS95D7Ug9pdi3bjb46ONabG3kH+guAxHsTr
ndw7dWar4Jeie4t6hnrH1OS7qD0U+PZc7rWqB71M7p7oXqk5Nfd70b1Ub1pv
e2N0L1LPUO+4KXkv6yS8m5Nj3bH18E7GXxi8xod0/tG9TT1cvVw9Xb19JWrD
+y26l6tnqXeNRauIV6N2vMeTc/XbUfiO5N6iN/kdPC45Vz2jA97N/K8z92uo
Cp6V3Jt1xiV4n0f3bvV49Xr1JPWmW9Ag4nu0p+Aeq147BL41uIepl90d3Xs1
h+balXsu7Xk03qnou6Ieol7SmHy3dKdycp+Lvuu6M7o73ZL/e/Uf9j7e/+30
+wQ=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9605916799651181, 0.9701299199599625, 0.9515921858697814], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
ZksK+/8fTJtjPw==
           "]], 
          PolygonBox[CompressedData["
1:eJwllklsV1UYxd9/aNR3r2IsRcNMBGIpLARNpC0kCjhEWhMGRRCMLcigUTvg
QgXcSAu6cCrFCYHCQoGiRhCKurFVisaooEaZwURpKwsZBKHq7+QsTvL93rnz
/e69b1jVk9OeyCZJshrlUUeaJP35UIHuiklyKCTJN3z/GlXj9cCXiP9B9fBQ
yryWSZLXUSt8PVxNPB9tElP+o1ySrECNeP/ybTzx42g5fBEeRNxFf0vgg8F9
7UOP4N0Q3dYCtBluQDcRz0ERL0/5+6g/EC2F38ffjdeDSuBa+AJtlcC9lB0W
PdYmtB3vT75dTjynpfAB/L0FSdKJqvFOo97EZZ7GX4NfyEL1RSPwhsCvZrwG
W/G7+HYxcZ81Ko9m4b2Iiih7Df7zjLVCawK/i9+ItwcNhpuj2y5CIyk7L3gs
a9C3eE3ourzHcCPey/AJ2jqJBsMz0HzK3oza8bqD90pjqqOvnegUfQ1kvcer
L7QaXoXW41WlXnvNWXOfhZoL3GZn9Bg0Fn2bGzwnzU1tbKDuK9Fj+Q0NxS+M
bltzXIffD67KOEc2wj+hBxjLcHQ33pDguWtOmltL6r1SHdUdhNoy3uP38GbC
jdRdhU7CM+CGrL8dh6fDHxBvR8fg2+ABWed4O7wNdWS8h9rLadFlW9GR1Guk
tVKdL+EzKDC2iage7yX0Yc453l+5CN+f9ZwOUfZzOMta5VAlfhl8lr7OoU78
UvhMxt++gt+Cb2f+d6Biyn8GZwrcRgW8Dp6MNwWNgT+FkwKXuRd+O7ruJFQC
vxMdq85o+AB9TGVsK1BltBQvRwfxjqae+3E0F+8hdIz4KOpKnaPKVe3BFvgE
ast6zbX2qqO6qtONtxeNzHqOmmsx6so4B3fgVUT3vQz9Ao9SzmZc5pPUZ1hn
Wd92wXOix3IEnYJnR8eH0e/wQp0x9uJqdC71Haa7THPeD/+Ruuy1+Ivxfk3d
t3JEudIGn6evL9Bo+HDq3NKeam8XoJhzDvyFtwjuk3Of53WfoG7K7kLz8B6N
HovqnMUrj9579bEvdR/qq105DY+JjpWTe1KfYZ3lsWg6+zc5OJe+Yz8/xpsK
jytwDigXdMfprhulM039y8Fxsc4gvJkyddStR7fitcA1xLVoLLwpOlaZW+Ar
0ULG/iZqwCuD9+OtR1vgS8Ft605eSfvj1Ebebapt3dG6q2ejtanrqO4GVKqx
BY9FOa/c152ou7FSe4i3NbrsRlQOb4uOW9AEuDU6Vp8T4RDd14Oomf7S6Fh3
cBM8IPhu0pnV2dWbpLdJd3I/vOHBZ0t3rO5a7aH2cjfqof4L8FrKNqO+lH0W
Xky8CF0FPxMda82ugHfCP+S9ZnfCO+Dv8/42BV4GP0bZJcop+B54RNZn5mf6
ey7aUx8pfkd0LmjPZwbfmbo7VefH1HeS7qYJKItfFx2XowxcGx2XoURvUfRa
6w3tE5xTyi2NcRK8En4j5zkXBueAckHfioLfXL29esNzwW+63nbNKQa/6Xrb
dSYuML6a6L5L0X/wU9Gx/gl64Yej11p3yunUZ1RnVWfsb/h/vjYflQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.994470734889809, 0.9905817859607862, 0.6395517993036217], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
75X4ELRo5rp+5o/dccFCxBO5vxMzyuKelOEj6ujX1OMyWlYx7TmnnMuNbMNy
tit58yLzlrvMXfZz7eOLJO64pF8m4Vc2s/6C/+DDfdKYt8zjh1m/nlUIP7a5
++edMn6m9WkWMxhcqLy7D7Eeesy6Ej2KTkCfn+7z4Zw4kxluH2Te4s44xfqD
MfQjToZ+R5dzv+1WqLzvdreeneN2bAL3bPQ4ep07f3+vY7bXBa5pbu/v+a72
mK2+T8GPxBGIJ3QVfTaXx12D++BXTtFn8ChxR+KP/3Eduu2b8tBl6LCvXUf5
2/KQSeT+B88Dr+00jhWmb7npvToJXV0F+iRRT3mLcYPr+/LQEaybO1/e49/1
vSu7iyTGOcE0y+IWpFmcg7S3ebK5+etwYiO6m4wpBT+3cBv2n/vTd4D3xDrQ
PeggfI2t9tmXWi8R6yaOXJvYi3A+VAq/H////jTOcI7PvHoa9uK2UvD0Kebx
qtYvLcyvzaxzjiJGLZzj1L8WsW70RinW0db8vI9T+LuGU/yJlean7M1hgmnD
mYw133FPwkcZaj7tY76ZZJpRnmsepN9bxpHF5ya6L7pqH8+PztrX6yJ2j+wN
ScNfamOZwZ/6znegFV4La+UuTQyIM8b2gi/zs/a2zF3vNUFT7BD69OA09DWy
hxx/ko87+t5JzLeX8WT0Yn34T8gr8ohvgW5FX57mlLbT3b6Xy63dntEaXPgm
1Ty+hdfOHvBnftX8vyWx7709JtM78C5+1q4k+uFPVRhXc7eDq6Xx0YZu4J6A
LwbeRp6n6D1kayEFHzKD7DX1+FbGV/BamafM7U08T0u3Zb4sa6zidvwRbCk2
dT/vr+Ee+2jgMbz9IBf9/f5Q32vOGUcjl3ck0U5az3tr4vnK3DfnciPvmTJ3
hQqvF5sND8K/+PLVvFfsXmrafGh7STl790I+iBHsloE0zvl0n/Ea21pw4Vdh
A9C12EJsAHyG/Zvu8kduR8axedPchi1EF2fvKlPdhu81y3gznuP8sJPE1qfa
3k53GX+MNzJi4fg5xOuJl3d33Tj7PMTcid+38/lwTuiJfV3u6XZwdfO47P2Q
lPchzooz2bWHrc1sLynxFHypA4y/r9fLOwBxZ/r3TsPHnOl99vZ6J9qfnOI9
tPT9mPggNhA9gG46TeXrHE+8z3f9pXvE47L43Ou+249xzCCL4f3d/XiPJEax
vBhxvzfc73TsNfY4qYzBETsgprrMcbPJausjuFowxSmxyofdDq6bVH5asFBw
i2CR4JkkYtTLjWu42xcIWsOHnps9pi4TOy26PCkJG/l2EvSpCq97DdhCbCYx
1YLbdjqeksVa6jlORKw1cb/JHgfeicb9VhIxCnBXSyKWW83rOMO0QX+2cYo+
nZaEDcb2TnXKmm72vqHFMtG8o9ILHNs7P4nyaNOYs3wiCX/oI++3t2lN31qC
Q5LKeHELj6fu0CTeBYmxrylGnKrLHnGsqxyjIv5CHObsNPirpfc6yPgoE9Pq
6vGPmh6rkqAfsWLibcgDb3dvWj6Wu8ybK2+vV6URF+tmXHU9jvJ5aj9IcHAS
cS7iX/UdF2ONWZzsCsfSkAfe9Xi/m5OEzYNGyMq/3DY3CbtIW/Y+/ZZla7XL
nG8v0xS5fMfj0SPvusw7K7HHz0XD29Tv3CTWO8JpB8FIp5wJeug9j6cPsdPn
kpAt1k4M/VaVn7UM3OZ2yr84FgmdtjlGmcUXT/S5nS97PUowUnCY4ELBBYKO
gtvddojL9K3ldXUwX3R0+WDXsYfz1G+E4DZBB+OmfK7rbhUcLrjI85HeJbjT
c9/huc9x31sE7Z3enA+aEosmXnyhxzHmbLfflK98Iyfmf5DXBa0PdHpOEn7m
kepbJ+93X79N4gMTV6eNN2HqeJskzr673vH1Ou7Dtyq8o/A+g09Ofe188EWZ
3yzx2w83jfdHPgTtBAcI2ru8n+vaJpXvzWV+W67iN9GaXjtjuBccYVriwzMn
ZfQl3+Twbc1JpkEXv7d2N124Z3Df4G5cxzEYYjGPJWHj8QevT4Lv51hXtUoq
9WJLy3Omv2ibmYT9xheY4RRc+L07PR/xcfgRXhymtqcE8wWzrZPwF2Yl4UOs
MV2hb6ZPW1g3Pe6+9Jvu9aIf6/ndhn3yPQHfFZyQhn5H76Pv25lHhufjbbqX
3yjbuu7GfLxH93Zbp3y8xcCj9d2XORKvhTVm+jrT36TYOt6szhKcmYS9ae11
VHc7ZfgFfrrYfEPayWfZyfJR9NqhdQ3jY759zS/MgU+xwroS32Sly/gcq1x+
2b4/dwDiDY/Z15ngN1XeVolJzXAbfgi2BRuDH7LQ5S9dl9ldyl9Yvr7Qer/M
R1/G4LM8KRgq+JPPm3SYx2LDbjEvUHdjEj4oNvOfHr8gqbTltGe2nTTzBW4y
Lr6x2P0eV4w70ZOe81XHw36wPfzRZfySbY7z41tsd/lvfgf4yX7Nzy7/1fFC
xo83zXiD5i42b4+9Punyeu+NtX/mtVDmDQx9flka99qtPpulXiNlYoQzfR7E
D9Dr6Hfes3nXXlAMX+wnr2mRaYlN4G0PP+APadwXsJvY2Y0+N3DxBo89eKkY
eLEfIyy/+AHY7ZlOB3vt7AG6cjfAn1ltvNwRmAd7nvOdYbnfoHb4nf8Xv5E9
ZbqAa5nbaWMc48E7y3MOcblKoRLvKs+z0u9a2PnH3Zd3cPTYAO+BM7jBZ7LA
/MTc6Lbr3bbY+x7p/pzlJz7DdS4/a7pCI3TidR6Pb/SV+P0/to+blG7Oh17q
73Xgv/VzGVu5MR/9eK/l3bZ1Gr7ZtcY72/ugjJ0FH3PgWzHP145NoLN+lwb/
I3/IG77LE14jsoJuaGv5wL5ga7Ah2BLkFb+JGCbfO9COHdrfY/Z1Gb9sgvud
7XZsF9+ocU/4tBjrRT9l3yOQousu8/0h+yaFNPtegxT/tL3x1fR69/Hc6IMz
XcfZtvIc6I82buvmtY+1L8TesPHcGbCB2fcOpNjoDj6DWj4P6tDh+Ig97YM+
av8OvTnA7c2TSh/iIM9dw2vF/+V+wl0H+WvvdVzue9Gf7W+OcXm46Qu9r/S4
MfZlx/o+dLPPClzZdyfM8Yl5d555+gzTAl7EnmBXkA1864leK/oYnsM2faz0
3/mg9ef50NfYo4/y0Yad+jAf5beNY5L5Hx2U6Q/SL31uG/KBC1rwrcY6x4GI
B1FG96AbuNtiK5mfNs6Yvp/lw0bzDeeH9pHW5wMv/Ec75Ru8P/aMb4Gco6uw
/9NdxlfhW1m+AeWOxP2NO9Nq7yO7k012GzKCXkAnXWeebe0xfc07md1CH+Dz
gHuN7TIp68ZfQVeit/BN0EeZX0OKTK51O23cJeb4LDOfifHZHS+7803z3mra
J8YXPnQPP/1A+9a0oUteEPzF+miJ4Hnri+fdhh5Z7La+ngs68G0K36g0Syvv
3tldfHJSeV+cZJ5YZJ8cH/1Zp/j3/b3eaeaFeYInfcbzBU/l45400Ty6zu20
XWNaQZ9rTbPZPpc5Lq8oxbjOaeU7Pe84fEvAN0B8i4Q9PN5vOvDlQsHT5nXS
Z+yjkC4yPbijjLScLPKeLvJ7F+9e/bwn6DXEa+Qs0c3PGUdmLznLAeZHaDHQ
dZQHexz9njPNRvg8mH+U14iPyn2GWCL8Ci/Xtp/O++mRfofFd0dW+Q7zCcs2
3+fPzVfeLbFZH7udtjdMp20VcX/DT8D2ZW/t4N0kqKW+B+fjDbGz27I7Knh5
Z7zUbcf6Le0y0/0Kl49xHf3W+/wX5OO7ZN6p82l8FwCteZP+xGuf53Mbblpc
4Ddc3nSfMW1uMU9zX7zDfE96p/l9lNuOMM2yOe40LtZxo+fgWyv8/Hpaz0H5
uMfuvrOW4u1gL3/DBe67zK98nzzMexpmXPDyULdt8F7ZxybzFGeOr3acaUZc
g29Zs2+WSfnmlTeYrX6T4c2Iezjnge5D76MLodENnq+J9RWy28Y6i35L/T4E
Lu4DfCfL97LP+z2Jt6aVvuPS9rLn5H683H1Z34t+c8rei7b4beol96WNdxL4
BfphH4d5HXzrs9zf5sEHvBXyDouNxGZjM7GHw62PzzXP0tbe7djDxt4fOuls
1+HXnG56YAOzbxTuNV/e77dXvh1a4XU87G+PkIM/up0xj3iNtJ3ltbCHdp6H
9bX2POgk3u/QxZwNb1ro6CPSuB9O8HdfyCtv63dbVu91uZPr0C/wMvGL9taj
5+Qr4yXnmhezOMg5lod2HsM9Afk8ym876AXu9NxtkD1klPsQugM54G5BHWP4
BhrZ2+5vnBlHP+4hR1nHcM851nLcxd9qQT/ewzjvQ/zt5GbrDOQP20RsZon5
Czohhx3d9oJ5B/7r5m/kxvrePt7lrq5jPuSzrfeM7HEnzu7lpNyZs/dU1jHC
NOtgec3iTOiD870O/tPADl2cht7t4Da+m+Q+flxqGbONzuLv+NjYDvwqfMFR
1jVL9tBBL1inLLT83+665y3/m60PWOdi1400jsU+a2zQM3vol/nWedQ9bd54
zjrlJtctNA5sP3ae7/KxC43S+EcL+TnP/1XMt67KvqEndjLUdfO8XvyJzHf4
2ngze7/Iuoe+c13HnjZaDy7wutFndf0tP+343QfbbnK3oYy+o514FfYJG/ax
ceNDYBPgI+Jnh3qf2PUN+Upbjm3HD8OPxC/Dj8SXpYx9xMelDG58UHxh/ET8
RWJamT9Xzb7NRuPF16OOftBmndfEfJw/fjR92RM8MdfrzfbAPMxNrPA761b0
xWbz6wLvY71x4xPjR6PrN5mf0akbLV+LfbbQD58K/5gx0IO14I/Pd9s6n8F6
l/mnjnjamWnMSd/M1yYFF/LyovkYvV/PsUNsA/EyeAVbQYyMMnKGvmeNyBjx
SGJX8B105xyeMC0+Mg9xj+XenMW8iIFlMa/axvG1dQTlLbYvxGL5h4S5oQ/y
itwSl/3eNg5c39omoTsP3GN99D3P83xjG8b31tjHw9KIsfJtcyPHbZu4jP44
zOtC/9Y03t0x8XycJ//mwU8t09Bxh3oMZ8Ve4fXDzMfsrYPXxPiOxsGYzE/9
3OWvrEP/B1UkexM=
           "]], 
          PolygonBox[CompressedData["
1:eJwllllsVlUUhS/9h5b/3IJjKcpYBwQEEymQSFETpYATqBQBBxShJAJWEymg
iVqaoAJFEWnByGCBAgZbElBBBH2xkw9OFDRiIkqbyCCgD6UMid/KeljJXXft
s+/Z5+zhDpxV9tiLWVEUbQBJkJ8bRU05UdQMdoQoWhBH0QUMusDlTBS1g2ae
14In0NaBiSycAG7FfjN8Cs8lYDj8MPxyKoougdnwVngFz0vBdPgZ/J3GV/9E
FM1Dmwaq4TWgAy2JzWS0SlCB9iXvOrtF0RD0sfBDYBS+RoKHsZ0P78zyni9i
25d351l7CKxCGwiaWd8E6hULGITtDPAAWr5iQqsBW9EOxvZdCB7EVxW8A1/t
4AZ4NXw8sRaDm+A/wPdguxfMhPcHeUmfkc4qw/kWcrYjwYdoNbHPTj5ugf8n
m+woCqAS3h37ETlesw7eK/beqkEt+yuAt3RzTA3wAbFjawS74P/Cu2fbZwXr
31eMfKsXGAAfDu/C9gI4gH0X6Edsj4JytD/hBzibf8Cz8KOgndg6wFzWH4Gf
SPndHPhy+ErWVoF8eIr9J9h7EqyF/46/5fg6CKZiexb8ko6iX8Hr6Enss3K8
Zo3OD97F80WwO3gP2ssZ7QlfR8A0nleAyWgN2AztTjzY92NtBH4k9p/Au2iN
2Mxlr6WgBL469lnojvrBZ8b2rZw8je/evPs64ZgU2z5wEttTujO0d+B70faA
PNnCR6eck4/Ae+e6llrAJ/AeoCLhNVo7LPbZK6f3Z7xn7V0x1wfXmGpNNXEC
vVuuY/kZrEa/OTj3loBN2K4HBcpFMAjt29ixzgGPw0/Ct3PWO8Cr8Ev4HJJw
zah2vgffYdsKnkb/FH4EX22gCL4y+NubwWW0ZfAynotAJ/xteG2233XB3wu+
e92B7qJeOZS0z7FoDbr/pN/dDR8Dvy3LNdnE3orgg7P8rgW+MzgX1KPUq55D
b5QtOIs+K/azetR5+P36fsp3orv5BvThuS+YhPYmfGnCd5ILfyY49iugLXbP
Ue+RTU+0e4Pvfh/YjbYr9tkcBnehLQ0+C9Wcak81pFpSD0sE9yD1IuVUn+Aa
UC18Bf5iv6Wq8bRrSrW1BpxLuIcNVP3A89K2WQB/I7hXqIZUSy/BF/M8DvwB
XxJcW3Xgb/ip2He/E7yGVhL726rx46ol3q1LOQeUC1qjtcqZxWgLg9eWg3a0
D4J7mWpWtTuRd9OzXJNt+NsSnPvV4Fr0Y+jXpx3DfLSN6oFos0EP9PXw0hz3
PPW+37C/Lu01L6DNA+PTfidNPVu9W988yvcmBN+talS1OiU49xVTi3IreDap
RlQrG8FinheB24NnkGaReuAF/C1S/iVcIyn0q4N72wzlBNrnII3vFBiH9pHu
HF8LwWB4B3xR2ndSDv8stq1y8j74htjf1pqh8Er4k/h+ClwTnIPKRc3Q51WP
Gfd29Wz17nMZz2bVgGohHbxWe9beewX3Js0szS6dsc56DtiAdmPwLNNM0Gz4
AmSnHFMxWs9c2+pONsELgnuLclK5qZ6j3qMzHIa2JePZpJmk2aQz0lkppquC
c0a5ozN5JbiHqJd8DFbA65Sf+NoORqrfB88azVTN1qnB/w6TQFPsHFeuF4My
tNFgP2uXyQfa8diacuZltDvAW0n/o+hf5aHg2a6ZoNmgHFWuKidr0WYEz3L9
s+jfZVvsvdWBwuB/EP2LqEe1Evvk4L2px6jXjAnuDTpTne0I+Lake55635XY
satnVqFtje1bNncG9xj1GsV0T/CM06zTDD2m3h2cazoznZ1iVuyKcRTa/4ox
U74=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9523141239636311, 0.848648422431656, 0.28048902869100883`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
pms99+XazXl/cM+s05wlupg4LPYW9hTxWUpsE+KylNggbZvzLqE/MV10NvYR
cVxK+n+jvbWNNtT22p7YUjtoz2IDbqmd+qW2F3gvzw/nqZ/+zHhtsq21ebHb
oA1+TTVt/s2KtPU6aZN+q20HH2V8v4z3P6Bf/WE1dd+QIuX9sbGFMgdT5mQo
y3zLI64fuS5sO+JVM+xHLAK9TzyInMmJlrSjzyLHgMZi8en2Wyhf+PbzG2sx
oMWNtRgQ+HfVjCVdUOQcaDvP+b1v/yl+e8+9Au0yRvKB7bh7fimvF7n3odvd
fcbexMY9LqBfwPxqyu70Iu11vnG3X2uJHuqhjNjjhyg78AOkx97s5Xkqc1lj
bUfcHdsLO+A66aHn8KlOCPhtJXPCZ8sfOcIx4gc7JvgNtuV+Pdn12dVvxOx2
tm5n53+945wg7Gg7cgidjB8/p02NzdytOc8P5wZdSnyROCP6mRgs8VnshLes
486aax26lNgnMVDyWuS3vlUPv2u7e6RBf3yN721X5tvIv+F78s5jdWOZxDSJ
S+F7rrQdcRW+NbTU3oLQ5wVpQJdYKTHTZuOjtK33vQm0eVeC/UPMmPjw/ZbE
cnsWeVaxnY8qUo9zT55S5B6aG3/3K1KHo8t/V2R+l5z8H4rM774Rf59c5P4g
/3xqkWv8bvw9rEh7D7tvZJEx80/i7xOLjHG9HX8PLvL8co7PKPKcL4i/zyry
DHwUf59W5L5l/06Rd9bg7CJjy5/H9xFFxiyXVGvvacr3NZS8uyFW8KPyxX6j
HfXXWfeSe+llcezAf9iO2NarlVqsixJ5Ezv4p+vJPv+r/W+QNjhxataHNe7v
fuxkPmP7VXD264rVM5exwpwX+nM7293qmIxHfJwYOmu/U6tsS57sZnn5h+f6
pUrNj6dk73DnPuBe4G6fKn6H+wl+73QM8Ls8H+Dc0dPswzz/o0yZ50/i5xaZ
11hereX5kN0wx2QNx8sL52OwZ6y0j+6t1GxGSs7iEM8Y7cbZj/M3VHqljTPZ
dmOLzJt8GTzcWeSbqLXDTry9yPdaa8TfZzXnuxjexwyx5I3Kmc35PoV3KoP9
Bk4ulXcxvIc52ZL3MYNsy9uXMyx5H0MedoJ9Tvcbb4nKNWbN8Z2Ii+FLYdNN
VN4DXQPW5DT78a7pJMfk3c+pzfmGiDEGWg9OnvScgDEBB1meHXCg5Wh54i1B
+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
XUfeOX+7K0dk/H+1HKwi
           "]], 
          PolygonBox[CompressedData["
1:eJwllVlslkUUhseW/+9Pz/dHMBpbVGobUdECegN4oag3Qr0QiBFUBKlRQKXg
zupCsQhoiwIK7oAmbAFBS1KESE3cwBuNu6DBhRItYdOApajPm/fiSeb9znxn
Zs45c6a6ftrohpKUUhP0gK1ZSh8x+Biui5S+Rx/LpXQcJqNPo78uS+krWIzO
wx2lKS2B+dh2ovf3TGkT1BZTysGQQkqDYSm238tT+owFu+Eu5n/At7PL/c8g
5v7Lt2/KvMZz2NrRo1h7JNyEbkNXMe4LN6D3oLcxboVb0dX4OBdfFbAFfQrf
l7O38TAj8x611xY4S2szfw972w2r0Y2Zbc3QC/0lehe+22Ei+gi6yN4yeBy9
Fv0+sdoOg9HfofvkU6qESegz8b8S3yvgNXQD9gH4roVu9vZt5rkVcDf2LehD
+OqEYehe/P9ywT7eQE/N/K/O1MX/H6L7s7fLYBT2c5j/HnNb4S30pXALvhbC
KuYe4Z+uEu9BezkO13CWq+Ep5v6FHlbmb43KL/6GFpzD5eje6HmMG+FN9Drm
L8X3MhiK3o4+wfgkjEDvRY/gbMPh3nAOlAvVTA79K3oMtrHwILqm6NxVwrvo
fdjr8vZxP/on9I15f5uK7s/8OcydC23oF6CKvXWy/9Kia1C1uBl2YBsN43KO
mWKnmCg2z8BAbGOgJec5n2JbiZ5UcA6Ui/rwXVBNqDbO49sBbB2wAdsT4dpQ
DBXLceHaaYbP0VeGYzURVqOvD8dKd053ry6cS8VQsbw2XAuqedX+OtU0aw3k
PBey9mZ0LeMJ0E+1onj2cM4vwfYH+kdi9QPMQP+J3pv3t1no18O1qTugu7Am
fBdOQx/038yv5iw1MB/bndCRc42r1meGfetO6G5MR89Eb4QO9H3h3M+GXzLv
UXsdD63YHoJFedeAaqEhXAv94Gf0I+j1jPdBZ2af8r0BHsV2IPNYcx4Oz9Fc
nXG2Yq01icVFUI2+J3zXVEOqpUr2011wTNdiuyrc+1TTqu3bwr3lIHyROeaK
/QB4R3dLPSPnHqReNCW8d/VM9U7FULHUGuuxjQz3Mv3zCfbh4V6mHqdeNxZ2
l7hH/sZdXRbunVMg8NWEnk6s18A/zF2AXsD4ZjiZeY/aq3I0QbWsO85dOwbn
o1+CUfjqC2X4aw7flTb4j7mLwuMm6EI/Gc79Yc50FP10eC3VhGrjMfTOvHN4
MLNP+dYdfBHbGeg84xy0oOuZc6rEPehwud8AvQX6dhQ9KHwX1VPVW2vCuVNN
q7YvCJ9FOVVuS/BfVvAaz2OrhF2lPrPO3jvcy9thMXpu+Cw74BB6P8zKu2an
qX+Fe4V6inrLs+G3TmtorQxGFhzDV7AtCZ9NPVK9UjlSriarZ+gs4VzpTdPb
pjW1tmI2B9u8cO9VTk9gKy/6X/WcFdiGhN8WvQl6G9Qz1Dvq4Qpsq8K9Xj1Z
vVk9Rr1GPez28Jl1dsWkAr0V6nr6jdRbWVV0LauHbML2ari364w668ZwL1aP
U6/bFu618nFx0TWiWlENLsT2drgX6g3SW6Q7r7uvGD+A7X8rNCfd
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8653181407433735, 0.48132295751061743`, 0.2093304940928569], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwlkz9IlWEUxg961avHuwQqZIKpeFEza8uxtrKGrmSIKeRki4ENLRUNSv4J
kaAcbCjIhErIDDVvSf6BXJraWoJy0CFJSMka8vdwhh98z/ec9/3e87znO9p9
PdObY2bNkIDSlNlW0mwTnrnZRrHZ/XyzEehDX4GVPLNd+IK3B20FZpegH28b
vUPtL7iFzkAntWOwjpdi/wH27ocJvHPQgNcFq/jX0LWsbYdv6Msea1fhMzrN
+o5CzgHzeN3wGy9N/Vf8RvwfeN/hPd5HSBdRgz6BdwTKeT4ML/GS6FbOkoFH
6LtQXRA9qbfbHr3o3Q56wKPXQfiDvoleyo+e1bsyUTY601W8aajjW3vsX5GK
HtWrMrmI9wK9TvCf4BS6npoZ6l/DO/Q9j29l4R+1ZdqDvdbguUfP6l2Z9Xhk
pKx0Rx3oKY9va43WLnlksQzH0aPon+xdiZ+LvuFx1+ppk70+eGRZQoZN+G89
sldPNehXHllegGr0G3QLz3egFr2AHi2MO9Pd9XrcrWZKs3US/TARGSiLLBzL
i5k4i9fskc1fmMV7ip5LxoxqVs+g9xOxRmtVo1q9O413iJr5ZKx5gn7sMXt6
J0+ZKttFGNLeHmfXHegu1JN6Ow+zeFWpeFaPM+hFj7vSzGn2sh7ZqucG9LjH
bGnmNfsPPLLWzGn2Jj3+Nc2kZnPY4yy6k/+c7QAWRYPo
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.817319, 0.134127, 0.164218], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3367, 2447, 3000}, {3376, 2600, 3008}, {2550, 2498, 
           2499}, {2499, 2447, 2448}, {3374, 2549, 3006}, {3351, 2295, 
           2983}, {2498, 2550, 2549}, {3357, 2346, 2989}, {2999, 2447, 
           3367}, {3371, 2498, 3003}, {3364, 2397, 2996}, {2447, 2499, 
           2498}, {2549, 2601, 2600}, {2601, 2549, 2550}, {2982, 2295, 
           3351}}], 
          
          PolygonBox[{{3003, 2498, 2549, 3374}, {3368, 2448, 2447, 2999}, {
           2996, 2397, 2448, 3368}, {2989, 2346, 2397, 3364}, {3000, 2447, 
           2498, 3371}, {2983, 2295, 2346, 3357}, {3006, 2549, 2600, 
           3376}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2982, 3351, 2983, 3357, 2989, 3364, 2996, 3368, 2999, 3367,
            3000, 3371, 3003, 3374, 3006, 3376, 3008}]}, "10"], 
        Annotation[#, 10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxS0sBAAYANDPLrC5C2wUyrHZGEMj0lxzRaA4hXI2gsImMCMIAoGAEfwU
d5vNYTaKQCFRBILCJjAj8MLbS+fGs/myiBihozJiOxnR6X13ec/dLrrHBff6
1H0uOeMr9/vSWV97wLce9I2HfO9h3znnR4/6wWN+ct4vnvCzJ/3qKb972m+e
8Ydn/eU5f3re317wrxf94yX/edmJVMSKK7zqcq855XUnveFqb7rKW671jmu8
63ofuM6HbnTRDT5y2gU3+dgtPnGzS27zmVt97nZf+B/HLznh
           "]]}, "5"], 
        Annotation[#, 5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTlIFmAAANBPSUHtsGzwD88gbNItx9pqUxoqXfIgA2+h1BSMNET8PQoN
Uuge0gbTIdDNpsCWWkwoQ8ODLFBLEE2lNzxedlnd5dqYEMIoK4khXDscwpKv
etnl3nSZ113qDdd6zzXedbX/udlxSSE0Od73fcIdTna7jzvqVHc74n6nuc/p
HnS2B3zaw87xkM/6hXP93Hke8Tm/dr4nfN7jvuApX/SkL/m9CzztQn/wFX90
kWdc7M++7k8u8Zxv+otveNYV/u4az7va31zpr67yDzd40XVecL1X3egV3/Ky
b/u3W/3LLV5zs3/6jjfc5nXf9ZY7/Nf3/Mft3nand9zlA/d631HvucexR0J4
6Bj3O/iB4/3IcR7wIQ86ycNO9GMneMjJfuZjfuKjfuqTfukUv/Ipv3HEI071
qLM87kyPOcNvfcbv/B+1oWCM
           "]]}, "0"], 
        Annotation[#, 0, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNxTtIFGAAAOA/asqs7U4U9MwSyrNBa7k7XSyxUpO6kxbPsCYDm2pVN4UC
S3pAWZCei/dYfGAvl/LRUItnSw3ZWs26+Q0fX/3Qvesjh0II0+SOhlB1LIQ5
R/3WEc/6pEuud9Ex513ngs/5vZu96rjfuc1fnfKWk95wwpu+4h++7LK7vOM+
//Q1/3K//zjj305717f834P+66z/+a73POx9P/DhihDu+4jHfcJjrvSoj3vS
EU846keu9kPX+IljfuxaT7nOL9zo5z7tZ27wU5/yGzf7teOecZNf+Yxf+qzn
fcE5n/ecWzzrVpfc7qLbXHDKeSe84KRX3OllX/KSO7zoi15zrz+5xx991R/c
7XVn/MU3/Nlpb/mmv3vA35x12be97Ts+AD+JTNY=
           "]]}, 
         RowBox[{"-", "5"}]], Annotation[#, -5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0Tky5HEABeCfSdDdkSUzqmSMA+ACJKgaIlug7Ym2NFXMkkyN5QCWiJkQ
seUAxgVIaIWMbktgrULPzPcPXn3By96rSqbaRgtCCD+kPxbCaTyEPmbYyxMm
ecdp3nKKN0zzmpPMcZxZTjDPRb5zgW+c4yvnmUiEsMo4VxjjEou5zHL+Zhl/
sZRrLOE6K7nFj9xgBTdZyz1+4i5ruM1q7rCBB6znPuv4h008ZCOP2MoMW3jM
Zp6wnRds4xk/85w9vGY3c+xilp28ZAevOMIXDvOZQ3ziIB85wHv284Fpfog2
ZkG0LUO0Nf/px5hnin/5nQn9N8b5lTF+YTFnWcgZFkVfsDz6hqX8yTL+B3DH
Spc=
           "]]}, 
         RowBox[{"-", "10"}]], Annotation[#, -10, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 2618, 3015, 2619}], 
          LineBox[CompressedData["
1:eJwNxbcyA2AAAODfgsMpI6YcYdRNRLTJaXkAnM0diWdQXgCTsopRG3ULhzSD
2LUnUDbf8N0XmU8lkiUhhAViFSHcV4bQ5zv3+9kJFzztvKec86SzHnfGE371
nIue8Ytn/eVlfzrlDyf97kW/ecl/Xvev1/zjFX971eVVIWy5zBsu9abrvOda
77rG2672jht94Abvu95pt/rULT5x1Mdu9qGbfORe37rHN+72tbt85U5fusMX
bveZ23zuURc84ryHnfOQsx50xnE/ecAPjvnRYy76H9mDO+s=
           "]], 
          LineBox[{2623, 2624, 3018, 2625}]}, 
         RowBox[{"-", "15"}]], Annotation[#, -15, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2602, 2603, 3009, 2604}], 
          
          LineBox[{2610, 3012, 2608, 3011, 2609, 2632, 2634, 2650, 3030, 2652,
            2653, 3043, 2666, 3042, 2667, 3060, 2686, 3076, 2704, 2685, 3059, 
           2665, 3041, 2651, 2648, 2633, 2630, 2607, 2605, 3010, 2606, 2629, 
           2631, 2646, 2649, 3040, 2664, 3058, 2684, 3075, 2703, 3074, 2702, 
           3073, 2701, 3072, 2700, 2681, 2679, 3055, 2680, 3071, 2698, 3070, 
           2699, 3085, 2713}], 
          LineBox[{3013, 2612, 2635, 3020, 2613, 2611, 3013}], 
          LineBox[{3014, 2615, 2636, 3021, 2616, 2614, 3014}], 
          LineBox[{3019, 2627, 2643, 3028, 2628, 2626, 3019}], 
          
          LineBox[{3029, 2645, 3038, 2661, 3037, 2662, 2682, 3056, 2683, 3057,
            2663, 3039, 2647, 2644, 3029}], 
          LineBox[{3061, 2688, 2705, 3077, 2689, 2687, 3061}]}, 
         RowBox[{"-", "20"}]], Annotation[#, -20, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.44697442364361184`, 0.5615685129975149, 
              0.9497017929239753}}, {{0.7728642530128351, 0.8224866955302859, 
              0.9779955439793905}}, {{0.9605916799651181, 0.9701299199599626, 
              0.9515921858697814}}, {{0.9944707348898091, 0.9905817859607862, 
              0.6395517993036217}}, {{0.9523141239636311, 0.8486484224316561, 
              0.28048902869100917`}}, {{0.8653181407433735, 
              0.4813229575106175, 0.20933049409285692`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -131.24999999999997`}, {
                    Rational[
                    15, 2], -131.24999999999997`}}, {{-7.5, \
-131.24999999999997`}, {7.5, -131.24999999999997`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.49999999999997}, {
                    Rational[
                    15, 2], -87.49999999999997}}, {{-7.5, \
-87.49999999999997}, {7.5, -87.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -43.749999999999986`}, {
                    Rational[
                    15, 2], -43.749999999999986`}}, {{-7.5, \
-43.749999999999986`}, {7.5, -43.749999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 43.75000000000001}, {
                    Rational[15, 2], 43.75000000000001}}, {{-7.5, 
                  43.75000000000001}, {7.5, 43.75000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.50000000000001}, {
                    Rational[15, 2], 87.50000000000001}}, {{-7.5, 
                  87.50000000000001}, {7.5, 87.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 131.25}, {
                    Rational[15, 2], 131.25}}, {{-7.5, 131.25}, {7.5, 
                  131.25}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000003`}, {7.5, 
                175.00000000000003`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -131.25}, 
                    Offset[{4., 0}, {7.5, -131.25}]}, {{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{
                    7.5, -43.75000000000001}, 
                    Offset[{4., 0}, {7.5, -43.75000000000001}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 43.75000000000001}, 
                    Offset[{4., 0}, {7.5, 43.75000000000001}]}, {{7.5, 
                    87.50000000000001}, 
                    Offset[{4., 0}, {7.5, 87.50000000000001}]}, {{7.5, 
                    131.24999999999997`}, 
                    Offset[{4., 0}, {7.5, 131.24999999999997`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "20"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -131.25}], {-1, 0.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "15"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "5"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 43.75000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 131.24999999999997`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "22.999043443834854`"}], ",", 
                   "10.735320819945859`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "20.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "15.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"10.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.769261497286374*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
+oSjjR9Phg7W8wv8otkR7AR2BruAXcFuYHewB9gT7AXmO4R8Z43vSPGdHL4D
wncOmOPOnGrm8DJnlDmKzIljDhZzfphjwpwG9qGzz5Z9hJKR2QfCOnfW8er5
BX5hXQnvzXkvyHsPnuvy3Ir7cu47uK7ivEFf2LIY9fwCv2hdzS/KRw4Zf5+e
XxQ7gZ3BLmBXsBvYHewB9gR7gflOJ98h5DtrfEeK7+TwHRC+c8Acd+ZUM4eX
OaPMUWROHHOwmPPDHBPmNLAPnX22kpHZJ8U+ENa56/mFdYiss2IdCe/JeQ/I
ew6e4/Kcivtw7jO4juI8QR8k/9+jjR9X8wv8otkR7AR2BruAXcFuYHewB9gT
7AXmO7Z8p5PvEPKdNb4jxXdy+A4I3zlgjjtzqpnDy5xR5igyJ445WMz5YY4J
cxrYhy4ZmX2E7JNiH4ieX7Ko42WdIuuwWGfCe3TeE/IehOe8PMfiPp37EK6z
OI/QJ/9rrHP6w5Gdt8vYf52aZ1xl8PcvW6QefmaZ8KLGyeElytl1B7k+JO5J
k27GO7EDcwzyNo+sqnXz2zeDvfoYuf8NJ6XMn/PZeCdj8MJnY8uvz5zjVHFT
amih0v9afhzs4jfGbOQ6nXfaG9z/TeY+nfXZuhR97/vC8vPZKT6TzbH614e3
Hv3m3HTjXuntuRVnZv1l3MOOdNw9p2ll4+fE3raVHvfqyHnVTWZNLrnkYpM8
MsQhas/t4mo+VPOsnxxsfPPds7U5JK6spdK1SXwXN0TedJl+xCO3g+xZ02vW
oxHGOwcvq+R6cHW/kVPVOH/tyOQfY/H7E2T7k5Rvo6fnlDJf/Td7iyvP9ZPl
n8Mb90bfyC63Tj1OO7Lipf3fRc37zywVKl6feHxdfil29q+5xZ6qv7+T1Bs6
J6lg52qam18uV8D2nO8uRMvQqodrz59eQH7e1zemjR9ygdL9Ue712KNOZRzl
Yraa5axbYrU+6H3x6RfrGvcOG8tW6t1owXv7389ZOo3q3+3OqQqi+MvoL2W/
f5WyYUtRWZ+76aenFfkuaqiUuLdxc8xIJ1m6qeHUf9oYOffLRh3LdXu+kVO0
uF2T280fx2b8/el+Cm9erO5/kcWk66u41LBxvDd0kIa5+6QlhpYUl7zlx51b
rr4P1DrJXQ7O2vbv5qfO0qXy6AJPf3HXeo1Xt4e9mmi823qySWWHpyeYu2+R
Wg7dsjdeVVI2T0ya8Kcjc2HipM3+rVWSOxaXk0FNVi5wN+qWG76MjXHea9zT
RPUssaPA6hx2dpWUBcETP3WoqLlRkSY7fnjKd2PDpMjWId1HeJWWDRs8FnX3
NXLNJ9z6uKd8ZyOXZn/3o+3y1DfqpF+Ur164z0PjXijp3awb1y7ktrP6vvKQ
B0u+eprTqbyU2LCxc+9qHtADJCH3h2dll7vKsTfF221paLzL6f77oGwrpxi5
6tFxHf/odBq5OOk/b/dVH/59u5TyMnNP0wqXRqBuO/3n4/jfHObVWFtWWpdq
W35EWZ7DO8qQdtXHnC1QQXK4xC3bVDCv/ePu0vNetRXf7PbQ3HTmVdcN84x3
Qis4Fdi35hJz3kV27w/9r1eHCtI/oMTp8/lE6zXy+rwy/2rUkfdsdrXo+3jj
XLNtne93jfgqv/53a/r8zIUW9SpprvFT7ysr7/Bd0nD5+fy3AdWcKkrfI655
lrobudkNZg1o/3s10Xy06IBxT04Zdesrk3xfFOhinKPef97hl0F/FbSzpwxz
LHyq2bNKmr+MgbJtxrS02b96yNcenU5VMRnvPN7pNG9hxd5GTnepAd+OHN5E
NPskNRuw5DXr5BMlunf/dnNdK8m+fj0nDJ3Cew8nKf3Tgbq/NqssP1+t07bf
CPVzyEv/ul8b3T1Zq3L6n7+pakPTb55aTxo9YFLJeca7k/UutWtV5BJyw9PX
A9eGDKr028zKssSvfb0fxgo+f7xcOXA2qlAnT2nQJnTKHC+j7vJepYkzuh0y
zpmjkntEn8pe1M7eMiPHw8ZtB1bW/OSd7fKa93z3MkICFm/Zce2Cl+S9Pu7Y
r6FGLnP/Xjnr1t4pmieNfNF1eVOjzjPhq0mtu702zrWHffrKY1bNYnZW87CX
zAx5EHV8no+UDpn52urmBT1I9nx/om/+Ct6Ssu3z63K1jHcFHz/4PaToWCMX
WvL+eaX9Lcn4+9PXMyUWX0hr8cpHto8+cfwB607T1x8jf4vvsmmWt+TKNSL2
uQvPEZ3lVerHLr3u+Erb+p1eP/tb/dz1k82z2l7ufd9Ls1e2Ee1MG4x3DhOz
Lxnl9YQ51TFS6WTUiW0eVSV7jumNvi1u9IU/TXNxf7zRqIMdePRa6x3VjXOZ
s5/bb0m4XdzO/nK13eX/ynaronnyP+aH+V/yXcVI2ZmvwZ0NY/1kpE+1Z7n8
jdzfFVtHp/ULMfrQL+U9PnxJqlF3e9J/wxO3XsY50PtSndfdSShpZ+M94Yin
taoMv+AvxX6/O6x7Wb4vHCzDO6b2+aaSv6QM3bJ/Uw3j3TpLYGqNtaON3GGv
Gy2/OtGOuRFWKTlv2ufk9/7yefys8E+sa0xfL+acf7OOT2N/GVBlj1vcfJ7r
usiIn7zPRQ4LkMaNzGn7NhrvxzYoO7tkiz+M912D5lcfu3KZ8Y7e82+O5V96
CznI6evvU04bOrVfEiBHG8ROTJhs9OmXLx1b5Ts/o26s0evPD9YfN87Jgo+1
qzP5aSk7B8n+ER3SDvTy0Txodq9xV1/z3T6zWOf2qru0RaAsWBH24a9AI1e2
fcTsDbe3GbkA2+++qxHY2KhT8467kKPtS+Ncbn4x22vr9tL6/8uYI/XXlr3o
o/nLaJKWMb+MXhcUJFv6336b38t4B+1DF/eBeb42cmzL52+x58NZI4cgftiQ
mTV6sI40WZKbF5zQ3RYkBa503v1TAWPf9qLgjMI/X1Xrd+M9t87XT066nJT+
+Rts3ZDU2XjfbUfpaw0X9TLeX4tL+Xn/vLVGju7FVaM37n/NHASrXCqSFru2
b7DU6LPm5NNpRp3ebysj7rn685zFVUxnNuTZ4WeS/SFDa02aYbzPdaXo4noH
DhnvZyXdbFCl1QLjfauelfLsbfo3c3xjZYtv0uNlvU0y8XGvCwsLxGr9zHf1
9qeuNOoEn+69Ojsi0di3Zt/1075excvaOVQWzOozYVPOqppvH2l5pvFe472g
qA6Nfq730cgN9r/495X5rrGaCyXtrHthp1GH2Kno3U/JTYx9ce+8K8duKK32
S2HiWzOld4OfqmpWf69Dib1b9v4UKtnWLT2wLNN7K1Fyo8qnM90LhUpypf/G
LIoycljb/hlxzhoVq3l6tzm2wZeNOshtl/49/Lq/sS9fMeTgqE3T1N8nXHJc
Xtw69WBVzcN/yvf+bjnj/Yr4znneXGth5LymvfpxUquasZoP975t7fSQdZbJ
8mJu1f6tZqb//Xq92j1+t/rzIiTP1SMH912qqrnAZr92LasY+f/e00LX1+lo
5MhOMfVsOKxerOY7b3/6JttTo46zc492TcvEl7ezkcfepXqZ941mREhozrp1
HF2NfPbRI9PyZqth5Ke3v396y/ufjJzaTr+Vavttu1h8vgR5vLjhjcB3EbJu
qOXO6P9VB5f6vt6PbW+r7ycj37r/hCWtT3tFyoDAvAk+3apCD5Ed48a/a5EW
KXGBeyoUfWnkVRcpcaNwXn8jJzfl5QOvbiGx+P0J0qZk80Mlc0RK9sNOS5JT
WbeaLIk58nqcmx8pvTv+u2zkt8a5yp2z+SIvrTHyjPOv3n7w7lkjbzi2XsV6
PZcyDzhKnEu0ndc9xSxJ6f+7u9w08nuL//P8zPLCsZqbTVv+5tQao272zZK3
IZ2qG+c4W/d2+znkhJEP+12dqDszrhn5rVf+m7byyGojX7Xcgf3V9j0w8k/b
9ir8rGaxWM2TUzfWS95g1OV2ChwsFWsa50SzgsoOsNQ18jXbhtTpW3qxkX9Z
OHh913wTjXzKSyd/65j7hJEf2XVmwrGPOWI1uxx/UbDxYqPu99jlf14ctvDc
1lU+nEm9W2m4Raq3K3J47ib181ik16xynkcbGHmC382I73ajo5H3F3I/3+ir
vzCPL1a+/qq5f7Xg9D9vXqNn3Z4ZOS9VW3mXuD3RqDt2cdiyu2xV4xxs9vIF
aXUP2een/5XPdtHy54dFzUT8C1+uUPFvH63n2VJjSyEfI0+tb6PiDfN1MvLO
Xg3fN2nweebKWOVOriItW1pEfpz8s9fZnkbd844xfttcChnncId3fuPYP1zN
lzFSooxf9NaZPprTBt9p3NTRyKfqccr7+4ZWIz/q3PpHNT32Gzk2v3+V/MjW
mn0IybJ4zsedIY9EGgz3uxvzybhX6iU163faqP49YsRaau9Dvz98NM99UeTY
dE8j72dVzym7prQ38ngWma8+s6r5OZ2ffuO/Z/u37HtIlkovug4ZVCL989Xv
POmamp//v378YL11E9TXHytVC3bqeH6fj+YcI6/171jWyE+ZfPXn9+2aG/km
n0LnvVx9wsgfeT/Z8W6xLkbd+LQi1YvczmOcY5q/uua9pIj6emPlRNcLJ04O
89H85deZ5MiLaaubfR8rz2dHT2n/n5FPMav5zhatI428iEPxLaZ5/WbkORz+
UGj+4Obs60iWkUH/DbwRHSvX981NvvDWuKdrt7JWxT4bjXOOYL9rjYP/MPIE
1i6aOn6WXi8a/cSpb/+7OvlirETfe3Rz+i2jP/98g9OvkvR6MU6euVysd1iv
F+OkcImkpMhTvEd3kcDB/U9EfB8nTSa+2eH4xr7+tsWJpcxp1899jX7tKoXm
Xx7U3+inLuk+Y8H3m9HvnP7/9UyJyOABTeOkTae55h0DjH7ky4NS/CqXNOr0
W7x9cMN7i3EvOXnR+XvbWqn1f7y0nTVnU+MqRv9r7wM9lq2oZ/Sntv+xUMel
E43+0XtDPxc+87XRz9lq69sj5pxGH4B3vmV7ohcb956dvv6c1PSa+nrj5arH
i7vLOhv9gynNuxw/28vo74t81fziqbVG/13ue73a3u5n9MMNvmlxae5s9Bls
SfTdMWsj6xBcpGa3C6GD5sbL4Td/nq4y2Oj3qme5uXLSdqMfK+lmcX/rHKNf
6ojXr41jL6KfKf3fu8eThcnT98eL6+5Z/6WMMfqNrkxcYC7pZfQ5jHFxbNzx
sHGvu6h9q6cjNxn9M3+Vr7Fz9x9Gf8u6TyeD/1bff+ncfuTlhL9uGf0h42vt
8u+ivt/SOfvC4Wuuq++3dP71XEL7Sur7LZ0rt27xT7P/jP6Dx+2t2yv/a/QH
3J2fGjBlh1G//yH1SfDEN8a6o+OMnl0PzTHq3c+EDC8UHmbUn+87ZcnV46Jx
Lz10X6388yra90O2BBm/OkfC0fw+mrdsadr7xgGj/rn968cJVz8b9clTXDoe
7ppi1AtHr5n8zWWzUb+7ZcqqNf+kGffe5vLrz3w7Xe2/EuWdcwuvwHgfzVv8
S3UocY31o2ZZnZTDcU76769x+mJkMVejvvOko632qNVG/eXQvwa1eFPdqIdc
nHvcjXwPjHv2zX//eyD7R/X1JkroL1XcP/b30ezTZGHbD++MerwRVfJHvTMZ
9XEVbza4OmCHUb+W8ndc2wdNjHqytHKmTtneGPf4KdfmHAvQ+80kiTlYZ8U0
vd9M5z8aVDvy2qhneng6b8tDen+ZJNkW5at0Xe8vk2Tg09oOzfX+MkmWjt7r
t/OVUSfQbkbfslOuq68vSXZcKV4/rouP5ue1muco/8KoB5FdFzxdqxn1GQV+
jknLv9Wonyi9yPHk8IZGPcN3rwvnOvfCqD9IObvlxtKH6utLlmJFgzbV6uGj
uZ850H/JK2Mf6uf0b+iiAON++9Hbkh9rbTPmwQZFYt4eaGTcB1fa/6nje71/
TpZLK3NOmFVYzU/p+4YNljGHh/poXt822/zrn4z7yMSPZbdciTDWuUO+eznq
n13G/d2yLbeTO+j5KFlq1y+RsuWdcf8VW7NRr9zPfKVIu5Vjg2xvLWEVPvuV
/WySH4q9eHr++WeL1/KPV+6ttkruO9P3fvj5tWX+qRK7KtdKllmb/mr3dsm/
lthrR482HhIlhd4nJGx9kUPO3KlYfdiQWHnRMnqxx/08UnzRxFm5PN2k0YiI
ViVmO0rqpb0P0v71k/rtPy/rei+/HG++M9v5uyFS7+L5gpNDCourXwtTXf8E
2XNjY6McufJL1ZszWs784Y1l3IBKs5amFJETV7MlVV9eQWbuzjF5eu1iknNR
QY+q9aOl8IiQyZuTiojXg5n7LlyNlZjkbTnXvikqrT7GTtgX5S/fPc9vyv7W
WTqY3kwbsyxUJl64VMdzbgkJ3n7bdHZqgqTsr7Ru6ExnST00qmfHgtmkS7u4
sE2jXCQx9eS2KnkqysQVc3o0KFRa5rg+v/nDHX9p3/vQuEczysi28gEmn0IW
+XvIodTVYS5yL2mPw7OQOIlIfJHLtq2UbLeN6NDkWvrPpVweHrvel5aQUqFP
bxbNLfPGz+vfK2952b/Gb+ng5DDJvW3n9DeVysqZ3/uVebnGIhEl/+x+cls5
qXj3tuuyGA/76CYt4gbHm/oFyJZR70d3eegmFb/pfmrGsTCxnk6b6zOtgrTp
vLTl0VFxYls6o3eFMm7iPPla++3eiVJfhky6sdJNLuZ+UbbuwLyyZeigPKmt
3KXXx+UH2uarZB8ryqWcceFv0wJkfd5RvZ9sqShDEpzT0v+3yNtS9TpdNrtL
wbSgvcd3xImp05mP3vfc5WKKe6nktonSdODYDh4jK8p39fqFjr1RQFo1vDKh
XVgleWma37PWA2PMd6NdP0tguDgf+P3hkA4ecm5ilUZJVpHYyGUNKxSvJPvq
+KV+eJa+jrDsqPv0YCU5dnTEwkZNA2XqlLwxq9Z7ys1xrt2W7Q6XQyXDL9Uc
WFn6PNr8W/H5iXJ8zR8vGvf1lEu3jjxq94eT/PP8Vr8Nnb2k+gw/rxa+le1j
Fdn4uXa1YW8Dpf3n+a1yPq0iXmP7Xdo5WWSh18W2j2K9pPDYtKK5Y9Lnea8u
NVxyVhHTwhvh154kygXbqHuDdlWRYefmf93ybVHZf/904NqBPjKwqPl28foR
8tpjwFGfJd7Se/zWm5cviBwJSBvbo4mPxC/duvVTsJd99JXn03Y8XDgkSG5W
7nMh5pOv/BC2fMjmmxHyqmftT51+rypXukw9/ePQ9HXOquSIz7l8JfZmvdA9
XkmSe0zilXfp+zTXZkv+6F6luEz0Pf9g63Q/OXRq7slHYVXsYzVJHBV8cdKT
IJlQoPPq8leqybVHZ57dco2RgessByf18ZO8b46sCPg9Xjwvlf/lsHM1OeOW
2vFVlySJGF533rlV1aTTiubjL9wuIaVXlmhv2uEvAy/G1+ifHGkf/SXyROkN
9RrEyHczTe1+WeYvHy4HnFla1Vs+PZ5973yJAMmz4VH37v2C7WOA9DwVWipn
aqR9DJBVt04eHp3NKo2PzJlQJEeAhF9Pett6TZL03jflyd7mATKg0Oc8F7KX
kpSDn2O2SKC8L7mmer5AH/k0rnGlXHMC5VL+U5sbPg+2j4Hyzebd302dFSOn
Og187FEtUO5apw5pH2eVU+M8Ph0eFShPJtZ6POZxklwuOy+t2OVAWTS64Y9t
OpUWL/cL5V3mBkmtmuU23DvhI56eky69vBMkfovWrbRYzPYxSDznlU4e+XuM
1AwxTc03LkiKbB+wKayrVdx7Pu/Y62KQzL7Q+VnFc2WkY7/SH5PS54FCu2p1
CQoz2cdg6XZvYOcjE8z2MVgariswfuHzGPm1VSmXmFvB8mx0H+d6RZLlepF7
Xovdg+WHZSHzqtl8JarBvFMlxSQFl5RxbDbWGPOem117VqrZPppkpym1SNJs
q/TpuqLiZH+TnFkye8yeiGRZkBxQbHA/k9Su8zrx3kpXSW3w6dwO7xCZV968
6uJ1XzldOKVR154h4rYj14+uW032MUT+XNS33IkPZvsYIm9vx9T7tlCsPD02
fPHfriGyrJTL+ZfrrVIryH/JvbYh0q7Tmo196yXLwbPNv36wOEQO9Lu1Y0Df
stLzygC/cl+Fyu+H733331dVpf2tPpGf14ZKzqn/OHf1jJW8Hn9VuVgzVLYW
amb7eNoqXctudPh3fqiUC9seYuqXLOaePbt3eRgqqR2mPbrRrpyY/rr9w/bZ
YdKpd3a/Q7uqSnB4tpI3r4RJ7eZhZXY7hNjHMLkdXt3lljXKPobJxNwt935n
jZWyBbcPeTw2TO6XrFVpwj2rnKs2t3rpM2GyrpR14Jl15aRbwrmrL1eFy93L
b1Y7/1lVXnYf2Hjso3Ap8Lb//VC3EPsYLpW35nY/0jrKPobL180G555UJ1aO
b3xfoNyCcGnRpPXa5k+ssnXtnpZb/g6XQiujpqytXF6Gd6mz5NGxCKl/ve7A
lGoh9jFCyj5p2/d0vyj7GCFnnvYc9+Sr2PR11Y0SV3ZFyJCcuU42+bacuMVk
ezljXqREPOh3882UqjL/VUSvD0cjJbH14ClXnP3kl3V7jn6bL1IK1fdq2eaN
yT5GSrXHPW7/ERpiHyNlf/bSKaavo+xjpEw7NH1UdHKseI6pUnDw1EhxuRva
w3bNKgEne1x12BspH3uF/fp1+jr63a2e9U84RKZ/n+18WqxPsty52Pda5buR
8lX2rXVX9Skrs2xVUx+2NMuTQz8W/bZkVel/05J32zizLJt15M6wnSb7aBav
cYPH1nxgjCmt93r97RFlH83S9scFHoerxMrB/6KTxzcwi3PJoUvP77NKFb/s
NZYONUv/y4/HtGicLE+2Xi62bbVZVm5YWPf9Rlfp4us1fY9vlPx56cWZIn/6
Stdu/94b3TVKhvk/W1N/pck+RkmZFW/cXdL/3C9jlOQ+ertIWadYyT/5WMUI
tyjZ+qvsK7ou/fuxwVBbpVZRUn39xPIJNZJlRpuylvEzo6R2+KJa3be4SoPa
nRq0qBotBdsMHT7/iK/kXr9v/+n20eJ5sefzmLkm+xgtS7p3PbfprNk+Rst3
u+YMjSoSK/98F5RjoHu02EZ9GuyVvr5yKPjhQ92m0XJh8NJhC63JsvJD9Vwx
46Llp4hNE3bvLiOLT3dr3+OpRV4M/+3iHKurfHRb169jEYtc8R01b/Z4X+lR
4mCtmgkWKeNmKxY40GQfLbJmxr8/lFxvto8WqfR0zJzBL2KkxtViQR9uW6Tu
q2G2fjliZeH9XNke5bbIr3t2zTg73yoNBvf3WRRpkXqP7zXYGposv6SdWd6t
h0Vc2tz8xdWhjOSoOWh6jjYi0bmCPJ/c9JE6+8eP2TVAxGFAx8EP4nzFIaVZ
6/dOIism/Tm9QwOTpB7pWn1jFZFfHw7+6Y8RZmn0es/BzrEi013v9it7OebL
2EKk2OWUbJv6WO2jSMnmtxcUHG/9MhYQCTr/blqoR7J9FJlqcvfb3aO0bEw4
tPTtqfTPNzJqVdIvPvJ12zPe5++LVDqxY/zDSiaZeqdlwuupItl8p8eltDBL
thLHK5xZI/Js9TyXpUdj7GP6r3/3pHab9tYv4y2RgEqF2k3/lGQfRbrdX1F2
SIHkL+N4Sd/vPCm7a2Rp6XRpd/ttdWPk/p/3Wvud8pH3r/+dVaNPjKSduNf3
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
AJ0gqJI=
     "], {{{
        EdgeForm[], 
        RGBColor[0.178927, 0.305394, 0.933501], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
l/En9X9N9FMmBjTx+SG+Lh7/D7c0/v8=
           "]], 
          PolygonBox[CompressedData["
1:eJwlkjFI21EQxi/RpMl7AQdxcHBwsoODWm0nK3TRScSpiEPRWBVpFSeLU8FB
oSA4WG0UQdBBEAriYOkigmAwilCn0kEH0SmbdjDo7+OGD97v/927d3f/axya
7P+cNLNWVI2motnIC7M2tJkz+w0PZ81a0C38P5iNE/hagrfgAgnGUISnkaXN
Eugtd9eDex0ohbcAJzifJcwq+O/RKbGr6Bv+gHy8Emn6OJ/qvSruo0POT2it
2mvoJP4ATuKdk7MWHo1e+5Nywh+in/XGElwDJ1PEc78HPoKXs95jGe6CX6W9
B/WyAuczzAcdw5nod1XDO3gpeG/qSb1t4xeJ/Y7+4F/Aj+Q+QRX4EzGj9NeO
ynjd6GPa35zFb4DHqK8D9cNvos/yDJ6AN6LnVk0l+GvwWRbQA145+L9JohvO
l5pXlc+wkfi66Lk1g96cz1iz/oGu8V6iQsprGMRvif62vuVznlO5z8nXDO/i
VzLe8194MfqsKvyDec7/gseqhqacf5NXRL/gYvTZ6B/cq57ou6CZzMFf1C+x
ebQD70ffRb15BY8En6V25g5vJvgsNGPNWnd0Vzs9E32HtEvamXrNL3otemMP
/hl8l7TT2u1nmgFq1w==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.48194262517586367`, 0.590301760242435, 0.952359435349301], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
T/z/J62913TUNF5fCj6vx1mVyDVl+3vYhWp33ZUFzrvOXdd9li+PyGnl0wvk
uIotRXLjWZbb5txXbhGHR5xbF7+5ydiYPuGd4PyqyCufofh3Z3Bep8nF3ZZt
tcl5lANNidWK2S3yGI1NyDV6xK0d8JeC51E/Tz2/uUS+k+VDl27LgZZuq7Hb
1E2rjCsfm5ArHhFLR+QjA/AZcglfR94qNdcafLdZe5W89WHwomK3OYd55LlH
F5tRvFLcmhY8rsU2Xow8fpUixxWbytEFPie+RZHTiX7P/p9Gnnt+SHqWI0rd
n29xLmPGjw2qBoXIeWi9GetLvoHBMHJ5++CKm4ny2sjz1UNye+GKo6fIe1S4
kPeYGCvQPPW9mDiff1h7zdoVgyuR570H1BFnvCuoFrkVvEa4mbodV4gBBXxu
BZ9bAy8ST4Rnd1V39/PBbbCWuu9uMG8BfopPXeY2sK018o9DbGWXGnsbfJ8z
3uYd5ynwAf5D/uFfwW3lN6nbbiu+yEnbzNM71oRaqEMMl9x6izqkPupjs+L1
QvDa54fG8+vB7fSjqdv4GfWb7P4Wuqxi3xEwpS76U/D2mfSi9sjfVnss3Faf
iF6yL8UX+d1yfJEPVpBbdPu86WTva9LZEH3oTPS+pj7tLfP1utNfCX4G96Xu
4+Q7PqB3NTvgJraygh2d2xP5qWxcNq16S3WY6gHVBb9NPH+6wjy9n3Yjf08V
P/HdjDy/aZLv1BjvGFR0dta+mvgdqfMO24BOvO4Obs+ya9GNuDsN7lyXu7DC
miXaBne5AV+NX0OmRe6E+gpFzxGVO0dFz+eEy5/UwTfh00TuKnLeG5z+9an7
/27mu1lTNDX6Otz9GN5V+hRX5QeKrD+NvBXfiHW0Xoz+tE4VOaS7jwSX/U3U
kmNiyFuDx2vF8IiYWSVG1cGPIj9PyVRgXDSZHqXXu4L7sb8nHo9O8Td3BPet
J+QGA2oD6Uq+csw5dTjvAfJ24CWeL1t7T/Bz+Z9sKrg/PEt8Hyf4umPOfXzb
uZY4Q52l7GOF+ClffIoM8tHV4PP+nbhvHjN2hHwjzqoI39ptPnsLHnvY4pj5
Orchex7Ca87YMfgG56B5Hwx+ruXU40CRNQbQ6fwl9w1i/pTYIx31GRf9u4OP
/TnxtefEpnV49dHvEHyE7iX7Jryl1xvs7Rp76kYX57bJ2JAYOGcfx+Bn+GL5
HeUdTfy53pOeZ6zK2/A6dX2Nu1Sh7/y9mDt3fteC9/UTr6Oq2b3jvSfLAZvU
aKofrlCrxXzTqPPNQ98+vp14Ht9krMw3FuFdZBHfInRZDVGjhngt9XpBdUOf
elry6v2qTI1Q401b+9T7VYn6YcDc7G2mQ32od6zzbwgLXpNUqVFGjHe5hw3k
22P/2vdDwdt3ph6P16kL9IYWU/ssUS+oPqllubDBSfA3/5HRfit47vWJ1ONS
n+8BO9RBa+Qcu3zD2KY20phqC+Vqop8ynn3/aPG9oUguPie32yCnP2SNXWAN
miXqD8WoVvaeyvhl8ArfCvS2XyHfz+r4AvvcCS7fp1N/P5AcMW8BC9D8Ifi3
km+m/u2lyreTVb5vaL1ng38TeSL1MX1TKLK35fLFd54K9Jm/Ps/jmKdxvUNG
1J56nyxiXwPqkhn12xF4n74p9ZzqkkPqjyn4iPpDNH3ewrXOMrags68TW2RH
2buqbKRJ3C5jXzH4Cn16/3gh9TVVD20Ef7u7O/U7rnc3vbGpvlVt2ky8thhS
vzSoWbtZXkjtUadvAxhB06XWFa6cUby13oQ67fydgtopq6XUZvWT2uwtTa3k
a1CXdXkjL1D/14ir0oveBFWbPp14DRsTD8e822U16zF1rfqU3ygPEl6ivpP+
5vj5PereE97oFGsVS0fcdZ3BG4L3/SJxf9PFd+h9T+uLpklNqT3obI6ii5xL
bfbmrVbxLQ3+vqd3vjbvgj14j9nHFrV4VrPuMbZO/d7Hfw3BN6ATfl/wdRZT
14d0oP1nNX/2BjDPX7xTztBBNctfiu5fdCc65Kzb+IJ9vr1t8xZZ5Y1vh3e1
Nd7Mlnmvkw845Hth9i2wxVtmjXfDOd/19J1PvkNv8Qv4DtHpO6HwA741/jT4
3EdT/x7ah16+QN8+Ra/vwfou/I3U+27yvbDFu+Ny9vbKHrLvi9qT/Ipoz5Cp
g7wH7Ft77cGrzZ4uw7dPn3h9PzjdZ9OL/feQbx9+y+z13FeWvJ5XrS//NUM3
VXQhv3YjuM5axvNXwccfT11HPdaXb51Sl4tGY+I1oVZTrf9K8Nrpd0Z7V+K+
4L2J+1zVHOfv4OxVck+h61PHXMcmDoPbyLbx+T/Dat0E
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh6/3+trXe16QGBKJIWxMXaihNRUhoTZCbQyVIKXGtsLCtGnD
ghBjoq3W0CYsDDEnioUhJGiN7caQYGHYFAtqoXy/nMUvud//nHvuuefee/5D
V1aWVCRCCKtRFjpjITxJh9CN3mRC6AcXpEJYi0rgQebjBlQKjzAfP0Nl8H34
WG4Ij9Ev+CA8llir0EO4WvFziI9a4OtwPr5l6Au8Da7NcZ+r8AXzXOTzAa41
j1WLWuFecDLlOc6Di2MIp9lHBXqP7TMc2VhHEmbciNay4QZk+B+BCxL+LQUf
hacyTqO9jL+jQuavQwXYu6KPG1ER3K6YxH6OhsNp1nye5TkVw/+i++rbTPhd
dN8knAdXwJU9QpiCVjPeybfJ2TAqJtZl+ZNLkjl9sJXCaXxfs78FjG9GtxWg
AdhblV/ScxoK34OLGOeiFsZnUDPxKtEJxpvxmcBa49E01qvm2zPiJ7D/hWfD
x1mrDX2Et8ENPdznN9wfFbHXXNSb8VLsCWwT0FedVfTxGtQJX0RZnOULzu8t
a982P3vdmU74cPS1dSY6m0vRz0o1UC3moPLgOSm3U8w/Qaz1qI35E+E0e2kn
nw3wYvgVfArth68wpyPhNeiZ8RqoFjrzbHhJ9L1qD9qLaqbaaU7fjNdctdcd
+2R+R3RX2vHvhmuij5tQl/mZ6mx1Zt/gFSg7x3M6QrxN8AZ4EmqGD5i/Db0Z
vZ0a9BI+ia5hfwA3Uqt16Dt81ryWqkE7fMfcVoi+wmvMY2vNevgQPBHfFLoL
zzC/a6rZFni7+VrK6TxcZ15bzXmk/ZvXciPaDe8xj6Ucb8FzzW26w7rLj817
wV8J3hr9LugO6S7lm59VE1qFfT5cz9xWtA9eZD4OxD8Mz4HLs91nFzyaGJMx
y2UU4+nmd1k+O7C/VH/QG2L9bni5eaxxqA4eY967Evivh6dE7x2Kmae3b27T
G9FbqdKZai46B98wr7Xu9Ee43Dy2fJpUz+h3QW/8p3qfeS46w9/YO/QeuV9V
aBi8EE1N+ZsajO8QVJnyb7LpjemtddA/5sJ/mF+lXoQK4VxzWzOalfGep96n
NUZkPGflrh67VbUw91WMadjaoueinjEQHml+NsphGfw0eq9Rj1Gv+RF9bfXY
fOyd0XubeqZ650nzXq1/ymvs/wEjedNu
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7566896881992415, 0.809851002566661, 0.9763834145186735], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmkmIpVcVx19Nb/jufVXVoOLCKbrRaBbJxlRX1RuqepFkI0lAUDRgwKCm
u+qNFUjERUTBOIAaBIOku6veVO0EjuAEhgQFJSHdXW+oV90RA0rixsSFySZ6
/nV+H1WL0+ed79577rnnnnum6lse3L5vazaTybxo/8wZXjOoGWwbPBkzmWk2
k/lkyGQWc5nMYdbpov2eZJ0uLtjvefttEOz3yPBYtPHrGfQN4oJ/07x6ksns
zNgehmuGOwZ7BsF4jozf2CDmHGuPxQXnPTW4x+S5aTgxeYIJOzLeY4MzNufG
PGO2dph1XlXJJx4GG+AlwYLzOzJYXnCs9e3o4yvGf9/43zA4MigaTGb9TH37
PTU4NHjF5j9cyGR+b/M7pq+xwcggsW8lg3WDNYOawbbBWYMtgwsGPZt3aDAx
2GPd0KDLN/Ha5dtBxnnV4aV1i6azosHUfi/NON1DronBCvucN7gTLFlXkUVy
iHdi6wozvn+YcVp7xxmnu/AbG3TAozmXUftr3gA9SS9xzu9E+qroLrmDgt3L
QdbvZnPB70C6lw2sGawb1MElgwa4bLCx4HagNedYpzt/KPG1W4a7tl/doGHw
sejjZ+xeSjm3CdlXGSz7qoBlyyWTKTEIBpUFt1fZdQ9+TYOW7VMxqBo0kUv0
mq3P5/x8VdZJ1nW+ae826zZk78arhqxPJ/67Z3hdOkKOMrJId7LpKwY/NGiY
bksG5Tl/Tx2DLu9KuMc7FO7zZoQHBotzbr/TWbf1ffgeMS76XPR9Zk1vLwe3
u3tNtk1bu2SwbPB2m3PDePzcvld5G+Jd4e5FN5GxgrzJnL/XMljzfpP492cS
53s063y1j2QULb1ez7rdbLCPxvsZt3u9g4HBEfT9if++L3FdSqdr6LQE/aLZ
/YKNzxsM7XeiuQat6HMrwfVeOXUPZdYX8SmVUz5FdNbWXzVe1wxseaZsUNIb
MqhAS/eL6CeX+NzrBvnE8YF+439XDQp689AJ/EQXDarwTden/IRTWYR1zrei
n/Vq8PPVDLaz7gP2DHYL7jMW7d6LBs2M61f+qYV+RZeMR1syGK7n3L71tsRj
VHBdftH22jLedwfnO+Rcl8HX8UmiL3EPuo+r+Cd9u2jQYH/5Qvm7DrJuIa/W
3wzuH+9K3O8szfsZ5J+iYtG8+y2dSXQdfh3iWwe/uw0Wr4fZ/+mC21Of88s+
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
jv8D5gYCUg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllUlszVEUh2+1fa/v3r+2EtPCbGNO2Gipp7QLtRENC4KEBDW1r6WVEBaE
BCExJkhMLZ45MS4MiaqQkAqlJaoSTYwbrYVhge/kt/gl57vn3vPO/9xzzxu6
pKq8sodzrgJloaveuTYWfKZzvSPnJsOTWa9CRdhNqBRfPrqNPQ5Nw5eLXgfn
NsLnMpyrQz/gP/B6ApeiAuKNhuNOMcdgd3v5eqEJ+N/DHcQ+j9qwP1k+2AH/
Z+wF6BVnE8RfiL0I5WG3s/aR3xuK6rKdK0FziTcBbsc+h5bBJ+HTOc7VoGfw
TjjCfkNSd+BRQXstxiJ4CZyL723MuQPwPnhqjs40wluDzp5BN+AaeC12MWqA
N6EqzlaiGfi2km97hmr0OyhHy7UUDYGv4X9H/c+jPHwbg2JbzEvwIfwl+PJR
D7gMTvPtteg9ew/CU/ClUAx/2itWHTrudWd2d/YbffDP5EwtuU1Hm+H5Qd+a
RnvgM16xGtBZrxgWy3KIR7oTu5skGh9pj+21HsqFd3nlat9s334kqPZWw8f4
HdzA2TZUAnu4A/uC9QzcavEy1QMj4Eq4iFgpVIVd7nX3VgOrxWzOnyT3l2g3
++cF2XHqtx+ewZ5TTj3Uia8fSlL7ajQH/2A4hV2PFsIjg+xWtBQ+inrG1RMr
8B1Gq/mW46gZX8qr96ej5dgbUD12K/oVlLPlbmvdcBq9zlFPtnJ+L1yYo5iP
4BNBsV+gV3AiqFaefMrgLXALucTw34Yr4EnwGlQPb4BPxLXnOrw4qBa250ik
N2RvyWr6Fd/ZoN/KTlBX/DfhAuxV6Au8I+i3LMf78OWgvbbnA/wEfo6dRdy/
8N2gs8fQd7gpyLY9P+EpXr1rM8RmSVnQW7E73BbpTuxu7E4G4SsP6k3r2e34
MoJ6xWaMzZpGr9mVRA+wm1F1pnpoWKQ189naAIsdVCur0UX4t+3PUk8m4UL8
eTHNkDVw36DaW89Y73R59b6dmYj/i9cssxk2NlIPWC/YjPrG/l6mbPX4TPz9
g96+rc2KNPNs9q1Hw+GH9j6oVTXqgu8F2Un0FS6Gi2KaMTZrCuBETGvr4FtB
ewPqhMcH9bLtWW3949WbCd7oX3xXgvZaT77DPy1oNlgNauGn1n8J5fQr0n+C
/TfYm+rA98wrd/uPGIj/gFdsm0k2m1qsfl4x/uFfGTQr7U3Z2/oPb6nWLQ==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9422895062908184, 0.9564801888007287, 0.982572991928977], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmUlspFcRx3vc7unx972x3d1ue0ACETixBSm5ECQ046UXew6gQIQEUoSC
RAiIgMZjuzebQwJIRIDEdiBCEERmbPdiTxCLRAISSwQSKEgIMpu720tAJBdI
OBAuof6p3yf7UK6u771Xr15VvXpV5Tse+Ny9D4+kUqm/2p+04YVTqVTNYM2g
dzqVOjDYNzi08R2DXYMj8DWDyeB4O7J1Nq9j0NYa+9Y16BkUjV40qBqsGmwb
bIk34+K7xjqNddlzCD/hAWN9gz3WC982KBnUT/v+Xwv+7aNxKtU47WcQv6bB
DnQbfn3WddmnfNrX1JG1xboFeEvGnVHThcGBQQ+8b7BksGGwbvBmk+GiKfNZ
08k1o18wODLoGAwNBgZd1oku6JvNHxosBB+PTP4No5fSzmvdYBF6Ou26k00q
yCi5N4Lrd8nWziOv6Jm0z5XdvhRcd/fanLx979u3gUEh7Xgoe6XdftpjKu3f
RE+hF+2ZR1/SvXxm0iBncJAx+U67zctG5w0KBhXwlEEVXDzlZ5N857RPxvco
nPazFjlrLtnHYBKs81XTLl/xhF7EaxHe0wb9rPmNQdtgAO4YbJ5JpS4brBi8
Mfj+z5i99mxsizVXbWyZeeUxO4tBweBFm3/J8C9Nhzmtsd99g13sLP9YCS7j
rM0p6Qxp13cv4zraN+hk/MwDg1baz6NzNw0q0P2M61o62Ms4lg4+GxzfI/7o
XrresTmH7PGLyPf9reGG4TJ8Pxmc112xyyFbSe8aK6DTMvKKrqf9DPomWQvY
fzvj8u3xrYJPdDmfztbmfJpXlM/Ld9N+b6b1LeP6msk4/S2TbcJ0/0Ds/tg2
6BhMWGyaN5hL+ZpFg6rBqtlm22DLIG/z+qaDgeKX0W3GZD/Z+yr23oJe5tuV
M773Enw3bf/LBisGhybrjsEucvegdY4utGS/yPoPmPwlw+dM/mvc2w3WyK6y
8xSyVzLOt8U83f8OfJ8LLtcTxqdmuMN5JgzmDeYMxsGzBn+z+Td0Lps/rbtr
OjiUX9i3ksGCwa9tzgXD37A5Z1knujziuisYlAxyJ2jpcqj7OuJ4X7o1X28b
bBssG1w1uGJQHPFx7S0ee6fcHjUb67DmEnOfNLhssMn6RyKf/5jhVXhvGayA
NW8L+8nmipdt9PV85L8Hkd+DPfORfsrvg/Ag5bFHeJjy2CO8b1AnFis2z4y6
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
V3D8cnTsNxp7Z+xn0Zlkf/mB/KXJ+XvpY9+q4Eca1z5l7mgd6HKfFSMLxNQu
cXpIT6tI3D0gLosuwk97JD2yAj3IPH20DjwUzyaCx7gfR/7W6pto6encif7T
zOhxj2eaezGkD6NezXuD+4P8a59v8uN3B9fdPyPXUQOfKYG1ZkDfRrweivyO
fCpyHTVZ82Bwm7wrdn8qYJM+/Z42/ZnFROfoOPG1KmNDbKD18pUi97yBDSu8
DUvYr4W/y36J3Jr3auzvj3qESX9Kfr9M/q0eQJt4UCO26vem4R8F7+VeotZZ
obdbot5UXtbl7dRbrRpcvQz19RUjFCs+b/g14xMb/kvsNbvGVcfPkQevkN/V
qGfVgzlLXaS+yzi1TdJ/EV2m3pUce8Hn7sTH7/30ifde9Dy8td8S43oPVGtO
UhOp9lUNHNM/UB9BPYMkRicxe51cKonXGpsgX58jX1+AVn1TJY8NwdcpT8yT
n5aoeSrQN+hTSA7VltL7p8mr89QFHWwlvauvIV0mfQ7h8ei45yVZethHsia1
rmJtOrgOvkqNXKAGUx06hVw5ZNR5DsgNlHuoPs9REwb6QOehF6g9xukDJbXp
LPMOg8/9Wexxo8072uftFT0BD60fMq4cIkeNoz3U25ukRvp38P7D74zn74P/
f+K79vu12HM55XQlatkavUb51g1y/Bo1wRw14wp5/xq0ai/VYMvUYCvQffo+
kmuXeK+4f55+mPpi28zbO9HTFK1zrhHzd3g3tH6LufLNHm+Exjb5dgseqru1
9yHrtf+FE/25Lm+K1l9l3U36AKsnenUrrMlTO0q/HeTS+nnqyVXG6mPHfc0a
Y6r/Jc9u7DG/i6+skTsoH1DvosidUO2n/0upFlwnP186US+JvkKfTnfiX7HH
W8XdpI7SvMKJ2uUqPT+t2SKurFKrF84c1+55+mwr9E7UQ1FcXqOv/iR7Kh78
Nzj+Y+yxpkvfZJOeovZTD3IPOulFim6S7ygvkBzb7PeT4PX7I7HHpDZjNfRU
wg+qJ/KIRXKyBrlT5UTeIHqLvoX6FXVqGtU2t+lrqJ+xybj6Bg3GpcerfJNM
Neo5rT+gj6I8vcv/BFTDPB28p/eV2PN+5b6VE3m/aPXrBuhimpxYYy+Qy+t/
G5I3R52t/x/r/8hPR16riJ9yjVv0YtTz6AaXtRn7O6TziFbtqLWqSZKenWop
nWec/mMefqoVSsH31/9YatgzsUEfPe7DQ+fv0MuRH3XwEeki+b+41vwfK785
vg==
           "]], 
          PolygonBox[CompressedData["
1:eJwllF1olmUcxu+9H+71uR/ZVKYWKKlHfSxCT1pQ2T5M3x0oUwoKFkzQZTTL
j23mfD1IElwqaCpoQYlTN1db9uWBGlhGQaIHUTN63WqzUE9MPUg8sN/FdXDB
fT3X/7nv//fctnUtHZkQQjvIgbUxhBcqQ9gIjqYhfJGEcBWDqdkQauBD6Onk
EJ4H4/A/0a+hnQKPwofRp6ONFkLo5/wl+gT/fw6q0c/AZ2X9TdpUbKblQ2gC
y9A3wt/h7RdBH/wCNk3Yd4PZ8EPoG7j7GLgEfxu9qyKEAXAH7TEwwF1lsBr9
AHojb3WBSng7vIjtDPAa57nYd+X9Tyv6dvgYb38KvoZ/jE2Jf4vgIOeBxLHo
W4reDz+ZcY6q4K3wau5uADe5ax4ocXczeBl9fXRuj+sNxQfvI18j4D/4CvjQ
pBB6wA74G/Al2NaAj+Cros9/oe9PHYNiGad2/6CdAFcKrlFZOtiatw+PS0+c
C/ks33tVr4JjPovtq9F3y4c9qWNW7DNBFr4l2vffwVfwnuhcqWafwVuw78eX
MlihWkfXthu8hH4EPsh7m8FleB28mrcawCb44WhtMfgJfl/5pzGbQR38oehc
zgLL4W8lzrV6QL1wW/2CbTd4Gv1DUF/pnn5dvRb97zXdqXpgv7XCPXEL7Zvo
3l4PbqA/i15PLJ3gOc5PgSWca8AVzUq0752ghP1F+Cj/DoJ78EuJe/ckmA+/
Dp+Ws48L4BXRvg6CjN5G7wl+Q2/t5duignv+x9QzpdlSDn+D74RPKdjmPLyW
f6qCfR5B2xedS9X4u9QxKBbVaBTtFfAHvleRnw/Qv1X+8X0xuAk/F50L9ei/
8B+iY5PNbfgY941mHVMtfCTxLiiBy5xXJu7NIVDkvCXxrJbBPe7KglM511i1
bov2RTVT7d7Xjsh4hjPwT6JnXz3+q/xBb856pzycuufUe5rBv7F9AgznPQOa
hebo2VoKtqX2Sb4p52NoP0fPYuT7A/Qb6uGcd9yT8ET5z3lnFdXv8P5JzuHu
1D2uXtdOeSR6h2mXaYY3wBeC8bx9WpO65qq97myE9ybOjWJW7PXRvs5Qj2ne
+DZc4Z69i1aM7j358B76M9G2eqMD/ot6PnFPhikhnI6urXb0BPqdxLOlGBfC
v0+867VztXt3JZ79Cd57oNgT97JqrtpvT6zJJ/n2bvRuUE+e4b4F0btYM/5m
6p5Qb6hmc+AxehbVA03w/wFuK9sP
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9911581770317097, 0.9906116932251957, 0.7961954186963089], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
vemE4w==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlWto1mUYxp8d3m3+n/8g2phtzo3KL9ph1PySfbCjYu9b7WAa6ActwZWi
oKawnPO0FXiEUoIOdICCZLWTO4CHQFAKjPZBUomYtjnc3g+ZflEC+11cfbjg
vt7r/t/PfT/3/dzvw29tbtlUGEJoA8VgfxJCX0EIk6ALe38M4VppCJVlIZxO
Q5jht3oc80UhNMAXoc8uCeEVsB3+GXwPvq+BX+CH8H+IA7KgCP4R+lK0dvAz
/F/0buK1gkXw79Gn0AbBZfhBeA32FDmcga/Bv47cpsl1BXa/9Fn+5k/08/yW
I7dOUAe/nNgeAFewW/HvJde/wBH0Xvg431YSow97q2omfjO4BW8EExnXuAn/
U+iT1FJNvNPYV8EodjeYh94VnesgGIY/j76PXJvAH2gpyFPrKFiCfj3xXSrG
AngWvaPEOX4A/yb6LnSnY/BV0blXEf8YPAffB28Cu+EXiNdCrHowB/6JOPnW
gcPYNfi3UE89aEZ/Ibp3OrMTvhifZeTaAZ7DLkYfINcb4GX0x+F9Gd/JenhF
dCzVlIMvhw+VOKcP4WcS55Ln/Cp4NXoO/06wEv6V+oPWD1L1F/RnfMZj+N5W
P4ndCZ5BW81vN0t8xlH4rui73gN+TF2jap2hfyH1DGuWNYP38f04ejY1U5qt
a+g3yK+a+E/i/2n0bPaA3+DvwfcS+3XwHbw7cewRcA9tIZgh1xHQht6AXhV8
h1fQdvDbXHKtAy/CHwTVGd9BE9rX+HcVukdlqWdUs6qc5us+4b3EmgBvYMfo
XihGFn0b/H1y+0FI3TP1Tt+Mo42CV2f5jUyib4Avw3cn+Ba+M/pbvfEhvR94
D77j4C78BPFGCp1jeeoclMts6p/C95Lq0R3iX1DuHqgXurMOtKcTz34teAr7
y8S7QD1X7y9Gn1WBHfj+3cRvT288j9aW+KwseAe7KHoWNJOazUdBV8Yz/Wb6
f02lvpOtaCcTz55qUC0XNM+ctxvcxveJ6N4pxlr4S9FvST1T70a0r/BtBzPw
LcTYVeAdeUdvNfEsaGdodxyI3pXacefwfyR61jXTmu0sPsPBO0G74dno2dAM
bUbPRO8G7cTF8J+ic1UP8/B18NpSv4HjqXegdqFiTqCNJd5F2gHaBb9G90Y1
38P/bHQt6vE/8OnEs6831ph6p2m3aYfWaD6j34J25O/az4nfqnbgA6l3pnan
7mgidY/UK93R32h3Eu92/Wfov2Nj9FtSDV/g/3b0LtNMfg7/DyYX4FI=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9881038583972336, 0.9715336624063002, 0.4082861655814366], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmVtopVcVx8/k5HLyfbsPIig0M8m5JFNQVJTWByto8fZgO01yrjMoaFVQ
UStoFR9q7UxybsmIglTxCiooVhG1MyfnkmQEoVWhUkXwLoi1M5Ock8tUH1oF
1z/r95E8rOyzv7332muv+1rJPfDg8sfGUqnU0/YnbeObQyp1eTyV+l+USl2Z
TqUeNbhokDuVSpUNSgaNyVSqaFAyGE6kUl2DnsG+nZ+39YLBgf1eOOXzkf3O
n3Iceylf1zwLvqLBG+zeht3738jXKifua+pOg2WDusGqwbbdt2awbnAQ+7dP
2Nmr0HvJ4H2R0/BA5HdWwSuaasznuF+4d2MfP2z7d1NOn9YXjK7zBjWDvt6g
Nxn0GIcGXcZdgxdiH+uGZ020GmwZbKQc745B06BkUDb4Z+zfKpG/rwe+rn0b
cka0ClebN2hsnfL1HLws863J+9ZPnNH9m6wNTvk7Gow9zm2y1ku5zIS7yD7R
9UBwfi8YvfMm+33x3qBgv/cmfJ6336MJny+YTp03qBlsGq6WQVs6Yucv2PoF
wzfPetXga5Hv/6qNOXRLuM4a3w9NOW+lnV8t+Jex83Xb/23JedJpOZxwXGsG
bYOPB/92l92Zs3nZoGSwZPtXDVYmXQ7C15AMoFF3FKCrYpBn1PkN060Vg9Vp
v3PTYIv3D5iPsIm+wYeC6+urY9cj2df6uPOoz5lDcGhfE9sqT7pMDgz2keEh
c9FaRIdqdmZe/DY4z3jWoIMdiNYBOKS7WcO7O+H8LRvkJDeDkkGWeVVyBW+F
dc0filyvPhm5beygn5LRBezkIO02M6832u+CjXmD60bHE9PuV0Zp/5YzGKZ9
zCJn4dL5od1xh427kctev7XWF16DkcF+2u/RHa8Ijusfos1gx+7ZNZi37z37
/if7NmPw3LTTcjry8YbBmcjHm9O+V/QJ17bhvSW6DGYjXxde6X/NoCrg/nl8
xDz0b6adF/uMmm8ZrI37Ge1tG1SYtwzKzLXvkHN6g3SuO+0+Uu/vjTst8neS
8zb2oTNZ9Ec++s7gfBMvL8C/O5DTwgl+Cm/T4DXB5bBj+/tpl594cQO56T7Z
eAX9vC92Ply0cwNw6B2bjG1+H0hW425bsrFqyu2jbtCYcF2WTtcNlhlXDW4z
vF2zuccjt8ky5xVf5FO2Uh53Bsw3WUu+aVTM6XNPUzbHN/m4v8ZOy+sj96G7
+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
sYbPeCy4fbw/dr/S4vz/AVV8nP8=
           "]], 
          PolygonBox[CompressedData["
1:eJwllF9o1lUYx8+r2+t2zm8XUhg0ZOp8FYwK1G5SUCztws3cnG4OgxwFan/s
okQv/K+biqJCWYkWpKCoF/7d3KxtgaAoJBqE9k8oNbH3NXXahSb0+fK9+MLz
Oc8553nOOc9zRrYtbfxwUAhhESpDE1MIxfIQavIhLM1CmJRsN6Ll8LPwGPwD
TK6HX4L74K2oDc7D/fi2oalwIdk3X4JXxhA25kLoRquwV6M+7K3oEXNfRw3E
2oDWMP9p9F6taBK8FjXja0H1zK1KzkUx38C3Dz5VEcJtdBWuhduJ3Y0Wwp/C
1fjeRJ9hb0OjsP8ZQh74n4FHMHcOaoD/I34He/egKXB5sl1CM+BH+JvKPOdV
eC/+Tew3F12E98NnKjx2Bd6V7FPMs/D05LMU0Ap4Frwl7zPqrHPh7/Ie2wy/
Bd/Le2wn/HH03bWg97CX4d/MWeahg/jfhWuHeM3n8OTkWA8430dwNdxa7jfV
2z6ffHbdWQv+V5Ln6o0Xw0uI0ZjzG97H90FyLMX4Gn978l1+i07Dn8DrsTvR
Ufht1v9NndWwfiF2M7oP96KbyWfQWQqoBP+A/qokL8ZzVbwjPAtei4rsdw4+
Wek5j+FVen9i3UZd8MZkW2/em/nN9fbr0AV4JvtuIPZpVIc9Hg3HbkATsKeh
LdjN6DfWrk4+m+74GOuz5FpQzdRlPqPOqhxW4juueqt0zjfx7UmOrRq9DB9K
rlXN+R3uTz6bzjQAdxD/Qc498iT5znR3eoMi3AuPGMyboWrmPxSXuSZVm/9G
985YNDFzD6uX1WOvsf5P/AOs7Ucv4PtC+/MhzEFfYr/DnOGcZTb6Cv9P6g/G
S+Q3iPeoS+7VLrQJ//vJc/XmB+CmZN8dtANekGxrz13w5ejcO9AV7B/V79it
qAb/i8m9qz9pEXwpOXYPegL/Ep271hTgU3A3uZdQJ/Y+9Qf2fFSJv0vnxe5H
Q+E+eMxgjz0Hn4+OrTH5zifH6kAP1Q/RtVCrvxJ7d/TeBbQ9+s50d+2ogvnf
RNvKqQo+Eh1bOSm3tuhaVw+oF5SzctebDmN+fXRvqAZVi6pR1ap66Ib+NriY
85uFzH+q/laNPVbuqIncR6Jbme9Yd92DRsM/R9slNC5zzav21RO/Jv/Z+rv1
R4yGD6O7Ff7TruErRteWaki1dCI5luZcx/998t0phxL8R3Qs1ejLme9Md6ca
z8H/AzIC5xM=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9242676864480319, 0.7374536436035741, 0.25792220673145727`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmV1opGcVxyfJbLJ937cXiqDghbabZGYyyepFqxdW8KPqVRWE7WY+k60f
oGKrIC1604pguzuZz12siB+ICopF0QpW2yTzkUlqKyhWBCuiolUv7DabzEwm
2Sqef87vJbk4eXLe83yc55zzPM/5n7ntvgc+fP9kIpF4zv5MWbs/nUhsGrWN
qkY5o7z4WxKJNaOq0TBKJGrWdsNEosM38etGl42uGG0aVRizwTfxe/CS32CM
+F2jZ+BfMXoavphMJBpGdaP0jPFGBaOMUQk+xbe80TxtzuhbpudFaz9tes7x
bdloaHN1jLpGZaOWUdNoFrnG7KOj9v19m+eKfXvQ5imaLdJGGaMBctkgZzRn
NG+0bDQLX7d+hWkfVzA+ZZQ2ytM3hW3uNbqI/S7AN21Myag87ba7yNwdfFMz
+lfk8/0sdL9VjNaMVoyyRouMX4Avobv4L0Quf6eNfTXyffwqdLs/hi5t5tN6
tweJxHX8UyMuClAKu3zH+lQtlp6wtmttzahuVMLG8qX0aU37/mSXxrTb6bLp
sGHthdDXbBOLJfqqn+IzhZ/3pr2Vb1u2RtloxWgw7bGiftK7w1wV5ttA5zo2
TFvgD2zccNL5LmO+GPmYD5o+mSmXj4wWprw9MMpOeTuedHvUTp2bKrZbnHL5
oVFTtkDX4bTHsXS9iu6rRkHk7dcDj8XKjMefYnMNXrFche8zr2zQw94Noy1a
yQ7kf+u7YNSZdB/JN9uM0/paY8NofcZtXcT2Wm8TmdZrw+uc1dBD568OrzPZ
gNf6RfYsvQrwWjsPrzFd6cWYHnyVb1rvJ5Hr9XDod8oyZ65FfCvevxR5+37r
kz9rsWGUOuu2miNmisanjTJGBeTic0ZzjLlodM5o1miZdg66objDF7PMG987
8T2Umjm5q9LcVW3TbWTto6HfWxl8UeBuqxl9O3IffTx0/YYzPkbr78742tJ1
MOMy6b4/47z0ll7ifxG5DR+xea7Y93vZ008j98tD9v0HkevxQOjzruPfPdpN
5trE/hXuxTgGl4nBfuS61kI/d23OTo/zpTiqsL5sWWWcbNblvKjfEF93iaE8
tuwQBzXiok5sxf3q2KiLfIOzEsdsBX3rzBfHptoSe1tjjQG81nwqcpt/OfR7
9xx3uu7N0Rk7T0ZNey/7RlsJv//27dvgjN+Daodn/K5VqzEv2Vx71veineuc
0aH9v2ztpt7dhMvaRgP4T5oO2zbuLTaubHwr4Wuu0U/jakZdo07C3+Ecb0uN
Vm/O9cjbp0O/o+a5r88Ffpfv8t7czj6rzKc1GuyvZ1Sn7bJv6T9GrvYAudoR
/dQOjT5rOhzaXt5mOiwkfD8lowxt0SjPfrR+gfXE640an/Hxf7bxFfv2HtN9
GVuIzzFOfCrw91vvs948+Urj5wPPPyQrsrc66zfh7w7czu8N3AZD/DEbuJ2U
s6TQT/qm0V381K2+5m9Nx3nk0muOVvrOBT7HHrlBj/fmtWafHbsLfxw4P5r2
96FmeneNOkZLRpeMVo0WaVeMsrRlo4bRllHPaMfulJtGRyJ7g7aNdowOjfrw
28gPjXKmQ9XGzZn+V022YrRqdI32klHdqGBUNFpgzZLRfTa2be15G9tAXlJf
+1Y/4/uQjleNWkZvjny+5wOfQ9+aIsaVp3wfY87aWDx6l+irvfaJC/UbJV2n
jMYk3S4LzL1N3w7n8vh8Jr1vGnsdcE5brK/9D5IuT+GHEePvifzb6+TryG30
e9vLJyK/B+4M3R5aR/wHIp/r1tBzT60tvole2qvy0RGyLaNx0vfRoz2W2Tod
o65yENqechBa2UjjFokLxdEC7438fJ44kr+XiKP4ztKdsJD0eTXfuyLXdTr0
N6pHzhzfaxqT1j6mXK+/B/7/fwK30wK5Zga9Na9skeIOkr2z5KLy3yI56qr1
v2Z0NemyMnmI8nTFaz/p/Vbit5++kmfoq9zlPHF/k5hNTXmup1hWTrY05e9u
FzzQwO7ap3yfpV+RcRnsq/huYu86vNbfQT/5pIZMZ0zxpPOkOCqeOTkTPWJq
B/k14rvJmD7nUv6sErtt5mgwx+cjzzXfZz7KJt1vY86Q9FWuuhn43p8NPK4X
2NtnIvfDXaH7skhevJj0OXRPLCW9lR1TyOM3JE+e28Qnst0bbM4ju8eesrWy
yjsnbC6jNXv720abZ/1bz2jLqGp8B9mrpse2fXsk8JxBfTeMRvaty5gx4/oT
LttTTsYcQ+VGRofINVfN+C7ygfFto86E464Cb6TmrRs1JhyT5U/huRy55u28
kRfIA5bBY3+JXPak6f7KWX8/43f0ImPa6LXPnvbRex3dd6U7emmfyqEG0ydY
XO0euEXtDcW8rTdW/IfOz5GPPh55+7HQ35YD3pIO74nm3Zr2sZIdgQH09vwz
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
           "]], 
          PolygonBox[CompressedData["
1:eJwllGtoFlQYx8+u73bOu0C/GCTkZXtnzqwPTQQVksg+LSHYdM7rNEUxNaiJ
ftlIyE1zzTZU7PrBwGgFldDK27zfgkQDyYoSvPShzXQXs63w9+f/4Q/P7zzP
Oc85z3nOmdi48ZUN+SGENagQNacQjmZC+Bv1ZEPojiHsIuAE+gK7Bu0k7jh6
Gfs14hcQuwMdJP4DxpYT+zQqhC/CKwpg1Ivdih7mhXAWjTL3fXhRvnOUEn+e
scOlIfSjEXgXPLkkhDp0Gn47eW8aOw4vQu1FxKFyfDNYb2HwHn+DP0d3iZ3E
er8T24S/k9zL0HrsBsaWM3cFyhH7JWPn2EsnOoDdg/7N99jYrOdo7jTUT3wz
3Is9gEbgE6i11GcYJH57tC/H/Dx4JZyD61Ffcg7lUs0i/lcZK8+4ph/DHdG1
VM1Uuzd1H3nOOURsS3QtdaZh+ILORK3b0ZNZ35Hu6j66hf8F+D3spWimaqX7
wD6D5kdLtmJuEL8/eu+6I91VU/Jdq0e+yron1BuDaAz8bbRdSf5x8KroWinH
n8xtjN6LaqBa7CBmdzH5UB3+zaiDtZegz/A9UP/QmNNRNTwdfy93NYDWwv/j
7yp0zGy4Fv8x1rqHdsNL4X+wT6MF2NdQpfbI/RSUhfBNcm/UotvEf59s6w77
4Au6U+x2NAQvSV5bd7QX/lX9wlm7UA4+hH+KYum5P+CTyXMb1NPw5eTcWnM0
6zeht6Eee1z9H1073aHusjt5rZPounodfgp7mPy9cB8xUzh7A3oO/kX3wdxB
VAXfhEcKvEfttRqVB78RvRX1gHqhCl1n7U+Tc72Lrqp/4J3FrmkbXKx6kGsQ
vQTvhReXeE9n4OHovbSjWfBHyWsp5gf4v2if1ngePpxcG9XsDvxTdC31Z0yA
H8M/Quw5lMHuj+4FnelZ/H9Fn1U1UC1mE5Njr/Voi95fcq1Ooe/glmRbPfY1
/GPyXzORufllzqFc6qm5+F9MXusd9BZcndx7yrEJLkuuRSVjNfAB+EiJ/5yf
4dVwVcY9uA8er/MW+c/S31WR/HeppxvhOfA0Yh/Cr2edU7l1BzX45qFlxY7Z
im9+8tvR2Db4EzQ145wb8L0R/dfoz9DfsTH5bSlGsZVwZ5H/QP2FeiN6K3qT
epvPwGeLHLMSfiL5rDqDzrIn+W9uQ5fwz0jeu+asgz9M9qkmV+Cr0X+TerQC
fgTzyeye
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8540959562791269, 0.4168108017263711, 0.19943565486652315`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVj1opFUUfZlZMzPf+7TYylKbVbOZ+WYWFAUtRLBdsFDBJJv5iYXILjYr
WC1soVho1sxPBBELLQSxEAvFZtlsdn6SQlARVgsFQat0m6yTmeg5OWdIijNv
3nv33XfvuT/ve7Rx5aXLuRDCL0AeaOCnC3SACTYGwBCYehwBnTn8BwZAA+jO
aa0J9Dyve63t+chnOB4BU885TjzWoLua0xnq7gPvpyFsz4fwSgxhP2rtWhLC
GazXIfsJ/pdhdx1YBXpYawItYI06gQvAXZy9hP2nIb9oWc5pfwXIgE3oXCyE
8DpkW5zbH9pHuzKgAjRyujvzXQ3b3fL8cO5ENgOPhzlzaV3cfwN3jR8I4Snc
1aUdQBMYAp2gtSZk+pDJovgs29Yd+glsAiPLcr4HuVXsvwkfN+wf/Sw7Htzr
mCveR27IEX3t2g/aP8Fe1ZyQL+p5AeN12LOBWFyM4mXH8ezbpzHwFmTKkHkO
MpOotfdwNsF6G7o/T8RdJ6f5OMgn2ngYdCfnbdtOW7/H2QPE5V3o+ydKtpXI
7qpj3HFM6EPF/tXNzxEwBe6VQngC5x5PxDPX6Cv5/M9yTftNvfkHJfurYzRy
fIa2n5wNrIO27zomH3vcDSex2vF5+k+/v8bY97mxY07d1Pcn7ruD8WKinOg5
xl3X3+z+oeuz5ft69rtrfZ+BtxXwdiUqH3gf9Z5NlZPfJeKIsjO+OW54HPhM
xXXOHBo4brP7p85txmBqDs/hvjby9jXccwP3bwO3C+KeMdgvyQ/6w3qljR8V
JFsN8od+Zx7p0yTV2R+huwAMzoTwEMYa9tZ85kvf93ZUzR85rrR/bK63oOND
YL0ku6t51ejDOFvBeDORj9w7NLjPvXcgs4rcfjHKh1sl6cucu8wD9k720GZe
/pOHx6JkeYY+MLcmzr9vUnFzLYrrGfdrp/Ko6hptus767o9Hrr8d99lVx4h5
wzi/mpz0WcrdKIawDKwU1SMofzVR75r14H3sLbBOSvKp7zwYO3c4n/j+oXt8
/dQ70LCdz6eKUcG9omkffie/4OYvjJO8/g+Bddx7G9gqKmY7rp/MZ6mXdi8A
54uKN3OlZh6Hp2p95PMT2869v2HPEnz6IaqXnLeum6nGD6LicL+g/ZZ7es19
u21ff2NuQd8ziezu+L2k3NQxeTnqzeLb9UgqmZ8T9dbMetdsO3U1Zm8FsJ0q
Rr2o96flHr3guHGPtcKauVQ4qRNysey4MX6Zc5C5yPqpWO5J6G8gLgeu/bL3
tl1/1P0sbYbMUSJ91Evu2B8WfYZ3MFcOiqqlJcv9lCqGX8D+u6lkvori+8D8
9lzXjOG/8+Lqzrz46bkvMBeYE8zZc6nyhLkzyznm2n33Fdq+aX3kdcn1zTpf
tg7qqvqbhj1rN9Xap1E+bDn/9lKduxX1zUHbVqLqp+vvAfYI9oNRotgOncdN
95LjnuLvgONvB+jMwOdeolh33T/vpeoLw6g8bbsXX46KL/s38/mC37gt801O
G+5Jx70pp3f20L2g528XvrtcX0/k05Z7Fuul5jfuj1Qx/hZ3/g8hZnUm
           "]], 
          PolygonBox[CompressedData["
1:eJwtkz1I21EUxa8mmvh/fxenjnWxKvEDQQVpB/FjFTqIghq/B4cEF4VOgoOD
0EZUVBDBwUGQFkoHxUXUxPgxCDrpoqDolE3FGEp/t9fhkHf+5773zj3vpnQw
/jWWLyJ1IAjuPJF0QCQH7llPgaM8kSzIOZFL+GLAasp8kU98WyigBgzBj+H7
RSJPIAevcaZlwRh8jv3VXDgAgvAWeJR750Er6wyowcggqPfNg3rRb7XwDc47
CIs8gyv4T/QFzkqDX6z70JOFIq8gyvrcmZdytECxyDa/b9RWc+YH9negz1Ob
ArPwL/Aq1v3gG3wdREOcC2JobexfwesIaGK95cxLBXfcUDvMtyqy6gcZtD/O
tB7wgD6pfvMs02e0v5onvaVBM/qLZ73rt8/wGWpeuLuSO/Z886hetcdOtC7q
U3jJgm7PoGv18Ii+BhJhy+yCvaPwSMh60t6W4L1hqznzLUPNUjMqgZ+qn4C9
+Uf4rrNefoAM/Lszb3pGEj4FPwyZ5x14g7O310zH4QnPZklnQGch7izbObCJ
vurZbOibevBGeERsRq6obXf2Nvpm077NjM6OZnCLNuFZ9pqxZr3vzOv/mfRt
JnQ2NINl+Ilns6A9aq+TzrxoD799e+OR9//HNdo/QSt3sg==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.8173190000000001, 0.13412700000000113`, 0.16421800000000014`], 
        GraphicsGroupBox[{
          PolygonBox[{{2618, 102, 2629}, {3035, 102, 2618}}], 
          PolygonBox[{{2617, 51, 102, 3035}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2617, 3035, 2618, 2629}]}, "22"], 
        Annotation[#, 22, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{2615, 3034, 2616, 2627, 2628, 3041, 2639, 2648, 2649, 3048,
            2660, 3054, 2668, 2678, 2679, 3062, 2688, 3068, 2696, 2704, 2705, 
           3076, 2716, 3082, 2724, 2734, 2735, 3090, 2744, 3096, 2752, 2762, 
           2763, 3104, 2772, 3110, 2780, 2788, 2789, 3120, 2798, 3125, 2807, 
           3132, 2814, 3137, 2823, 2830}], 
          
          LineBox[{2854, 3163, 2855, 3171, 2863, 3178, 2870, 3185, 2877, 3194,
            2886, 3203, 2895, 3211, 2902, 3210, 2903, 2910, 2911, 3224, 2918, 
           3233, 2926, 3232, 2927, 3241, 2935, 3250, 2944, 3257, 2951, 3264, 
           2958, 3269, 2967, 3276, 2974, 3283, 2981, 3290, 2988, 3296, 2996, 
           3303, 3003, 3310, 3010, 3317, 3017, 3324, 3024, 3331, 3031}]}, 
         "21"], Annotation[#, 21, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0ohHEAx/H/GZSXG5QyUFJuUqY7C4OUTM8NVxJleWS45GVAmS4GMkgW
imRgUBhkIMulDCeDopQkg5jchuVSPoZvn37Try2ezk0lQgh5pWtDyKhLL3Uh
9DFSVu/2EGONqWxPcFZz+rYLrHCFifoQ1rmtHdXY+zzWiRrsczaxyJJu1Go/
MMVndvCNn/+fSts/7OYve1ntc4BJRmxks1o0YrdzmCnG7GSeGc6whwvs5xIj
LjLLVQ5yg6Pc4jj3OMlDzvOUBV5wmUWu8ZqbvOUu73nAJx7xlWf84CXLvOIX
S6zwjlXJEB75BzpuPHc=
           "]]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxHEYx/HvDUrcTcrAJCZ1yZ+JQSKL33LSZTA4GZDcILHcZSGDZECU
DAyKgRSyXDZlUKeUJIOY3CIsl8HL8O7VZ3rqaRjLDs7EQgiTaq0KoU3teq4O
oYcDivRmpzmqjEr2FD85y5zyKtvLDPEQ1ritHVXa+0zwmOe6UK1dYD1vWNS9
muwnNvOVLfzgt37Uaf+ymxVu9jPOiDVMsY7DbGSGSU6wg1l2cYG9nGcfFxlx
hUNc5wi3OM49TvOQczxljifM85JLLHCVG9rUrb3LIg/4yCO+8IzvvGKJ1/z6
/wfLvGMsEcID/wBapjy6
           "]]}, "19"], Annotation[#, 19, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0D8oxGEAx+FXbnKnZGNQbCLUTSykLG6RPxkMLgYudQqZriwng2SQDFJc
UWcQJRlcBqUM6gaFjVKKRVhk4PkNn56+y/u+vY0Ts4PZihBCRu1VITzGQ+hg
t3r0ZPdzWCN6tcc5rYw+7Dl+M8e8lvVnr7EyEcIWd7WnhH3IGp7yQiXV29ds
YJkP0VvUbD+zjW9M8oud/I3Od09MfXacKdZygHUcZRPTbInezlZOMcksu7jI
Xi4xxRUOcZ1j3OQkdzjDA85znws8Yo5nzLPEVV5xgzfcZpkF3rPIY53oxT7n
Oy/5Gf0Hf3jLUB3CHf8Ba3Y8MA==
           "]]}, "18"], 
        Annotation[#, 18, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzj8oxHEYx/Hv3aKOugzKolw2dYabGChlcYv6yQ0Gww10yt8yXVmuDMgg
GVBShjPIIBlOBrkyqBsUFlFKYcKChdcN7159pudJ5Wei6VgIoaB0IoT7xhC6
2Ks+PdqDjDSsF3uM75zgrOb0ZRf5wxJXtKp4UwibbOAuyzpQ0j5mCyu8VFVt
do0dvKvf15PS9isz/GQ3fxlzL64BO8EsmznEVubYzhGm6r+zk+PMcIo9XGA/
F5nlEiOucZQbzHOHBW5zkvuc5yGLPGGJZ1zmBdd5xS3WuMdblvnAIz7zlG88
5wer/OY1/3jDfwzyPNM=
           "]]}, "17"], Annotation[#, 17, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzT0oBHAAxuG/5eq4ZBCLiMnXchNFUpa78bAoN5wiSncp08VyZaAMwsBw
KeUWGSQDGXyUQd2gmHQDg48JC5bLM/x6eqe3fSo3mq0JIcypuzaEHvVqQIOq
1IWQ4AtTnFRaH/YMs8rp287zlwVWucYtbSsSC6HIA5VUbx+zkWe80rVa7DI7
+MhOVviqN8XtL/bxj0MMvkYYZZINbFKzxu1WjrGNaXZxmnHOs5+LHOYyE1xi
kitMcZ0T3GSGu5zlPhd4yDxPWOA5V3nJDd5yh2Xu8YElPvGIzzzlOy/4yRv+
8I5V3vMf2qk8hA==
           "]]}, "16"], Annotation[#, 16, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzT0oBAAcxuG/QckpgwwGw00MBhMTyuBMum6SM0gng3zEcpfpykApOguD
lGIgRTKQRcogNygmGRjEdCYsF4/h19M7vcnx2cxMTUTklKqPGNBrIiLNEWX1
YU+wwmnmVdC3XWSVKyxpQ7UNEdtMcI/HOlGTfc4WXvFOZSXtR7bxmR18+//T
p7rsH/bwl/2s8znIRg6xmRm2cpTtzLGTU+zmAns5zz4uMsUlprnKYZY4xi1O
cpdzPGSeByzwlEVecJlrWteNvckyd/jAfT7xiC884zsvWeE1v3jLKu/5Bwdy
PBQ=
           "]]}, "15"], Annotation[#, 15, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"Temperature (k)\"", TraditionalForm], 
        FormBox[
         RowBox[{"log", "(", 
           RowBox[{"-", 
             OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}, {
        FormBox["\"Log10 Pressure/(1atm)\"", TraditionalForm], None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[2]], FrameTicks -> {{{{1, 
          FormBox[
           RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]}, {11, 
          FormBox[
           RowBox[{"-", "1.3999999999999997`"}], TraditionalForm]}, {21, 
          FormBox[
           RowBox[{"-", "0.7999999999999998`"}], TraditionalForm]}, {31, 
          FormBox[
           RowBox[{"-", "0.20000000000000007`"}], TraditionalForm]}, {41, 
          FormBox["0.40000000000000013`", TraditionalForm]}, {51, 
          FormBox["0.9999999999999999`", TraditionalForm]}}, None}, {{{1, 
          FormBox["600", TraditionalForm]}, {11, 
          FormBox["880", TraditionalForm]}, {21, 
          FormBox["1160", TraditionalForm]}, {31, 
          FormBox["1440", TraditionalForm]}, {41, 
          FormBox["1720", TraditionalForm]}, {51, 
          FormBox["2000", TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
       GrayLevel[0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{1., 51.}, {1., 51.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.4819426251758637, 0.590301760242435, 0.952359435349301}}, {{
              0.7566896881992417, 0.809851002566661, 0.9763834145186735}}, {{
              0.9422895062908183, 0.9564801888007287, 0.982572991928977}}, {{
              0.9911581770317097, 0.9906116932251957, 0.7961954186963089}}, {{
              0.9881038583972335, 0.9715336624063, 0.40828616558143643`}}, {{
              0.9242676864480319, 0.7374536436035743, 
              0.25792220673145727`}}, {{0.8540959562791269, 
              0.41681080172637125`, 0.19943565486652318`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], -175}, {
                Rational[15, 2], 175}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -175}, {
                  Rational[-15, 2], -175}, {
                  Rational[-15, 2], 175}, {
                  Rational[15, 2], 175}, {
                  Rational[15, 2], -175}}, {{
                 7.5, -175}, {-7.5, -175}, {-7.5, 175}, {7.5, 175}, {
                 7.5, -175}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -136.1111111111111}, {
                    Rational[
                    15, 2], -136.1111111111111}}, {{-7.5, \
-136.1111111111111}, {7.5, -136.1111111111111}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -97.22222222222217}, {
                    Rational[
                    15, 2], -97.22222222222217}}, {{-7.5, \
-97.22222222222217}, {7.5, -97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -58.33333333333326}, {
                    Rational[
                    15, 2], -58.33333333333326}}, {{-7.5, \
-58.33333333333326}, {7.5, -58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -19.444444444444343`}, {
                    Rational[
                    15, 2], -19.444444444444343`}}, {{-7.5, \
-19.444444444444343`}, {7.5, -19.444444444444343`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 19.444444444444457`}, {
                    Rational[15, 2], 19.444444444444457`}}, {{-7.5, 
                  19.444444444444457`}, {7.5, 19.444444444444457`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 58.33333333333326}, {
                    Rational[15, 2], 58.33333333333326}}, {{-7.5, 
                  58.33333333333326}, {7.5, 58.33333333333326}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 97.22222222222217}, {
                    Rational[15, 2], 97.22222222222217}}, {{-7.5, 
                  97.22222222222217}, {7.5, 97.22222222222217}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 136.1111111111111}, {
                    Rational[15, 2], 136.1111111111111}}, {{-7.5, 
                  136.1111111111111}, {7.5, 136.1111111111111}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -175.00000000000006`}, {7.5, 
                174.99999999999994`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -136.11111111111114`}, 
                    Offset[{4., 0}, {7.5, -136.11111111111114`}]}, {{
                    7.5, -97.2222222222222}, 
                    Offset[{4., 0}, {7.5, -97.2222222222222}]}, {{
                    7.5, -58.33333333333328}, 
                    Offset[{4., 0}, {7.5, -58.33333333333328}]}, {{
                    7.5, -19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, -19.444444444444464`}]}, {{7.5, 
                    19.444444444444464`}, 
                    Offset[{4., 0}, {7.5, 19.444444444444464`}]}, {{7.5, 
                    58.33333333333328}, 
                    Offset[{4., 0}, {7.5, 58.33333333333328}]}, {{7.5, 
                    97.22222222222209}, 
                    Offset[{4., 0}, {7.5, 97.22222222222209}]}, {{7.5, 
                    136.11111111111103`}, 
                    Offset[{4., 0}, {7.5, 136.11111111111103`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -136.11111111111114`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -97.2222222222222}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["17", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["19", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 19.444444444444464`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 58.33333333333328}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["21", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 97.22222222222209}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 136.11111111111103`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 350}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {
          Directive[16, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"14.0582642443884`", ",", "22.09984956723542`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"15.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"16.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"17.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"18.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"19.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"21.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"22.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"16", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "350"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769261462545392*^9, 3.769261466744556*^9}, 
   3.76926149739569*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 693},
WindowMargins->{{Automatic, 0}, {Automatic, 5}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2096, 49, 215, "Input",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7",
 InitializationCell->True],
Cell[2679, 73, 1321, 19, 34, "Output",ExpressionUUID->"057fbf97-d68c-46db-bd47-9dadf06de735"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4037, 97, 3085, 86, 220, "Input",ExpressionUUID->"4108ebde-addb-4fed-8c32-11edc81daa9c"],
Cell[7125, 185, 536, 8, 34, "Output",ExpressionUUID->"2aae6cf1-a410-4cab-9233-ddfc2c5b38d8"],
Cell[7664, 195, 605, 11, 34, "Output",ExpressionUUID->"8143133b-0a5b-4e81-9dcd-59c338490fd3"],
Cell[8272, 208, 70555, 1177, 367, 34131, 580, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f6ee9279-a99e-48b3-aa89-c47fb91a16b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78864, 1390, 18828, 480, 955, "Input",ExpressionUUID->"db492a3f-2c1f-4d0a-9dd0-7761e1557795"],
Cell[97695, 1872, 3998, 57, 34, "Output",ExpressionUUID->"15a0d780-8596-43ab-a0cb-b2b637e0d9c9"],
Cell[101696, 1931, 4064, 60, 34, "Output",ExpressionUUID->"6e0ddf40-3543-411d-bcae-1dc0f517c3fd"],
Cell[105763, 1993, 499968, 8277, 725, "Output",ExpressionUUID->"a7f91f43-582e-4ea3-abec-12d80be5ae62"],
Cell[605734, 10272, 4004, 57, 34, "Output",ExpressionUUID->"f1f93fe4-6cdc-4a56-8992-09de161a17b7"],
Cell[609741, 10331, 5831, 130, 34, "Output",ExpressionUUID->"66f7da42-fff2-4cc2-8009-26287b91604c"],
Cell[615575, 10463, 4086, 61, 34, "Output",ExpressionUUID->"75d65de4-35de-4793-ac0b-0d76f284f530"],
Cell[619664, 10526, 4068, 60, 34, "Output",ExpressionUUID->"47a5aeed-5882-4388-864c-3cfcc7a4442f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623769, 10591, 552, 14, 30, "Input",ExpressionUUID->"8a8d3be0-5716-49a8-9864-37f800e1f28a"],
Cell[624324, 10607, 467, 8, 34, "Output",ExpressionUUID->"aa8a171d-6347-4284-8b28-7f8f47d16261"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624828, 10620, 3213, 94, 157, "Input",ExpressionUUID->"e7e4f7b3-54c8-4daa-bc68-19ccecbba9a7"],
Cell[628044, 10716, 349, 5, 34, "Output",ExpressionUUID->"99db0095-d3c5-4c40-bbe0-2fd89ea34aa7"],
Cell[628396, 10723, 699, 12, 60, "Output",ExpressionUUID->"2fbe9283-e0ef-4366-b420-1a10fe8ca99a"],
Cell[629098, 10737, 801, 14, 34, "Output",ExpressionUUID->"b0da05a0-bb7c-4e22-aab7-10684471df4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629936, 10756, 1642, 38, 94, "Input",ExpressionUUID->"c7a9da43-a19e-4960-8df0-c661eeb6ea83"],
Cell[631581, 10796, 10513, 196, 238, "Output",ExpressionUUID->"a5fe347d-b896-4cc5-8855-83e506c83285"],
Cell[642097, 10994, 2103, 65, 35, "Output",ExpressionUUID->"61498ce8-1322-4f77-88a0-c087fc3a4ce0"],
Cell[644203, 11061, 1075, 19, 35, "Output",ExpressionUUID->"141b7102-d95b-4208-8191-42f21ae43e84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645315, 11085, 169, 3, 68, "Section",ExpressionUUID->"28eb6b29-ffe7-4933-a48f-f62c4f958e62"],
Cell[CellGroupData[{
Cell[645509, 11092, 32523, 755, 2539, "Input",ExpressionUUID->"7c3f8c0c-339e-4b0c-9a00-e8947acb2d3e"],
Cell[678035, 11849, 1089, 15, 35, "Output",ExpressionUUID->"d3ab3f58-c582-47d0-ab2c-63891c821e20"],
Cell[679127, 11866, 2558, 40, 104, "Message",ExpressionUUID->"5f34f353-9098-43e0-8b2f-18d4bac8baac"],
Cell[681688, 11908, 2558, 40, 104, "Message",ExpressionUUID->"9da96586-5f9d-4b8d-8393-21a140d251b5"],
Cell[684249, 11950, 1079, 15, 35, "Output",ExpressionUUID->"b448fb25-61fd-48cc-a0e6-1530fb733680"],
Cell[685331, 11967, 64953, 1313, 746, "Output",ExpressionUUID->"01576b2e-3ded-4288-9299-b802a01b545a"]
}, Open  ]],
Cell[750299, 13283, 2154, 59, 285, "Input",ExpressionUUID->"b0206863-d8cf-42c4-90dd-27f059b55088"],
Cell[752456, 13344, 6241, 171, 538, "Input",ExpressionUUID->"4d60ffb3-428b-48af-b2a3-b7a312fb7bf0"],
Cell[CellGroupData[{
Cell[758722, 13519, 5364, 119, 400, "Input",ExpressionUUID->"8c93dc5e-a429-4e9d-85d2-d6e25174ecca"],
Cell[764089, 13640, 70110, 1436, 502, "Output",ExpressionUUID->"99e3a9cc-33ee-4a63-ac0d-f8d924d6357c"],
Cell[834202, 15078, 452, 7, 35, "Output",ExpressionUUID->"3bfb6991-8695-4b0f-9531-d00f7dcae346"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[834703, 15091, 155, 3, 68, "Section",ExpressionUUID->"be75ae60-b525-445a-a2f8-07a7bd6d9534"],
Cell[CellGroupData[{
Cell[834883, 15098, 12575, 312, 745, "Input",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],
Cell[847461, 15412, 1511, 39, 82, "Output",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],
Cell[848975, 15453, 2964, 85, 174, "Output",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],
Cell[851942, 15540, 4652, 121, 289, "Output",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],
Cell[856597, 15663, 31000, 658, 700, "Output",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],
Cell[887600, 16323, 680, 11, 35, "Output",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[888329, 16340, 173, 3, 68, "Section",ExpressionUUID->"c2959b04-1b75-4321-a41f-acca99c56f61"],
Cell[CellGroupData[{
Cell[888527, 16347, 12158, 288, 837, "Input",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],
Cell[900688, 16637, 297649, 5091, 379, "Output",ExpressionUUID->"cc6b5e30-c952-4831-9a23-d53e5837d219"],
Cell[1198340, 21730, 1783, 26, 34, "Output",ExpressionUUID->"16d48489-4bd0-47b6-8901-5f7112be1b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200160, 21761, 267, 5, 30, "Input",ExpressionUUID->"82d08a3f-a747-4ee9-aa1f-8535b88a3589"],
Cell[1200430, 21768, 180, 3, 34, "Output",ExpressionUUID->"387cad5c-dd67-45cf-aafc-2477e7d6c56e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200647, 21776, 5530, 154, 262, "Input",ExpressionUUID->"d53b85d7-6825-4d9a-aa04-88eadc7885e1"],
Cell[1206180, 21932, 103163, 1895, 379, "Output",ExpressionUUID->"ac759550-cc24-4736-be98-9b0fbf60fa99"],
Cell[1309346, 23829, 103504, 1918, 379, "Output",ExpressionUUID->"73ebffa9-97ab-42b1-b61a-da199cbf1115"]
}, Open  ]]
}, Open  ]]
}
]
*)

