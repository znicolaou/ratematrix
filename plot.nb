(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    422664,       8048]
NotebookOptionsPosition[    420238,       8001]
NotebookOutlinePosition[    420573,       8016]
CellTagsIndexPosition[    420530,       8013]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rasterizeBackground", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"res_:", " ", "100"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Rasterize", "[", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"g", ",", 
            RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
            RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameTicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"AxesStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", 
             RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
            RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"ImageResolution", "\[Rule]", "res"}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", "g", "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"AbsoluteOptions", "[", 
      RowBox[{"g", ",", "PlotRange"}], "]"}]}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Options", "[", 
      RowBox[{"g", ",", "Epilog"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767992001084045*^9, 3.767992001258741*^9}, 
   3.768740627708583*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7"],

Cell[BoxData["\<\"/home/zack/cantera/ratematrix\"\>"], "Output",
 CellChangeTimes->{3.7665850611448402`*^9, 3.766589115206512*^9, 
  3.766592477239758*^9, 3.766617124782028*^9, 3.766962704110284*^9, 
  3.766968142160677*^9, 3.767387558371922*^9, 3.767400037834375*^9, 
  3.767400673171481*^9, 3.767484943725606*^9, 3.76753868731644*^9, 
  3.7677047996747637`*^9, 3.767704838526515*^9, 3.767790543182493*^9, 
  3.767807429745779*^9, 3.767972371161368*^9, 3.767983235938697*^9, 
  3.767983414249508*^9, 3.768734085141776*^9, 3.768734141267956*^9, 
  3.768740180920973*^9, 3.76874063904241*^9, 3.768747290458273*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a3926194-f3b3-4d54-8aaa-b7699cef9210"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"filebase", "=", "\"\<data/atest\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"filebase", "<>", "\"\<out.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "atoms", ",", " ", "dim", ",", "runtime", ",", " ", "count", ",", " ", 
    "level"}], "}"}], " ", "=", " ", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"elements", "=", 
  RowBox[{"dat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"6", ";;", 
      RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<ratematrix.npy\>\""}], ",", 
     RowBox[{"\"\<BinaryFormat\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"file", ",", "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "dim"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<eigenvalues.npy\>\""}], ",", 
     RowBox[{"\"\<BinaryFormat\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{"file", ",", "\"\<Real64\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"17", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<eigenvectors.npy\>\""}], ",", 
     RowBox[{"\"\<BinaryFormat\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evecs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}], "/@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BinaryReadList", "[", 
          RowBox[{"file", ",", "\"\<Real64\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"17", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",", 
     "dim"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<spatoms.npy\>\""}], ",", 
     RowBox[{"\"\<BinaryFormat\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spatoms", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"file", ",", "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "elements", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"OpenRead", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<multiindices.npy\>\""}], ",", 
     RowBox[{"\"\<BinaryFormat\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiindices", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{"file", ",", "\"\<Integer64\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Length", "[", "spatoms", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DisplayForm", "[", 
      RowBox[{"RowBox", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"spatoms", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"elements", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"spatoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "elements", "]"}]}], "}"}]}], "]"}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "spatoms", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multiforms", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"multiindices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", "spforms"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.767983963086499*^9, 3.7679839711855497`*^9}, {
   3.7679915428574142`*^9, 3.767991544231037*^9}, {3.767991652563654*^9, 
   3.767991666410473*^9}, {3.7687349412142887`*^9, 3.768734943399901*^9}, {
   3.7687363799476957`*^9, 3.7687364040388536`*^9}, 3.768736546950611*^9, {
   3.768736576965598*^9, 3.768736578795924*^9}, 3.768736632069911*^9, {
   3.76873841487322*^9, 3.768738415446178*^9}, {3.768738900590805*^9, 
   3.7687389035536947`*^9}, {3.768739188860121*^9, 3.768739189329192*^9}, {
   3.7687394515572977`*^9, 3.768739463811227*^9}, {3.768740176864861*^9, 
   3.7687401785347967`*^9}, {3.768740362563137*^9, 3.768740362816533*^9}, {
   3.768745140444023*^9, 3.768745142856739*^9}, {3.768747288557872*^9, 
   3.768747289097526*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"db492a3f-2c1f-4d0a-9dd0-7761e1557795"],

Cell[BoxData["\<\"data/atest\"\>"], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290567608*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9d217e15-7146-4629-8460-c8941d02f581"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29", ",", "533", ",", "0.682614844001364`", ",", "188532", ",", "29"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290614319*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fcd92840-f341-40e6-a868-9746480df10f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"O\"\>", ",", "\<\"H\"\>", ",", "\<\"Ar\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7679834143340387`*^9, 3.76798397280231*^9, 3.76799153334898*^9, 
   3.7679916719292583`*^9, 3.7687340855158777`*^9, 3.768734146831059*^9, 
   3.768734945888853*^9, {3.768736380247604*^9, 3.7687364044947166`*^9}, 
   3.768736455811096*^9, {3.7687365373313637`*^9, 3.7687365472103*^9}, 
   3.7687365791295357`*^9, 3.7687366323084097`*^9, 3.768738417344777*^9, 
   3.768738753167904*^9, 3.768738904691229*^9, 3.768738996911221*^9, 
   3.768739189437316*^9, {3.768739454420682*^9, 3.76873946410145*^9}, 
   3.768740181087729*^9, {3.768740345579911*^9, 3.768740362984033*^9}, 
   3.768740639159712*^9, 3.7687451432274942`*^9, 3.768747290616735*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"0bf3fe91-5525-4579-880f-d95d056ae509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{"A", ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Rate matrix\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "/", 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "evals", "]"}], "]"}]}]}], "}"}], "&"}], "/@",
           "evals"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DisplayForm", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]", ",", "i"}], "]"}], "]"}], ",", 
                  "\"\</\>\"", ",", 
                  RowBox[{"PaddedForm", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "evals", "]"}], "]"}], ",", "3"}], 
                   "]"}]}], "}"}], "]"}], "]"}], ",", "Eigenvalues"}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", "evecs", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Round", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "dim", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<Left eigenvectors\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"105", ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"P", ",", "i"}], "]"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "\"\<Steady distribution\>\""}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Round", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "dim", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "5"}]}], "}"}]}], 
               "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "]"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"105", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "65"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
    "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/example.pdf\>\"", ",", "p"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"multiforms", "[", 
  RowBox[{"[", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Ordering", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.766592676755177*^9, 3.766592815645866*^9}, {
   3.766592903765685*^9, 3.766592908531378*^9}, {3.766593154643499*^9, 
   3.766593168488023*^9}, {3.7665932789799013`*^9, 3.766593285437443*^9}, {
   3.766593322235276*^9, 3.766593544514727*^9}, {3.766593574905184*^9, 
   3.766593660712494*^9}, {3.76659369703335*^9, 3.766593730596923*^9}, {
   3.7665937781811113`*^9, 3.766593934798524*^9}, {3.766594258452688*^9, 
   3.766594258649126*^9}, {3.766594318987859*^9, 3.766594322961232*^9}, 
   3.766594828329455*^9, {3.766594978572083*^9, 3.766595045963994*^9}, {
   3.766595078635892*^9, 3.7665951148442574`*^9}, {3.766963742600904*^9, 
   3.766963743855101*^9}, {3.766963936498657*^9, 3.766963936714622*^9}, 
   3.766965288160049*^9, 3.766965327222199*^9, {3.766965929002398*^9, 
   3.766965935085981*^9}, 3.7669661392666397`*^9, {3.766970067202436*^9, 
   3.7669700795609713`*^9}, {3.767400033965651*^9, 3.7674000348753967`*^9}, {
   3.7674001294105253`*^9, 3.7674001344960127`*^9}, {3.7674006527641573`*^9, 
   3.7674007033719263`*^9}, {3.7674010169790297`*^9, 
   3.7674010241439962`*^9}, {3.7674392344161377`*^9, 3.767439256493655*^9}, 
   3.7674411622010527`*^9, {3.767441328883787*^9, 3.7674413560950937`*^9}, {
   3.767441759848263*^9, 3.7674417741419353`*^9}, 3.767442063259802*^9, {
   3.7674426982662497`*^9, 3.767442698610846*^9}, {3.7674438856188726`*^9, 
   3.767443888443016*^9}, {3.767446560009901*^9, 3.767446561751657*^9}, {
   3.767446626172409*^9, 3.7674466916905413`*^9}, {3.7674467244361067`*^9, 
   3.767446726962214*^9}, {3.767446802923312*^9, 3.7674468289350357`*^9}, {
   3.767446907520249*^9, 3.767446909565592*^9}, {3.7674469405964603`*^9, 
   3.767446942538568*^9}, {3.767447545165132*^9, 3.767447548255322*^9}, {
   3.767467085293686*^9, 3.767467099738418*^9}, {3.767467132150592*^9, 
   3.7674671737977667`*^9}, {3.767467262724375*^9, 3.767467263993051*^9}, {
   3.767467344333034*^9, 3.767467367201679*^9}, {3.7674674259799232`*^9, 
   3.767467427145769*^9}, {3.7674849332969427`*^9, 3.767484964502049*^9}, {
   3.767485017167281*^9, 3.767485018011778*^9}, {3.767528378761486*^9, 
   3.7675284020467653`*^9}, 3.767529298704187*^9, {3.767529336411889*^9, 
   3.767529393174477*^9}, {3.767529423479684*^9, 3.767529430844861*^9}, {
   3.767530249352586*^9, 3.7675302509988317`*^9}, {3.7675303190786457`*^9, 
   3.7675303517547007`*^9}, {3.767530820587892*^9, 3.767530862373063*^9}, {
   3.767531997124176*^9, 3.767531997856765*^9}, {3.767532480264524*^9, 
   3.7675324814298687`*^9}, {3.7677048338320217`*^9, 3.76770483465394*^9}, {
   3.7677905394885473`*^9, 3.76779054122539*^9}, {3.76797232716236*^9, 
   3.767972327670547*^9}, 3.767972358855541*^9, {3.767972492771264*^9, 
   3.7679725117837133`*^9}, {3.767972600920327*^9, 3.767972601663342*^9}, 
   3.767983162437216*^9, {3.767983228853839*^9, 3.767983230220744*^9}, {
   3.767983305389563*^9, 3.767983323364613*^9}, {3.7679834098618383`*^9, 
   3.7679834258555803`*^9}, {3.7679835531322813`*^9, 3.767983553643956*^9}, {
   3.767992016878832*^9, 3.767992032003516*^9}, {3.768738955455627*^9, 
   3.7687389588697844`*^9}, {3.7687406411542873`*^9, 3.768740654794675*^9}, {
   3.768747389281816*^9, 
   3.768747401577962*^9}},ExpressionUUID->"99272f1d-4a39-4e27-a2bc-\
409baa854689"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJztzjEOwXAUB+A/FqMruIXVaK04AFGNpZJWIm7hBK7gEC4gJoPEhEUiNlvV
DSzV5fuS9/J7b/p1J4to1gwh5O1yReNVP8vG62GnPEZpPk/SeDpIl3ESZ71J
q3xeGyHcyvnmAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACqcNgVj0vdJQD4wXlfvO51lwAAAAD4t832eTy9624BAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABU
6wMbfBzA
           "], {{0, 485}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Rate matrix\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{532.5, 
           FormBox["1", TraditionalForm]}, {426.5, 
           FormBox["107", TraditionalForm]}, {319.5, 
           FormBox["214", TraditionalForm]}, {213.5, 
           FormBox["320", TraditionalForm]}, {106.5, 
           FormBox["427", TraditionalForm]}, {0.5, 
           FormBox["533", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {106.5, 
           FormBox["107", TraditionalForm]}, {213.5, 
           FormBox["214", TraditionalForm]}, {319.5, 
           FormBox["320", TraditionalForm]}, {426.5, 
           FormBox["427", TraditionalForm]}, {532.5, 
           FormBox["533", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 10}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 533.}, {0., 533.}}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Im", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 1.36\"", "\[Times]", 
                 SuperscriptBox["10", "\"249\""]}], 1.355993637333383*^249, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], None}, {
         FormBox[
          TagBox[
           RowBox[{
             RowBox[{"Re", "(", 
               SubscriptBox["\[Lambda]", "i"], ")"}], "/", 
             TagBox[
              InterpretationBox[
               RowBox[{"\" 1.36\"", "\[Times]", 
                 SuperscriptBox["10", "\"249\""]}], 1.355993637333383*^249, 
               AutoDelete -> True], PaddedForm[#, 3]& ]}], DisplayForm], 
          TraditionalForm], 
         FormBox["Eigenvalues", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {Automatic, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 10}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1., 3.0928075504758175`*^-128}, {-2.409072699971657*^-128,
        2.409072699971657*^-128}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
aJ0CBfXdlSjyFZExrunnuRKU9jvLyDZlqBRZms0TWLMzuypwedMQm/n7QgP1
F7Jhfno7dk832MjiElpAhLz7BM2Q9KPNKTVWljqGdMsQmPqKxPb5iugmlCdy
YmRTvmIlEx3p9xXBeAUyD+O4rdzBhQBfBIGK+7yzMJDPTlRdcuzPaE9eTbIX
XlhOTOwHLSfAg7NOvd3a0fkHTuyNB/aknH2lE5FPk7vK0tW7/Nym1In/Zvtj
F5kr06MiFbVPWPD6/PKTmcDuWbdvrFhwyXo79o6ukKTtm3duLZeo81Xfm7yA
VG6NiQml+/Auk5UVy2jzzQBF2e4m4G1azba1d2etDRwI+IbV2b8AZY/Yvbc2
Gtx+T2QTHJOEQTD2sE8dW0Wcd2YeZTrMVqZRbyNjQGxBqCoKxZQX6fIcUZql
0xcFYtcOpmRJCu0u1h8fDRL+lyWhGEpuvL2S+nAjs7120lIpQayTRJDO3BCo
mMq0/eucmFGO6Bo77Ms0hIOW+e7KJlbWruym0QoRhRJVoatjF2lp2LWu2oFE
oE+EamCKd4ncxOEYevDbFCH4qsx+J8YgL9R2U9Flz/RMvE1sQC6PbZimytVX
c+mFWtnVDL25kam+sRiCnxuI2DhHeEBtdozGsm5lmsJuiRZ0k60tAas/WE8D
SKFAbO++srfKVOJIP4dB01ggU2g2urOrEp8DZu7FdzdyJIK/ckjHVulHEBuq
o3/m0VNhFMfhUCYUtIimR+z+jgAXVGfXIdT4dL5WdYOq3/0WvqrzkqlzIpvy
FGv5yHVJpruJoK2WdV5VmnzHiHSkHBns6zMIUej4tXbf1L/qvQbyuQvwbTWD
NBZVqpKRdwHXqlgBvUiiQxKXlTS0OBeYLLPtKSqFTZpoNQGJVlvUWUPGRNLn
ROah4qe6u1ZdWqBnPbyqMpIGY1WUPlMPnr5zfjVVgAGvzGUeKGzsD//zY0Oh
6dXr3uAMzuCq7ZdVZuSPNpAxlgm+q1HhV+9tOcsW2GaimBgTVOleMCOo7SGz
DunzSMGQVXrE2+ZhrErc9yNbQSW3wEpc9+0mytv5rWcb20/yxJ6vwlBs2V9+
aM1jIX5nvxMVVsI3ytFLhi7K9kJ14E+SEG54quvu+++vBIOuN2q5WbiS5Js4
Vb7tSX77aiiw/DuOjru8U29Mud6e3b4/+aYm01VOeX/Zl/BeqFXcdKO9KlMS
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
KO1fPRP+/bT31pbrjZGR18Ymg4u//NZ594OWGUvvfu1S8MbkOa6+Zcekitd3
fzMcqL1z4xKfvrldpJ4ZD9sxtw2R2LPboXXDV85TqOLEvs1zu8IWxmjbb9AR
yvcKlInEF1K+00Pr8451et9eV+s42Duy6HNXmwRQK1uOuvL0M9cXozHkDhqo
ssDbn9zxP3kndttfBd37o7FrP7m4lg5c2bcpxwnNSyvb05Eak7rw2BVkzkLR
/8wWNLBQnWOQs2sLDmRDF6iwQAZlw+oS22y1gjXWmbv5M0Q1jiY2aPT9i7Cw
5W+ibZKocCi2AO2t9/OHEX3go25qkq7vliijT11HA4TB3OUXWzQ+r9gUhQp9
bz3j+GM7TcIO5u9EW33QbSFO9NH9tj92Awbp3YHYmb4X5MYOsRhDwOn6Nij4
bmP7ac3e6xDZ/QzRc+97b01tjWwtryQz3VXJth0bIZqNndWY+DP3oo73soK5
Yq53yySOUSXTahM7UcVnfHGJ2Hl3fivr+9A5qabG+YVfiJqZxpDu082SWLiP
QHrv3wtcDUVb1TUn7t/pZXxj/ao7X6rPfgU0PYLMhnLhq+uB392cYUT5+emI
IOCN/FSZVd5dRMT+cYfYhKgBtPMlXzVx6x/fjvz9B9E3ppZPD52rzfx9be4r
2Ef/NluIQU8XKKIIeCOLRxHbEOjMNWzl20Zn9tYRm9jbDrEJXv/deB6IPb42
5tm5cJjYUJRh3zUyff21qa3Y2os9Yjs6dsvM4pXn77eJvZQmgGPPTUaB2G9d
+4RPXpPZpEPsb12KhDOBe1OnL4y0if1fbGKbOs/khu4sXJmfef0Jm9hUM3p5
ea4ZOIFv/YzwvfCL6+uv2cR+fir4/nLwietrTw9vAbE3J54GYuP5mYtjH/cR
O4F5X7rlqzrEdhXIpw8RO51dF+yNcZ3NLA4IU7xLR9/rfqS8L5sKgYjtPXVr
bU6s9Ih9bqfXIDOx+xxdRFGwqktrWer7l3dnbHdQX5VpsnWokceHY2thz9mJ
W7+4sfyN856U/6JThrpUu7uxMBkq0omzj11tExvtCqGZwTpL28QOYzax6Ug/
saHdwgF81V3r+mnlOB37OGLXM6Mc1/MY/yPEttC+8+4ybQ6I/a9KCEEpM6hf
hrebrKw4fHasGYa9RfW+A+dOUAhNY3uRoACdptLdpoqqb3WTpdOjfOWhLZ79
JfrNuWj3XqAnP3druZgYLRR3WCrVbSfQ8NkmmkPk0td0Ll2PX3SCRCnYNuF/
W9cF6CZanU0nPUXu6k5NanrOrbs/Wm9r+FZ03Jj4OQwbS6AA9bXG2TA+PPpm
beY/mnJDNhDONHu689wa5nLdjlRq9dl/QC2f9DOlqQur4W9cRnbsl+fjQF1X
tiyKtTMrqe9c9vzzJ4HszDceH4pIEqZp3G6BWExWv34ukZn4yhNjgW9c8p0Z
unBu5ML8rR/nqzlJxgqUeH4rsbBxkystOjkBvb39sIY4H009cdtTph7y44Xy
2SkQrIK6mzaxhdIni+tr2yNmpyKiNfE/nQ5DLwDPSMU+YMvTidCt5ycCTlwv
VGKqvV61ZRaJ6h9m00BsSJapb4yFirXwR/nFH5YWvs2nbsBAQ1aFx0eDP7gW
ZDFXbftX5cXvQCfyxCdLUAKPXfWZOsfkbmO+V+rbzzx1ZYmUNJ6O1kMfUIkL
uOvJ8zNju4sv4pnhb17wZ6JDH25kv3UtML46/uLYan72G3DHOMa+O3q3tvus
Yu+MKQmlJ0c8wWyitPQ9PnM7VGOTgcstUwW2S3ZvDo/DVpcNu5tm5CNmHnl8
i7Z3aW+3usAJpGOLpWx0eNS13I1tBe1kOtEzg3MZ1JyAWmx93Vtm4dGu76Fb
xHCeZnK/GA/+ejxeKXvvL5777vXAfz4fSgfQWiSb2PVx1+JUFKfT10pbv3Zq
B1oP4I6EXt/Wt0Xbq1uSCIXPdqEnS3Uo/Hyj6sR++TPkEVaR/oaNux5Hm0ez
CbY0ofV1/Qd+3n2FHXGI3RC1fjPIIJbUF18IQa0wbVywHfczh9hmZzG4vazm
CGJDc3V2RXS+4ho9F4ijiM28OZ8od+4la+Zvbq9WUnfLZTfPZLp+raYuiBRy
KuAy13Uu00hcchqeiO3V/R+gLVQUoktsSPPWboknfJc29z7YaI+g9ciUNP4c
5K3Cyv0jvtkIEPut/Mw/GTLhTO5r9rfn17G1rZFotZ6d/meH2Gxp8pO1kEPs
N5eQnrydr0lS9eJq9PtX9r572V2f+yoQW5YwHYhdbC6lsG+cT9Sm/u8nx4L/
fDH47q3r7w9dn7n9RKGWh2Is0tI5V3px46ZUbqt/ry+0w+gBsaejuR/dDB/2
FdkqkIxN7KagvXI/qQqVK0trG7tA7PbCyXid/+ezPiA2mj+KfUhX5rORG78a
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
0fQHFTFAY+FNU4z0NdTI0lMNgnDadHRD3pvDKkoXxspY9XmGhPfKA3j0louG
pq0x4CwA+ZumC+5Jkv1e9fSq3xztxs8XPcfUq+QjSyADXoTc1PuPeCoGZSE1
hWtdwQjXrPXlwmZVPVHATpnHNp4UJHDA7sMmgCsssNkTT9CChR8UjKJB8OOq
rzEzbTkEDEYlRw5b5Drq0aqg2kDvXiXGbt7m/alIiWmdFSnzv7vlGnKFpVs/
M2LsZ7pdMpcjwreaN3bliD4XzHUnMK6NLiIe7wXRKWD+SNqn6NmJSgKESYl1
Nc/GkxybbbYSe0A0aPc90wcX76AGuOUaZsGChRYADAx4uP02IBSkyMSDH4uO
D3D5FdOXqNSo2noYCZR/psuzFEqeOZ91+mFc/dbYVo7kb+6ajCpP8e68rhR3
ZExjikABrtZJfCFVTBpLXcbGSpN5ARRo+u59Hsv7nxzCOF8Q2ypBmcLyUrdg
4SeC0zA24AN/U1vNfYCOD3L5VdOXyHif2nqpFDD2b285e+zBKmOX9z9KE5yh
xd0A8LxNr50W+HaMPe7Li6om0olwym+kuzm9n1Q53op4aOhjm9n1PlyUne8f
NomNnBIWY1uw8BMBVKhr3XVuQNW0DHqCP8Jp4PFvxZM+05faM3aZQC8P39n2
26Yv92SDCfDM5Fp3Gue+WTNhbJQiYghc/WwfYw/sZ3XGjvviHkPhxGBsWdUa
pK4eDWOXHG8fQsbmxBYuFW1gMbYFCz8RmJb4NgDW7N2jMYopoHZfi1oRMt6r
tk47yHSysPbvRHqmWivywsh+Cue+XjHR+pC5PI9Dpdn2jH1nLwUZm4o6w06j
ZcNgbOj/K5kw9ndtmFuyv3lYYex7vjlajG3Bwk8Ep2NshdVFTRWtpb5rZcu2
JmjR4FI27TzUWbHhpd6tXZJr2TgMGHt39tVZl1269QuDsf/S76IpZN/R07xx
pIAu+mG/RtWu1xS+/R6OK+7FI/O2aZ6FNRWAlmF1Ipvj2YKisEbRC9TG11SW
zRlE6i9QFHtvWYtWVN/QmXKmbwL8xVk+WGi3/+Z0Ovj4UO5BOzEtWLDwo8Bp
GZsIHJ5CVaO9+c7MfnQ3CquqmreJBkYksWWqHDB2cuWv2cSSevc3BmN7Hbfy
BHV3w0T8P1Si50Ow2EMQ8fryuQbMenyCLKJo1B4ENwu9g4aDAt2A53mJ1yUs
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
rAVre5SgbMRGl8YlguWuQBCqpa7go7FiD8QOL+dxQGwnOQip2zWN1SLjSg90
gDQ0+ebRuXC4mPrraGgsgQNis7U5dAq1HkvOxjB8F7E3HXbf4RFblyoCk3RX
DeuR86irOBzN4WNPJBFstp+Nz3YyaCp4eS6IELvaRmybj33wcvPhrROxc7Q8
karvrZjct7492+aUefLe1dzPx7bTGwkUFig/cOqea7a77pmG5q/w17YOfnk3
Jt+pF0aGtmIvX1wM1ZD0UMUW8Ld0RuJiFBXXdQ9dkdyp/6jc/b++XMr+27nN
uY37x2cCS4nYR2OphXQpidcpSfZVORe778T0UucRenFF/nwdcQsNnRPZjGuX
wJWzCQSSZD2WqnRx/+y0lJaAzXlyRZjoUYnaqnE8TAG2d/nYsVrNxU/TLTQa
/uSC/+a6n6KzdOwLvLIuKfRMBqEWxouDW+ESBf+tykqdqCeKRUThCGP8op2T
+Obt9P5VwwDxfBW6Af69zh1Y55FRTF6zkOdv6v4iutfN3bDzkC/4xfi0rNZz
pa0CRRmmbFkakoFVSFklJeVpZqlr+uM8JpznoSWy3udj9+35sm+WQYOivk8x
g+bX19f46jiXvXn67jknjj3l6IqgginZKCGyPdl9L90J1+xa6ok1P2L3fTJl
s/u4uCjjtGLsyXnsZvf1qqW+8NK2Dargq7t2QfNOLSHsWi+xtdJi56792X1s
4qRI+WShKJXRcMDahVREamMPHxu5vq9eXiOSVyp4ko4e5asTqqHOZO0O0ep8
8a4s5KFhvG6tFtlbQdS9UVxYLth1HgcOQOwiqwQrNVdFg16IjYs6IelOHFvA
u6q/CdnLlP9d0WiMx/MqF1ctVK0GRm14DKDfSOlp1lLvCvVLRQGf9VQG61vf
nmHbJ4Nm/8q8KACikk3kY3fzsXv42IdC7GurbHnMF1v7w7XRCIYCquP2HBwh
NpfZD7EHfnZ2vQiI/cFU8s7aWr6atPnYy4JEcCKWpiTUWlN/jNipM51H6InY
8y+i69JlhnMTYOKEdHIRESFWiky1vNK5awex8YVOxG5X5mXix0Ry00ZsFHmm
FAPVhayvuPnYNunu1curePJSGUsgPnZlFBB7OoMQm5P4YHxa5jMAvJxmrZdZ
R368XZn3QB87z8i+UvWQiF0TNEzcRWysS6jWRux3EGLHcjITgQ+ahRBb1Bvg
lgPUP0V2XzdiF4TalGeU7IktmCvO+TaEzJVzU8nq1K/I0Ik7ISxUlT++Xf/k
LnFivnx8ptJqGoXA+dPLJRipRXy5odY1Lg7/e3mViOHysZnKmZVSBBdau/Qb
OOxmSUgSMvTJ1c2qw8vKU9rJhfL59RKMsyfnK7LZ+HqldHqpDL8NVsU7AWI+
S8M3YWozkUS3WzEbcCgYCh9EMThyllJW8izMki6vVxnF/UbAD5fyOwvoRUaF
b8KHrQonooRZuz5Is7VZ5q9sVS6slzBBh4fn2lbNVT3QeYsdAk+WllOkBK82
fAfpAysGuECwZaVAb5a5ixtFGKZhOzgP8Jeh5KEoJmgW3Kw0Ka2VGHj77kcx
uAT4eZnXZjNkXdI9k5dhlJ9Ok/soD6hmw7k0lDhmNtrTUko2xpIEIerbu5EB
uAXtTmi0unK44CxCh8w+tLPKa3FChP5sdyA0DylVWk04C6eZc1nKoSRt7yrq
wN2EB6Dx7TOUXI3ftoG3TQhpP2OOwU0xGk1nY3NPcTF4ERsNDY4GDnbLktsH
N71W7eG5ytMHe/IbeVKXa/CYzWdY+Amcumo7t62GbhkCdJ2numYgZrDF5Rgh
zqdZgKxEXSRlPVqTJKluNFq6CfNz5Ok1O67dELviGGt57xdfI1CooQVuo+Fe
eQQ4gtcQDgg3V1G6QvfOc26q9c51zLagtM7FTY2yTHlnYmI1EZtCq7socPZz
92g1R6p8VlZ4nYuZSqXRbGAi6hB46so0DX0CbxZcI7xBTpUcGNGc53azKOxP
n4Af0rICt77ZMS63euQnwnOrms2dpclucSdTzOpMAB7mGidaOmPYozb8LzwG
8Nl5rZ5WQmJnFzUtCVriycZ5YhMUleZ5S66WKVmjooZYhBFH1Bo5zMjhepHR
CrQGj70qVEqsCsBi6Sw0AFoC/1vldElvwBfKrAp968T5nQvnVTTjgJcIHmZn
i2I04WgVTgVogw/QR3CEEot+C2CCCwY8/M6r5CT5Om8WXD7cXLRabTRYxYS+
rcIrsecut2txbiOIa7I2pPMamsrB6ZwvwNMLjYEG6FYTjlGzG9bpnjk44FwF
nAja39pdn4Yzwh9sgbPAYSu86jxC8CTDH2yHRjqIAZ+hl5wt8FQ4GAjPKrzF
ni8yfIeWjX2ImnBM59Ia9vjSbjAcDV75dilSMGgCuzuWuS4NztJ5iqbdKsmw
4DLb33dwzwE9+DJtE7ece+fcVsS7UM3/DzJtXY3fRqRrpbEriexKKFaQmOXO
g7c317gttgZjmYMS2zt1Hj3QL0vJc5mDQ5q07+8ssTUSo966l8rTiIkn2znX
8BiXGFblU02vmlatu2+8f2N5MFyj1n4vVoYXkvnVAntpvbaQo3OMAg+n7SE8
shN8duPYS12VGdnQx57t+f0QCjWDI6eLOdcuSy7JtpOs8clotUuu0Fl6Wy2Q
ns+eWH6QIoUciTmSTYbOAMIFMXenGQYLXV7cOHLTn83glZPL+cUcIymMbIup
ApIMhKo5klLlsqYSqpCVSURrMZWqIWTsK/ps/1U/S6dUqQrPpKGzHSuPuuei
hqnTTvwBngiYU3TuuhGo/H0yoWkEXQ8nCUbT6qjar0po4HyqhK55EIee2PQO
Nj4AxWqRkfrafX17zswyJZgaP8EP2wTakY7KvM0etdSjuHA/4pFZ4zJi4RWy
Mnd1E/v+uaBT51EkUIgYXI40UZeYYC+uyKvHRs+sFbCpF9jslQeB+ESC/GSq
8DBOxOsSrZrBGu/iirzdnUFDrvzasz3/6uhj64zGxVy7TCEjZC7DB4UObOS7
5ApNU1BVbDxR80xN4jIXgzUmVis5cQzANBhHlotuLooTx07NvP7lQjRSzr4z
mhiOE4JEiHUUgYEOP7Waj9UwWcgockVmo0IN1aaxs9SRLBW5+ltlzyjT1UgV
l4X8IbkihkpY9qofuINOdfu2HV/KvnLbrygVorrqrxA2V0TR5LLNFaloymG1
+w5je7kifJ8r0rfnzJ44X8xm9yEP56qvnKEQutp87B2xEZfZfOyHe7e7LD71
xp1w9X64fuvhSVNIwxbJdh1hbhjHiP352Fz2EjbxXSZxamh1ajJVBydzMZki
JEPSZIUJuBD7g6muVGty+VeaVwzhBZvd1yPnMS2kL24jxPYtpruU/RzEHo5X
PANEfx2PL+Xr0WrxypbD7qs1m/pc1k2JdIA0Of3a57OhUCH1p+H4UATnRULA
5rZtqZNEeiFcqcl8ErH7aN+Odt9uRQNy+deK6Fav6mqkXJbYxKERG7PsgRh6
6WGsa0KB+Ngo57GCleY3Sjh8sPWxqzIqzltWpdI+bfjPmtZB9U9T0oMY7rmu
0be+PcNmNixPEfsDzV5kRD+EebETtIdJay/EFthcrTi/d7vL0jO/mo5nB4PE
icGrAotedgexadlI4vv52IDYqfh9bPJ7ZOLs7ZWliWQ9vnV5NpGr8BqgJ0Ul
3HxsVw2a5dc9E+4cxOZVNVt3X1Sbj63Q/qVMsWuXjdijPRD77ML6apEExHa0
mzQV8bEXcu6JyY6PPf3aF4iPnX57OP4gaiO2nXKoKOxafD1SBcRO2YjtF6rj
212I/ZuDELsicYflY9uIjWYBgNgjcaJz1+fzds4jIHZ50Vepw4V3IHZF9RJL
f2LrRGxwEobjfcTu23Nn3ygqYiMSIEmJPSAqAh6Rw9Pb34jFV+nqwrWOqIhE
IckOTjVzJGUjtkftQicqcmo1j029kI/dPLGUn0iQH08WhmNEjBBpxfRX3VER
V5Y6ufIbz/b84HFUxE0msaMiV+ADOPBruS5P0kHsiWSvqMiFYI2J10q3dqIi
FHTaWtldMcEBUhjCTi7GopXcu2OJ0URdkOpiHdVzLHPq6dV8HMORrghgLxNy
fO+2EtTTjYqYWt0ydqIirvv45VL2FwMBFBWpbcBMxKH3w8RBcTJoDl2D5jDW
lfPIKNASXuvHsfv2fNkT62O3kJKb1Gw9imR8rIAm9VbrUaPZkDSPVz6Ki4eL
Y79Mlmcub9S+dzbosPsEbGbbXnksMoLERnoh9ivHRi9vlbDJF9KRG5/NZQGx
Z9YnpxOleB0htq/CuRDbpQR1e+SqJ6vN8bEbOq1xUdcu8LG51DkAW/CxXVER
JK5iiPFC0FO7byE4Eye4eHUXsW0fe21PjRunYO7pwQvHFpIFPDuy+tCXy4iq
mCyjxdCSjdgJHFA3q6pMgSgK1YltpI+dcioawBikKMSekz82TuJqDOFG7B7a
fYaK60oN3XEvxH51wA+jBlFZDmOMrlMdiI3i2Ghl/ikxOjq1+/qI3bfn076B
PrYBmIDqhnfnPHJeL9Ehcx6J+ZeI4sSFtSogdqAqIhqSrUYi6lZV0CQu0TDc
yLa9i9iD4Ro2+f1E+PpH0+mJJMnHT66k0klSAsTerLAuxH5nrMtn/vfrcc84
Nrj62w5isxHXLkBsJv6VZckKvTWTcHuzRrMl1KYetTzm7F8u5TKUAIjtrDxq
cqnZ0Fb3IrZdC+CFc6HP5tIklWFiX5QrftFoOHzsEqucWsmncMKpGrZR5gR7
mUDn4qodRyKX31C8hs62VXgtRkhuxO5VNQzpimSdLPXpjDdi46XZYLWuKLVd
xK4pUhkQu60Z9c2tk68IiA0tebqIrV35P2n/X6mNPx4dW+F1S+ZTrGoGqvzD
2ZvXpx+msJqQv9VqGlzipEQswGWaNocNfgiP2cmlvKXUZgMLgXLVVd/TkCuW
HSrUdqP6FoyAfBJePeh80b5xTQuVo0cT3oaqspGWXVsH5rBEN2/ZmcDCjTBt
0pTKxVr9KjzPmbVaTZf80SENfgXuE2ItmsIj+xF1SICempmq2TxMST4Lnm1T
ZBWzyGgOAbhpk8rgvUBvR0N/5KUl+IgpVCgRMU6loq5xdUlHhFCdVnRdR0p0
LdWumQguYvtKcbHrOa9yuie1EpqBjt9qtBrunEdE0kbSH0gmXNLdPiRiz5oe
kkrb9iqq0Wjqpul0SKtpQqvaXNDOIyB9bEYjZQP83oZOmSYivkp2wQjT5mCj
8jVNo2VfoNNRrYbessffBnKJeyrlbtsrzrpTIAZ1y047eynJOH4y+u6jnQa0
jZaNCq/CVQDawB2wHwn0YKAav4jqb9q00P1acnjrvEeoDASi7j5NQuyxy19W
7/8X5rP/+fWjA3dCWNX/0bHF7Hic+fqL1z469v7a5j187qfQvdj4fyM3/iDW
l8fixSqvAXD/8k7w17fSYt13/s7pkbU5lyawUpvU6C1dZ5j4l84WnQ5y2esC
Ns0VB+tLr0EXyUyISZwUsRmDT3KJr5q2ZwIHP7OGpm+mwaPhUiOFygj0rcyG
VWoTZj1M5LOm16zzn9wsnbG8ZJP71re+9e3wVg+fyN/5L59eOfEvJ8JXV2Pl
9T9/MJUcizEX/vrGxx98tLJ6Iz/5M8DL6si/FJfeYmrzd0M5mOywqvVv132v
30yzuO/Ura+HlyYsldgVFEQeAl+elOtbmkZXQzv1oBUqSCYuU8URPH2jMPsa
DJok7sfCx/nysMaG8fAJTQFn4FGZU48vouVjw+AcxK7n7gNiS7RfqS8rUqnq
/8TS3bMzNGLuOvmPwB+zPz9CI2nTSTiy22XCEAsDPXLYYHhtaC6hzke72SK2
D7abZ+VcUgulloAbg4bkpuMOtZx8k6b9zZY9uDs/RBmIraa9xfktyp3RVRL+
9va/0/J9HEgnt2V7N9Wr3WDk0TV2/LFHu9mm7SQdlx9i/7TV8b+PUC+B39Jq
dnyhuZuDYqcuNc323Wx3g92l33oGTS8nqmNvx7Ug9/sA76tvfXtm7MGq7/Tg
rc/uDv1vn8YiR/+n3PB3/zQcH4kw/8sfMv/ru6mF0b/94NQmIPbm/Zd+fDlw
O1Q9vlBIENJ4qv6jS4HXrqWnksz/81V4aPKygM3Y707L0WMcCBAoh1c1X7+z
sxqyURTO37twZvT226Ox758N00L1J1f8798ZJ9d+wxeH3h2Knl8rao1WiVWP
zqGAG6ehzFbJaHw4lQQEEcmglB/YqnC/vB0rc+7Zn65RXOH2zmcmLBVQ/Wip
NqGIOSb6OXxuWCpfvHtz+sZLNwLlelaoDJNbb6sqZnaItMDEYXt3brtaZBby
tKO9AFuKrFpgFZX2zUaD0Ak/v+VDtN7WozAuhCrVxVytFj+vyCXFam5WuFvB
isYEmeTppinCz2tkBlXQJqW9gvPbqHBGnc1cavTOuoJp6bl1NOkgJJ3uSDnM
M8r11XVDKm7vhhOHE8TZtZ3VJcNOrm8fxDI4s+MUcKdkLiYSS+3IJypmKmTs
qC9aPVfEAvQngLaqIF4rioaZoq4SfHXUM+z5dA3FFvZD7Fan5qfCBFu76ZCN
hgbt/Lab17e+/f9owWxxbmtj3Bf4dKxWnfjFY12Rgfon94hUeOjUXMHRFfl6
pbRZZqdSFCboUVw4vVy64uiKzFYCsRWVSzjumfPKIF2RuiwbjWtbO/lEeVpb
9C/NhzcHw7WvFiqSyp5ZKT3Yioi5GyoduBcA3PPWFRmO4SjXWyxr1CbA5pWN
2l5dEcuUFGpz57Nc0aitbbTAETU0UraXp5HqJu3biK+fXy8xAqkyIbEwCG58
u97Hth1C3+6hK0IrBhLDkYqJahkw+cJG0TD4HV0Rlk2THFdbNHQacBJauFFm
Tbks43PgxsPPObE+kyFxUXeFJXdbLsDcodkbZ6AfHGlKQbMko0tXZC2bc1IG
HF2RECYs5HZyHFzSHE1L6RQQg9ukKzVNSJu7pVhMk9fVup2+zRo6iwowUZvg
hJs2tRh6Dy3NmILKhj2DtE/X9uqKtLp0RVqdsGzI5daulhFMgBrdsVyYLDRt
PLeU2k7stLWTcb/3vEhXhDl4fXMzT5lKzRDzGrnesperdnRFmrplorK8PXVF
SsvwXM2l2Qgu0GwVhukoJkkSaZk8jIl2sNeymtZjXRG+K4NmrdBLVwQlGMJJ
9+bWHaAr0jAsuyRB50bn7AafgJks0hWxmW+GPeG09vgVu7oilCbkVU3Q+YSp
VBvNhiM0YfN0SpYhAA7A1BaeH9zWG4EucjR2DtQVkQyL2asrgkRBPNbyVLPp
iDYgXZHuqnCmlNfZENJekBW4LmcxDvwcE01LW/Bhnzb8Z82tK6JiT1dXpG99
++e3b662KlfHLOVpqa2u85UxLnu9vvIrgALYMpJAFDUYPWU+E8H3UVvdqaX+
j5nkVmh0t5b6sswnFBgCdGb/Wuqv3dxPbRXms/G6e9xHtdQXUC31pQJdrax3
7kLBPY0RybXOIbjNK2BjxyUmKAsluTK23VZbJZZcx3ck9V69vFZPX6sRKSZ2
TKiMqrqybrNKLI3kCnckLl3iVBg7ZD49Y1M4Irtqq28epLZaYJRAeY92Xw8+
NibqtO3LwcTQSYdvm5C7Tgf/LpkNX6kq0iEYJ3SrScqGqFucZhJeEm1PbHu0
+yY92Z5969szbFbDbHgVkD3QAIF0E/l1a6lonUcw0mjZzAndY1JTp0uJ7Pre
7S4bGv5iIx2bD/k/v3O7SiPHNV1AczpBlctkBadymi7v/ZXv5JHPz3wVik/d
v/v+mv/+5OZkKJ9d3xj0p0M4R8oqp4k5cLDtWuo7gH97eabzCJMTJzyzXT4b
uAH/qppIMe5sa4apbAUeWA29QmTiNke6baalqiqxlUs1mo89zLaPfXNxOl4p
FuulpTgSAJEVBloVKbnzEx0gvfvgs4ebi8lK6tr8FPSMqDDlKkqQoUVxPLiV
x0sMX5MUOoVjTsFciqlUcdSYmalTgrQfH5sXSYzMoVK8htjBx7bgedj7ZVGm
FQ1NJDVD2cx0pYuO+NZOjQ0pGpOrxbN4Fb5gWrook5LKiAolyB4FiZ7YNOPx
ZBZj6c1MXNKeJPmrb337H9esPTKqhzRn8gsfBsO1wm7Eo1fOo8EnZTuNen9L
zfz6QQy/tom9cC7gVDRwPDpaMRL4froirxwb5fLXscnvMclT91dnJpIkG/58
KZkqcqqkKSobdfGx/zrR5VTvryvSI+cxzcRPIj42G/KXuqYPKOdRwYZj3lnq
74zFlvP1WLV43d+hK5JzI5uD2Mmpf/9yIRoqppGuiJ2lLtq5jRUeKUGFkK4I
UoJaLzFOwVxDSGu22uHBuiJKVebSh+djt3VFhrt1RY4tZn9+y6coVRwPwExq
J+fRUYKSyt9e1bA0JT3sZ6n37fkzq/nkiO2wiG8Fd3RFNCRDZ+pedR4NPiFX
Rg88Zmb2N5Np8voW9sL5XcTGUCHauqRHqrhE98xSB8SWpRI2+X02fX5oawsQ
m4seX06lU5SMKqHXBRdiv9udQUOuvnkQYu/V7kNKUEg9mNr0l/Zo9xnKWonx
DOm/OxYLY2wCK90Jo3UoHRXHNGb2SNE65Jz09C+/WoyFS9l3RuP3ohgnEpK9
qFTl1a93EDsNwOivsBsl1O1Iu28nS/3NgxC7InOpwyO2otJISbjRehDtimOf
Wsn/6m5QkrG1IrVRxHfqPCLErtiI/W3pigBiD/WVoPr2/Nk38bF128e+F6kV
2afjYxMLr1C1laubHYhdQaW1EGLXcInx74PYfOE2+Nj17OCtQA0hduTocjKV
ZVCJlhyjuH3s8S7E/uUt75zHF5ycR4PV+IRr12PtPnJdJDe6dgFim6pILHlW
DfvDcCRV59N4+YHtrDqVeV0Sptu7PnZ65vVTS/FoOb/sG04VgoDY4Ghv2wuy
p1fzgXLV1u4rLebJCfsIto9tZ6kf7GPXJC7zn0FsytZ+b8Ht3rbvvvPNCxvF
PwxHRRmDS1jJY7vafQixZan47Wn3pUjpbqTGKDsrj/svs/atb8+MWc1GY9/k
uF7WbLV0C3k4U/FcjUOxa5trbum6B6geUrvPRuzlKx2Izds5vLSspvDaPkpQ
gNjV7AggNpa+c2WrYiP2F4DYGVpmNStNyS7E/ku3j/3Lm/shtqHzPOtGP0Bs
PnUBrlihNhzN6se7LEk1NYFY9ETsP41E0ySfJ/KzSbS0aiO2PtEDsZfH3725
5o9WSiu+hwixJSqEoR4AH/v0ioPYKUDs+Vx9fA9i74+WikwwTAFOondWNOiN
2KpKtRzEjnYh9l1/7LOJZVklx1LEaqGN2JUdxJbLTzHncR/E9lyG6Fvfnj17
ClyRyli7Mm87uO2yQ3JFiEWkBHVlo9aOYzu6IpbOyEIOqYP2RuyhKIZNfj8V
ufHxDNIV4eInnKgIrSBpiP11RV67sR9iU7IR2lMjBsWxE6dQHJsJCt0Bn93K
vLOeiP2XsViJlSQ64HBFNKUKiD29JyriJAL84soanbsdJcStwL10wcfr1nIB
pfeWOfXkUi4IiC1kFbk8nsCG48hj70Ts1r63FaZFIQwFiw5T57GzooETFWkj
tsMVsZqth3F8HUVFbF0RrY5SD6QijEdPUVfEFcfuR0X69hwaTOGftDKvoaqE
XZn3YacSlKc4z2GVoBZ+ThQnLq5Vv7+r3ceX7m/biC3xeZGJNbzkCACxb17+
26XN0rU7R2PB63+fTE4kyOm1yYV0JUlKlGKuFhm4FlXnH9eg6VZb/cX1xD5K
UJIqVkm3v2oKmR3EpjadYeXxrmZLtZp8ZazV9MCT0dXhOpWWaL9TS12TkBLU
XJZyxaYcxH7lIqqlHq+WMoGvM/lN6NtRm+5YAsRezsVqGKCiojIjcTxSQFdk
8EnVDnQDYpuGB6+mbagyrz2QOSWAnY37ILauYLvafQg224jNZ69Q/r9Aa2G7
r0xICmlaBkCrrPGyXFJ14Wkidrd236St3WfZNUafTM2sb337H87sxX3vV9uV
3eky8AxlGdWGFkv3TCc/1C7GWpc8khp8Zf7q5sEFpIj5l/D88PnV6vfO7Gr3
le5to8RSVuTzPBVqeAXJAbHrQ/8HIi2cXw/5r74zmgDEPjJZmM3QgNikYjh4
2InYfxzuUk999ep+iN3QKY0NuXYhxE6eRohNrvDFwa5dzZYCiF0a8kRsNn5C
wBckyifZOK+J+WZDXczTrkisaiP2z8+vVaJnk8UgFfx7Nr8OAOUo/oGH/NVK
PkXgqlJTDeNhDBdxVF6tQ7vv1/tr92UoeaPMWq3WYeLYJvjMUt7R7luy+d6P
ETtzkfK9LZkN2B6s1nkF5gFNTSNkw0I1aFDQ7VvR7oMxa6nAiLrlON6aVx2N
vvXt2TPVRBJwnrt0Q9hH/81oNDCONi35gT9aotGUWdWZRsOQZXzvl1kqXUhP
7d3usvT0axPhUDo+vDj6dh0Pwtln42jJjxDlULkkMeFeUZEPT59NRAZWHr6J
xc+GA9cqFX9k4+JcIstwJUFVcDwC6KcbjxE7HBroPMLG1IeaPaNwhUOXJ/4K
/zY0yins0mkmn2ISZwGQZHxhNrzZtQtgXKXm4jGrI0PTSb2ED5+Nz6/nC2mC
GAogziHG8YZljScJN2LrDADp5P23z8/NB7Ph4+PzI+E8K1GFAirvLkv1xeBM
0Iljy1i5tDyXRAIUKby+VUD0DGrtLUXaj6ch8mWinmjsIrZz7T19bCSwgMEA
Dgg8ZEdFGk1oNeJCX1nefO/euKTSS3l6tUjJKm2asirlZQWTdVmVa02k4vd0
knlV7fEMK0VK96IYo5iaZRhIh7Cf/Ni358IUs9ErlVjX6VbvxHm90SyzHLjo
Z9eKybqt1qviMMHXZI8FL52NSIW7BzYmNvn6bX+azVzF5/67WF+Gs9+1mQll
Tl3JVRBim+56i9tO1bAvRtnUGVTnMXmaSXwp4Mt08OO5eEIWMpK2I7NgdCA2
lz7feQRy6TXNrhvvqh1WX3plez/EPo9yPPG5u/6uGIvNx67dC5c6+dgo+mSf
/fW7wal0PYwLZ9YKAI8lVoX+H47jLsQGNxWAND72s48mfL5M+D+GYjcDNUbA
hNrkNlIGwMKRB75SVWJjilQUahMOhSNQ5WbtkDi1/ntF2K8GjSHmRCrYidh6
ozdiyxVFroPTD4g9EEJzpbbnfGQm9dPrPknGYJoAbjYMVUhyQUjLUkE2TVXM
NXsc8wlMVR/nBCXq4q1glZINaDbcuz5XpG/PiZk6vGLeqhoHREUaisynUVQk
f9O0C1RpFtJ5Tnmpcm2VhcsbBxeQIuZfLKfunVgofed0yImKcPlb2zZ5mCM2
eCriGcdGWeoDP/tyKfed0+F3RmMTq/dUYunIZCGfW5D5BMlV5rKkZcmSJrYJ
0mziq84jvHI1oaoeJXK+ewYFQzBBWy24zxvH5eOzSTjs/Wgtm+gajKBPZLPJ
Fu52ql60s9SZyBGRXJeYIF8eAtBT+UTTkoXKiNYtLUIpBlz+yxfWy/Fr4cwW
5f8Ll7vJSPzlLTQgZmn5wty8SIdDmFDhtRuBCpe9uo1GxpBKIE4OufgrV1TE
MLhOzZAYIS7kacTusxzdSgTdSE7fEPeyPYusWqYJW82sxhfRxbYRWygM0JEj
qqFz+ZsCNlfjaE4zAU4LrMLrjXhdOmRUxBHe8dwFneyIFIkdAgg6n+QKA6jY
hIaKS8Jfr5/3rW/Pkpk6bXk5rtu7Kli9fgjutCKW4HXHssOKgCbgSPnHbBQY
jyz1WJUZCuzn8jkWmPpDOjV+fTXx03OrwaoIZ69m0fKcqVQRYtPeiH3iaHDm
+ptX10Lf/zp4bHptcf2mQiyenQ2W87MSF6P58nq+4kLsdPhK5xH+cnvBMxD6
vTPItcZFfX1PjZg4IZ2YTwGS3I9i2YQ7ji0bZjEz2lmLxLJVhbcRYn+CY36G
ipTzk5algDvatBShOu5CbEZRoPffuTZcjV0Mpreiq5/j2XusxNwPojBRnpEv
Lq4yVDxRF6B5g+FaMYUC/gKdYLDdOLbaFUEyTbFzxpSlhM1SvdFsataO9i8g
HlyOZoh7ywRUeLXGonqUqkpSJRTdaqKoCFrsK6aHI5snFcOoZIdEYhHnaUGz
cjQPPxF0HUaW9jf3N2ib2eM5hFY1bM0xqaPugyrkqdK4pXO6zsC9g79eP+9b
354lA/+nU2Xx8NauzAsz+jLXWZnXA1QNISNjM3u3u+zFq+GxeInL3z5995zD
7hu2K3dbWl2kNlGWeo+oCMpSz1x68dw6HT1Kh48ItTk6+AlfHpFoH+K/1ZcB
sdUOJaj3JroyYurzL3u254cXA9sIPI0Y4T5vsi6dXS3ChwcxLBu93rkLrTxq
9Pn1jO4VbmLjJ0fitVitdMOpGmZnqYv1ZRdiawoGKIrP/JiJfLqe9P/qTmQx
GlTkMjiW22gQ0a75ywkcF1RZsZorBebSJvK9oZ2rRdT/9NY7+1fmtQxWFjI2
E+/gyrysaoo68s+1RivRLYp1fCn7ym2/YDSGwlk0cdhZeazDbEtRsKer3dcZ
+qBkI0VJT/f4fevbP7+hyryNJ6zMa9hsq2j24Mq8FRLzpdx0i73279e3gpmt
9ejaH2+MRHHkY4czKJ3QUgkUSaB8+/Cx2fT5n51dpyOf0sEPheosHfiYL94T
yTWZT8qoKl+Xj/3RdJd2U33+556x1n89jxBb1mSMccdM0pR8cT0H+DYYKmVc
iN3QFQX/eiXlidhDS8P3I5UqEfclkTOsiblmAyVIuhg7du5J8/rdL2AAWo1v
vnY7vBgNKDIMZze3d+tJhSs1XOABIseSxOlVlI+D09V8LbNtrzwavZXh0RdE
IU/k24iNynZYCiC2vXjhXomWNUnW1Zadpb5hl313qnTAh4XA9K3JK9CGAX8a
EJuWWNlsCIoACC9LZUYxn2Zl3o6VXOgBaImnUGTf+vYM2zepzKuriBYilYc6
+djsHinp7UPzsd+8sVIvjF7ZqP3woj+ECYjdV0QVNCwVF+srAL8Nw5uPjRA7
dcZG7CNU4D2+MkMHjnD5WzBPl7mYjM8BHsI03dh10j6bT3ceoT73kje776yT
pc7rgjvnMUfLVzZTqord9GfTkW7ENgVFKp9YTHoi9u8eRAZCJYnaFIsojqHy
8aYlO9y8TlOlAoDiz8+v0MEPlqNrr97aRezctW17KfaLxexWsZKjGFoxbgYr
x+zyUjqfUCk0xpHLb+yfQZOh5PVCycl2ceT3AbrhfxWltnfOZeq0ovGOrohT
S/0xuy99jtr6A6eZVzeTMAnCeUbQLVI2wC2XxEKF154mH7ujP/u11Pv2fBqr
aOKewrKOAfLsk1+smlamXod3/P5WrEgh11fVaHg9ZaGw98sMmSykxg5szE8u
BO5urKaD15Yevknifr3RuLmBMLPGCZvZ+FY2QUke1PFzX6x896iPTX09cff3
A/P36dAHKCoS+DiWC4jUFsz9EWI3G7LGWbsldeLBrjh2L8RefPg7+JeSlHDV
rVwqcoVM+Kpp8g9jtWzsZucu00CIfXwh0YkwbXZfMDgALrHIJPn8gNFsJYm6
YpijkbSzcNbclXlR5RJ0/srDN+nwP5YiK6/cDF3dyNI8WmEEdOWYxOTa0FKm
wFARUSjdDpY/mUNjULiCL6RQ/39+b17Qum6r1V3MQuBLeG0NWsVramt35RF6
Sbf0vTfdUGqKgnRFBL1x0Q6/tBGbS35Nrv+Wk8jji+nlTFYQCrouilwWXHiJ
i/Jc9rArjz1qYTjnchbB1Q6RsTAmnN8o1iXd6Tfd4Hr9vG99e5YM3CHOyyve
PojdBxPSUBUt93y9XHJizqqCgbuo7hEmRYeiA2Lu5t7tLnvhbPjMoo+OHMUm
vgNup2pZX9iuIzhUM4nsbDJbE9xV7bZtrsi/fB4FxE4M/+jE5Awd+lCozdPB
T7ZyGYkJKEIWENvOUmfb3iMT+6LzCL0QG5/6/rbNFVkpuDN3TD7JRI+D6z6a
wHPxW127EGKXXIjdZvdx6fPTaVJks1z+Npw0UOMlw7q8VXbi2G1+nWZHRbDJ
79HhI4uRZUDsr1dKdbbqILZE+9Y2rsyncyK1IfMpQOwjsyjOs1yg79t86Tdu
ZlwVDcxu5o8hpAU09VDYHbKIg9gtT4EOQ6koCmL3cZr11QoKv3Qg9mly/U1O
qH06lx6OFVBs3OAUNgJwDS63wkYPj9hGD8hFhJYGqnanKo/pRv4q9+VSDm6N
02+qRvb6ed/69iyZZUoN60lWHtsyfXJt0lIQRxe9Vj1WHoM1/lbw4KjIb29t
iqSfK41/fe+8w/GWGKT2bKl1kVwX68u9ch5fRlGRr188uwFQTAXf56tOVOS2
SCzJfELGURxbUIU2QZpLn+s8Qn3+59teoPGvF5CHD47cVsUdP0/UpZMLCTjs
vWgtE77cuQutPKrUhfWM7lXj7O2R6MNY9bE+tlxuNjRUGLQj7AzNUOQaoOgr
F5fBx16Jb702EFmMBlRD4fIDdodgifhItIZxiiSbzdkcdWGjCNujhLBirzz+
9k6K5vZLMsVELUXggNiH0RWBYb3Ok07OYwRHi7BtxEappvbK4/0QjI9+TgZQ
b2oapaA8Ikwxn2acuXPlkZD0CC6qZn/lsW/Pl5m9laA668vvNQBne9HqkdRZ
NaxpSaoHLTZQ5Z306v3tH4NjHL6Wz8x/OnAjTiBdEUcWz155XCPxDV3zODgg
9rtfXclFr794DhD7aNH/KVZeSW9+TRcecKRvZ+WxoYoIsXde8FTkRucRALGd
i3V5mI4+Ni0r0Zp7FS9PstdXNhBiR2pbgTuduxzEPr/WxRVpF6P/YmoNEDtd
yw6HEq1WU5WKgNgUvuUgtvM1o2HJMtFG7NVdxFZ0hNjwBVmqrYWmw9UaI4uy
2ZhI1c/aNaYzdSpQQo7okfvLDO+RfNq2Cq9Ga7U2YiMnu4VUHD3zExlZpQTC
QexNe/BqI/aV1eA792cE3RoIZCkywkgsoLSkMnaWelUyGofU7nMasP93OudB
MNvaLHMw0Wu1LPuvvwTZt+fCTIO1ehQvPiiDRpOFPMqgKQw4NRk1uxJrWyu7
03xl/srGIXRFZn9aTt09uVj+7tc7uiJcFgWcwaUUicWVXMmzbqCjK3J8MfvS
+XU6+tm9xaGJJPnxZKFYjeGSIYs5BZzzbu0+l65Ifd47KuJk0PTMeYyfAMQe
CFU/nutax3QQ+9RyF1fkcQZN9OhwrCZSm1zuqmqIEotWHtfLbGdUxDBYVkXh
5ZcvrjCRT9aSvl8ixA5KmgwTB8C2BFb6YCq5li9VWI7XrEtbxZ2VRzai1lHJ
SHLxl4rasyb1ts0DnE8X0MqjLWDSzqDxjGCYGqlIBaT9ZbVu2zmPj1ceU2fJ
zbc4zTy1kl8tYBhHQ3vKvMZqpsSnwTn/5hk0beuMMsUJEXwASjacDJq+rkjf
nhMzDa7XC3UwYkslhNjFQVNCDh5KFraaTvVzlyHEPqQSVGH83Er1u7tKUI6Q
qcMVWc2V6j0Q++blvwFiXxv4jI4evbs4PBKr/GM8s5LOpShZlAiF2kCIre2D
2C97Ivb3HK6IJ2ILGS59ASYa4GN/PLsXsekzq+lOxG7uLvwx8S9H47UaEfcn
lq2GoQiZZkPNYxkHsR3WHLRTUnmA0fMDX06s3NlIBd4YjCzFgrJCccVB2J4l
qc8XMsFKlRAEUW9AG75eRbdA52Iqubptc0UUL4GXtqVIaTVvc0UMyfGxHXaf
ZXohtinrOoe0+6yWUy6nze5bDs4MziB237WtXA7LUiJi3DESJ+qWJBYBtw/J
7oPjte9OL+tk9xVYBVriaPfBA9zX7uvbc2JPW7uviYseoHpY7b7FV6na0tUN
rK3d5xTJcvjYa/lyL8R+9dgoWoea+A4d++Lu4tiDUObD0cTtYG2rwvGKqNAB
G7EfrzzuQexX99Pu80RsMS/mb2+jDBrcA7FRBk3WO4MmcWo8iSWx0mAYhS80
GamtiuSaO4PGpknHx178cNy3lQm9eS+6FA8pUtkRMyxz6unVQgLHaUmSjeZ0
hry8Zaed8knNUVtd+c3+NWjyjOIvVd0ZNJY3YrdLy0EvhbGuZCIYKX59PyQY
jYeRnMRGBCeDRiUUsyErmGQ8Tfbdnji2oD7VOHnf+vbPb2bDavSQVts/jt1o
NiWbGDYRiVVZm92nMw2Y4WseSS4snSvmDq5B897A2HQsnk2MfHTzVgxHvt9Y
FMGOpbMynyHIpKZ5V+YFxL68VXr/2gCTOPFwfXoqhcW2riSrNZLHZBlT+RQK
DncoQf15pBuxl19vel3p0vhf0JXqtMZFXbtKNPPAj4qhrxYZf3SicxfSx9aY
XGGl6VWknokfXynSDF+tlBFxmldkq9ngJbbZLc3q0KTfuz4YDVwNFTN/fBhb
zGKKoQo2c7vCq4OBlADTB41TDRNncacmQq5OhcpoZDz2YI6V94tFSBJB1iMo
ZcYyHq88Nr3j2KrZdFZRAbFppaud2cy0f+uSZDY2y3VNwXTweZstQGzVQjmP
qldBoie2TsSGEYFSjD6jr2/Pm1lIY/NJHntwuiQ74+y6v5y1K/Mi7b6edR7j
sl2xcX/7tyvhwWCWzVw/deeswxi86kOuo2VwsliSmGivigaA2DcClZfOrzOJ
kyMbs7MZkosew6maolQUuazZ3qZpCI9r0Ix2qe2Rq7/xbA+xiDgknrXUU6R0
br24bZfXqWbude5yELtXDRom9sVGmZOlmoyjIYxRTPg+p7q/6Wj3vXJxBa4o
Ui68PRJfBLfYaoq2/HWVV4fDCVOrGzqrGgZg47JNEYniglOkBnFFlP38W1Op
SrQfIfYhuCLyrsAjILbcTc8Qy0NM/BhsjOCMrjOON+4g9lMPL3cittFowTCx
VwKlb317to1WdKEnH5vZl49tRWqEaYoXVnMpW2tCVQnEceDcRWzBFCrEZO7s
3e6yH51ZPzG9jAU+P3HrdLBU0izrb2MoHKFLZbK2SmEbpuqRea2ceSF/639/
ZyTw6tn51dWzfxwKjIbTH49G0onRtSJFyvpovAqjkqCbba7I2w8CnUd4/WoQ
EAYu1kVNzI7+AP4tsfJkyp2lnsTFr2ZiqoLThaFa8JPOXUajKct4PX19j3Yf
ApzK2p+p4kigypxfiaiGuFKoQ/+ztVmniCGiPjRRcEnkUo9azX8/P5f0n9qI
r5bX342nV+IEf3YVJaEbUhmLfMnhy8EKDhsvbWTx+NewfTVPPYwgH7s8/1tB
7pqPmM1mZ4xLE/IcGYJzFVm5jXu61eQVfm/OY4Lg03gVafeZFlVAVYGadjvh
w2cz8ZevrclSCU+cZ7EFgiNF3RJJH4yZLBn0leswjntGWlxmy9R4U0qQXhZy
BgwYnNobVT5N5e9KfFoFT17BVZXs9fO+9e1Zsn1WHg+r3ZcbVsQd7T7VbORp
T+0+eiiwX1jVscDYG4nY/QuL8TevziRxFs5eS6Kk7Conr+dyG7kMKXosMJ04
GvyvnweY+Im5u69fnh2lwx8LtXnKf2Q+EkDlFMWcTCyiYjEq3tjNecwEznQe
Aa082kxFF7vve2cRV8RQSYHsQngwic3lIzfB67sbrn08He7cBQAlqOKtrYTR
eDzeQQOcBbi/PkDsPoYMVLLjuilLTKBpyWsFzKGCQwsBoExTKLH/L3vv+eTG
da4P/g/7N2zVftzvW7v7dWurduvu/dV19k32tSz5yva1JctXtmxLspVJZZIi
KYrkMGdyyOHknDGDQc45o3M6nRsze043BtMAGj3DIalg9VMq1ghoHHQ3gOe8
5z3P+7zIQ2/u3gsnp2ZX4xu/uhlejAbhtVhOUGWK+2QuslEoC3QMcDmyMvfR
PGJyjoiSVbTz+ML1FE53ySl7vPtyBLtZQFoRUSh31Hfof2W2P3CVLX/s1rYo
4vfNhpJ73n2xq5HltxlJO7WS9RUbvEjBxyN1iuNKGZwUmJRlu93/qfXAzbvP
bEYJv4v25Vsa54ejtQYvy6Y5tqypnnefh28DtN2y6EdFJygajtSL1L7efUnB
tOJ3x7NXwjOpMp272Vz5tcohxaDlRKcpDAzduebqoAoa5CuSPvuzM+tk4jMi
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
oEuMGnrNSQL4KJcEqVRfZISpm5UyyxUF6cf2Y1cqUqme4Hl+Hnr15ZJIsPiz
2vMcj3cZu4ufFwQ6XlISltkGOxnYRa15HJ6jUlOtYMng05/xhFBAb465vZs4
SOLJIxkN6BXx3GjdU6JCVHjo5BNl157HY9MMR8zMO6uMzSRhOnWJQ+wXyMwW
m91u+sp2AOtfnZPoyB1DBFjIrNSmqa882C+aPsP8PQXjB+N67Zsj1nzG/Nte
SzaumXNndwyDiPvKpzP63wwdVMpC0fqVdu3bU7MO1Z4HRnsYYYFNvuU0L3iy
jFhCYzBWpOYVkWUa2KWt0iI14ERkzJaqf/RcA10E/dgNQdqtoGKTkmKEM2TQ
n4lfmJ5nkjCaXSiVOS73YC+G+e6IpH/LOKo3PMztvrVoq8YKgscgjuQzVPPD
AKxZ0DlqrAgH03BKYO4gNgQBqs5tWPhS/JFF3qAWboPdXth771AprAZmRp3W
WToBNK/rFeni54UsVmQFSI9gUlnbKJWEcrn54c8jCZptLzeURJ5QzbYRLN9R
s6iApPet66lcmKCr/gqaY+b1G617wlybQN/JJ7o92rNm1TNM2rfc756DEXE8
m1HEPLii5awr5rOGPE1f2QpgvcszEhXed2rkksTybVbNhicvj63P6O3GweXx
DdPKjKbPlwyOz9/wxV07/sCd9a15w+rc9sjk6j1gCo5oZgYXBpd144ksLEnA
i0wBS2EUsuvU+2N2MDfZce7JJajLwStSHsBW5ES63DktFKWKzlDdK7KgXwNd
VCqX7BHvCV2x49zPYnBEQMhiDk2OrPTseaEzQShVQBvMPuO8cSNVzN7c2L66
vHprqt/sqa7JwigUnFQlyhsLQFRgWDunPiSQsR9XaJ5UHyQVipxXheExvnMw
598H0Dng+ax9vDc/eKiYASkMFzrMATuBFf7tFKq76OJk+Is0rkTMsmzdcmsr
IcLjbrmDboM79wzx2Gzn2jES4Sf9DznEKh01psiIZ1fbGPDqnief6IV77ita
H0OFufXPmlYeC+avNgLFGWezR33Tj/UuTgMDnggPAtO3bVMj6699OOMfMmXf
Hffs2+aKltOmWCatfdscz9jC9o/mPd+uB8KWq4X9U7xcPjXjujSzjrou1XIe
GdybxzNGxzaw8IFR2rsfFBTvuroWAFgR7HOC0kuRZumG9PxqzmOpsug5KcAS
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
nzxyvfjY8aO7+z986P1lnwtcBCx0t2R779qsbm/udYIhacwZdly/uxMfWR66
tzxtW3mn5L+Z3vw1Erhb8l3PmF7P7n3w0bgxtPxCvXk44cxenpwaXHxsCifB
Xeao6G8n7Fhydmb2/OxBicV9RfeFwwYAzkOP2mIeGFz91kBcLY+Noad0IV8M
5L/Ud6H4y5UIxsqEIL837/xiPbzkL7YnagNNd5OLHltTMUCXG4cL/iyJWMDR
4jGYcBKuMLVarOC5ktv7aNe99WhhKG18Jbn8/aL76yM130NiCyXPlVp++6op
5NG/eaR6/8A/ni9RmLsuk6KIMrUgYDupcvogk+dhyLijBFWnMA9XCz19Ft9k
iMIztPuax/pWlLf+A3rzeNyfdMZ7rtiJn4vHmx2DOQYOlcY8T3oaVcO0p+fi
q//cA1jf+3nIysDEI2KPtJB9vc6DCanBmpYg3YnjyxKuGeaaGVtXKLntOCWT
I53N0sH7XAaGujrCIBCx7R9oiC0KVV5ufuee/+KyeWp3YzuJdVx/CC0OH0D4
uqciNu49pyG2WLG5zFeSOMegB4ftILjmxxaw/fvb+x+vtEoexIqdCj0EhA1Q
NbwnFZZLz5dW/i0/8b+xVF6A4hIFkYHgds9U2bPN7WcK4HgAvvnzuWlv8fpW
9geAT7IKEbkLGPJDWyZLCjeMxbX5L17pNyP6//HaeJjjUZZKjjjze17jj2/7
/+1G8I1Z3/cf+G6M9wP2i17/X/xRP88XMtG5i6umKcPcir/1yLw516JqKmJP
fj6xmsGPhfUBg6LLlob6VKr62B8obBZzn8V9XzfaTo9ODxrAlP64Fi4nZqN7
X/xmItxJ0dEkI8B/qRr3yVJ0ygll+oDl0r+f/VwfBsf59chjJj4GyDxOl16b
8vzssd8Zc80v33k001c2/qy0/H/9csCG6L8HFg6bZ2189eHq8rnf9hlQIodx
ytlFC+65gNrexjxn3h7d/mw9/L37/k9Wg2f04R8/9rww4vYY3v/ZwwOABmR6
emnu0+GlB5rNhfNK2flHnR+5pO7dlq29M++H+tiHDQ5zaoddS89pXXS5nr6W
nUHlFonQzc5L/OCPwELh2WzcfQ/MJb7UChaIQuWBrVuxRSeGFToBNk4jO44c
+cNHvkEbzDYEiJ0l+ddm3K9PBvd8Zp3+vmYffbTUmk5g4fxkOawPo1R84JVB
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
RIgQIUKECBEiRIgQIUKEL4v/BPVdDRE=
           "], {{0, 485}, {486, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
           True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{486, 485},
         PlotRange->{{0, 486}, {0, 485}}],
        TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
      Epilog->{},
      Frame->True,
      FrameLabel->{{
         FormBox["j", TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Left eigenvectors\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{{{532.5, 
           FormBox["1", TraditionalForm]}, {426.5, 
           FormBox["107", TraditionalForm]}, {319.5, 
           FormBox["214", TraditionalForm]}, {213.5, 
           FormBox["320", TraditionalForm]}, {106.5, 
           FormBox["427", TraditionalForm]}, {0.5, 
           FormBox["533", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {106.5, 
           FormBox["107", TraditionalForm]}, {213.5, 
           FormBox["214", TraditionalForm]}, {319.5, 
           FormBox["320", TraditionalForm]}, {426.5, 
           FormBox["427", TraditionalForm]}, {532.5, 
           FormBox["533", TraditionalForm]}}, None}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 10}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotRange->{{0., 533.}, {0., 533.}}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
H1jwB5b8gZf/gYv+wCV/4LI/8N7/j/8PyRegHQ==
          "]]}, {}}, {}, {}, {}, {}},
      
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["P", "i"], TraditionalForm], None}, {
         FormBox["i", TraditionalForm], 
         FormBox["\"Steady distribution\"", TraditionalForm]}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]],
      FrameTicks->{{Automatic, None}, {{{1, 
           FormBox["1", TraditionalForm]}, {107, 
           FormBox["107", TraditionalForm]}, {214, 
           FormBox["214", TraditionalForm]}, {320, 
           FormBox["320", TraditionalForm]}, {427, 
           FormBox["427", TraditionalForm]}, {533, 
           FormBox["533", TraditionalForm]}}, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{105, 10}, {65, 65}},
      ImageSize->350,
      LabelStyle->Directive[16, 
        GrayLevel[0]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 533.}, {0, 0.8255710362814953}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7665926776732197`*^9, {3.766592730291883*^9, 3.7665928026281977`*^9}, 
   3.766592908869586*^9, {3.766593146688128*^9, 3.7665931696083803`*^9}, 
   3.766593201024708*^9, {3.766593279697216*^9, 3.766593286316453*^9}, {
   3.7665933255891943`*^9, 3.7665933344100513`*^9}, {3.766593373458826*^9, 
   3.766593417054583*^9}, {3.766593450199089*^9, 3.766593481472865*^9}, {
   3.766593518581287*^9, 3.766593544977705*^9}, {3.766593577797769*^9, 
   3.766593661462215*^9}, 3.76659373084149*^9, {3.7665937894173098`*^9, 
   3.766593880959453*^9}, {3.76659391475397*^9, 3.766593935352561*^9}, 
   3.7665943238431168`*^9, 3.766594829335196*^9, {3.766594982216132*^9, 
   3.7665951154790916`*^9}, 3.7666171249598217`*^9, 3.766962704282177*^9, 
   3.766962758363286*^9, 3.76696301904031*^9, 3.766963245178836*^9, 
   3.7669637450967817`*^9, 3.7669638334577436`*^9, 3.766963939947422*^9, 
   3.766964122244027*^9, 3.766964262333359*^9, 3.766964500176237*^9, 
   3.766964589154567*^9, 3.766964626673627*^9, 3.7669648937376537`*^9, 
   3.7669651857185907`*^9, 3.7669652374416313`*^9, {3.766965273273817*^9, 
   3.7669652955209503`*^9}, 3.766965327655766*^9, 3.7669659413369417`*^9, 
   3.7669660858942204`*^9, 3.766966144951662*^9, 3.766968070521459*^9, 
   3.766968211770553*^9, 3.76696837524929*^9, 3.766968995257408*^9, 
   3.7669691066025953`*^9, 3.7669692844255466`*^9, 3.76696969129562*^9, 
   3.766969738061317*^9, {3.7669697829199543`*^9, 3.766969799471719*^9}, 
   3.76697007991459*^9, 3.766970119906492*^9, 3.766970291196192*^9, 
   3.767400038005122*^9, 3.767400134837347*^9, 3.767400673354253*^9, 
   3.767400703825027*^9, 3.767400825610959*^9, {3.767401020774876*^9, 
   3.767401024672752*^9}, 3.767439094781065*^9, 3.7674393012952433`*^9, 
   3.767441010006312*^9, 3.767441163015785*^9, 3.767441221667824*^9, 
   3.767441356817865*^9, 3.767441774732685*^9, 3.7674419996246567`*^9, 
   3.767442239523254*^9, 3.767442493462605*^9, 3.767442699093741*^9, 
   3.767443074706839*^9, 3.7674431825321293`*^9, 3.767443457314405*^9, 
   3.7674438886919737`*^9, 3.7674448153940907`*^9, 3.7674451576369553`*^9, {
   3.767446093605112*^9, 3.767446108013297*^9}, 3.767446139217856*^9, 
   3.7674463106578207`*^9, 3.767446562434202*^9, 3.767446695687478*^9, 
   3.767446729613167*^9, 3.767446830312436*^9, 3.767446912053132*^9, 
   3.7674469450724277`*^9, 3.767447548768427*^9, 3.767467225536407*^9, 
   3.767467264987977*^9, 3.767467369687258*^9, 3.767467427471538*^9, {
   3.7674849439031487`*^9, 3.7674849647625227`*^9}, 3.767485018449461*^9, 
   3.767528380338806*^9, 3.767528791604719*^9, 3.767529087495428*^9, 
   3.767529348782055*^9, {3.767529404549595*^9, 3.767529431288548*^9}, 
   3.7675298029742947`*^9, 3.76752985585063*^9, 3.767529935307028*^9, 
   3.76753006273741*^9, 3.7675301034414787`*^9, 3.76753021700037*^9, 
   3.7675302518481293`*^9, 3.76753030536066*^9, {3.767530337021196*^9, 
   3.767530353426257*^9}, 3.767530865453226*^9, 3.767531998109291*^9, 
   3.767532481629512*^9, 3.767704799754776*^9, {3.767704838621304*^9, 
   3.767704865881485*^9}, 3.7677905432523212`*^9, 3.7677906003696423`*^9, 
   3.7679723284433527`*^9, 3.7679723712516127`*^9, 3.7679725155115843`*^9, 
   3.767972604044351*^9, 3.767976451331441*^9, 3.767976706672289*^9, 
   3.767983123708935*^9, 3.767983236143556*^9, 3.767983562396905*^9, 
   3.767991787230165*^9, 3.768734157069068*^9, 3.7687364075322123`*^9, {
   3.7687365400923967`*^9, 3.7687365516937637`*^9}, 3.768736581838544*^9, 
   3.7687366344315367`*^9, 3.7687384210468407`*^9, 3.768738759532052*^9, 
   3.768738909249092*^9, 3.768738959254829*^9, 3.768738999113523*^9, {
   3.768739433878027*^9, 3.768739465954627*^9}, 3.768740184144821*^9, {
   3.7687403555125103`*^9, 3.768740373203958*^9}, 3.768740660622787*^9, 
   3.768745193521319*^9, 3.768747296737124*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e5c5d71b-2fd9-4be6-b430-71655c23ed0a"],

Cell[BoxData["\<\"plots/example.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7665926776732197`*^9, {3.766592730291883*^9, 3.7665928026281977`*^9}, 
   3.766592908869586*^9, {3.766593146688128*^9, 3.7665931696083803`*^9}, 
   3.766593201024708*^9, {3.766593279697216*^9, 3.766593286316453*^9}, {
   3.7665933255891943`*^9, 3.7665933344100513`*^9}, {3.766593373458826*^9, 
   3.766593417054583*^9}, {3.766593450199089*^9, 3.766593481472865*^9}, {
   3.766593518581287*^9, 3.766593544977705*^9}, {3.766593577797769*^9, 
   3.766593661462215*^9}, 3.76659373084149*^9, {3.7665937894173098`*^9, 
   3.766593880959453*^9}, {3.76659391475397*^9, 3.766593935352561*^9}, 
   3.7665943238431168`*^9, 3.766594829335196*^9, {3.766594982216132*^9, 
   3.7665951154790916`*^9}, 3.7666171249598217`*^9, 3.766962704282177*^9, 
   3.766962758363286*^9, 3.76696301904031*^9, 3.766963245178836*^9, 
   3.7669637450967817`*^9, 3.7669638334577436`*^9, 3.766963939947422*^9, 
   3.766964122244027*^9, 3.766964262333359*^9, 3.766964500176237*^9, 
   3.766964589154567*^9, 3.766964626673627*^9, 3.7669648937376537`*^9, 
   3.7669651857185907`*^9, 3.7669652374416313`*^9, {3.766965273273817*^9, 
   3.7669652955209503`*^9}, 3.766965327655766*^9, 3.7669659413369417`*^9, 
   3.7669660858942204`*^9, 3.766966144951662*^9, 3.766968070521459*^9, 
   3.766968211770553*^9, 3.76696837524929*^9, 3.766968995257408*^9, 
   3.7669691066025953`*^9, 3.7669692844255466`*^9, 3.76696969129562*^9, 
   3.766969738061317*^9, {3.7669697829199543`*^9, 3.766969799471719*^9}, 
   3.76697007991459*^9, 3.766970119906492*^9, 3.766970291196192*^9, 
   3.767400038005122*^9, 3.767400134837347*^9, 3.767400673354253*^9, 
   3.767400703825027*^9, 3.767400825610959*^9, {3.767401020774876*^9, 
   3.767401024672752*^9}, 3.767439094781065*^9, 3.7674393012952433`*^9, 
   3.767441010006312*^9, 3.767441163015785*^9, 3.767441221667824*^9, 
   3.767441356817865*^9, 3.767441774732685*^9, 3.7674419996246567`*^9, 
   3.767442239523254*^9, 3.767442493462605*^9, 3.767442699093741*^9, 
   3.767443074706839*^9, 3.7674431825321293`*^9, 3.767443457314405*^9, 
   3.7674438886919737`*^9, 3.7674448153940907`*^9, 3.7674451576369553`*^9, {
   3.767446093605112*^9, 3.767446108013297*^9}, 3.767446139217856*^9, 
   3.7674463106578207`*^9, 3.767446562434202*^9, 3.767446695687478*^9, 
   3.767446729613167*^9, 3.767446830312436*^9, 3.767446912053132*^9, 
   3.7674469450724277`*^9, 3.767447548768427*^9, 3.767467225536407*^9, 
   3.767467264987977*^9, 3.767467369687258*^9, 3.767467427471538*^9, {
   3.7674849439031487`*^9, 3.7674849647625227`*^9}, 3.767485018449461*^9, 
   3.767528380338806*^9, 3.767528791604719*^9, 3.767529087495428*^9, 
   3.767529348782055*^9, {3.767529404549595*^9, 3.767529431288548*^9}, 
   3.7675298029742947`*^9, 3.76752985585063*^9, 3.767529935307028*^9, 
   3.76753006273741*^9, 3.7675301034414787`*^9, 3.76753021700037*^9, 
   3.7675302518481293`*^9, 3.76753030536066*^9, {3.767530337021196*^9, 
   3.767530353426257*^9}, 3.767530865453226*^9, 3.767531998109291*^9, 
   3.767532481629512*^9, 3.767704799754776*^9, {3.767704838621304*^9, 
   3.767704865881485*^9}, 3.7677905432523212`*^9, 3.7677906003696423`*^9, 
   3.7679723284433527`*^9, 3.7679723712516127`*^9, 3.7679725155115843`*^9, 
   3.767972604044351*^9, 3.767976451331441*^9, 3.767976706672289*^9, 
   3.767983123708935*^9, 3.767983236143556*^9, 3.767983562396905*^9, 
   3.767991787230165*^9, 3.768734157069068*^9, 3.7687364075322123`*^9, {
   3.7687365400923967`*^9, 3.7687365516937637`*^9}, 3.768736581838544*^9, 
   3.7687366344315367`*^9, 3.7687384210468407`*^9, 3.768738759532052*^9, 
   3.768738909249092*^9, 3.768738959254829*^9, 3.768738999113523*^9, {
   3.768739433878027*^9, 3.768739465954627*^9}, 3.768740184144821*^9, {
   3.7687403555125103`*^9, 3.768740373203958*^9}, 3.768740660622787*^9, 
   3.768745193521319*^9, 3.768747297181457*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c3e70ca3-9baf-4647-884e-bb64a9b6c44f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "1"],
             DisplayForm], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"H\"\>", "2"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "1"], 
              SubscriptBox["\<\"H\"\>", "1"]}],
             DisplayForm], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "1"], 
              SubscriptBox["\<\"H\"\>", "2"]}],
             DisplayForm], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"O\"\>", "2"],
               DisplayForm], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"H\"\>", "2"],
               DisplayForm], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"O\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              TagBox[
               RowBox[{
                SubscriptBox["\<\"O\"\>", "1"], 
                SubscriptBox["\<\"H\"\>", "2"]}],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"O\"\>", "2"],
             DisplayForm]}], ",", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            RowBox[{"7", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"H\"\>", "2"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"O\"\>", "1"],
             DisplayForm], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "1"], 
              SubscriptBox["\<\"H\"\>", "2"]}],
             DisplayForm], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"O\"\>", "2"],
               DisplayForm], ")"}]}]}], ",", 
           TemplateBox[{"527"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "1"],
             DisplayForm], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "2"],
             DisplayForm], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "1"], 
              SubscriptBox["\<\"H\"\>", "1"]}],
             DisplayForm], "+", 
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               RowBox[{
                SubscriptBox["\<\"O\"\>", "1"], 
                SubscriptBox["\<\"H\"\>", "2"]}],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "2"], 
              SubscriptBox["\<\"H\"\>", "2"]}],
             DisplayForm]}], ",", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "1"],
             DisplayForm], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "2"],
             DisplayForm], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              TagBox[
               RowBox[{
                SubscriptBox["\<\"O\"\>", "1"], 
                SubscriptBox["\<\"H\"\>", "1"]}],
               DisplayForm], ")"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               RowBox[{
                SubscriptBox["\<\"O\"\>", "1"], 
                SubscriptBox["\<\"H\"\>", "2"]}],
               DisplayForm], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"5", " ", 
             RowBox[{"(", 
              TagBox[
               SubscriptBox["\<\"Ar\"\>", "1"],
               DisplayForm], ")"}]}], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "1"],
             DisplayForm], "+", 
            TagBox[
             SubscriptBox["\<\"H\"\>", "2"],
             DisplayForm], "+", 
            TagBox[
             SubscriptBox["\<\"O\"\>", "1"],
             DisplayForm], "+", 
            TagBox[
             RowBox[{
              SubscriptBox["\<\"O\"\>", "1"], 
              SubscriptBox["\<\"H\"\>", "1"]}],
             DisplayForm], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              TagBox[
               RowBox[{
                SubscriptBox["\<\"O\"\>", "1"], 
                SubscriptBox["\<\"H\"\>", "2"]}],
               DisplayForm], ")"}]}]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{61., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 26, 16676491536039329585, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 26, 16676491536039329585, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{46., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 26, 16676491536039329585, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{83., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16676491536039329585 === $SessionID, 
   Out[26], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7665926776732197`*^9, {3.766592730291883*^9, 3.7665928026281977`*^9}, 
   3.766592908869586*^9, {3.766593146688128*^9, 3.7665931696083803`*^9}, 
   3.766593201024708*^9, {3.766593279697216*^9, 3.766593286316453*^9}, {
   3.7665933255891943`*^9, 3.7665933344100513`*^9}, {3.766593373458826*^9, 
   3.766593417054583*^9}, {3.766593450199089*^9, 3.766593481472865*^9}, {
   3.766593518581287*^9, 3.766593544977705*^9}, {3.766593577797769*^9, 
   3.766593661462215*^9}, 3.76659373084149*^9, {3.7665937894173098`*^9, 
   3.766593880959453*^9}, {3.76659391475397*^9, 3.766593935352561*^9}, 
   3.7665943238431168`*^9, 3.766594829335196*^9, {3.766594982216132*^9, 
   3.7665951154790916`*^9}, 3.7666171249598217`*^9, 3.766962704282177*^9, 
   3.766962758363286*^9, 3.76696301904031*^9, 3.766963245178836*^9, 
   3.7669637450967817`*^9, 3.7669638334577436`*^9, 3.766963939947422*^9, 
   3.766964122244027*^9, 3.766964262333359*^9, 3.766964500176237*^9, 
   3.766964589154567*^9, 3.766964626673627*^9, 3.7669648937376537`*^9, 
   3.7669651857185907`*^9, 3.7669652374416313`*^9, {3.766965273273817*^9, 
   3.7669652955209503`*^9}, 3.766965327655766*^9, 3.7669659413369417`*^9, 
   3.7669660858942204`*^9, 3.766966144951662*^9, 3.766968070521459*^9, 
   3.766968211770553*^9, 3.76696837524929*^9, 3.766968995257408*^9, 
   3.7669691066025953`*^9, 3.7669692844255466`*^9, 3.76696969129562*^9, 
   3.766969738061317*^9, {3.7669697829199543`*^9, 3.766969799471719*^9}, 
   3.76697007991459*^9, 3.766970119906492*^9, 3.766970291196192*^9, 
   3.767400038005122*^9, 3.767400134837347*^9, 3.767400673354253*^9, 
   3.767400703825027*^9, 3.767400825610959*^9, {3.767401020774876*^9, 
   3.767401024672752*^9}, 3.767439094781065*^9, 3.7674393012952433`*^9, 
   3.767441010006312*^9, 3.767441163015785*^9, 3.767441221667824*^9, 
   3.767441356817865*^9, 3.767441774732685*^9, 3.7674419996246567`*^9, 
   3.767442239523254*^9, 3.767442493462605*^9, 3.767442699093741*^9, 
   3.767443074706839*^9, 3.7674431825321293`*^9, 3.767443457314405*^9, 
   3.7674438886919737`*^9, 3.7674448153940907`*^9, 3.7674451576369553`*^9, {
   3.767446093605112*^9, 3.767446108013297*^9}, 3.767446139217856*^9, 
   3.7674463106578207`*^9, 3.767446562434202*^9, 3.767446695687478*^9, 
   3.767446729613167*^9, 3.767446830312436*^9, 3.767446912053132*^9, 
   3.7674469450724277`*^9, 3.767447548768427*^9, 3.767467225536407*^9, 
   3.767467264987977*^9, 3.767467369687258*^9, 3.767467427471538*^9, {
   3.7674849439031487`*^9, 3.7674849647625227`*^9}, 3.767485018449461*^9, 
   3.767528380338806*^9, 3.767528791604719*^9, 3.767529087495428*^9, 
   3.767529348782055*^9, {3.767529404549595*^9, 3.767529431288548*^9}, 
   3.7675298029742947`*^9, 3.76752985585063*^9, 3.767529935307028*^9, 
   3.76753006273741*^9, 3.7675301034414787`*^9, 3.76753021700037*^9, 
   3.7675302518481293`*^9, 3.76753030536066*^9, {3.767530337021196*^9, 
   3.767530353426257*^9}, 3.767530865453226*^9, 3.767531998109291*^9, 
   3.767532481629512*^9, 3.767704799754776*^9, {3.767704838621304*^9, 
   3.767704865881485*^9}, 3.7677905432523212`*^9, 3.7677906003696423`*^9, 
   3.7679723284433527`*^9, 3.7679723712516127`*^9, 3.7679725155115843`*^9, 
   3.767972604044351*^9, 3.767976451331441*^9, 3.767976706672289*^9, 
   3.767983123708935*^9, 3.767983236143556*^9, 3.767983562396905*^9, 
   3.767991787230165*^9, 3.768734157069068*^9, 3.7687364075322123`*^9, {
   3.7687365400923967`*^9, 3.7687365516937637`*^9}, 3.768736581838544*^9, 
   3.7687366344315367`*^9, 3.7687384210468407`*^9, 3.768738759532052*^9, 
   3.768738909249092*^9, 3.768738959254829*^9, 3.768738999113523*^9, {
   3.768739433878027*^9, 3.768739465954627*^9}, 3.768740184144821*^9, {
   3.7687403555125103`*^9, 3.768740373203958*^9}, 3.768740660622787*^9, 
   3.768745193521319*^9, 3.768747297219603*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f2a45051-40f8-4e3b-901d-33a5bc5df5fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Runtimes", "Section",
 CellChangeTimes->{{3.766592582520748*^9, 
  3.7665926070101557`*^9}},ExpressionUUID->"be75ae60-b525-445a-a2f8-\
07a7bd6d9534"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dat", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimesout.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat2", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes2out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dat3", "=", 
  RowBox[{
  "Import", "[", "\"\<data/runtimes3out.dat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Runtime(s)\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Number of atoms\>\"", ",", "\"\<Dimension\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive calls\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.0"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat2", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", "0.5"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"dat3", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Number of atoms\>\"", ",", "\"\<Recursive levels\>\""}], 
             "}"}]}], ",", " ", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"PointSize", "[", "0.03", "]"}], "]"}]}]}], "]"}]}], 
        "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"PointLegend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Python\>\"", ",", "\"\<C++\>\"", ",", "\"\<Parallel C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}], ",", 
      "Right"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/runtimes.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.767467469483581*^9, 3.767467519058926*^9}, {
   3.767467556456477*^9, 3.7674675579975157`*^9}, {3.767530949583584*^9, 
   3.7675309707708282`*^9}, {3.767531004631811*^9, 3.767531101524459*^9}, {
   3.7675311405548067`*^9, 3.767531141762246*^9}, 3.76753130045408*^9, {
   3.767902448613002*^9, 3.767902458418908*^9}, {3.767904719279963*^9, 
   3.767904767322049*^9}, 3.7679050738828983`*^9, {3.7679176371929083`*^9, 
   3.7679176384770203`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.011509319999999934`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0813438649999999`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.5962182649999999`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "4.287848875`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "24.673300776`", ",", "22616", ",", "21"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "133.293162891`", ",", "50049", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "644.16902838`", ",", "102480", ",", "27"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631484823*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "9", ",", "19", ",", "0.0016663130081724375`", ",", "332", ",", "9"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "48", ",", "0.0026924300036625937`", ",", "1225", ",", "12"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15", ",", "89", ",", "0.01155992699204944`", ",", "3588", ",", "15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "177", ",", "0.02193124999757856`", ",", "9583", ",", "18"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "21", ",", "298", ",", "0.06308137100131717`", ",", "22616", ",", "21"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "24", ",", "516", ",", "0.1508594839979196`", ",", "50049", ",", "24"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "27", ",", "807", ",", "0.3248912150011165`", ",", "102480", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", "1277", ",", "0.7218115940049756`", ",", "200145", ",", "30"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "33", ",", "1888", ",", "1.3522880889941007`", ",", "370476", ",", "33"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "36", ",", "2803", ",", "2.493587140997988`", ",", "661388", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "39", ",", "3965", ",", "4.547302400009357`", ",", "1135106", ",", "39"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "42", ",", "5612", ",", "7.907720365998102`", ",", "1893255", ",", "42"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "45", ",", "7663", ",", "12.99118743200961`", ",", "3063616", ",", "45"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "48", ",", "10450", ",", "21.246270654010004`", ",", "4844184", ",", 
     "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "51", ",", "13862", ",", "32.91214892799326`", ",", "7477740", ",", 
     "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "54", ",", "18348", ",", "51.23924410699692`", ",", "11324874", ",", 
     "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "57", ",", "23760", ",", "78.78004793499713`", ",", "16818920", ",", 
     "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "30688", ",", "113.30796434900549`", ",", "24581466", ",", 
     "60"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631488085*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "19", ",", "0", ",", "83", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "48", ",", "0", ",", "245", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "89", ",", "0", ",", "598", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "177", ",", "1", ",", "1369", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "298", ",", "2", ",", "2827", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "516", ",", "1", ",", "5561", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "807", ",", "2", ",", "10248", ",", "9"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"30", ",", "1277", ",", "3", ",", "18195", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1888", ",", "4", ",", "30873", ",", "11"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "2803", ",", "3", ",", "50876", ",", "12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "3965", ",", "5", ",", "81079", ",", "13"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "5612", ",", "6", ",", "126217", ",", "14"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "7663", ",", "6", ",", "191476", ",", "15"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "10450", ",", "7", ",", "284952", ",", "16"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "13862", ",", "8", ",", "415430", ",", "17"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"54", ",", "18348", ",", "9", ",", "596046", ",", "18"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "23760", ",", "10", ",", "840946", ",", "19"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "30688", ",", "10", ",", "1170546", ",", "20"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"63", ",", "38940", ",", "12", ",", "1606694", ",", "21"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "49274", ",", "13", ",", "2180000", ",", "22"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"69", ",", "61446", ",", "14", ",", "2923048", ",", "23"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "76411", ",", "15", ",", "3880353", ",", "24"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "93864", ",", "17", ",", "5099087", ",", "25"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"78", ",", "114989", ",", "18", ",", "6642312", ",", "26"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81", ",", "139411", ",", "20", ",", "8576593", ",", "27"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "168576", ",", "21", ",", "10989255", ",", "28"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87", ",", "202029", ",", "23", ",", "13972160", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "241515", ",", "26", ",", "17643841", ",", "30"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "286488", ",", "28", ",", "22128615", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"96", ",", "339030", ",", "30", ",", "27584561", ",", "32"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "398493", ",", "32", ",", "34177030", ",", "33"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"102", ",", "467337", ",", "35", ",", "42113553", ",", "34"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", "544800", ",", "38", ",", "51610691", ",", "35"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "633763", ",", "41", ",", "62937086", ",", "36"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"111", ",", "733337", ",", "45", ",", "76372469", ",", "37"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114", ",", "846870", ",", "49", ",", "92260201", ",", "38"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "973333", ",", "54", ",", "110957124", ",", "39"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "1116588", ",", "59", ",", "132897080", ",", "40"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816314924383`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, -4.464598137055273}, {11.5, -2.509069863034937}, {
             14.5, -0.5171484625147089}, {17.5, 1.4557851794440688`}, {20.5, 
             3.205721718753769}, {23.5, 4.892550934728942}, {26.5, 
             6.467961158094638}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., -6.397141872829248}, {12., -5.917311146054348}, {
             15., -4.460210731324506}, {18., -3.819842718743159}, {
             21., -2.763329782796962}, {24., -1.8914064449660575`}, {
             27., -1.124264875758159}, {30., -0.3259911242743334}, {33., 
             0.30179803849721}, {36., 0.9137222926554756}, {39., 
             1.514534178021714}, {42., 2.067839543782565}, {45., 
             2.56427123774491}, {48., 3.056181381333915}, {51., 
             3.4938418579366193`}, {54., 3.9365057249095132`}, {57., 
             4.366659766009154}, {60., 4.730109459905931}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQYNRg4MyKDB1OG95a9/TnrP7CF8CzR5azR5Owdu
5rVVryZ/hPAPOEDlv0H4Dk5o8s4Oxr1vvzse+AmVd3VgUtD6xb36D1TeDZXv
4OEQHmW0rkjpP1Te06F4tbX9pkUMEHc5eEPNZ4TwD/g4iIVu3b0xmwkq74fK
P+DvUDvv8h6xh8wQ/oIAh8AeQ22WVhYIPyHQYfnu62KnZFghfIUgB3kPX0ux
VVD+gyCHqvpfB7NXsUH1Bzu0Tcy2qpZnh+oPcZj4uLja6TuUrxDqsHFd/hS9
aA6o/lCHD5sv/q0V5YTqD3M4K/Xh1RQBLqj+cAdlr2nXolZA+QoRDrOvcf9c
ZsoN1R/hkH1ix77LO6H8BZEORz/zB0cV8kD1RzmscDx89JgkL1R/tIPfmj7X
1K1Q/oNohyUnF5dxl/BB9cdAw5cfqj/WgUf4UHnBSyhfIc6hUvP4z1R/AQcA
c+GaRA==
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, -7.403909194843006}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Runtime(s)\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {-7.403909194843006, 6.467961158094638}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 2.9444389791664403`}, {11.5, 3.871201010907891}, {
             14.5, 4.48863636973214}, {17.5, 5.176149732573829}, {20.5, 
             5.697093486505405}, {23.5, 6.246106765481563}, {26.5, 
             6.693323668269949}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 2.9444389791664403`}, {12., 3.871201010907891}, {
             15., 4.48863636973214}, {18., 5.176149732573829}, {21., 
             5.697093486505405}, {24., 6.246106765481563}, {27., 
             6.693323668269949}, {30., 7.152268856032539}, {33., 
             7.543273346705446}, {36., 7.938445551164788}, {39., 
             8.285261134068948}, {42., 8.632662441222351}, {45., 
             8.944158830970403}, {48., 9.254357257392957}, {51., 
             9.53690656247793}, {54., 9.817275855717062}, {57., 
             10.075758773476581`}, {60., 10.331626977683165`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDjqbWdjM+tgdIHxNh9LdATYWP/igfH2Hb13r
xGO/CEL4DUYO1llFMxK2iED5pg7Zer/vXzopBuVbOLi7lmQy/5GA8q0dqngO
L/52VArKt3PYmv859s1sGQj/gIPDul7lm/46chC+g5NDXODde98PyEPlnR0O
egXv552kAJV3dXB4dSfkjbMiVN7NYWud18mMx1C+g4dDF6OPrHWTElTe06F4
896sp0LKUHlvh99WCr8LF0H5B3wcJN/PuXVSTQUq7+ewxfY+0+mVUP4Bf4er
v7/e2KmsCuEvCHDYpzX1js0cKD8h0MHkqtEsF141CF8hyKH4sqTEvRoo/0GQ
ww/HeU5Gz6D8BcEOCs9bGhX81KH6QxxiXMKW794A5SuEOrRVbVL4J6gB1R/q
UJCtmrg2D8pfEOYwv6giVeQUlJ8Q7nD/asCrJkVNqP4Ih5bPDUm7yqH8BxEO
r88VnS4/BeUviHSoY/jZwi+jBdUf5TDPruzk1CwoXyHaoey0nCP7Dij/QbSD
Gc+jBfuYtKH6YxzOnnsQX+gD5SfEOswJDLq1eTKUrxDncKSE7QXDLW0HAK8M
rAk=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 2.0850860858989155`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Dimension\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {2.0850860858989155`, 
           13.925788164890385`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}]}, {
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 5.805134968916488}, {11.5, 7.110696122978827}, {
             14.5, 8.185350223178686}, {17.5, 9.167745974343763}, {20.5, 
             10.026412899373426`}, {23.5, 10.820757804523783`}, {26.5, 
             11.537422936570616`}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 5.805134968916488}, {12., 7.110696122978827}, {15.,
              8.185350223178686}, {18., 9.167745974343763}, {21., 
             10.026412899373426`}, {24., 10.820757804523783`}, {27., 
             11.537422936570616`}, {30., 12.20679738284463}, {33., 
             12.822543944292201`}, {36., 13.402095936032913`}, {39., 
             13.942236596607357`}, {42., 14.453808127933891`}, {45., 
             14.935106475617856`}, {48., 15.393289368069954`}, {51., 
             15.827441165260032`}, {54., 16.242512103443666`}, {57., 
             16.6380150011729}, {60., 17.017503302309006`}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQHKDk1PknqfrBF0gPA1HSoniFz1ZBSD8vUd4p4n
lHBOloTwG4wc9h63eqfxWAbKN3XYrs13Z9NJeSjfwuF6let+e3tFKN/aYQJP
ySqbCiUo387h/IIbWRrzlCH8Aw4OaXMWn763RgXCd3BysLvxsXLeGlWovLPD
VRnJAKvZalB5VwfZz0t+X65Vh8q7ORT3PW8zDdaAyns4+F++43FIThMq7+lQ
mb21//h9KN/B22GFTiLX3BlaUHkfh6iL0h43PbSh8n4OJ/mcerQ+QfkH/B3y
GB+rBE3RgfAXBDhYLFZ17TPQhfATAh0e3zH4svMYlK8Q5NCwdFnPsXA9CP9B
kENiB9vneY+h/AXBDpHW04z/ZelD9Yc48DQwqN58C+UrhDpoR2ZvTzQzgOoH
8lN3Sd8phvIXhDn8PbLo+7T1UH5CuMOiM3/vT3wJ5StEOJzqkmX8q2gI1R/h
wJmbaHozAspfEOnAb7tJ068Pyk+IcvisldIcewjKV4h2aEwN9NH4CtMf7bBC
yHrJBjUjqP4Yh4IL/4KFwqH8hFgH3pr8A/5tUL5CnEP8/Vk1DVuMHABNvKsC

             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> 1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 3.3008608660431737`}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive calls\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 120.5}, {3.3008608660431737`, 
           18.705085552035026`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           Charting`ScaledTicks[{Log, Exp}]}}], 
       GraphicsBox[{{}, {{{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{8.5, 9.}, {11.5, 12.}, {14.5, 15.}, {17.5, 18.}, {20.5,
              21.}, {23.5, 24.}, {26.5, 27.}}]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            
            PointBox[{{9., 9.}, {12., 12.}, {15., 15.}, {18., 18.}, {21., 
             21.}, {24., 24.}, {27., 27.}, {30., 30.}, {33., 33.}, {36., 
             36.}, {39., 39.}, {42., 42.}, {45., 45.}, {48., 48.}, {51., 
             51.}, {54., 54.}, {57., 57.}, {60., 60.}}]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]], 
            PointBox[CompressedData["
1:eJw10clKw2AYBdDQlUsXXbhw8TtQVMQ61lqrxg6iKA51aOtEKLj2FfIoeZQ+
Sh5Fy38aCJfD5S7yZWXyO/ipJElS+39nGZ+1NOaC3JSLsi6rMfN9XuIjXuYm
Bz7lVT7n9ZjTlGsx0w5v6Lu8pe/ztv6Kd/TXvKu/4T39LfuO6R0f6O/5UP/A
vrN45EbM7ImPY4YBu0M594n9M7fsX9idwiu37ec+s39jd8yGfGE/YnctOedi
rL+0f9dz+NB37Dnn4lPvv2Rfeg7f+l76B9xNOq8=
             "]]}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             PointSize[0.03]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         1, Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Recursive levels\"", TraditionalForm], None}, {
            FormBox["\"Number of atoms\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           AbsoluteThickness[2]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> Directive[16, 
           GrayLevel[0]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 120.5}, {0, 60.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, AutoDelete -> 
     False, GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],FormBox[
    TemplateBox[{"\"Python\"", "\"C++\"", "\"Parallel C++\""}, "PointLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 20}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.30000000000000004`] -> 
                    Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                  None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.587148, 0.40736066666666665`, 0.09470066666666668], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
               Selectable -> False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[
                   0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                BaseStyle -> {}, BaselinePosition -> Baseline, 
                DefaultBaseStyle -> {}, ButtonFunction :> 
                With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0.560181, 0.691569, 0.194885], Editable -> False, 
               Selectable -> False]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "20"}]}], "]"}]& ), Editable -> 
     True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.767981631713992*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],

Cell[BoxData["\<\"plots/runtimes.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.767467522049306*^9, 3.767467558711603*^9, 3.767530971067066*^9, 
   3.767531033256956*^9, {3.7675310663558617`*^9, 3.767531102162404*^9}, 
   3.767531301269404*^9, 3.767807429986525*^9, 3.767807970179575*^9, 
   3.767902437913567*^9, 3.7679029872065067`*^9, 3.767903258548584*^9, 
   3.767904769146525*^9, 3.767905074335671*^9, 3.7679173245841084`*^9, 
   3.767917646411153*^9, 3.767917863820813*^9, 3.767918795216775*^9, 
   3.767920141802466*^9, 3.767924665458613*^9, 3.76797546925701*^9, 
   3.7679816332767353`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temperature - pressure sweep", "Section",
 CellChangeTimes->{{3.766592615367303*^9, 
  3.766592626251006*^9}},ExpressionUUID->"c2959b04-1b75-4321-a41f-\
acca99c56f61"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"press0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"press1", "=", "10.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp0", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp1", "=", "2500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntemp", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npres", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sweep", "=", 
   RowBox[{"Import", "[", "\"\<data/asweepout.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Max", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"sweep", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Pressure (atm)\>\"", ",", "None"}], "}"}]}], "}"}]}],
         ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"press0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"press1", "-", "press0"}], ")"}], "*", 
                   RowBox[{"i", "/", "npres"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Median", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"sweep", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"OverBar", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Pressure (atm)\>\"", ",", "None"}], "}"}]}], "}"}]}],
         ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"press0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"press1", "-", "press0"}], ")"}], "*", 
                   RowBox[{"i", "/", "npres"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"sweep", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"ntemp", "+", "1"}]}], "]"}], "]"}], ",", 
        RowBox[{"DataReversed", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Temperature (k)\>\"", ",", 
             RowBox[{"Log", "[", 
              RowBox[{"-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Pressure (atm)\>\"", ",", "None"}], "}"}]}], "}"}]}],
         ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"press0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"press1", "-", "press0"}], ")"}], "*", 
                   RowBox[{"i", "/", "npres"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "npres", ",", 
                 RowBox[{"npres", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"temp0", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"temp1", "-", "temp0"}], ")"}], "*", 
                   RowBox[{"i", "/", "ntemp"}]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "ntemp", ",", 
                 RowBox[{"ntemp", "/", "5"}]}], "}"}]}], "]"}], ",", "None"}],
             "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<plots/sweep.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.76797441972853*^9, 3.767974432723997*^9}, {
   3.7679745105405893`*^9, 3.76797455934306*^9}, {3.767974773725747*^9, 
   3.767975020078126*^9}, {3.767975052455942*^9, 3.767975204700876*^9}, {
   3.767975249793244*^9, 3.767975265357834*^9}, {3.767975501386704*^9, 
   3.7679755024689083`*^9}, {3.767976308001234*^9, 3.767976342670101*^9}, {
   3.767976424351769*^9, 3.767976427222715*^9}, {3.768735103503188*^9, 
   3.768735130752122*^9}, {3.768735177807578*^9, 3.768735240765869*^9}, 
   3.768735887133437*^9, 3.7687369854116898`*^9, {3.768739517138527*^9, 
   3.7687395177520933`*^9}, {3.768739819874299*^9, 3.7687398338631353`*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
GApOuixPYyEFvaUl8mmFFP4H49BedA==
         "], {{0, 0}, {10, 11}}, {0, 1}], 
        Frame -> Automatic, FrameLabel -> {{
           FormBox["\"Pressure (atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", "1"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox["0.5`", TraditionalForm]}, {2.5, 
             FormBox["2.4000000000000004`", TraditionalForm]}, {4.5, 
             FormBox["4.300000000000001`", TraditionalForm]}, {6.5, 
             FormBox["6.2`", TraditionalForm]}, {8.5, 
             FormBox["8.100000000000001`", TraditionalForm]}, {10.5, 
             FormBox["10.`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["1000", TraditionalForm]}, {2.5, 
             FormBox["1300", TraditionalForm]}, {4.5, 
             FormBox["1600", TraditionalForm]}, {6.5, 
             FormBox["1900", TraditionalForm]}, {8.5, 
             FormBox["2200", TraditionalForm]}, {10.5, 
             FormBox["2500", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}}], {
                 Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], (-175)/GoldenRatio}}, {{
                    7.5, -108.15594803123159`}, {-7.5, -108.15594803123159`}, \
{-7.5, 108.15594803123159`}, {7.5, 108.15594803123159`}, {
                    7.5, -108.15594803123159`}}]]}, {
                  CapForm[None], {}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.5, -108.15594803123159`}, {7.5, 
                    108.15594803123159`}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -79.65977010683524}, 
                    Offset[{4., 0}, {7.5, -79.65977010683524}]}, {{
                    7.5, -47.27774973820302}, 
                    Offset[{4., 0}, {7.5, -47.27774973820302}]}, {{
                    7.5, -14.895729369570812`}, 
                    Offset[{4., 0}, {7.5, -14.895729369570812`}]}, {{7.5, 
                    17.486290999061396`}, 
                    Offset[{4., 0}, {7.5, 17.486290999061396`}]}, {{7.5, 
                    49.86831136769361}, 
                    Offset[{4., 0}, {7.5, 49.86831136769361}]}, {{7.5, 
                    82.25033173632582}, 
                    Offset[{4., 0}, {7.5, 82.25033173632582}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -105.56538640174101`}, 
                    Offset[{2.5, 0.}, {7.5, -105.56538640174101`}]}, {{
                    7.5, -99.08898232801457}, 
                    Offset[{2.5, 0.}, {7.5, -99.08898232801457}]}, {{
                    7.5, -92.61257825428812}, 
                    Offset[{2.5, 0.}, {7.5, -92.61257825428812}]}, {{
                    7.5, -86.13617418056168}, 
                    Offset[{2.5, 0.}, {7.5, -86.13617418056168}]}, {{
                    7.5, -73.18336603310878}, 
                    Offset[{2.5, 0.}, {7.5, -73.18336603310878}]}, {{
                    7.5, -66.70696195938235}, 
                    Offset[{2.5, 0.}, {7.5, -66.70696195938235}]}, {{
                    7.5, -60.23055788565591}, 
                    Offset[{2.5, 0.}, {7.5, -60.23055788565591}]}, {{
                    7.5, -53.75415381192947}, 
                    Offset[{2.5, 0.}, {7.5, -53.75415381192947}]}, {{
                    7.5, -40.801345664476585`}, 
                    Offset[{2.5, 0.}, {7.5, -40.801345664476585`}]}, {{
                    7.5, -34.32494159075014}, 
                    Offset[{2.5, 0.}, {7.5, -34.32494159075014}]}, {{
                    7.5, -27.848537517023697`}, 
                    Offset[{2.5, 0.}, {7.5, -27.848537517023697`}]}, {{
                    7.5, -21.372133443297255`}, 
                    Offset[{2.5, 0.}, {7.5, -21.372133443297255`}]}, {{
                    7.5, -8.41932529584437}, 
                    Offset[{2.5, 0.}, {7.5, -8.41932529584437}]}, {{
                    7.5, -1.9429212221179282`}, 
                    Offset[{2.5, 0.}, {7.5, -1.9429212221179282`}]}, {{7.5, 
                    4.533482851608516}, 
                    Offset[{2.5, 0.}, {7.5, 4.533482851608516}]}, {{7.5, 
                    11.009886925334957`}, 
                    Offset[{2.5, 0.}, {7.5, 11.009886925334957`}]}, {{7.5, 
                    23.962695072787845`}, 
                    Offset[{2.5, 0.}, {7.5, 23.962695072787845`}]}, {{7.5, 
                    30.439099146514287`}, 
                    Offset[{2.5, 0.}, {7.5, 30.439099146514287`}]}, {{7.5, 
                    36.91550322024073}, 
                    Offset[{2.5, 0.}, {7.5, 36.91550322024073}]}, {{7.5, 
                    43.391907293967165`}, 
                    Offset[{2.5, 0.}, {7.5, 43.391907293967165`}]}, {{7.5, 
                    56.34471544142006}, 
                    Offset[{2.5, 0.}, {7.5, 56.34471544142006}]}, {{7.5, 
                    62.821119515146506`}, 
                    Offset[{2.5, 0.}, {7.5, 62.821119515146506`}]}, {{7.5, 
                    69.29752358887293}, 
                    Offset[{2.5, 0.}, {7.5, 69.29752358887293}]}, {{7.5, 
                    75.77392766259939}, 
                    Offset[{2.5, 0.}, {7.5, 75.77392766259939}]}, {{7.5, 
                    88.72673581005226}, 
                    Offset[{2.5, 0.}, {7.5, 88.72673581005226}]}, {{7.5, 
                    95.20313988377872}, 
                    Offset[{2.5, 0.}, {7.5, 95.20313988377872}]}, {{7.5, 
                    101.67954395750515`}, 
                    Offset[{2.5, 0.}, {7.5, 101.67954395750515`}]}, {{7.5, 
                    108.15594803123159`}, 
                    Offset[{2.5, 0.}, {7.5, 108.15594803123159`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-5.0\"", -5., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -79.65977010683524}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-2.5\"", -2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -47.27774973820302}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -14.895729369570812`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 17.486290999061396`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 49.86831136769361}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 82.25033173632582}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                  StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
                PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
                NCache[{Automatic, 350/GoldenRatio}, {
                  Automatic, 216.31189606246318`}], BaseStyle -> {}], 
               Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "7.198283869982263`"}], ",", 
                    "9.488710756306284`"}], "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 FractionBox["350", "GoldenRatio"]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
pc3aDsIH/WhecXpot44E/wNt11JJ
         "], {{0, 0}, {10, 11}}, {0, 1}], Frame -> 
        Automatic, FrameLabel -> {{
           FormBox["\"Pressure (atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                OverscriptBox["\[Lambda]", "_"]}], ")"}], TraditionalForm]}}, 
        FrameStyle -> Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox["0.5`", TraditionalForm]}, {2.5, 
             FormBox["2.4000000000000004`", TraditionalForm]}, {4.5, 
             FormBox["4.300000000000001`", TraditionalForm]}, {6.5, 
             FormBox["6.2`", TraditionalForm]}, {8.5, 
             FormBox["8.100000000000001`", TraditionalForm]}, {10.5, 
             FormBox["10.`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["1000", TraditionalForm]}, {2.5, 
             FormBox["1300", TraditionalForm]}, {4.5, 
             FormBox["1600", TraditionalForm]}, {6.5, 
             FormBox["1900", TraditionalForm]}, {8.5, 
             FormBox["2200", TraditionalForm]}, {10.5, 
             FormBox["2500", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 RasterBox[CompressedData["
1:eJwVl3k4VV8Xx2UmSUkZSpEGDRpUCH2TyFAyVYZGMgtJpkQqSomUsYkKKUOi
IilJZHbN8zVe3OmcDL8ipfe8f+znnOc5Z6+919qftb5rK9h5mjvw8fDwVFFj
HjX+/14R8dp3yWgFwnSS9O/fbkaZhMZl7T4uaj74hZqOfEepuMStd4tawJ3v
/rlvkAsaE5GRjEr87Q6va09owTKh5H+hI1y0yggnVA5XQePlX4nfK1qhw9u0
V4nFRZch7Sn/cDV8fH0sl6e2wu0v/9UKLhd9AYlZe4dqkKvLTtizoQ1x02pl
zuNcDL88XRA0WAuOhF336dw2lEy68s//jwtW5/qvhQN1WE/vkL+2qx1M4rFe
9jQXhMh47VR/Pc5mHrZLK26HJIsWfvgPF1MaH9q39jcgxb8i7fu+Dmgz+CrH
/3Hx5+3e8+89aejR02YyKzvg1L9LJJaPwL/aVF9LkgZpybebxA53IqbbxWiX
EIF5DOGgCY9GWPZv8FJp7cTHtke3O0QJ8P91D71LNOJu9tN8U9suMBobagPF
CQhKNYareDShNlD6l/dAFxbW8YqvWExAZPPOyFpuE4QMonfHOXVDo3Ln4RIp
AvP1kmJczzVDV0owuIDbDfsy57tnZAjIx+9Vpo83oyMj5NdGrx4o9U0vN11B
4LC1B+NPSAvkq+Z69rN7IKWlu7ddgUDo8kdP5cRb4cC8/PWEYy8Eku7Yn1xL
IL+v6sTuR63IEvn7wnegFz//aw9nbCDAePZLxpqK+4Ry0J3o43SMmCu+ct9C
YKnjmja/wjZoGM16Z7TT0f7avW5SlYCBssW9eP12XHENtCo178N3sYIfgeoE
AjlXTN61tKPi1ox2V10fCl3mLeHVJpD1Oke0xa4D4UeKYwKU+pFRYawWoUOA
7t1TMfGjA68Yl/gF7fqRuDreRkKfgMQu0WuLQjpRd1HT715yPyKu9F9OMCKg
M6OGrQu68ENglinf24+A3g1P5Q8T8C52mDV52AXJ+KLjmbIDcN198VuaBYHU
kPsF55S7obY2sEHNagA2CSWjm6wItO0rvRBZ0A2b9xr7vsUNwHhKZP7b4wSE
BcktmXo9uKw/89a0eQCaZpYqmmcI7K5azqlq7sHTtsJ1vRKD2JTzxOyrA4HB
QwfNFoT0QthO0j/z2CC6czWXrXEnsD//j+iQOh0SbpoFss8H4SrIm3PxAoEX
0tnfCifokPGx/xlBDOK3beX+ikDq3INPBEdl9UHh8u2dMxpDiHgT1b30KoGC
ccHl21X7sSE838c5bAjSQke8nSIIOP8fgLv9UI3uzm+nDSHjuJxI4V0CsscK
WoW4/dBM5JvUXz4MtbyBZOFEAjUR0XkThgPY/3Tj9vdOw6gQythlnUzgcrFT
dG/6AA6+sji/Jn8YR0941L1MJ6BCwr2SbxBH8i/lxs4Ng5G34+zvbAL9CtKG
+acHcbL4OclnxICP8Oxvo3cE7ln+WPPk0yAcy2tULsQxwH+yNOZhMQHdG5W8
EbJD8KyfPDfYz8D9/BvrOWUEpj6k9F3wG4Jfu1y22aYRKIqYlGjVEEjn+Bef
bBnClX5dzhe/Ebw5ueTonSYCx1aaJRluG8ZNptvGrWUj0HnbxentpPLIXNl3
R9QwYibuuyaLj4Im8vSaygCBsonR7quMYfxL8ytoNh+Fz4zdtkEmgeD76TqN
Wgycs7blF04YhTRTqS9ugoD6DocXK2MZ6BGDmVb3KIo7RiINZwlMtKxe4MFm
wOiL4hOvlWM4XZmx+y8fiayLg97F+0ZQeEGQnWo/BoFC17FcMRKOS592iD4Y
wdp1LLXOF2N4+WJT/FkpEqsKTu2xHh9BbFfd9QWcMRxKIHSl5Ul0HZNPfWEw
Ct6oN406W5kYD88dr1lLIna6R+Rn8ii8dOLkfX2YiPP1Tg7ZQsIk6aHn/l+j
oE/5u70qZELDccchVXUSIrttWu+ZUHYzjhfS/zDRe+Tn75G9JMq6pDUH0sbw
0XavgKQOC6F6hRkPDElcvtSesuXvGJQXKpkfCGNhzc7AoybmJNSWxwsGWzKR
8FUo+VIVC1VKWvy8tiQmii3dazOZEPRls18vYMNjydybd/ZUHE5INsnyseCj
3KA+bMbGYv4vp1zcSfDW64TvN2WBXb/JPTCKDXvGajcBHxLRvYfblSJY8LUK
dm/5yMaCVzXbvANIyHFPrBf4ygLPYIO7CpONQo8L0/RgEhl/3AIYv1m45aZw
7uZSDuxU5UqMr5PYJRZYXa7KhtR/3ucGdTlYMP01rDCC8lfuply6OxvJwd/O
aZ3noKDY9eCaaBKmG+Pdw9PY2CC81CP+CWUndLHkvVgSvbtTPznS2Xgb4+Tx
o4YDMf2izrkkEq5GeeIHlnEAuQ8eRjOUHVG7FLdkEtPWX06tM+WgOlXUM3Ut
F3YNIk4dqSTCXOpzhSI4sFQ57jlnwYVY7JvNeq9ILA7omTdWykFfQbanVSgX
BVbWU29ek0i+yTKv/M2Bi84/z7wcLs6smPdR/h2JTYnTzzNUKb2qNvUS66Hs
DGaE3i4iUfRC8L+b7lwEWz7zchQh8D7d1GC6hIR+wRJ9lzQuhOmTXl92ETjj
Ni3uUE6iuUIxwZDOxX0nvfOyZ6n6sjWltbGahHLKR5biPAK8Wqb7F4cQiLOX
Gip6Q8KOnlQyLU1g+F0BTydVRyJNxiXtqHg+Wu4fW7+VQMWWlZ+SnxG4rlG3
X+QMiVaboy6pBgQyXoYHOL4lEKT08mIuxaF40o49gacJ3FpN7NxcQcBnYVj6
MQkSBu2LJU39Cbg9PjIx2U7A/ffp9rlRSqekxkfXUOsdWvYpp4jKT3uGlnB6
CYEii4bi2RcEtsQouYVSeWhLk9agcgZTMdkxjdT3RfMj1xksIGHxccplyoPA
ZtptxxeU3cnrk0PiK0kYp9MePKR0xFHcVfMySaBlzialdSsJ3Zismn3yBJIP
GkhYCJF47//1+KN9JDSDbv5hUn1F5621jPXU/MQJZRl7SxKqTmc3x9RxsbiK
v2huF4lA95hWZUcSG833nlSn4m4sNBTVYkLCdmQ65ocfCUXt5dF9QVyE6ZXa
v6L+0z592qSAiqPs+umScEsuPl9LVr9Ccb2y67to8EOKD8mWH5s3cfFi3Y1X
k9dILDVSkS55TOJ11M369kYOoms8ljtR88WKYtfwpJA4KKqdFerHgb/n0aiu
KBJ8G2a36zwjwQwbj9i4goMzknt4TCiuZ5LO7L1KcRk+L92p9SsbhgVrvEsp
rn+IVB4qSyehdNlGL8SZje22C4Z3UFyPBKjY8r8kUTotvlpZnA25f1NHMqj5
vcxYZ71MEid9ynia81nge97zXY7iutl69mJ4NolZ0o8eZM0CR/+bRjTFdXXV
mWvfqWei26bitf+YaGVlZvJSXH/RqLwrnEdi52h/Ei2Vic9R91f4UlwXvFR5
YviWRJNdnF+gERPp2y9FMymus2XiMm+9J+FFNzyi9GMM0W12805QXKdGzBbW
FJJYaDO3vT5uDNSkCzSK6wczZyrEPlL1qDVPwl+TqtPy2xm6NBIxLpXNhz6R
MDRzIhQGRmH4VYZSSBI3OlUGoqh1RmrlamvCR7E96Isko4NE3OsYvaVfSJym
d8XwyYxC1o7hcKOd8teMe2wDZSdK7vW6Y9dHwGcgWqjcRkJiysB1D+VHsdW1
T69IBtibt4jWtpA4FJ8aZF5AghV3zGLOhoEWScvjHs0kbqnzRDtS/ko3b2Sa
VQyjeMY/R6KJxPcu26eBVB4ekOAJSaN0Lq3vMU8+tX+BywX5UTkkLh5qWTLz
aAh3yr+aH2kgsW+lZMUz6lye38p4dVB4CL6Zo6m/6kiElHp0vM+g4vk9aG/K
BUqnY8R+JdVS+7OvZlWnkeARMGubpA9A32+boVYNxYnA2r90ih+VfWvcDxgN
YMuJow/pVZQOZIQunKS4OB4yM+/hu34s073EvVJJwseoV0GI4vNWcV0Csaof
PMopWP2dxBuO+g65ByS8J3Vtr0v3YUy8PKacOi8iKlZ/SwKJ+nOc8I1kLxqn
mENO36j82fbDSpfidONYbF5TeQ8+dInvEi0j4dJs7HYshjofO216wKNu/HWH
zyOKg4Cp14G/nUhc8JNptezpgmfrxYx0is//LBOFHTaSeGYd/abKtAsD2lk9
ufdInH93Jb6BINCoKRC1p7wTFumDEh+vkOBKuSjtziPAI3/JNV+jE+XiMnrl
HiTcfM3yUi8SUOUZ11+f0wE1v8MBDcdJjLZp7F2oQcBu0HH1Y8UOvOwLy+40
ImGvplgfQN0r7n3r+bcooR1yBsUDQ1T960sQPT5cwkVpunlP+Px2ROZOSBGU
nttOTzBNrnHx42Zl4WxIG+aklY2ml5Bot+r2+6DPxSq3PXFeU63wCj0VzEv1
FxYfygSURLk4fOjteYZzKwaZcXli4wQaZLLuR9VxELxlg4lNbwsszWtHlvYR
MA6MVZi5y0HOopQNDWYtqCjilVOoIyiugl7bW3LQOykltL+iGWqrNQ5v/Ej1
ZZoO2vWUvom13R4q3N2Ml7c9r+18SaDk4aEa9W42tArnfdn8uglyU2kFoOqu
5p+d1s+fsOH2wO/Rs9VNaFPyamq8TKBH+VRlowYbX/78iX3/uxExR3Zz7Sm9
uXzsphpPKwtSp67eqW5sxKFwfuGfVP++IuxNuooXC66lQuH0jEYIF9Qr3txG
4HNel9SJ+SyUrL4TPBHSiLLRRG1ZSo9O9fOF3U5nYkn4Yj/BY40Ilra3yprj
gkd889QHHSZcxhI8ZVUaoWG4+cIeBhcpmkftx3rG8NlohbOKQCOmAn7dodVw
oeMS0rTUfwyS2c9O7+uhIfdVaYZdHheD8Rk6epJjcF643vpoPg1u3bfLphK5
uPatMfdCzig+n882c71Fw1qxo/TwEC6UJn6vfGY4CsmW7UbBZ2gY0Fo1I+3I
xbeVStG04RE47yrcd0+dhsfnWJKZB7lwOnRobi5kBJ8TtTXTF9Jg9eStijal
78KXfM9tlqP6xJ9hTj51DZBsCDZskOHiZUZyj+17BmhFd60eXWpAwz+Ds2d4
uDBqqzS+ZcZAYMhDw2/KDdj5cEMke5QDrdmmKS3OMIiaocA1XfX4MV+z3oHS
DZp48qLpsGHMrHuxaSaqHplBxhL9RRycVXRTyV85DP7rrvRa3Xo4cW3NbVI5
mN6pZuzxYQji/ZvvpkzXQfGke2zLHQ4iDfmclS2GIKM1ruOTXQd6fVCbCaU/
q040XB/mDGJ14tvJA3Z1SMId6arTHLzzevg0OXwQKlN+aXLL6nAk97GNrhEH
htedPtusGoS6qeYxsqYWEgo5jz6pUlwmqHZLFQ1AN2tOuOxKLWpiPtPVKB07
n/nvF81iACbCX4vid9biBm/DqjxBDgRKapZEUvcbq7Nh7q6sGuy70Ge36Qcb
D5oSth240Q/7Lwbye5JrMDdEpqZ3sqEyYm/Cq9CPc8vFaIssa/DBkmd0VRkb
1ydPtQVe7IO/f0MoQ7gGF8sllB9msZElO71wPIOOqy33VD98qsbWXQpuUvFs
tOjcNXTq6cWdrUcZkd7V4KRvy44OYeOP8/prvQt7kRgpk3B6XTWUvaTUE1zZ
eCw0dLDwTze2zbu84UtXFTIYdk4OR9mYHcg5qVfRhcVXc3Mc7lRhnW1uvOo+
NqyLA72aojsxyTu8ff7eKqTR/pbPU6H64Hj9q6esO9BybVlB7kQllPSN/2uQ
YUP+/OJYjmI73vMbax5Nq8Tzj4lKTwTYCDKmpwVwWpEQFlwye6wSittGLNzH
Weha86pA8H0L/AXzdJ+KVuJpuuq13b0sqPP4Vt0PaYb1DcZ3/U/fsXJ5aJ4w
1fcndOl0rzJswm5hmYMcz+94ElM/0PaWhZ9vF3CzFzdCLuIgLUbxO1YILV+U
lsJChnz+34uFDfgjcsVSrbUCD4Nc9l6IZMGh2UjhrnEdem/ld/TcqIDsxHtP
HX8WFG4O7n9Fr8bn+aPHr+6uQJITf/LCsyzQtQKdv52vxJNI2YF13HJI95rV
9x5m4cH4okg6fwVCFpg41CWXI948+W+mJgtW6S9fTyeU4XRUKNPbvBxSlZxN
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}}], {
                 Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], (-175)/GoldenRatio}}, {{
                    7.5, -108.15594803123159`}, {-7.5, -108.15594803123159`}, \
{-7.5, 108.15594803123159`}, {7.5, 108.15594803123159`}, {
                    7.5, -108.15594803123159`}}]]}, {
                  CapForm[None], {}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.499999999999999, -108.15594803123174`}, {
                    7.499999999999999, 108.15594803123162`}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.499999999999999, -78.2540094578912}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -78.2540094578912}]}, {{
                    7.499999999999999, -46.44343650752906}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -46.44343650752906}]}, {{
                    7.499999999999999, -14.63286355716679}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -14.63286355716679}]}, {{
                    7.499999999999999, 17.17770939319548}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    17.17770939319548}]}, {{7.499999999999999, 
                    48.988282343557614`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    48.988282343557614`}]}, {{7.499999999999999, 
                    80.79885529391989}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    80.79885529391989}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.499999999999999, -103.70246781818093`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -103.70246781818093`}]}, {{
                    7.499999999999999, -97.34035322810853}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -97.34035322810853}]}, {{
                    7.499999999999999, -90.97823863803613}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -90.97823863803613}]}, {{
                    7.499999999999999, -84.61612404796386}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -84.61612404796386}]}, {{
                    7.499999999999999, -71.89189486781866}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -71.89189486781866}]}, {{
                    7.499999999999999, -65.5297802777464}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -65.5297802777464}]}, {{
                    7.499999999999999, -59.16766568767386}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -59.16766568767386}]}, {{
                    7.499999999999999, -52.805551097601594`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -52.805551097601594`}]}, {{
                    7.499999999999999, -40.08132191745639}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -40.08132191745639}]}, {{
                    7.499999999999999, -33.719207327384126`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -33.719207327384126`}]}, {{
                    7.499999999999999, -27.35709273731159}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -27.35709273731159}]}, {{
                    7.499999999999999, -20.994978147239323`}, 
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -20.994978147239323`}]}, {{
                    7.499999999999999, -8.270748967094121}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -8.270748967094121}]}, {{
                    7.499999999999999, -1.908634377021854}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -1.908634377021854}]}, {{
                    7.499999999999999, 4.453480213050547}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    4.453480213050547}]}, {{7.499999999999999, 
                    10.815594803122814`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    10.815594803122814`}]}, {{7.499999999999999, 
                    23.53982398326815}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    23.53982398326815}]}, {{7.499999999999999, 
                    29.901938573340416`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    29.901938573340416`}]}, {{7.499999999999999, 
                    36.26405316341282}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    36.26405316341282}]}, {{7.499999999999999, 
                    42.626167753485085`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    42.626167753485085`}]}, {{7.499999999999999, 
                    55.350396933630286`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    55.350396933630286`}]}, {{7.499999999999999, 
                    61.71251152370269}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    61.71251152370269}]}, {{7.499999999999999, 
                    68.07462611377508}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    68.07462611377508}]}, {{7.499999999999999, 
                    74.43674070384749}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    74.43674070384749}]}, {{7.499999999999999, 
                    87.16096988399255}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    87.16096988399255}]}, {{7.499999999999999, 
                    93.52308447406496}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    93.52308447406496}]}, {{7.499999999999999, 
                    99.88519906413735}, 
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    99.88519906413735}]}, {{7.499999999999999, 
                    106.24731365420949`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    106.24731365420949`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"17.0\"", 17., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -78.2540094578912}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"17.5\"", 17.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -46.44343650752906}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"18.0\"", 18., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -14.63286355716679}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"18.5\"", 18.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    17.17770939319548}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"19.0\"", 19., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    48.988282343557614`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"19.5\"", 19.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    80.79885529391989}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                  StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
                PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
                NCache[{Automatic, 350/GoldenRatio}, {
                  Automatic, 216.31189606246318`}], BaseStyle -> {}], 
               Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "16.533167002213304`", ",", "19.932433516844625`"}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 FractionBox["350", "GoldenRatio"]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        RasterBox[CompressedData["
1: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
u5bJM9hpVoTrMuvxP4HmYYo=
         "], {{0, 0}, {10, 11}}, {0, 1}], Frame -> 
        Automatic, FrameLabel -> {{
           FormBox["\"Pressure (atm)\"", TraditionalForm], None}, {
           FormBox["\"Temperature (k)\"", TraditionalForm], 
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"-", 
                SubscriptBox["\[Lambda]", 
                 RowBox[{"-", "1"}]]}], ")"}], TraditionalForm]}}, FrameStyle -> 
        Directive[
          GrayLevel[0], 
          AbsoluteThickness[2]], FrameTicks -> {{{{0.5, 
             FormBox["0.5`", TraditionalForm]}, {2.5, 
             FormBox["2.4000000000000004`", TraditionalForm]}, {4.5, 
             FormBox["4.300000000000001`", TraditionalForm]}, {6.5, 
             FormBox["6.2`", TraditionalForm]}, {8.5, 
             FormBox["8.100000000000001`", TraditionalForm]}, {10.5, 
             FormBox["10.`", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["1000", TraditionalForm]}, {2.5, 
             FormBox["1300", TraditionalForm]}, {4.5, 
             FormBox["1600", TraditionalForm]}, {6.5, 
             FormBox["1900", TraditionalForm]}, {8.5, 
             FormBox["2200", TraditionalForm]}, {10.5, 
             FormBox["2500", TraditionalForm]}}, None}}, GridLinesStyle -> 
        Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> 
        Directive[16, 
          GrayLevel[0]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
                  "], {{
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}}], {
                 Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], (-175)/GoldenRatio}, {
                    Rational[-15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], 175/GoldenRatio}, {
                    Rational[15, 2], (-175)/GoldenRatio}}, {{
                    7.5, -108.15594803123159`}, {-7.5, -108.15594803123159`}, \
{-7.5, 108.15594803123159`}, {7.5, 108.15594803123159`}, {
                    7.5, -108.15594803123159`}}]]}, {
                  CapForm[None], {}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.5, -108.15594803123159`}, {7.5, 
                    108.15594803123159`}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -99.30682501049449}, 
                    Offset[{4., 0}, {7.5, -99.30682501049449}]}, {{
                    7.5, -50.14503045084377}, 
                    Offset[{4., 0}, {7.5, -50.14503045084377}]}, {{
                    7.5, -0.9832358911930483}, 
                    Offset[{4., 0}, {7.5, -0.9832358911930483}]}, {{7.5, 
                    48.178558668457676`}, 
                    Offset[{4., 0}, {7.5, 48.178558668457676`}]}, {{7.5, 
                    97.3403532281084}, 
                    Offset[{4., 0}, {7.5, 97.3403532281084}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -89.47446609856433}, 
                    Offset[{2.5, 0.}, {7.5, -89.47446609856433}]}, {{
                    7.5, -79.64210718663419}, 
                    Offset[{2.5, 0.}, {7.5, -79.64210718663419}]}, {{
                    7.5, -69.80974827470403}, 
                    Offset[{2.5, 0.}, {7.5, -69.80974827470403}]}, {{
                    7.5, -59.97738936277388}, 
                    Offset[{2.5, 0.}, {7.5, -59.97738936277388}]}, {{
                    7.5, -40.31267153891362}, 
                    Offset[{2.5, 0.}, {7.5, -40.31267153891362}]}, {{
                    7.5, -30.480312626983466`}, 
                    Offset[{2.5, 0.}, {7.5, -30.480312626983466`}]}, {{
                    7.5, -20.647953715053312`}, 
                    Offset[{2.5, 0.}, {7.5, -20.647953715053312`}]}, {{
                    7.5, -10.81559480312316}, 
                    Offset[{2.5, 0.}, {7.5, -10.81559480312316}]}, {{7.5, 
                    8.849123020737105}, 
                    Offset[{2.5, 0.}, {7.5, 8.849123020737105}]}, {{7.5, 
                    18.681481932667257`}, 
                    Offset[{2.5, 0.}, {7.5, 18.681481932667257`}]}, {{7.5, 
                    28.513840844597407`}, 
                    Offset[{2.5, 0.}, {7.5, 28.513840844597407`}]}, {{7.5, 
                    38.34619975652756}, 
                    Offset[{2.5, 0.}, {7.5, 38.34619975652756}]}, {{7.5, 
                    58.010917580387826`}, 
                    Offset[{2.5, 0.}, {7.5, 58.010917580387826`}]}, {{7.5, 
                    67.84327649231798}, 
                    Offset[{2.5, 0.}, {7.5, 67.84327649231798}]}, {{7.5, 
                    77.67563540424808}, 
                    Offset[{2.5, 0.}, {7.5, 77.67563540424808}]}, {{7.5, 
                    87.50799431617824}, 
                    Offset[{2.5, 0.}, {7.5, 87.50799431617824}]}, {{7.5, 
                    107.17271214003854`}, 
                    Offset[{2.5, 0.}, {7.5, 107.17271214003854`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -99.30682501049449}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["25", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -50.14503045084377}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -0.9832358911930483}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["35", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 48.178558668457676`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 97.3403532281084}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[16, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                  StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
                PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
                NCache[{Automatic, 350/GoldenRatio}, {
                  Automatic, 216.31189606246318`}], BaseStyle -> {}], 
               Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[16, 
               GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic,
              StripOnInput -> False], TraditionalForm]}, "BarLegend", 
          DisplayFunction -> (#& ), 
          InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
                   ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "19.10275801205753`", ",", "41.149467258644464`"}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{"16", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 FractionBox["350", "GoldenRatio"]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.767974896962656*^9, 3.767974974532617*^9, 3.767975020758719*^9, 
   3.7679750710543203`*^9, {3.767975129599495*^9, 3.767975153302758*^9}, 
   3.767975206562793*^9, 3.7679752703292418`*^9, 3.7679762317298098`*^9, {
   3.7679763100111017`*^9, 3.767976314106984*^9}, 3.7679763444129457`*^9, 
   3.7679764296865387`*^9, 3.7687350731102953`*^9, {3.768735183052682*^9, 
   3.768735192299973*^9}, {3.768735224190111*^9, 3.768735242041296*^9}, 
   3.7687354614114*^9, {3.768735883590417*^9, 3.768735888486826*^9}, {
   3.768736963134941*^9, 3.7687369862488937`*^9}, 3.76873938664692*^9, 
   3.768739519186215*^9, {3.768739824959888*^9, 3.768739835166172*^9}},
 CellLabel->
  "Out[551]=",ExpressionUUID->"1169e42c-b409-4781-90f9-f57f5b382787"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 654},
WindowMargins->{{Automatic, 37}, {133, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2096, 49, 232, "Input",ExpressionUUID->"e4e0b5f0-9fcc-434a-ac38-45a368a9c5c7",
 InitializationCell->True],
Cell[2679, 73, 691, 9, 35, "Output",ExpressionUUID->"a3926194-f3b3-4d54-8aaa-b7699cef9210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3407, 87, 6924, 195, 561, "Input",ExpressionUUID->"db492a3f-2c1f-4d0a-9dd0-7761e1557795"],
Cell[10334, 284, 791, 11, 35, "Output",ExpressionUUID->"9d217e15-7146-4629-8460-c8941d02f581"],
Cell[11128, 297, 881, 15, 35, "Output",ExpressionUUID->"fcd92840-f341-40e6-a868-9746480df10f"],
Cell[12012, 314, 856, 14, 35, "Output",ExpressionUUID->"0bf3fe91-5525-4579-880f-d95d056ae509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12905, 333, 13161, 295, 584, "Input",ExpressionUUID->"99272f1d-4a39-4e27-a2bc-409baa854689"],
Cell[26069, 630, 228873, 3825, 754, "Output",ExpressionUUID->"e5c5d71b-2fd9-4be6-b430-71655c23ed0a"],
Cell[254945, 4457, 3960, 55, 35, "Output",ExpressionUUID->"c3e70ca3-9baf-4647-884e-bb64a9b6c44f"],
Cell[258908, 4514, 16681, 413, 145, "Output",ExpressionUUID->"f2a45051-40f8-4e3b-901d-33a5bc5df5fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275626, 4932, 155, 3, 68, "Section",ExpressionUUID->"be75ae60-b525-445a-a2f8-07a7bd6d9534"],
Cell[CellGroupData[{
Cell[275806, 4939, 12575, 312, 745, "Input",ExpressionUUID->"2d9fcaa0-18ac-463a-862f-ee4785830632"],
Cell[288384, 5253, 1511, 39, 77, "Output",ExpressionUUID->"fd89b143-10e1-4136-907e-1c8055611af6"],
Cell[289898, 5294, 2964, 85, 140, "Output",ExpressionUUID->"cb1b5e0d-3b8a-487a-930e-c1334be5a794"],
Cell[292865, 5381, 4652, 121, 245, "Output",ExpressionUUID->"dc540268-eadc-4e12-9a29-b03dd035abaf"],
Cell[297520, 5504, 30931, 655, 696, "Output",ExpressionUUID->"98a6f2e8-9a16-4e66-9c2f-088cd77785a4"],
Cell[328454, 6161, 680, 11, 34, "Output",ExpressionUUID->"a5378b85-f994-481f-876b-375238ac3fda"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329183, 6178, 173, 3, 67, "Section",ExpressionUUID->"c2959b04-1b75-4321-a41f-acca99c56f61"],
Cell[CellGroupData[{
Cell[329381, 6185, 11103, 276, 661, "Input",ExpressionUUID->"0cf6193c-67ab-43c1-acd9-354f6fbab251"],
Cell[340487, 6463, 79723, 1534, 425, "Output",ExpressionUUID->"1169e42c-b409-4781-90f9-f57f5b382787"]
}, Open  ]]
}, Open  ]]
}
]
*)

